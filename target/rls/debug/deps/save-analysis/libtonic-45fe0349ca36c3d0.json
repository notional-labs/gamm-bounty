{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tonic","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"async-trait\"","--cfg","feature=\"codegen\"","--cfg","feature=\"default\"","--cfg","feature=\"h2\"","--cfg","feature=\"hyper\"","--cfg","feature=\"hyper-timeout\"","--cfg","feature=\"prost\"","--cfg","feature=\"prost-derive\"","--cfg","feature=\"prost1\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tower\"","--cfg","feature=\"tracing-futures\"","--cfg","feature=\"transport\"","-C","metadata=45fe0349ca36c3d0","-C","extra-filename=-45fe0349ca36c3d0","--out-dir","/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","--extern","async_stream=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libasync_stream-ae18a54de80fe8c9.rmeta","--extern","async_trait=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libasync_trait-25efcc67c068c75d.so","--extern","base64=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libbase64-fc54b7dac8c37ff8.rmeta","--extern","bytes=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libbytes-0b6620405fcf1713.rmeta","--extern","futures_core=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libfutures_core-b16e3589cc235645.rmeta","--extern","futures_util=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libfutures_util-e59ce3e2a91ddaee.rmeta","--extern","h2=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libh2-f18ac32cb0d953b3.rmeta","--extern","http=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libhttp-e99ce43994491469.rmeta","--extern","http_body=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libhttp_body-5a14cbff275f9bd9.rmeta","--extern","hyper=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libhyper-697f67729e9069d3.rmeta","--extern","hyper_timeout=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libhyper_timeout-48329a65c700c261.rmeta","--extern","percent_encoding=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libpercent_encoding-4c30c71be0ff39f5.rmeta","--extern","pin_project=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libpin_project-8a7f1bdb3b02178b.rmeta","--extern","prost1=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libprost-a936ed2a6e1f1138.rmeta","--extern","prost_derive=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libprost_derive-4149202e7617cdd3.so","--extern","tokio=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtokio-73daa76a759c219f.rmeta","--extern","tokio_stream=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtokio_stream-a246e46ca314ebb6.rmeta","--extern","tokio_util=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtokio_util-3dc095041ec01daf.rmeta","--extern","tower=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtower-98d9e553df3ab571.rmeta","--extern","tower_layer=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtower_layer-9afeae714f162694.rmeta","--extern","tower_service=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtower_service-d28b356326dc660e.rmeta","--extern","tracing=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtracing-7b445442ae509fd8.rmeta","--extern","tracing_futures=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtracing_futures-740a7cb0c489fd20.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libtonic-45fe0349ca36c3d0.rmeta"},"prelude":{"crate_id":{"name":"tonic","disambiguator":[5953490179455051927,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/async-stream-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","num":20,"id":{"name":"http_body","disambiguator":[16949674767727218289,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","num":21,"id":{"name":"bytes","disambiguator":[10131703037064871643,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","num":22,"id":{"name":"http","disambiguator":[7376912245934990521,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","num":23,"id":{"name":"fnv","disambiguator":[14401862751697532895,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","num":24,"id":{"name":"itoa","disambiguator":[17049241849807862071,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[11705088543972754819,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","num":26,"id":{"name":"futures_core","disambiguator":[13741883332312411104,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","num":27,"id":{"name":"futures_util","disambiguator":[5371295778658786234,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","num":28,"id":{"name":"pin_utils","disambiguator":[15399705732561925193,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","num":29,"id":{"name":"futures_task","disambiguator":[12517601338473349309,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","num":30,"id":{"name":"tower_service","disambiguator":[5425575580940958284,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","num":31,"id":{"name":"tracing","disambiguator":[4746473697877451936,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","num":32,"id":{"name":"log","disambiguator":[4330912491964922859,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","num":33,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","num":34,"id":{"name":"tracing_core","disambiguator":[8072551355195303216,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","num":35,"id":{"name":"lazy_static","disambiguator":[15464623033196885315,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","num":36,"id":{"name":"tracing_attributes","disambiguator":[14892126919216936193,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/util.rs","num":37,"id":{"name":"pin_project","disambiguator":[2149691923936601708,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/util.rs","num":38,"id":{"name":"pin_project_internal","disambiguator":[2724341622572113597,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","num":39,"id":{"name":"prost","disambiguator":[15272208756560338900,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","num":40,"id":{"name":"prost_derive","disambiguator":[4509470317456331271,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","num":41,"id":{"name":"tower_layer","disambiguator":[2014250525348675008,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":42,"id":{"name":"tower","disambiguator":[11091975696119330375,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":43,"id":{"name":"rand","disambiguator":[4026585824228068348,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":44,"id":{"name":"rand_core","disambiguator":[15011191323302329710,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":45,"id":{"name":"getrandom","disambiguator":[4404432128622822102,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":46,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":47,"id":{"name":"rand_chacha","disambiguator":[12874994065380591008,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":48,"id":{"name":"ppv_lite86","disambiguator":[1637553867673066004,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":49,"id":{"name":"tokio","disambiguator":[7928042476253986142,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":50,"id":{"name":"mio","disambiguator":[2667326390228875891,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":51,"id":{"name":"tokio_macros","disambiguator":[13079336714036326216,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":52,"id":{"name":"memchr","disambiguator":[1533232695567172600,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":53,"id":{"name":"socket2","disambiguator":[5325736260666223759,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":54,"id":{"name":"slab","disambiguator":[14970775619990168750,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":55,"id":{"name":"tokio_util","disambiguator":[3652588072515026478,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":56,"id":{"name":"futures_sink","disambiguator":[10783034461484154792,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":57,"id":{"name":"indexmap","disambiguator":[1527713829205748757,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":58,"id":{"name":"serde","disambiguator":[17980787110817151086,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":59,"id":{"name":"serde_derive","disambiguator":[148910710895920752,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":60,"id":{"name":"hashbrown","disambiguator":[16492955484117161043,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":61,"id":{"name":"ahash","disambiguator":[10278159724966603971,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":62,"id":{"name":"once_cell","disambiguator":[4545148886036118984,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":63,"id":{"name":"hyper","disambiguator":[12835566118278698906,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":64,"id":{"name":"httpdate","disambiguator":[2459344681365772945,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":65,"id":{"name":"futures_channel","disambiguator":[13476756851519108403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","num":66,"id":{"name":"h2","disambiguator":[10499318389640694369,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":67,"id":{"name":"tokio_util","disambiguator":[774076699975215417,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":68,"id":{"name":"httparse","disambiguator":[4300688383989992946,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":69,"id":{"name":"want","disambiguator":[13573990022638058050,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","num":70,"id":{"name":"try_lock","disambiguator":[18288734560225036595,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","num":71,"id":{"name":"tokio_stream","disambiguator":[12936602080823912297,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","num":72,"id":{"name":"percent_encoding","disambiguator":[11200400701829658515,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","num":73,"id":{"name":"async_trait","disambiguator":[2081899905138817962,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/encode.rs","num":74,"id":{"name":"async_stream","disambiguator":[1288671580684646966,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/encode.rs","num":75,"id":{"name":"async_stream_impl","disambiguator":[15492787949731889111,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","num":76,"id":{"name":"base64","disambiguator":[11527856027903617124,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":77,"id":{"name":"hyper_timeout","disambiguator":[14114402215873833126,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","num":78,"id":{"name":"tokio_io_timeout","disambiguator":[17915055426274804901,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":0,"byte_end":4765,"line_start":1,"line_end":122,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":6108,"byte_end":6112,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":6137,"byte_end":6148,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"alias_span":null,"name":"GrpcService","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":3372},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19746,"byte_end":19755,"line_start":19,"line_end":19,"column_start":24,"column_end":33},"alias_span":null,"name":"DecodeBuf","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":3379},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19757,"byte_end":19766,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"alias_span":null,"name":"EncodeBuf","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19957,"byte_end":19966,"line_start":23,"line_end":23,"column_start":23,"column_end":32},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":3604},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20064,"byte_end":20074,"line_start":26,"line_end":26,"column_start":22,"column_end":32},"alias_span":null,"name":"ProstCodec","value":"","parent":{"krate":0,"index":174}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51798,"byte_end":51803,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"alias_span":null,"name":"Ascii","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3663},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51829,"byte_end":51835,"line_start":9,"line_end":9,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51856,"byte_end":51872,"line_start":10,"line_end":10,"column_start":20,"column_end":36},"alias_span":null,"name":"AsciiMetadataKey","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":619},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51893,"byte_end":51910,"line_start":11,"line_end":11,"column_start":20,"column_end":37},"alias_span":null,"name":"BinaryMetadataKey","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3685},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51931,"byte_end":51942,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataKey","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3844},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51963,"byte_end":51968,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51989,"byte_end":51995,"line_start":14,"line_end":14,"column_start":20,"column_end":26},"alias_span":null,"name":"GetAll","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3719},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52016,"byte_end":52020,"line_start":15,"line_end":15,"column_start":20,"column_end":24},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3751},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52041,"byte_end":52048,"line_start":16,"line_end":16,"column_start":20,"column_end":27},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3738},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52069,"byte_end":52086,"line_start":17,"line_end":17,"column_start":20,"column_end":37},"alias_span":null,"name":"KeyAndMutValueRef","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3725},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52107,"byte_end":52121,"line_start":18,"line_end":18,"column_start":20,"column_end":34},"alias_span":null,"name":"KeyAndValueRef","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3772},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52142,"byte_end":52148,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"alias_span":null,"name":"KeyRef","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3766},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52169,"byte_end":52173,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3711},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52194,"byte_end":52205,"line_start":21,"line_end":21,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataMap","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52226,"byte_end":52239,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52260,"byte_end":52271,"line_start":23,"line_end":23,"column_start":20,"column_end":31},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3757},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52292,"byte_end":52302,"line_start":24,"line_end":24,"column_start":20,"column_end":30},"alias_span":null,"name":"ValueDrain","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3817},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52323,"byte_end":52332,"line_start":25,"line_end":25,"column_start":20,"column_end":29},"alias_span":null,"name":"ValueIter","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3789},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52353,"byte_end":52361,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3806},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52382,"byte_end":52393,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"alias_span":null,"name":"ValueRefMut","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3783},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52414,"byte_end":52420,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3800},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52441,"byte_end":52450,"line_start":29,"line_end":29,"column_start":20,"column_end":29},"alias_span":null,"name":"ValuesMut","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":1122},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52473,"byte_end":52491,"line_start":30,"line_end":30,"column_start":22,"column_end":40},"alias_span":null,"name":"AsciiMetadataValue","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":1123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52514,"byte_end":52533,"line_start":31,"line_end":31,"column_start":22,"column_end":41},"alias_span":null,"name":"BinaryMetadataValue","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3875},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52556,"byte_end":52569,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"alias_span":null,"name":"MetadataValue","value":"","parent":{"krate":0,"index":508}},{"kind":"Use","ref_id":{"krate":0,"index":3642},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52780,"byte_end":52800,"line_start":39,"line_end":39,"column_start":30,"column_end":50},"alias_span":null,"name":"InvalidMetadataValue","value":"","parent":{"krate":0,"index":1334}},{"kind":"Use","ref_id":{"krate":0,"index":3677},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52831,"byte_end":52856,"line_start":40,"line_end":40,"column_start":30,"column_end":55},"alias_span":null,"name":"InvalidMetadataValueBytes","value":"","parent":{"krate":0,"index":1334}},{"kind":"Use","ref_id":{"krate":0,"index":3707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52882,"byte_end":52900,"line_start":41,"line_end":41,"column_start":25,"column_end":43},"alias_span":null,"name":"InvalidMetadataKey","value":"","parent":{"krate":0,"index":1334}},{"kind":"Use","ref_id":{"krate":0,"index":3882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52928,"byte_end":52938,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"alias_span":null,"name":"ToStrError","value":"","parent":{"krate":0,"index":1334}},{"kind":"Use","ref_id":{"krate":0,"index":1405},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":182042,"byte_end":182046,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":0,"index":1501},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":182077,"byte_end":182099,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"alias_span":null,"name":"ClientStreamingService","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":182101,"byte_end":182123,"line_start":16,"line_end":16,"column_start":29,"column_end":51},"alias_span":null,"name":"ServerStreamingService","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":182125,"byte_end":182141,"line_start":16,"line_end":16,"column_start":53,"column_end":69},"alias_span":null,"name":"StreamingService","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":182143,"byte_end":182155,"line_start":16,"line_end":16,"column_start":71,"column_end":83},"alias_span":null,"name":"UnaryService","value":"","parent":{"krate":0,"index":1347}},{"kind":"Use","ref_id":{"krate":0,"index":1584},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","byte_start":200546,"byte_end":200557,"line_start":7,"line_end":7,"column_start":29,"column_end":40},"alias_span":null,"name":"interceptor","value":"","parent":{"krate":0,"index":1544}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","byte_start":200559,"byte_end":200573,"line_start":7,"line_end":7,"column_start":42,"column_end":56},"alias_span":null,"name":"interceptor_fn","value":"","parent":{"krate":0,"index":1544}},{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","byte_start":200575,"byte_end":200586,"line_start":7,"line_end":7,"column_start":58,"column_end":69},"alias_span":null,"name":"Interceptor","value":"","parent":{"krate":0,"index":1544}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212048,"byte_end":212056,"line_start":8,"line_end":8,"column_start":19,"column_end":27},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1638}},{"kind":"Use","ref_id":{"krate":0,"index":1877},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":233007,"byte_end":233016,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"alias_span":null,"name":"Connected","value":"","parent":{"krate":0,"index":1866}},{"kind":"Use","ref_id":{"krate":0,"index":4035},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":233018,"byte_end":233032,"line_start":10,"line_end":10,"column_start":27,"column_end":41},"alias_span":null,"name":"TcpConnectInfo","value":"","parent":{"krate":0,"index":1866}},{"kind":"Use","ref_id":{"krate":0,"index":4328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/mod.rs","byte_start":279008,"byte_end":279022,"line_start":24,"line_end":24,"column_start":29,"column_end":43},"alias_span":null,"name":"TimeoutExpired","value":"","parent":{"krate":0,"index":2322}},{"kind":"Use","ref_id":{"krate":0,"index":4031},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211236,"byte_end":211243,"line_start":97,"line_end":97,"column_start":25,"column_end":32},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211245,"byte_end":211253,"line_start":97,"line_end":97,"column_start":34,"column_end":42},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":0,"index":2301},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211277,"byte_end":211282,"line_start":98,"line_end":98,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":0,"index":2158},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211322,"byte_end":211334,"line_start":100,"line_end":100,"column_start":24,"column_end":36},"alias_span":null,"name":"NamedService","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":0,"index":4131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211336,"byte_end":211342,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":0,"index":4328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211383,"byte_end":211397,"line_start":102,"line_end":102,"column_start":24,"column_end":38},"alias_span":null,"name":"TimeoutExpired","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":0,"index":4878},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211418,"byte_end":211429,"line_start":103,"line_end":103,"column_start":20,"column_end":31},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":63,"index":547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211447,"byte_end":211451,"line_start":104,"line_end":104,"column_start":17,"column_end":21},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":22,"index":3218},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211453,"byte_end":211456,"line_start":104,"line_end":104,"column_start":23,"column_end":26},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":1637}},{"kind":"Use","ref_id":{"krate":73,"index":367},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4377,"byte_end":4388,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4421,"byte_end":4430,"line_start":111,"line_end":111,"column_start":16,"column_end":25},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2979},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4452,"byte_end":4462,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3030},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4482,"byte_end":4493,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"alias_span":null,"name":"IntoRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3033},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4495,"byte_end":4515,"line_start":113,"line_end":113,"column_start":32,"column_end":52},"alias_span":null,"name":"IntoStreamingRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4884},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4517,"byte_end":4524,"line_start":113,"line_end":113,"column_start":54,"column_end":61},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4892},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4545,"byte_end":4553,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4900},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4572,"byte_end":4576,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4578,"byte_end":4584,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":367},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374133,"byte_end":374144,"line_start":3,"line_end":3,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":26,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374154,"byte_end":374166,"line_start":4,"line_end":4,"column_start":9,"column_end":21},"alias_span":null,"name":"futures_core","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":27,"index":933},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374199,"byte_end":374201,"line_start":5,"line_end":5,"column_start":32,"column_end":34},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":27,"index":830},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374203,"byte_end":374210,"line_start":5,"line_end":5,"column_start":36,"column_end":43},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":27,"index":8252},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374212,"byte_end":374217,"line_start":5,"line_end":5,"column_start":45,"column_end":50},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":2,"index":12910},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374242,"byte_end":374248,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":2,"index":46837},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374268,"byte_end":374271,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":5,"index":5984},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374292,"byte_end":374295,"line_start":9,"line_end":9,"column_start":20,"column_end":23},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":2,"index":13212},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374317,"byte_end":374324,"line_start":10,"line_end":10,"column_start":21,"column_end":28},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":2,"index":49465},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374326,"byte_end":374330,"line_start":10,"line_end":10,"column_start":30,"column_end":34},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":30,"index":13},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374356,"byte_end":374363,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":0,"index":3913},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374580,"byte_end":374598,"line_start":15,"line_end":15,"column_start":38,"column_end":56},"alias_span":null,"name":"InterceptedService","value":"","parent":{"krate":0,"index":3317}},{"kind":"Use","ref_id":{"krate":20,"index":406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374619,"byte_end":374623,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":3317}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374881,"byte_end":374882,"line_start":23,"line_end":23,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3365}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":0,"byte_end":4765,"line_start":1,"line_end":122,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":174},{"krate":0,"index":508},{"krate":0,"index":1347},{"krate":0,"index":1544},{"krate":0,"index":1637},{"krate":0,"index":2975},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3099},{"krate":0,"index":3124},{"krate":0,"index":3283},{"krate":0,"index":3287},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3306},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3313},{"krate":0,"index":3316},{"krate":0,"index":3317}],"decl_id":null,"docs":" A Rust implementation of [gRPC], a high performance, open source, general\n RPC framework that puts mobile and HTTP/2 first.","sig":null,"attributes":[{"value":"/ A Rust implementation of [gRPC], a high performance, open source, general","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ RPC framework that puts mobile and HTTP/2 first.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":78,"byte_end":130,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":131,"byte_end":134,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`tonic`] is a gRPC over HTTP/2 implementation focused on **high","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":135,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ performance**, **interoperability**, and **flexibility**. This library was","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":204,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ created to have first class support of async/await and to act as a core building","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":283,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ block for production systems written in Rust.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":368,"byte_end":417,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":418,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":422,"byte_end":436,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":437,"byte_end":440,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Examples can be found in the [`tonic-examples`] crate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":441,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":500,"byte_end":503,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":504,"byte_end":525,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":526,"byte_end":529,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Follow the instructions in the [`tonic-build`] crate documentation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":530,"byte_end":601,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":602,"byte_end":605,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Feature Flags","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":606,"byte_end":625,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":626,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - `transport`: Enables the fully featured, batteries included client and server","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":630,"byte_end":713,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ implementation based on [`hyper`], [`tower`] and [`tokio`]. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":714,"byte_end":797,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ - `codegen`: Enables all the required exports and optional dependencies required","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":798,"byte_end":882,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ for [`tonic-build`]. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":883,"byte_end":927,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ - `tls`: Enables the `rustls` based TLS options for the `transport` feature. Not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":928,"byte_end":1012,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1013,"byte_end":1036,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ - `tls-roots`: Adds system trust roots to `rustls`-based gRPC clients using the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1037,"byte_end":1120,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/ `rustls-native-certs` crate. Not enabled by default. `tls` must be enabled to use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1121,"byte_end":1206,"line_start":26,"line_end":26,"column_start":1,"column_end":86}},{"value":"/ `tls-roots`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1207,"byte_end":1223,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/ - `tls-webpki-roots`: Add the standard trust roots from the `webpki-roots` crate to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1224,"byte_end":1311,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/ `rustls`-based gRPC clients. Not enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1312,"byte_end":1368,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/ - `prost`: Enables the [`prost`] based gRPC [`Codec`] implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1369,"byte_end":1442,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ - `compression`: Enables compressing requests, responses, and streams. Note","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1443,"byte_end":1522,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ that you must enable the `compression` feature on both `tonic` and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1523,"byte_end":1593,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ `tonic-build` to use it. Depends on [flate2]. Not enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1594,"byte_end":1667,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1668,"byte_end":1671,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Structure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1672,"byte_end":1687,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1688,"byte_end":1691,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Generic implementation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1692,"byte_end":1721,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1722,"byte_end":1725,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The main goal of [`tonic`] is to provide a generic gRPC implementation over HTTP/2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1726,"byte_end":1812,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ framing. This means at the lowest level this library provides the ability to use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1813,"byte_end":1897,"line_start":40,"line_end":40,"column_start":1,"column_end":85}},{"value":"/ a generic HTTP/2 implementation with different types of gRPC encodings formats. Generally,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1898,"byte_end":1992,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ some form of codegen should be used instead of interacting directly with the items in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":1993,"byte_end":2082,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [`client`] and [`server`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2083,"byte_end":2113,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2114,"byte_end":2117,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Transport","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2118,"byte_end":2134,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2135,"byte_end":2138,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`transport`] module contains a fully featured HTTP/2.0 [`Channel`] (gRPC terminology)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2139,"byte_end":2233,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ and [`Server`]. These implementations are built on top of [`tokio`], [`hyper`] and [`tower`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2234,"byte_end":2331,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ It also provides many of the features that the core gRPC libraries provide such as load balancing,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2332,"byte_end":2434,"line_start":49,"line_end":49,"column_start":1,"column_end":103}},{"value":"/ tls, timeouts, and many more. This implementation can also be used as a reference implementation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2435,"byte_end":2535,"line_start":50,"line_end":50,"column_start":1,"column_end":101}},{"value":"/ to build even more feature rich clients and servers. This module also provides the ability to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2536,"byte_end":2633,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ enable TLS using [`rustls`], via the `tls` feature flag.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2634,"byte_end":2694,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2695,"byte_end":2698,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [gRPC]: https://grpc.io","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2699,"byte_end":2726,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ [`tonic`]: https://github.com/hyperium/tonic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2727,"byte_end":2775,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2776,"byte_end":2812,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/ [`prost`]: https://docs.rs/prost","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2813,"byte_end":2849,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ [`hyper`]: https://docs.rs/hyper","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2850,"byte_end":2886,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ [`tower`]: https://docs.rs/tower","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2887,"byte_end":2923,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [`tonic-build`]: https://docs.rs/tonic-build","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2924,"byte_end":2972,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ [`tonic-examples`]: https://github.com/hyperium/tonic/tree/master/examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":2973,"byte_end":3051,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ [`Codec`]: codec/trait.Codec.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3052,"byte_end":3089,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/ [`Channel`]: transport/struct.Channel.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3090,"byte_end":3136,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/ [`Server`]: transport/struct.Server.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3137,"byte_end":3181,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/ [`rustls`]: https://docs.rs/rustls","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3182,"byte_end":3220,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3221,"byte_end":3254,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ [`transport`]: transport/index.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3255,"byte_end":3294,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ [flate2]: https://crates.io/crates/flate2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3295,"byte_end":3340,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3342,"byte_end":3369,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"allow(clippy :: inconsistent_struct_constructor)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3370,"byte_end":3420,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3421,"byte_end":3527,"line_start":72,"line_end":77,"column_start":1,"column_end":3}},{"value":"deny(broken_intra_doc_links)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3528,"byte_end":3560,"line_start":78,"line_end":78,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" HTTP specific body utilities.\n","sig":null,"attributes":[{"value":"/ HTTP specific body utilities.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","byte_start":4767,"byte_end":4800,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":7},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","byte_start":4886,"byte_end":4893,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"BoxBody","qualname":"::body::BoxBody","value":"http_body::combinators::UnsyncBoxBody<bytes::Bytes, crate::Status>","parent":null,"children":[],"decl_id":null,"docs":" A type erased HTTP body used for tonic services.\n","sig":null,"attributes":[{"value":"/ A type erased HTTP body used for tonic services.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","byte_start":4824,"byte_end":4876,"line_start":5,"line_end":5,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","byte_start":5116,"byte_end":5126,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"empty_body","qualname":"::body::empty_body","value":"pub fn empty_body() -> BoxBody","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `BoxBody`\n","sig":null,"attributes":[{"value":"/ Create an empty `BoxBody`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/body.rs","byte_start":5079,"byte_end":5108,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":135},{"krate":0,"index":168},{"krate":0,"index":171}],"decl_id":null,"docs":" Generic client implementation.","sig":null,"attributes":[{"value":"/ Generic client implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5234,"byte_end":5268,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5269,"byte_end":5272,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC client. It","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5273,"byte_end":5349,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC client dispatcher and a decorated tower","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5350,"byte_end":5424,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ service trait.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5425,"byte_end":5443,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5444,"byte_end":5447,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This client is generally used by some code generation tool to provide stubs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5448,"byte_end":5527,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ for the gRPC service. Thusly, they are a bit cumbersome to use by hand.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5528,"byte_end":5603,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5604,"byte_end":5607,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Concurrent usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5608,"byte_end":5631,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5632,"byte_end":5635,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Upon using the your generated client, you will discover all the functions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5636,"byte_end":5713,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ corresponding to your rpc methods take `&mut self`, making concurrent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5714,"byte_end":5787,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ usage of the client difficult. The answer is simply to clone the client,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5788,"byte_end":5864,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ which is cheap as all client instances will share the same channel for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5865,"byte_end":5939,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ communication. For more details, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5940,"byte_end":5980,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ [transport::Channel](../transport/struct.Channel.html#multiplexing-requests).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/mod.rs","byte_start":5981,"byte_end":6062,"line_start":17,"line_end":17,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7336,"byte_end":7340,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::client::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":" A gRPC client dispatcher.","sig":null,"attributes":[{"value":"/ A gRPC client dispatcher.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6648,"byte_end":6677,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6678,"byte_end":6681,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`GrpcService`] and will encode/decode","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6682,"byte_end":6750,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ messages via the provided codec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6751,"byte_end":6787,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6788,"byte_end":6791,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Each request method takes a [`Request`], a [`PathAndQuery`], and a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6792,"byte_end":6862,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ [`Codec`]. The request contains the message to send via the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6863,"byte_end":6926,"line_start":25,"line_end":25,"column_start":1,"column_end":64}},{"value":"/ [`Codec::encoder`]. The path determines the fully qualified path","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6927,"byte_end":6995,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ that will be append to the outgoing uri. The path must follow","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":6996,"byte_end":7061,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ the conventions explained in the [gRPC protocol definition] under `Path →`. An","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7062,"byte_end":7146,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ example of this path could look like `/greeter.Greeter/SayHello`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7147,"byte_end":7216,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7217,"byte_end":7220,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [gRPC protocol definition]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7221,"byte_end":7324,"line_start":31,"line_end":31,"column_start":1,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7784,"byte_end":7787,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7708,"byte_end":7772,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":9137,"byte_end":9146,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"send_gzip","qualname":"<Grpc<T>>::send_gzip","value":"pub fn send_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":9089,"byte_end":9125,"line_start":87,"line_end":87,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10354,"byte_end":10365,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"accept_gzip","qualname":"<Grpc<T>>::accept_gzip","value":"pub fn accept_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10306,"byte_end":10342,"line_start":127,"line_end":127,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10785,"byte_end":10790,"line_start":137,"line_end":137,"column_start":18,"column_end":23},"name":"ready","qualname":"<Grpc<T>>::ready","value":"pub async fn ready<'_>(&'_ mut Self) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Check if the inner [`GrpcService`] is able to accept a  new request.","sig":null,"attributes":[{"value":"/ Check if the inner [`GrpcService`] is able to accept a  new request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10499,"byte_end":10571,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10576,"byte_end":10579,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This will call [`GrpcService::poll_ready`] until it returns ready or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10584,"byte_end":10656,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ an error. If this returns ready the inner [`GrpcService`] is ready to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10661,"byte_end":10734,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ accept one more request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10739,"byte_end":10767,"line_start":136,"line_end":136,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":11003,"byte_end":11008,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<M1, M2, C, '_>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nSend + 'static, <T::ResponseBody as Body>::Error: Into<crate::Error>,\nC: Codec<Encode = M1, Decode = M1>, M1: Send + Sync + 'static, M2: Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a single unary gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":10948,"byte_end":10985,"line_start":144,"line_end":144,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":11631,"byte_end":11647,"line_start":164,"line_end":164,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<S, M1, M2, C,\n                              '_>(&'_ mut Self, Request<S>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nSend + 'static, <T::ResponseBody as Body>::Error: Into<crate::Error>,\nS: Stream<Item = M1> + Send + 'static, C: Codec<Encode = M1, Decode = M1>,\nM1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a client side streaming gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":11567,"byte_end":11613,"line_start":163,"line_end":163,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":12801,"byte_end":12817,"line_start":201,"line_end":201,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<M1, M2, C,\n                              '_>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nSend + 'static, <T::ResponseBody as Body>::Error: Into<crate::Error>,\nC: Codec<Encode = M1, Decode = M1>, M1: Send + Sync + 'static, M2: Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a server side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a server side streaming gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":12737,"byte_end":12783,"line_start":200,"line_end":200,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":13447,"byte_end":13456,"line_start":220,"line_end":220,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<S, M1, M2, C,\n                       '_>(&'_ mut Self, Request<S>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nSend + 'static, <T::ResponseBody as Body>::Error: Into<crate::Error>,\nS: Stream<Item = M1> + Send + 'static, C: Codec<Encode = M1, Decode = M1>,\nM1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a bi-directional streaming gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":13380,"byte_end":13429,"line_start":219,"line_end":219,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18059,"byte_end":18070,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"GrpcService","qualname":"::client::service::GrpcService","value":"GrpcService<ReqBody>","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" Definition of the gRPC trait alias for [`tower_service`].","sig":null,"attributes":[{"value":"/ Definition of the gRPC trait alias for [`tower_service`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17781,"byte_end":17842,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17843,"byte_end":17846,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait enforces that all tower services provided to [`Grpc`] implements","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17847,"byte_end":17926,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ the correct traits.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17927,"byte_end":17950,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17951,"byte_end":17954,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Grpc`]: ../client/struct.Grpc.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17955,"byte_end":17995,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`tower_service`]: https://docs.rs/tower-service","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":17996,"byte_end":18048,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":154},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18136,"byte_end":18148,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"ResponseBody","qualname":"::client::service::GrpcService::ResponseBody","value":"type ResponseBody: Body;","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Responses body given by the service.\n","sig":null,"attributes":[{"value":"/ Responses body given by the service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18086,"byte_end":18126,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18205,"byte_end":18210,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::client::service::GrpcService::Error","value":"type Error: Into<crate::Error>;","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18160,"byte_end":18195,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":156},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18276,"byte_end":18282,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Future","qualname":"::client::service::GrpcService::Future","value":"type Future: Future<Output = Result<http::Response<Self::ResponseBody>, Self::Error>>;","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18236,"byte_end":18266,"line_start":18,"line_end":18,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18487,"byte_end":18497,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::client::service::GrpcService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Returns `Ready` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the service is able to process requests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18363,"byte_end":18428,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18433,"byte_end":18436,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::poll_ready`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18441,"byte_end":18479,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18686,"byte_end":18690,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"call","qualname":"::client::service::GrpcService::call","value":"pub fn call(&mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18570,"byte_end":18633,"line_start":26,"line_end":26,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18638,"byte_end":18641,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::call`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18646,"byte_end":18678,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":205},{"krate":0,"index":323},{"krate":0,"index":412},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":500},{"krate":0,"index":504}],"decl_id":null,"docs":" Generic encoding and decoding.","sig":null,"attributes":[{"value":"/ Generic encoding and decoding.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19336,"byte_end":19370,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19371,"byte_end":19374,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the generic `Codec`, `Encoder` and `Decoder` traits","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19375,"byte_end":19451,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ and a protobuf codec based on prost.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":19452,"byte_end":19492,"line_start":4,"line_end":4,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3372},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":21887,"byte_end":21896,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DecodeBuf","qualname":"::codec::buffer::DecodeBuf","value":"DecodeBuf {  }","parent":null,"children":[{"krate":0,"index":3374},{"krate":0,"index":3375}],"decl_id":null,"docs":" A specialized buffer to decode gRPC messages from.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to decode gRPC messages from.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":21804,"byte_end":21858,"line_start":4,"line_end":4,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3379},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22032,"byte_end":22041,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"EncodeBuf","qualname":"::codec::buffer::EncodeBuf","value":"EncodeBuf {  }","parent":null,"children":[{"krate":0,"index":3381}],"decl_id":null,"docs":" A specialized buffer to encode gRPC messages into.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to encode gRPC messages into.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":21949,"byte_end":22003,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":23084,"byte_end":23091,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"reserve","qualname":"<EncodeBuf>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the buffer.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22800,"byte_end":22873,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ into the buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22878,"byte_end":22898,"line_start":56,"line_end":56,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22903,"byte_end":22906,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22911,"byte_end":22986,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22991,"byte_end":23058,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":23063,"byte_end":23072,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25208,"byte_end":25217,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"Streaming","qualname":"::codec::decode::Streaming","value":"Streaming {  }","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Streaming requests and responses.","sig":null,"attributes":[{"value":"/ Streaming requests and responses.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25021,"byte_end":25058,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25059,"byte_end":25062,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Body`] and [`Decoder`] and provide an interface","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25063,"byte_end":25142,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to fetch the message stream and trailing metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25143,"byte_end":25196,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":26770,"byte_end":26781,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"new_request","qualname":"<Streaming<T>>::new_request","value":"pub fn new_request<B, D>(D, B) -> Self where B: Body + Send + 'static,\nB::Error: Into<crate::Error>, D: Decoder<Item = T, Error = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28681,"byte_end":28688,"line_start":151,"line_end":151,"column_start":18,"column_end":25},"name":"message","qualname":"<Streaming<T>>::message","value":"pub async fn message<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the next message from this stream.\n ```rust\n # use tonic::{Streaming, Status, codec::Decoder};\n # use std::fmt::Debug;\n # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>\n # where T: Debug,\n # D: Decoder<Item = T, Error = Status> + Send  + 'static,\n # {\n if let Some(next_message) = request.message().await? {\n     println!(\"{:?}\", next_message);\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ Fetch the next message from this stream.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28162,"byte_end":28206,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28211,"byte_end":28222,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status, codec::Decoder};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28227,"byte_end":28280,"line_start":139,"line_end":139,"column_start":5,"column_end":58}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28285,"byte_end":28311,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/ # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28316,"byte_end":28401,"line_start":141,"line_end":141,"column_start":5,"column_end":90}},{"value":"/ # where T: Debug,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28406,"byte_end":28427,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ # D: Decoder<Item = T, Error = Status> + Send  + 'static,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28432,"byte_end":28493,"line_start":143,"line_end":143,"column_start":5,"column_end":66}},{"value":"/ # {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28498,"byte_end":28505,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ if let Some(next_message) = request.message().await? {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28510,"byte_end":28568,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/     println!(\"{:?}\", next_message);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28573,"byte_end":28612,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28617,"byte_end":28622,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28627,"byte_end":28639,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28644,"byte_end":28651,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28656,"byte_end":28663,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29534,"byte_end":29542,"line_start":174,"line_end":174,"column_start":18,"column_end":26},"name":"trailers","qualname":"<Streaming<T>>::trailers","value":"pub async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trailing metadata.","sig":null,"attributes":[{"value":"/ Fetch the trailing metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28937,"byte_end":28969,"line_start":159,"line_end":159,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28974,"byte_end":28977,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This will drain the stream of all its messages to receive the trailing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28982,"byte_end":29056,"line_start":161,"line_end":161,"column_start":5,"column_end":79}},{"value":"/ metadata. If [`Streaming::message`] returns `None` then this function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29061,"byte_end":29134,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ will not need to poll for trailers since the body was totally consumed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29139,"byte_end":29214,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29219,"byte_end":29222,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29227,"byte_end":29238,"line_start":165,"line_end":165,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29243,"byte_end":29280,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ # async fn trailers_ex<T>(mut request: Streaming<T>) -> Result<(), Status> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29285,"byte_end":29365,"line_start":167,"line_end":167,"column_start":5,"column_end":85}},{"value":"/ if let Some(metadata) = request.trailers().await? {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29370,"byte_end":29425,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/     println!(\"{:?}\", metadata);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29430,"byte_end":29465,"line_start":169,"line_end":169,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29470,"byte_end":29475,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29480,"byte_end":29492,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29497,"byte_end":29504,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":29509,"byte_end":29516,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3604},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":45432,"byte_end":45442,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ProstCodec","qualname":"::codec::prost::ProstCodec","value":"ProstCodec {  }","parent":null,"children":[{"krate":0,"index":3607}],"decl_id":null,"docs":" A [`Codec`] that implements `application/grpc+proto` via the prost library..\n","sig":null,"attributes":[{"value":"/ A [`Codec`] that implements `application/grpc+proto` via the prost library..","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":45316,"byte_end":45396,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3616},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46100,"byte_end":46112,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"ProstEncoder","qualname":"::codec::prost::ProstEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Encoder`] that knows how to encode `T`.\n","sig":null,"attributes":[{"value":"/ A [`Encoder`] that knows how to encode `T`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46008,"byte_end":46055,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46529,"byte_end":46541,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"ProstDecoder","qualname":"::codec::prost::ProstDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Decoder`] that knows how to decode `U`.\n","sig":null,"attributes":[{"value":"/ A [`Decoder`] that knows how to decode `U`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46437,"byte_end":46484,"line_start":55,"line_end":55,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":493},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20294,"byte_end":20299,"line_start":36,"line_end":36,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Default","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Trait that knows how to encode and decode gRPC messages.\n","sig":null,"attributes":[{"value":"/ Trait that knows how to encode and decode gRPC messages.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20223,"byte_end":20283,"line_start":35,"line_end":35,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20351,"byte_end":20357,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Encode","qualname":"::codec::Codec::Encode","value":"type Encode: Send + 'static;","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" The encodable message.\n","sig":null,"attributes":[{"value":"/ The encodable message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20315,"byte_end":20341,"line_start":37,"line_end":37,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":495},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20415,"byte_end":20421,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Decode","qualname":"::codec::Codec::Decode","value":"type Decode: Send + 'static;","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" The decodable message.\n","sig":null,"attributes":[{"value":"/ The decodable message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20379,"byte_end":20405,"line_start":39,"line_end":39,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":496},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20496,"byte_end":20503,"line_start":43,"line_end":43,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codec::Codec::Encoder","value":"type Encoder: Encoder<Item = Self::Encode, Error = Status> + Send + 'static;","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" The encoder that can encode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can encode a message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20444,"byte_end":20486,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":497},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20624,"byte_end":20631,"line_start":45,"line_end":45,"column_start":10,"column_end":17},"name":"Decoder","qualname":"::codec::Codec::Decoder","value":"type Decoder: Decoder<Item = Self::Decode, Error = Status> + Send + 'static;","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" The encoder that can decode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can decode a message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20572,"byte_end":20614,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20731,"byte_end":20738,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"encoder","qualname":"::codec::Codec::encoder","value":"pub fn encoder(&mut Self) -> Self::Encoder","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Fetch the encoder.\n","sig":null,"attributes":[{"value":"/ Fetch the encoder.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20701,"byte_end":20723,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20802,"byte_end":20809,"line_start":50,"line_end":50,"column_start":8,"column_end":15},"name":"decoder","qualname":"::codec::Codec::decoder","value":"pub fn decoder(&mut Self) -> Self::Decoder","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Fetch the decoder.\n","sig":null,"attributes":[{"value":"/ Fetch the decoder.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20772,"byte_end":20794,"line_start":49,"line_end":49,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":500},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20883,"byte_end":20890,"line_start":54,"line_end":54,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"decl_id":null,"docs":" Encodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Encodes gRPC message types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20842,"byte_end":20872,"line_start":53,"line_end":53,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":501},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20936,"byte_end":20940,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":" The type that is encoded.\n","sig":null,"attributes":[{"value":"/ The type that is encoded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20897,"byte_end":20926,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21054,"byte_end":21059,"line_start":61,"line_end":61,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20947,"byte_end":20979,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20984,"byte_end":20987,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The type of unrecoverable frame encoding errors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20992,"byte_end":21044,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21138,"byte_end":21144,"line_start":64,"line_end":64,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut EncodeBuf)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":" Encodes a message into the provided buffer.\n","sig":null,"attributes":[{"value":"/ Encodes a message into the provided buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21083,"byte_end":21130,"line_start":63,"line_end":63,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":504},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21271,"byte_end":21278,"line_start":68,"line_end":68,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"decl_id":null,"docs":" Decodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Decodes gRPC message types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21230,"byte_end":21260,"line_start":67,"line_end":67,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":505},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21324,"byte_end":21328,"line_start":70,"line_end":70,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" The type that is decoded.\n","sig":null,"attributes":[{"value":"/ The type that is decoded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21285,"byte_end":21314,"line_start":69,"line_end":69,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":506},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21397,"byte_end":21402,"line_start":73,"line_end":73,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.\n","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21335,"byte_end":21387,"line_start":72,"line_end":72,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21648,"byte_end":21654,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::Decoder::decode","value":"pub fn decode(&mut Self, &mut DecodeBuf)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Decode a message from the buffer.","sig":null,"attributes":[{"value":"/ Decode a message from the buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21426,"byte_end":21463,"line_start":75,"line_end":75,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21468,"byte_end":21471,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The buffer will contain exactly the bytes of a full message. There","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21476,"byte_end":21546,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ is no need to get the length from the bytes, gRPC framing is handled","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21551,"byte_end":21623,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ for you.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":21628,"byte_end":21640,"line_start":79,"line_end":79,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":508},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":586},{"krate":0,"index":683},{"krate":0,"index":1073},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334}],"decl_id":null,"docs":" Contains data structures and utilities for handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ Contains data structures and utilities for handling gRPC custom metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":51651,"byte_end":51728,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3642},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53173,"byte_end":53193,"line_start":10,"line_end":10,"column_start":12,"column_end":32},"name":"InvalidMetadataValue","qualname":"::metadata::encoding::InvalidMetadataValue","value":"InvalidMetadataValue {  }","parent":null,"children":[{"krate":0,"index":3643}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53051,"byte_end":53127,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53128,"byte_end":53138,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53367,"byte_end":53373,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::encoding::value_encoding::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53410,"byte_end":53418,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::metadata::encoding::value_encoding::Sealed::is_empty","value":"pub fn is_empty(&[u8]) -> bool","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53477,"byte_end":53487,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"::metadata::encoding::value_encoding::Sealed::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53588,"byte_end":53599,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"from_shared","qualname":"::metadata::encoding::value_encoding::Sealed::from_shared","value":"pub fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53700,"byte_end":53711,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"from_static","qualname":"::metadata::encoding::value_encoding::Sealed::from_static","value":"pub fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53784,"byte_end":53790,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"decode","qualname":"::metadata::encoding::value_encoding::Sealed::decode","value":"pub fn decode(&[u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53885,"byte_end":53891,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"equals","qualname":"::metadata::encoding::value_encoding::Sealed::equals","value":"pub fn equals(&HeaderValue, &[u8]) -> bool","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":53963,"byte_end":53975,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"values_equal","qualname":"::metadata::encoding::value_encoding::Sealed::values_equal","value":"pub fn values_equal(&HeaderValue, &HeaderValue) -> bool","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54054,"byte_end":54057,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"fmt","qualname":"::metadata::encoding::value_encoding::Sealed::fmt","value":"pub fn fmt(&HeaderValue, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54142,"byte_end":54155,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"ValueEncoding","qualname":"::metadata::encoding::ValueEncoding","value":"ValueEncoding: Clone + Eq + PartialEq + Hash + self::value_encoding::Sealed","parent":null,"children":[{"krate":0,"index":548}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54412,"byte_end":54424,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"::metadata::encoding::ValueEncoding::is_valid_key","value":"pub fn is_valid_key(&str) -> bool","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" Returns true if the provided key is valid for this ValueEncoding type.\n For example, `Ascii::is_valid_key(\"a\") == true`,\n `Ascii::is_valid_key(\"a-bin\") == false`.\n","sig":null,"attributes":[{"value":"/ Returns true if the provided key is valid for this ValueEncoding type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54224,"byte_end":54298,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ For example, `Ascii::is_valid_key(\"a\") == true`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54303,"byte_end":54355,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ `Ascii::is_valid_key(\"a-bin\") == false`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54360,"byte_end":54404,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3649},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54517,"byte_end":54522,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"Ascii","qualname":"::metadata::encoding::Ascii","value":"pub enum Ascii { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3663},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54595,"byte_end":54601,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Binary","qualname":"::metadata::encoding::Binary","value":"pub enum Binary { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3677},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58391,"byte_end":58416,"line_start":190,"line_end":190,"column_start":12,"column_end":37},"name":"InvalidMetadataValueBytes","qualname":"::metadata::encoding::InvalidMetadataValueBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58269,"byte_end":58345,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58346,"byte_end":58356,"line_start":188,"line_end":188,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3685},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59297,"byte_end":59308,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"MetadataKey","qualname":"::metadata::key::MetadataKey","value":"MetadataKey {  }","parent":null,"children":[{"krate":0,"index":3687},{"krate":0,"index":3688}],"decl_id":null,"docs":" Represents a custom metadata field name.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59034,"byte_end":59078,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59079,"byte_end":59082,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MetadataKey` is used as the [`MetadataMap`] key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59083,"byte_end":59136,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59137,"byte_end":59140,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59141,"byte_end":59181,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59182,"byte_end":59226,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59265,"byte_end":59285,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59638,"byte_end":59656,"line_start":28,"line_end":28,"column_start":12,"column_end":30},"name":"InvalidMetadataKey","qualname":"::metadata::key::InvalidMetadataKey","value":"InvalidMetadataKey {  }","parent":null,"children":[{"krate":0,"index":3708}],"decl_id":null,"docs":" A possible error when converting a `MetadataKey` from another type.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataKey` from another type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59538,"byte_end":59609,"line_start":26,"line_end":26,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59713,"byte_end":59729,"line_start":33,"line_end":33,"column_start":10,"column_end":26},"name":"AsciiMetadataKey","qualname":"::metadata::key::AsciiMetadataKey","value":"MetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata key.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59677,"byte_end":59703,"line_start":32,"line_end":32,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":619},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59788,"byte_end":59805,"line_start":35,"line_end":35,"column_start":10,"column_end":27},"name":"BinaryMetadataKey","qualname":"::metadata::key::BinaryMetadataKey","value":"MetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata key.\n","sig":null,"attributes":[{"value":"/ A binary metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59752,"byte_end":59778,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59989,"byte_end":59999,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataKey<VE>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, InvalidMetadataKey>","parent":null,"children":[],"decl_id":null,"docs":" Converts a slice of bytes to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a slice of bytes to a `MetadataKey`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59876,"byte_end":59925,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59930,"byte_end":59933,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This function normalizes the input.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59938,"byte_end":59977,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62136,"byte_end":62147,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataKey<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a static string to a `MetadataKey`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60460,"byte_end":60508,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60513,"byte_end":60516,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics when the static string is a invalid metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60521,"byte_end":60595,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60600,"byte_end":60603,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function requires the static string to only contain lowercase","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60608,"byte_end":60678,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ characters, numerals and symbols, as per the HTTP/2.0 specification","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60683,"byte_end":60754,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ and header names internal representation within this library.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60759,"byte_end":60824,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60829,"byte_end":60832,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60837,"byte_end":60840,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60845,"byte_end":60859,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60864,"byte_end":60867,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60872,"byte_end":60879,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60884,"byte_end":60913,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60918,"byte_end":60947,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/ let CUSTOM_KEY: &'static str = \"custom-key\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":60952,"byte_end":61000,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61005,"byte_end":61008,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let a = AsciiMetadataKey::from_bytes(b\"custom-key\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61013,"byte_end":61078,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ let b = AsciiMetadataKey::from_static(CUSTOM_KEY);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61083,"byte_end":61137,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61142,"byte_end":61163,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61168,"byte_end":61175,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61180,"byte_end":61183,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61188,"byte_end":61207,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61212,"byte_end":61241,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid symbols(s):","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61246,"byte_end":61309,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ AsciiMetadataKey::from_static(\"content{}{}length\"); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61314,"byte_end":61390,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61395,"byte_end":61402,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61407,"byte_end":61410,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61415,"byte_end":61434,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61439,"byte_end":61468,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid uppercase characters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61473,"byte_end":61546,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ let a = AsciiMetadataKey::from_static(\"foobar\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61551,"byte_end":61603,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/ let b = AsciiMetadataKey::from_static(\"FOOBAR\"); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61608,"byte_end":61681,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61686,"byte_end":61693,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61698,"byte_end":61701,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61706,"byte_end":61725,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61730,"byte_end":61759,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ // Parsing a -bin metadata key as an Ascii key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61764,"byte_end":61815,"line_start":93,"line_end":93,"column_start":5,"column_end":56}},{"value":"/ let b = AsciiMetadataKey::from_static(\"hello-bin\"); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61820,"byte_end":61896,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61901,"byte_end":61908,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61913,"byte_end":61916,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61921,"byte_end":61940,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61945,"byte_end":61974,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/ // Parsing a non-bin metadata key as an Binary key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":61979,"byte_end":62034,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ let b = BinaryMetadataKey::from_static(\"hello\"); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62039,"byte_end":62112,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62117,"byte_end":62124,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62572,"byte_end":62578,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MetadataKey<VE>>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a `str` representation of the metadata key.","sig":null,"attributes":[{"value":"/ Returns a `str` representation of the metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62428,"byte_end":62483,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62488,"byte_end":62491,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned string will always be lower case.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62496,"byte_end":62546,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":62551,"byte_end":62560,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64468,"byte_end":64471,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<InvalidMetadataKey>::new","value":"pub fn new() -> InvalidMetadataKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3711},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68270,"byte_end":68281,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"MetadataMap","qualname":"::metadata::map::MetadataMap","value":"MetadataMap {  }","parent":null,"children":[{"krate":0,"index":3712}],"decl_id":null,"docs":" A set of gRPC custom metadata entries.","sig":null,"attributes":[{"value":"/ A set of gRPC custom metadata entries.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67628,"byte_end":67670,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67671,"byte_end":67674,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67675,"byte_end":67689,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67690,"byte_end":67693,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67694,"byte_end":67709,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67710,"byte_end":67713,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67714,"byte_end":67721,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67722,"byte_end":67751,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67752,"byte_end":67789,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67790,"byte_end":67793,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67794,"byte_end":67851,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67852,"byte_end":67903,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"[binary data]\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67904,"byte_end":67987,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67988,"byte_end":67991,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":67992,"byte_end":68032,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ assert!(!map.contains_key(\"x-location\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68033,"byte_end":68078,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68079,"byte_end":68082,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68083,"byte_end":68141,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68142,"byte_end":68145,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ map.remove(\"x-host\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68146,"byte_end":68171,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68172,"byte_end":68175,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68176,"byte_end":68217,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68218,"byte_end":68225,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3719},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68516,"byte_end":68520,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Iter","qualname":"::metadata::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3721}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68317,"byte_end":68350,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68351,"byte_end":68354,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyAndValueRef` values. The same header name may be yielded","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68355,"byte_end":68426,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68427,"byte_end":68487,"line_start":42,"line_end":42,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3727},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68814,"byte_end":68819,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndValueRef::Ascii","value":"KeyAndValueRef::Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3725},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68773,"byte_end":68809,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3731},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68916,"byte_end":68922,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndValueRef::Binary","value":"KeyAndValueRef::Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>)","parent":{"krate":0,"index":3725},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68875,"byte_end":68911,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3725},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68748,"byte_end":68762,"line_start":51,"line_end":51,"column_start":10,"column_end":24},"name":"KeyAndValueRef","qualname":"::metadata::map::KeyAndValueRef","value":"pub enum KeyAndValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3731}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68592,"byte_end":68671,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68672,"byte_end":68721,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69204,"byte_end":69209,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndMutValueRef::Ascii","value":"KeyAndMutValueRef::Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69163,"byte_end":69199,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3744},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69310,"byte_end":69316,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndMutValueRef::Binary","value":"KeyAndMutValueRef::Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3738},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69269,"byte_end":69305,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3738},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69135,"byte_end":69152,"line_start":61,"line_end":61,"column_start":10,"column_end":27},"name":"KeyAndMutValueRef","qualname":"::metadata::map::KeyAndMutValueRef","value":"pub enum KeyAndMutValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3744}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":68979,"byte_end":69058,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69059,"byte_end":69108,"line_start":59,"line_end":59,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3751},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69588,"byte_end":69595,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::metadata::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3753}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69377,"byte_end":69410,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69411,"byte_end":69414,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Yields `(&MetadataKey, &mut value)` tuples. The same header name may be yielded","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69415,"byte_end":69498,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69499,"byte_end":69559,"line_start":71,"line_end":71,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3757},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69772,"byte_end":69782,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ValueDrain","qualname":"::metadata::map::ValueDrain","value":"ValueDrain {  }","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3761}],"decl_id":null,"docs":" A drain iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ A drain iterator of all values associated with a single metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69670,"byte_end":69743,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3766},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70100,"byte_end":70104,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Keys","qualname":"::metadata::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":3768}],"decl_id":null,"docs":" An iterator over `MetadataMap` keys.","sig":null,"attributes":[{"value":"/ An iterator over `MetadataMap` keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69909,"byte_end":69949,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69950,"byte_end":69953,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyRef` values. Each header name is yielded only once, even if it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":69954,"byte_end":70031,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ has more than one associated value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70032,"byte_end":70071,"line_start":87,"line_end":87,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3774},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70366,"byte_end":70371,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyRef::Ascii","value":"KeyRef::Ascii(&'a MetadataKey<Ascii>)","parent":{"krate":0,"index":3772},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70325,"byte_end":70361,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3777},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70442,"byte_end":70448,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyRef::Binary","value":"KeyRef::Binary(&'a MetadataKey<Binary>)","parent":{"krate":0,"index":3772},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70401,"byte_end":70437,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3772},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70308,"byte_end":70314,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"KeyRef","qualname":"::metadata::map::KeyRef","value":"pub enum KeyRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>),\n    Binary(&'a MetadataKey<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3777}],"decl_id":null,"docs":" Reference to a key in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key in a `MetadataMap`. It can point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70176,"byte_end":70231,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70232,"byte_end":70281,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3783},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70637,"byte_end":70643,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Values","qualname":"::metadata::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":3785}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70478,"byte_end":70511,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70512,"byte_end":70515,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Yields `ValueRef` values. Each value contained in the `MetadataMap` will be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70516,"byte_end":70595,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ yielded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70596,"byte_end":70608,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3791},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71037,"byte_end":71042,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRef::Ascii","value":"ValueRef::Ascii(&'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3789},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70996,"byte_end":71032,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3794},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71115,"byte_end":71121,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRef::Binary","value":"ValueRef::Binary(&'a MetadataValue<Binary>)","parent":{"krate":0,"index":3789},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71074,"byte_end":71110,"line_start":120,"line_end":120,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3789},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70977,"byte_end":70985,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::metadata::map::ValueRef","value":"pub enum ValueRef<'a> {\n    Ascii(&'a MetadataValue<Ascii>),\n    Binary(&'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3791},{"krate":0,"index":3794}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70837,"byte_end":70894,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":70895,"byte_end":70950,"line_start":115,"line_end":115,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3800},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71282,"byte_end":71291,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::metadata::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":3802}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71153,"byte_end":71186,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71187,"byte_end":71190,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Each value contained in the `MetadataMap` will be yielded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71191,"byte_end":71253,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3808},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71697,"byte_end":71702,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRefMut::Ascii","value":"ValueRefMut::Ascii(&'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71656,"byte_end":71692,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3811},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71779,"byte_end":71785,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRefMut::Binary","value":"ValueRefMut::Binary(&'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71738,"byte_end":71774,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3806},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71634,"byte_end":71645,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"ValueRefMut","qualname":"::metadata::map::ValueRefMut","value":"pub enum ValueRefMut<'a> {\n    Ascii(&'a mut MetadataValue<Ascii>),\n    Binary(&'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3808},{"krate":0,"index":3811}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71494,"byte_end":71551,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71552,"byte_end":71607,"line_start":135,"line_end":135,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3817},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71918,"byte_end":71927,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"ValueIter","qualname":"::metadata::map::ValueIter","value":"ValueIter {  }","parent":null,"children":[{"krate":0,"index":3820},{"krate":0,"index":3821}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":71821,"byte_end":71889,"line_start":144,"line_end":144,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3826},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72158,"byte_end":72170,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"ValueIterMut","qualname":"::metadata::map::ValueIterMut","value":"ValueIterMut {  }","parent":null,"children":[{"krate":0,"index":3829},{"krate":0,"index":3830}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72061,"byte_end":72129,"line_start":151,"line_end":151,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72472,"byte_end":72478,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"GetAll","qualname":"::metadata::map::GetAll","value":"GetAll {  }","parent":null,"children":[{"krate":0,"index":3838},{"krate":0,"index":3839}],"decl_id":null,"docs":" A view to all values stored in a single entry.","sig":null,"attributes":[{"value":"/ A view to all values stored in a single entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72299,"byte_end":72349,"line_start":158,"line_end":158,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72350,"byte_end":72353,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This struct is returned by `MetadataMap::get_all` and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72354,"byte_end":72411,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ `MetadataMap::get_all_bin`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72412,"byte_end":72443,"line_start":161,"line_end":161,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3847},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72787,"byte_end":72795,"line_start":173,"line_end":173,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::metadata::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":3844},"children":[],"decl_id":null,"docs":" An occupied entry\n","sig":null,"attributes":[{"value":"/ An occupied entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72761,"byte_end":72782,"line_start":172,"line_end":172,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3850},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72848,"byte_end":72854,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::metadata::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":3844},"children":[],"decl_id":null,"docs":" A vacant entry\n","sig":null,"attributes":[{"value":"/ A vacant entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72825,"byte_end":72843,"line_start":175,"line_end":175,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3844},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72726,"byte_end":72731,"line_start":171,"line_end":171,"column_start":10,"column_end":15},"name":"Entry","qualname":"::metadata::map::Entry","value":"pub enum Entry<'a, VE: ValueEncoding> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3850}],"decl_id":null,"docs":" A view into a single location in a `MetadataMap`, which may be vacant or\n occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a `MetadataMap`, which may be vacant or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72609,"byte_end":72685,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ occupied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72686,"byte_end":72699,"line_start":169,"line_end":169,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73029,"byte_end":73040,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::metadata::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861}],"decl_id":null,"docs":" A view into a single empty location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single empty location in a `MetadataMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72880,"byte_end":72939,"line_start":179,"line_end":179,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72940,"byte_end":72943,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":72944,"byte_end":73000,"line_start":181,"line_end":181,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73320,"byte_end":73333,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::metadata::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3870}],"decl_id":null,"docs":" A view into a single occupied location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a `MetadataMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73168,"byte_end":73230,"line_start":188,"line_end":188,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73231,"byte_end":73234,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73235,"byte_end":73291,"line_start":190,"line_end":190,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74197,"byte_end":74200,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<MetadataMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap`.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73837,"byte_end":73871,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73876,"byte_end":73879,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The map will be created without any capacity. This function will not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73884,"byte_end":73956,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73961,"byte_end":73974,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73979,"byte_end":73982,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73987,"byte_end":74001,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74006,"byte_end":74009,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74014,"byte_end":74021,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74026,"byte_end":74055,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74060,"byte_end":74093,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74098,"byte_end":74101,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74106,"byte_end":74134,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74139,"byte_end":74173,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74178,"byte_end":74185,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74320,"byte_end":74332,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"from_headers","qualname":"<MetadataMap>::from_headers","value":"pub fn from_headers(http::HeaderMap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP HeaderMap to a MetadataMap\n","sig":null,"attributes":[{"value":"/ Convert an HTTP HeaderMap to a MetadataMap","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74262,"byte_end":74308,"line_start":230,"line_end":230,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74795,"byte_end":74807,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"into_headers","qualname":"<MetadataMap>::into_headers","value":"pub fn into_headers(Self) -> http::HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Convert a MetadataMap into a HTTP HeaderMap","sig":null,"attributes":[{"value":"/ Convert a MetadataMap into a HTTP HeaderMap","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74412,"byte_end":74459,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74464,"byte_end":74467,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74472,"byte_end":74486,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74491,"byte_end":74494,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74499,"byte_end":74506,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74511,"byte_end":74540,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74545,"byte_end":74582,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74587,"byte_end":74644,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74649,"byte_end":74652,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let http_map = map.into_headers();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74657,"byte_end":74695,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74700,"byte_end":74703,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(http_map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74708,"byte_end":74771,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":74776,"byte_end":74783,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75747,"byte_end":75760,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MetadataMap>::with_capacity","value":"pub fn with_capacity(usize) -> MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75062,"byte_end":75124,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75129,"byte_end":75132,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The returned map will allocate internal storage in order to hold about","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75137,"byte_end":75211,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ `capacity` elements without reallocating. However, this is a \"best","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75216,"byte_end":75286,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ effort\" as there are usage patterns that could cause additional","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75291,"byte_end":75358,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ allocations before `capacity` metadata entries are stored in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75363,"byte_end":75436,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75441,"byte_end":75444,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ More capacity than requested may be allocated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75449,"byte_end":75499,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75504,"byte_end":75507,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75512,"byte_end":75526,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75531,"byte_end":75534,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75539,"byte_end":75546,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75551,"byte_end":75580,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ let map: MetadataMap = MetadataMap::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75585,"byte_end":75643,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75648,"byte_end":75651,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75656,"byte_end":75684,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75689,"byte_end":75723,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75728,"byte_end":75735,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76732,"byte_end":76735,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of metadata entries (ascii and binary) stored in the\n map.","sig":null,"attributes":[{"value":"/ Returns the number of metadata entries (ascii and binary) stored in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75901,"byte_end":75976,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75981,"byte_end":75989,"line_start":284,"line_end":284,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":75994,"byte_end":75997,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This number represents the total number of **values** stored in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76002,"byte_end":76078,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ This number can be greater than or equal to the number of **keys**","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76083,"byte_end":76153,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ stored given that a single key may have more than one associated value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76158,"byte_end":76233,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76238,"byte_end":76241,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76246,"byte_end":76260,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76265,"byte_end":76268,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76273,"byte_end":76280,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76285,"byte_end":76314,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76319,"byte_end":76356,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76361,"byte_end":76364,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76369,"byte_end":76398,"line_start":296,"line_end":296,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76403,"byte_end":76406,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76411,"byte_end":76469,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76474,"byte_end":76553,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76558,"byte_end":76561,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76566,"byte_end":76595,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76600,"byte_end":76603,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76608,"byte_end":76666,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76671,"byte_end":76674,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(3, map.len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76679,"byte_end":76708,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76713,"byte_end":76720,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77501,"byte_end":77509,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"keys_len","qualname":"<MetadataMap>::keys_len","value":"pub fn keys_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of keys (ascii and binary) stored in the map.","sig":null,"attributes":[{"value":"/ Returns the number of keys (ascii and binary) stored in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76792,"byte_end":76860,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76865,"byte_end":76868,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This number will be less than or equal to `len()` as each key may have","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76873,"byte_end":76947,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ more than one associated value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76952,"byte_end":76987,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":76992,"byte_end":76995,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77000,"byte_end":77014,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77019,"byte_end":77022,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77027,"byte_end":77034,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77039,"byte_end":77068,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77073,"byte_end":77110,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77115,"byte_end":77118,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.keys_len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77123,"byte_end":77157,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77162,"byte_end":77165,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77170,"byte_end":77228,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77233,"byte_end":77312,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77317,"byte_end":77320,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77325,"byte_end":77359,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77364,"byte_end":77367,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77372,"byte_end":77430,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77435,"byte_end":77438,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77443,"byte_end":77477,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77482,"byte_end":77489,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77920,"byte_end":77928,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataMap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77571,"byte_end":77620,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77625,"byte_end":77628,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77633,"byte_end":77647,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77652,"byte_end":77655,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77660,"byte_end":77667,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77672,"byte_end":77701,"line_start":342,"line_end":342,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77706,"byte_end":77743,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77748,"byte_end":77751,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77756,"byte_end":77784,"line_start":345,"line_end":345,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77789,"byte_end":77792,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77797,"byte_end":77854,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77859,"byte_end":77862,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77867,"byte_end":77896,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77901,"byte_end":77908,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78392,"byte_end":78397,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"clear","qualname":"<MetadataMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":77989,"byte_end":78065,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78070,"byte_end":78084,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78089,"byte_end":78092,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78097,"byte_end":78111,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78116,"byte_end":78119,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78124,"byte_end":78131,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78136,"byte_end":78165,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78170,"byte_end":78207,"line_start":362,"line_end":362,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78212,"byte_end":78269,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78274,"byte_end":78277,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ map.clear();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78282,"byte_end":78298,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78303,"byte_end":78331,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() > 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78336,"byte_end":78368,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78373,"byte_end":78380,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79008,"byte_end":79016,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MetadataMap>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of custom metadata entries the map can hold without\n reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of custom metadata entries the map can hold without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78452,"byte_end":78526,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78531,"byte_end":78548,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78553,"byte_end":78556,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This number is an approximation as certain usage patterns could cause","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78561,"byte_end":78634,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ additional allocations before the returned capacity is filled.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78639,"byte_end":78705,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78710,"byte_end":78713,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78718,"byte_end":78732,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78737,"byte_end":78740,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78745,"byte_end":78752,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78757,"byte_end":78786,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78791,"byte_end":78828,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78833,"byte_end":78836,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78841,"byte_end":78875,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78880,"byte_end":78883,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78888,"byte_end":78945,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(6, map.capacity());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78950,"byte_end":78984,"line_start":388,"line_end":388,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":78989,"byte_end":78996,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79854,"byte_end":79861,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"reserve","qualname":"<MetadataMap>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more custom metadata to be\n inserted into the `MetadataMap`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more custom metadata to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79078,"byte_end":79152,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ inserted into the `MetadataMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79157,"byte_end":79193,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79198,"byte_end":79201,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The metadata map may reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79206,"byte_end":79282,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ Like with `with_capacity`, this will be a \"best effort\" to avoid","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79287,"byte_end":79355,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ allocations until `additional` more custom metadata is inserted. Certain","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79360,"byte_end":79436,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ usage patterns could cause additional allocations before the number is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79441,"byte_end":79515,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ reached.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79520,"byte_end":79532,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79537,"byte_end":79540,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79545,"byte_end":79557,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79562,"byte_end":79565,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79570,"byte_end":79626,"line_start":405,"line_end":405,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79631,"byte_end":79634,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79639,"byte_end":79653,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79658,"byte_end":79661,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79666,"byte_end":79673,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79678,"byte_end":79707,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79712,"byte_end":79749,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ map.reserve(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79754,"byte_end":79774,"line_start":412,"line_end":412,"column_start":5,"column_end":25}},{"value":"/ # map.insert(\"x-host\", \"bar\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79779,"byte_end":79830,"line_start":413,"line_end":413,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79835,"byte_end":79842,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81503,"byte_end":81506,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"get","qualname":"<MetadataMap>::get","value":"pub fn get<K>(&Self, K) -> Option<&MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value associated with the key. This method\n is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_bin.","sig":null,"attributes":[{"value":"/ Returns a reference to the value associated with the key. This method","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":79947,"byte_end":80020,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80025,"byte_end":80092,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ \"-bin\"). For binary entries, use get_bin.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80097,"byte_end":80142,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80147,"byte_end":80150,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80155,"byte_end":80231,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `get_all` to get all values associated with a given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80236,"byte_end":80308,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80313,"byte_end":80384,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80389,"byte_end":80392,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80397,"byte_end":80411,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80416,"byte_end":80419,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80424,"byte_end":80431,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80436,"byte_end":80465,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80470,"byte_end":80507,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get(\"x-host\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80512,"byte_end":80553,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80558,"byte_end":80561,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80566,"byte_end":80617,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80622,"byte_end":80675,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80680,"byte_end":80733,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80738,"byte_end":80741,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80746,"byte_end":80797,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80802,"byte_end":80855,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80860,"byte_end":80863,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80868,"byte_end":80930,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80935,"byte_end":80959,"line_start":442,"line_end":442,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":80964,"byte_end":81032,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get(\"host-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81037,"byte_end":81080,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get(\"host-bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81085,"byte_end":81140,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81145,"byte_end":81203,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81208,"byte_end":81211,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81216,"byte_end":81276,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81281,"byte_end":81305,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get(\"host{}bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81310,"byte_end":81354,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ assert!(map.get(\"host{}bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81359,"byte_end":81415,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ assert!(map.get(&(\"host{}bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81420,"byte_end":81479,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81484,"byte_end":81491,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82921,"byte_end":82928,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"get_bin","qualname":"<MetadataMap>::get_bin","value":"pub fn get_bin<K>(&Self, K) -> Option<&MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81640,"byte_end":81706,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81711,"byte_end":81714,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81719,"byte_end":81733,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81738,"byte_end":81741,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81746,"byte_end":81753,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81758,"byte_end":81787,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81792,"byte_end":81829,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81834,"byte_end":81888,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81893,"byte_end":81896,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81901,"byte_end":81976,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":81981,"byte_end":82047,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82052,"byte_end":82118,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82123,"byte_end":82126,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82131,"byte_end":82206,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82211,"byte_end":82277,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82282,"byte_end":82285,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82290,"byte_end":82352,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82357,"byte_end":82381,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82386,"byte_end":82435,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82440,"byte_end":82483,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get_bin(\"host\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82488,"byte_end":82543,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82548,"byte_end":82606,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82611,"byte_end":82614,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82619,"byte_end":82679,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82684,"byte_end":82708,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin(\"host{}-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82713,"byte_end":82762,"line_start":486,"line_end":486,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82767,"byte_end":82828,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82833,"byte_end":82897,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":82902,"byte_end":82909,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84485,"byte_end":84492,"line_start":528,"line_end":528,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetadataMap>::get_mut","value":"pub fn get_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value associated with the key. This\n method is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_mut_bin.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value associated with the key. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83064,"byte_end":83138,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ method is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83143,"byte_end":83217,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ \"-bin\"). For binary entries, use get_mut_bin.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83222,"byte_end":83271,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83276,"byte_end":83279,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83284,"byte_end":83360,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `entry` to get all values associated with a given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83365,"byte_end":83435,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83440,"byte_end":83511,"line_start":503,"line_end":503,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83516,"byte_end":83519,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83524,"byte_end":83538,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83543,"byte_end":83546,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83551,"byte_end":83558,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83563,"byte_end":83592,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83597,"byte_end":83638,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83643,"byte_end":83694,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/ map.get_mut(\"x-host\").unwrap().set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83699,"byte_end":83754,"line_start":511,"line_end":511,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83759,"byte_end":83762,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"x-host\").unwrap().is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83767,"byte_end":83822,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83827,"byte_end":83830,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83835,"byte_end":83897,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83902,"byte_end":83926,"line_start":516,"line_end":516,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":83931,"byte_end":83999,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_mut(\"host-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84004,"byte_end":84051,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_mut(\"host-bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84056,"byte_end":84115,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_mut(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84120,"byte_end":84182,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84187,"byte_end":84190,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84195,"byte_end":84255,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84260,"byte_end":84284,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_mut(\"host{}\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84289,"byte_end":84334,"line_start":524,"line_end":524,"column_start":5,"column_end":50}},{"value":"/ assert!(map.get_mut(\"host{}\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84339,"byte_end":84396,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ assert!(map.get_mut(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84401,"byte_end":84461,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84466,"byte_end":84473,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85737,"byte_end":85748,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"get_bin_mut","qualname":"<MetadataMap>::get_bin_mut","value":"pub fn get_bin_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Binary>>\nwhere K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84638,"byte_end":84708,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84713,"byte_end":84716,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84721,"byte_end":84735,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84740,"byte_end":84743,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84748,"byte_end":84755,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84760,"byte_end":84789,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84794,"byte_end":84835,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84840,"byte_end":84915,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ map.get_bin_mut(\"trace-proto-bin\").unwrap().set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84920,"byte_end":84988,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":84993,"byte_end":84996,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").unwrap().is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85001,"byte_end":85069,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85074,"byte_end":85077,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85082,"byte_end":85144,"line_start":547,"line_end":547,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85149,"byte_end":85173,"line_start":548,"line_end":548,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85178,"byte_end":85227,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin_mut(\"host\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85232,"byte_end":85279,"line_start":550,"line_end":550,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_bin_mut(\"host\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85284,"byte_end":85343,"line_start":551,"line_end":551,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_bin_mut(&(\"host\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85348,"byte_end":85410,"line_start":552,"line_end":552,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85415,"byte_end":85418,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85423,"byte_end":85483,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85488,"byte_end":85512,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85517,"byte_end":85570,"line_start":556,"line_end":556,"column_start":5,"column_end":58}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85575,"byte_end":85640,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert!(map.get_bin_mut(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85645,"byte_end":85713,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85718,"byte_end":85725,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87643,"byte_end":87650,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"get_all","qualname":"<MetadataMap>::get_all","value":"pub fn get_all<K>(&Self, K) -> GetAll<, Ascii> where K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a view of all values associated with a key. This method is for\n ascii metadata entries (those whose names don't end with \"-bin\"). For\n binary entries, use get_all_bin.","sig":null,"attributes":[{"value":"/ Returns a view of all values associated with a key. This method is for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85896,"byte_end":85970,"line_start":567,"line_end":567,"column_start":5,"column_end":79}},{"value":"/ ascii metadata entries (those whose names don't end with \"-bin\"). For","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":85975,"byte_end":86048,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ binary entries, use get_all_bin.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86053,"byte_end":86089,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86094,"byte_end":86097,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The returned view does not incur any allocations and allows iterating","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86102,"byte_end":86175,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ the values associated with the key.  See [`GetAll`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86180,"byte_end":86253,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ Returns `None` if there are no values associated with the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86258,"byte_end":86324,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86329,"byte_end":86332,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ [`GetAll`]: struct.GetAll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86337,"byte_end":86371,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86376,"byte_end":86379,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86384,"byte_end":86398,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86403,"byte_end":86406,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86411,"byte_end":86418,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86423,"byte_end":86452,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86457,"byte_end":86494,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86499,"byte_end":86502,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86507,"byte_end":86558,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-host\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86563,"byte_end":86616,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86621,"byte_end":86624,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86629,"byte_end":86634,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all(\"x-host\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86639,"byte_end":86680,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86685,"byte_end":86688,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86693,"byte_end":86728,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86733,"byte_end":86784,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86789,"byte_end":86842,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86847,"byte_end":86886,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86891,"byte_end":86896,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86901,"byte_end":86904,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86909,"byte_end":86971,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":86976,"byte_end":87000,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87005,"byte_end":87073,"line_start":597,"line_end":597,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_all(\"host-bin\").iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87078,"byte_end":87139,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all(\"host-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87144,"byte_end":87217,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all(&(\"host-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87222,"byte_end":87298,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87303,"byte_end":87306,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87311,"byte_end":87371,"line_start":602,"line_end":602,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87376,"byte_end":87400,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all(\"host{}\").iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87405,"byte_end":87464,"line_start":604,"line_end":604,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_all(\"host{}\".to_string()).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87469,"byte_end":87540,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ assert!(map.get_all(&(\"host{}\".to_string())).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87545,"byte_end":87619,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87624,"byte_end":87631,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89257,"byte_end":89268,"line_start":651,"line_end":651,"column_start":12,"column_end":23},"name":"get_all_bin","qualname":"<MetadataMap>::get_all_bin","value":"pub fn get_all_bin<K>(&Self, K) -> GetAll<, Binary> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_all, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_all, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87849,"byte_end":87919,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87924,"byte_end":87927,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87932,"byte_end":87946,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87951,"byte_end":87954,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87959,"byte_end":87966,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":87971,"byte_end":88000,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88005,"byte_end":88042,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88047,"byte_end":88050,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88055,"byte_end":88130,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"goodbye\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88135,"byte_end":88212,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88217,"byte_end":88220,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88225,"byte_end":88230,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88235,"byte_end":88289,"line_start":630,"line_end":630,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88294,"byte_end":88297,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88302,"byte_end":88337,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88342,"byte_end":88393,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88398,"byte_end":88451,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88456,"byte_end":88495,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88500,"byte_end":88505,"line_start":636,"line_end":636,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88510,"byte_end":88513,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88518,"byte_end":88580,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88585,"byte_end":88609,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88614,"byte_end":88663,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_all_bin(\"host\").iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88668,"byte_end":88729,"line_start":641,"line_end":641,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all_bin(\"host\".to_string()).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88734,"byte_end":88807,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all_bin(&(\"host\".to_string())).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88812,"byte_end":88888,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88893,"byte_end":88896,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88901,"byte_end":88961,"line_start":645,"line_end":645,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88966,"byte_end":88990,"line_start":646,"line_end":646,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\").iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":88995,"byte_end":89062,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89067,"byte_end":89146,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ assert!(map.get_all_bin(&(\"host{}-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89151,"byte_end":89233,"line_start":649,"line_end":649,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89238,"byte_end":89245,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90200,"byte_end":90212,"line_start":681,"line_end":681,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MetadataMap>::contains_key","value":"pub fn contains_key<K>(&Self, K) -> bool where\nK: AsEncodingAgnosticMetadataKey","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key. This\n method works for both ascii and binary entries.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89469,"byte_end":89541,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ method works for both ascii and binary entries.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89546,"byte_end":89597,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89602,"byte_end":89605,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89610,"byte_end":89624,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89629,"byte_end":89632,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89637,"byte_end":89644,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89649,"byte_end":89678,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89683,"byte_end":89720,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89725,"byte_end":89766,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89771,"byte_end":89774,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89779,"byte_end":89847,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ map.insert(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89852,"byte_end":89903,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89908,"byte_end":89911,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // contains_key works for both Binary and Ascii keys:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89916,"byte_end":89973,"line_start":674,"line_end":674,"column_start":5,"column_end":62}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":89978,"byte_end":90018,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ assert!(map.contains_key(\"host-bin\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90023,"byte_end":90065,"line_start":676,"line_end":676,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90070,"byte_end":90073,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // contains_key returns false for invalid keys:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90078,"byte_end":90129,"line_start":678,"line_end":678,"column_start":5,"column_end":56}},{"value":"/ assert!(!map.contains_key(\"x{}host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90134,"byte_end":90176,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90181,"byte_end":90188,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91335,"byte_end":91339,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetadataMap>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs (both ascii and binary).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90339,"byte_end":90408,"line_start":688,"line_end":688,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90413,"byte_end":90416,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90421,"byte_end":90494,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded once per associated","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90499,"byte_end":90571,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ value. So, if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90576,"byte_end":90652,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90657,"byte_end":90660,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90665,"byte_end":90679,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90684,"byte_end":90687,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90692,"byte_end":90699,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90704,"byte_end":90733,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90738,"byte_end":90775,"line_start":698,"line_end":698,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90780,"byte_end":90783,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90788,"byte_end":90839,"line_start":700,"line_end":700,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90844,"byte_end":90897,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90902,"byte_end":90953,"line_start":702,"line_end":702,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90958,"byte_end":90961,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":90966,"byte_end":91003,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/     match key_and_value {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91008,"byte_end":91037,"line_start":705,"line_end":705,"column_start":5,"column_end":34}},{"value":"/         KeyAndValueRef::Ascii(ref key, ref value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91042,"byte_end":91098,"line_start":706,"line_end":706,"column_start":5,"column_end":61}},{"value":"/             println!(\"Ascii: {:?}: {:?}\", key, value),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91103,"byte_end":91161,"line_start":707,"line_end":707,"column_start":5,"column_end":63}},{"value":"/         KeyAndValueRef::Binary(ref key, ref value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91166,"byte_end":91223,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/             println!(\"Binary: {:?}: {:?}\", key, value),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91228,"byte_end":91287,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91292,"byte_end":91301,"line_start":710,"line_end":710,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91306,"byte_end":91311,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91316,"byte_end":91323,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92408,"byte_end":92416,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetadataMap>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs, with mutable value references.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs, with mutable value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91437,"byte_end":91513,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91518,"byte_end":91521,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The iterator order is arbitrary, but consistent across platforms for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91526,"byte_end":91602,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/ same crate version. Each key will be yielded once per associated value,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91607,"byte_end":91682,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ so if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91687,"byte_end":91755,"line_start":723,"line_end":723,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91760,"byte_end":91763,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91768,"byte_end":91782,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91787,"byte_end":91790,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91795,"byte_end":91802,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91807,"byte_end":91836,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91841,"byte_end":91878,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91883,"byte_end":91886,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91891,"byte_end":91942,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":91947,"byte_end":92000,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92005,"byte_end":92056,"line_start":733,"line_end":733,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92061,"byte_end":92064,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter_mut() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92069,"byte_end":92110,"line_start":735,"line_end":735,"column_start":5,"column_end":46}},{"value":"/     match key_and_value {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92115,"byte_end":92144,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/         KeyAndMutValueRef::Ascii(key, mut value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92149,"byte_end":92204,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92209,"byte_end":92251,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/         KeyAndMutValueRef::Binary(key, mut value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92256,"byte_end":92312,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92317,"byte_end":92360,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92365,"byte_end":92374,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92379,"byte_end":92384,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92389,"byte_end":92396,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93427,"byte_end":93431,"line_start":776,"line_end":776,"column_start":12,"column_end":16},"name":"keys","qualname":"<MetadataMap>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92528,"byte_end":92562,"line_start":750,"line_end":750,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92567,"byte_end":92570,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92575,"byte_end":92648,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded only once even if it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92653,"byte_end":92726,"line_start":753,"line_end":753,"column_start":5,"column_end":78}},{"value":"/ has multiple associated values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92731,"byte_end":92766,"line_start":754,"line_end":754,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92771,"byte_end":92774,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92779,"byte_end":92793,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92798,"byte_end":92801,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92806,"byte_end":92813,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92818,"byte_end":92847,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92852,"byte_end":92889,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92894,"byte_end":92897,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92902,"byte_end":92953,"line_start":762,"line_end":762,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":92958,"byte_end":93011,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93016,"byte_end":93086,"line_start":764,"line_end":764,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93091,"byte_end":93094,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93099,"byte_end":93126,"line_start":766,"line_end":766,"column_start":5,"column_end":32}},{"value":"/     match key {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93131,"byte_end":93150,"line_start":767,"line_end":767,"column_start":5,"column_end":24}},{"value":"/         KeyRef::Ascii(ref key) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93155,"byte_end":93192,"line_start":768,"line_end":768,"column_start":5,"column_end":42}},{"value":"/             println!(\"Ascii key: {:?}\", key),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93197,"byte_end":93246,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/         KeyRef::Binary(ref key) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93251,"byte_end":93289,"line_start":770,"line_end":770,"column_start":5,"column_end":43}},{"value":"/             println!(\"Binary key: {:?}\", key),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93294,"byte_end":93344,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93349,"byte_end":93358,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", key);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93363,"byte_end":93393,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93398,"byte_end":93403,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93408,"byte_end":93415,"line_start":775,"line_end":775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94392,"byte_end":94398,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"values","qualname":"<MetadataMap>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all values (both ascii and binary).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93529,"byte_end":93589,"line_start":782,"line_end":782,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93594,"byte_end":93597,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93602,"byte_end":93675,"line_start":784,"line_end":784,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93680,"byte_end":93707,"line_start":785,"line_end":785,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93712,"byte_end":93715,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93720,"byte_end":93734,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93739,"byte_end":93742,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93747,"byte_end":93754,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93759,"byte_end":93788,"line_start":790,"line_end":790,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93793,"byte_end":93830,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93835,"byte_end":93838,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93843,"byte_end":93894,"line_start":793,"line_end":793,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93899,"byte_end":93952,"line_start":794,"line_end":794,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":93957,"byte_end":94027,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94032,"byte_end":94035,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ for value in map.values() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94040,"byte_end":94071,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     match value {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94076,"byte_end":94097,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/         ValueRef::Ascii(ref value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94102,"byte_end":94143,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/             println!(\"Ascii value: {:?}\", value),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94148,"byte_end":94201,"line_start":800,"line_end":800,"column_start":5,"column_end":58}},{"value":"/         ValueRef::Binary(ref value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94206,"byte_end":94248,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/             println!(\"Binary value: {:?}\", value),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94253,"byte_end":94307,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94312,"byte_end":94321,"line_start":803,"line_end":803,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", value);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94326,"byte_end":94358,"line_start":804,"line_end":804,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94363,"byte_end":94368,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94373,"byte_end":94380,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95283,"byte_end":95293,"line_start":837,"line_end":837,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<MetadataMap>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94500,"byte_end":94544,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94549,"byte_end":94552,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94557,"byte_end":94630,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94635,"byte_end":94662,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94667,"byte_end":94670,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94675,"byte_end":94689,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94694,"byte_end":94697,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94702,"byte_end":94709,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94714,"byte_end":94743,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94748,"byte_end":94789,"line_start":822,"line_end":822,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94794,"byte_end":94797,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94802,"byte_end":94853,"line_start":824,"line_end":824,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94858,"byte_end":94911,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94916,"byte_end":94967,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94972,"byte_end":94975,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ for value in map.values_mut() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":94980,"byte_end":95015,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/     match value {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95020,"byte_end":95041,"line_start":829,"line_end":829,"column_start":5,"column_end":26}},{"value":"/         ValueRefMut::Ascii(mut value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95046,"byte_end":95090,"line_start":830,"line_end":830,"column_start":5,"column_end":49}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95095,"byte_end":95137,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/         ValueRefMut::Binary(mut value) =>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95142,"byte_end":95187,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95192,"byte_end":95235,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95240,"byte_end":95249,"line_start":834,"line_end":834,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95254,"byte_end":95259,"line_start":835,"line_end":835,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95264,"byte_end":95271,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96921,"byte_end":96926,"line_start":883,"line_end":883,"column_start":12,"column_end":17},"name":"entry","qualname":"<MetadataMap>::entry","value":"pub fn entry<K>(&mut Self, K) -> Result<Entry<, Ascii>, InvalidMetadataKey>\nwhere K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given ascii key's corresponding entry in the map for in-place\n manipulation. For binary keys, use `entry_bin`.","sig":null,"attributes":[{"value":"/ Gets the given ascii key's corresponding entry in the map for in-place","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95409,"byte_end":95483,"line_start":843,"line_end":843,"column_start":5,"column_end":79}},{"value":"/ manipulation. For binary keys, use `entry_bin`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95488,"byte_end":95539,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95544,"byte_end":95547,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95552,"byte_end":95566,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95571,"byte_end":95574,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95579,"byte_end":95586,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95591,"byte_end":95620,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95625,"byte_end":95666,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95671,"byte_end":95674,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95679,"byte_end":95699,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     \"content-length\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95704,"byte_end":95729,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95734,"byte_end":95752,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95757,"byte_end":95782,"line_start":855,"line_end":855,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95787,"byte_end":95805,"line_start":856,"line_end":856,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95810,"byte_end":95816,"line_start":857,"line_end":857,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95821,"byte_end":95824,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95829,"byte_end":95857,"line_start":859,"line_end":859,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry(header).unwrap().or_insert(\"\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95862,"byte_end":95942,"line_start":860,"line_end":860,"column_start":5,"column_end":85}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":95947,"byte_end":96031,"line_start":861,"line_end":861,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96036,"byte_end":96041,"line_start":862,"line_end":862,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96046,"byte_end":96049,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96054,"byte_end":96111,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96116,"byte_end":96165,"line_start":865,"line_end":865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96170,"byte_end":96173,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ // Gracefully handles parting invalid key strings","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96178,"byte_end":96231,"line_start":867,"line_end":867,"column_start":5,"column_end":58}},{"value":"/ assert!(!map.entry(\"a{}b\").is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96236,"byte_end":96276,"line_start":868,"line_end":868,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96281,"byte_end":96284,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96289,"byte_end":96351,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96356,"byte_end":96380,"line_start":871,"line_end":871,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96385,"byte_end":96453,"line_start":872,"line_end":872,"column_start":5,"column_end":73}},{"value":"/ assert!(!map.entry(\"host-bin\").is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96458,"byte_end":96502,"line_start":873,"line_end":873,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry(\"host-bin\".to_string()).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96507,"byte_end":96563,"line_start":874,"line_end":874,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry(&(\"host-bin\".to_string())).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96568,"byte_end":96627,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96632,"byte_end":96635,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96640,"byte_end":96700,"line_start":877,"line_end":877,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96705,"byte_end":96729,"line_start":878,"line_end":878,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry(\"host{}\").is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96734,"byte_end":96776,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/ assert!(!map.entry(\"host{}\".to_string()).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96781,"byte_end":96835,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/ assert!(!map.entry(&(\"host{}\".to_string())).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96840,"byte_end":96897,"line_start":881,"line_end":881,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":96902,"byte_end":96909,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98602,"byte_end":98611,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"entry_bin","qualname":"<MetadataMap>::entry_bin","value":"pub fn entry_bin<K>(&mut Self, K)\n-> Result<Entry<, Binary>, InvalidMetadataKey> where K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given Binary key's corresponding entry in the map for in-place\n manipulation.","sig":null,"attributes":[{"value":"/ Gets the given Binary key's corresponding entry in the map for in-place","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97101,"byte_end":97176,"line_start":890,"line_end":890,"column_start":5,"column_end":80}},{"value":"/ manipulation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97181,"byte_end":97198,"line_start":891,"line_end":891,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97203,"byte_end":97206,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97211,"byte_end":97225,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97230,"byte_end":97233,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97238,"byte_end":97245,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97250,"byte_end":97279,"line_start":896,"line_end":896,"column_start":5,"column_end":34}},{"value":"/ # use std::str;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97284,"byte_end":97303,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97308,"byte_end":97349,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97354,"byte_end":97357,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97362,"byte_end":97382,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/     \"content-length-bin\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97387,"byte_end":97416,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/     \"x-hello-bin\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97421,"byte_end":97443,"line_start":902,"line_end":902,"column_start":5,"column_end":27}},{"value":"/     \"Content-Length-bin\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97448,"byte_end":97477,"line_start":903,"line_end":903,"column_start":5,"column_end":34}},{"value":"/     \"x-world-bin\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97482,"byte_end":97504,"line_start":904,"line_end":904,"column_start":5,"column_end":27}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97509,"byte_end":97515,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97520,"byte_end":97523,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97528,"byte_end":97556,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry_bin(header).unwrap().or_insert(MetadataValue::from_bytes(b\"\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97561,"byte_end":97656,"line_start":908,"line_end":908,"column_start":5,"column_end":100}},{"value":"/     *counter = MetadataValue::from_bytes(format!(\"{}{}\", str::from_utf8(counter.to_bytes().unwrap().as_ref()).unwrap(), \"1\").as_bytes());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97661,"byte_end":97802,"line_start":909,"line_end":909,"column_start":5,"column_end":146}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97807,"byte_end":97812,"line_start":910,"line_end":910,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97817,"byte_end":97820,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_bin(\"content-length-bin\").unwrap(), \"11\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97825,"byte_end":97890,"line_start":912,"line_end":912,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(map.get_bin(\"x-hello-bin\").unwrap(), \"1\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97895,"byte_end":97952,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97957,"byte_end":97960,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":97965,"byte_end":98027,"line_start":915,"line_end":915,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98032,"byte_end":98056,"line_start":916,"line_end":916,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98061,"byte_end":98110,"line_start":917,"line_end":917,"column_start":5,"column_end":54}},{"value":"/ assert!(!map.entry_bin(\"host\").is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98115,"byte_end":98159,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry_bin(\"host\".to_string()).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98164,"byte_end":98220,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry_bin(&(\"host\".to_string())).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98225,"byte_end":98284,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98289,"byte_end":98292,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98297,"byte_end":98357,"line_start":922,"line_end":922,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98362,"byte_end":98386,"line_start":923,"line_end":923,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\").is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98391,"byte_end":98441,"line_start":924,"line_end":924,"column_start":5,"column_end":55}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\".to_string()).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98446,"byte_end":98508,"line_start":925,"line_end":925,"column_start":5,"column_end":67}},{"value":"/ assert!(!map.entry_bin(&(\"host{}-bin\".to_string())).is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98513,"byte_end":98578,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":98583,"byte_end":98590,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101197,"byte_end":101203,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"name":"insert","qualname":"<MetadataMap>::insert","value":"pub fn insert<K>(&mut Self, K, MetadataValue<Ascii>)\n-> Option<MetadataValue<Ascii>> where K: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `insert_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99452,"byte_end":99527,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/ use `insert_bin`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99532,"byte_end":99553,"line_start":958,"line_end":958,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99558,"byte_end":99561,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99566,"byte_end":99636,"line_start":960,"line_end":960,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99641,"byte_end":99679,"line_start":961,"line_end":961,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99684,"byte_end":99687,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `None` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99692,"byte_end":99763,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99768,"byte_end":99781,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99786,"byte_end":99789,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is associated with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99794,"byte_end":99868,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ the key and all previous values are removed. **Note** that only a single","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99873,"byte_end":99949,"line_start":967,"line_end":967,"column_start":5,"column_end":81}},{"value":"/ one of the previous values is returned. If there are multiple values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":99954,"byte_end":100026,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ that have been previously associated with the key, then the first one is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100031,"byte_end":100107,"line_start":969,"line_end":969,"column_start":5,"column_end":81}},{"value":"/ returned. See `insert_mult` on `OccupiedEntry` for an API that returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100112,"byte_end":100186,"line_start":970,"line_end":970,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100191,"byte_end":100206,"line_start":971,"line_end":971,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100211,"byte_end":100214,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The key is not updated, though; this matters for types that can be `==`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100219,"byte_end":100294,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/ without being identical.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100299,"byte_end":100327,"line_start":974,"line_end":974,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100332,"byte_end":100335,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100340,"byte_end":100354,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100359,"byte_end":100362,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100367,"byte_end":100374,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100379,"byte_end":100408,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100413,"byte_end":100450,"line_start":980,"line_end":980,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100455,"byte_end":100525,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100530,"byte_end":100559,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100564,"byte_end":100567,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert(\"x-host\", \"earth\".parse().unwrap()).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100572,"byte_end":100647,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100652,"byte_end":100682,"line_start":985,"line_end":985,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100687,"byte_end":100694,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100699,"byte_end":100702,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100707,"byte_end":100726,"line_start":988,"line_end":988,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100731,"byte_end":100760,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100765,"byte_end":100802,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100807,"byte_end":100862,"line_start":991,"line_end":991,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"x{}host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100867,"byte_end":100919,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100924,"byte_end":100931,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100936,"byte_end":100939,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100944,"byte_end":100963,"line_start":995,"line_end":995,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":100968,"byte_end":100997,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101002,"byte_end":101039,"line_start":997,"line_end":997,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is binary panics (use insert_bin).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101044,"byte_end":101113,"line_start":998,"line_end":998,"column_start":5,"column_end":74}},{"value":"/ map.insert(\"x-host-bin\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101118,"byte_end":101173,"line_start":999,"line_end":999,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101178,"byte_end":101185,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102572,"byte_end":102582,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"insert_bin","qualname":"<MetadataMap>::insert_bin","value":"pub fn insert_bin<K>(&mut Self, K, MetadataValue<Binary>)\n-> Option<MetadataValue<Binary>> where K: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like insert, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like insert, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101377,"byte_end":101446,"line_start":1008,"line_end":1008,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101451,"byte_end":101454,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101459,"byte_end":101529,"line_start":1010,"line_end":1010,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101534,"byte_end":101573,"line_start":1011,"line_end":1011,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101578,"byte_end":101581,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101586,"byte_end":101600,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101605,"byte_end":101608,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101613,"byte_end":101620,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101625,"byte_end":101654,"line_start":1016,"line_end":1016,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101659,"byte_end":101696,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101701,"byte_end":101795,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101800,"byte_end":101829,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101834,"byte_end":101837,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\")).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101842,"byte_end":101941,"line_start":1021,"line_end":1021,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101946,"byte_end":101976,"line_start":1022,"line_end":1022,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101981,"byte_end":101988,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":101993,"byte_end":101996,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102001,"byte_end":102020,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102025,"byte_end":102054,"line_start":1026,"line_end":1026,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102059,"byte_end":102100,"line_start":1027,"line_end":1027,"column_start":5,"column_end":46}},{"value":"/ // Attempting to add a binary metadata entry with an invalid name","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102105,"byte_end":102174,"line_start":1028,"line_end":1028,"column_start":5,"column_end":74}},{"value":"/ map.insert_bin(\"trace-proto\", MetadataValue::from_bytes(b\"hello\")); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102179,"byte_end":102271,"line_start":1029,"line_end":1029,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102276,"byte_end":102283,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102288,"byte_end":102291,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102296,"byte_end":102315,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102320,"byte_end":102349,"line_start":1033,"line_end":1033,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102354,"byte_end":102391,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102396,"byte_end":102451,"line_start":1035,"line_end":1035,"column_start":5,"column_end":60}},{"value":"/ map.insert_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102456,"byte_end":102548,"line_start":1036,"line_end":1036,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102553,"byte_end":102560,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104425,"byte_end":104431,"line_start":1092,"line_end":1092,"column_start":12,"column_end":18},"name":"append","qualname":"<MetadataMap>::append","value":"pub fn append<K>(&mut Self, K, MetadataValue<Ascii>) -> bool where\nK: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `append_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102790,"byte_end":102865,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ use `append_bin`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102870,"byte_end":102891,"line_start":1050,"line_end":1050,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102896,"byte_end":102899,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102904,"byte_end":102974,"line_start":1052,"line_end":1052,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":102979,"byte_end":103017,"line_start":1053,"line_end":1053,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103022,"byte_end":103025,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `false` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103030,"byte_end":103102,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103107,"byte_end":103120,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103125,"byte_end":103128,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is pushed to the end","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103133,"byte_end":103209,"line_start":1058,"line_end":1058,"column_start":5,"column_end":81}},{"value":"/ of the list of values currently associated with the key. The key is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103214,"byte_end":103289,"line_start":1059,"line_end":1059,"column_start":5,"column_end":80}},{"value":"/ updated, though; this matters for types that can be `==` without being","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103294,"byte_end":103368,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ identical.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103373,"byte_end":103387,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103392,"byte_end":103395,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103400,"byte_end":103414,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103419,"byte_end":103422,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103427,"byte_end":103434,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103439,"byte_end":103468,"line_start":1066,"line_end":1066,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103473,"byte_end":103510,"line_start":1067,"line_end":1067,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103515,"byte_end":103585,"line_start":1068,"line_end":1068,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103590,"byte_end":103619,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103624,"byte_end":103627,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103632,"byte_end":103683,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103688,"byte_end":103691,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103696,"byte_end":103735,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103740,"byte_end":103770,"line_start":1074,"line_end":1074,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103775,"byte_end":103819,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103824,"byte_end":103868,"line_start":1076,"line_end":1076,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103873,"byte_end":103880,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103885,"byte_end":103888,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103893,"byte_end":103912,"line_start":1079,"line_end":1079,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103917,"byte_end":103946,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103951,"byte_end":103988,"line_start":1081,"line_end":1081,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":103993,"byte_end":104048,"line_start":1082,"line_end":1082,"column_start":5,"column_end":60}},{"value":"/ map.append(\"x{}host\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104053,"byte_end":104126,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104131,"byte_end":104138,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104143,"byte_end":104146,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104151,"byte_end":104170,"line_start":1086,"line_end":1086,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104175,"byte_end":104204,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104209,"byte_end":104246,"line_start":1088,"line_end":1088,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is binary panics (use append_bin).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104251,"byte_end":104320,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ map.append(\"x-host-bin\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104325,"byte_end":104401,"line_start":1090,"line_end":1090,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104406,"byte_end":104413,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105905,"byte_end":105915,"line_start":1133,"line_end":1133,"column_start":12,"column_end":22},"name":"append_bin","qualname":"<MetadataMap>::append_bin","value":"pub fn append_bin<K>(&mut Self, K, MetadataValue<Binary>) -> bool where\nK: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like append, but for binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like append, but for binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104585,"byte_end":104654,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104659,"byte_end":104662,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104667,"byte_end":104737,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104742,"byte_end":104781,"line_start":1102,"line_end":1102,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104786,"byte_end":104789,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104794,"byte_end":104808,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104813,"byte_end":104816,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104821,"byte_end":104828,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104833,"byte_end":104862,"line_start":1107,"line_end":1107,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104867,"byte_end":104904,"line_start":1108,"line_end":1108,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":104909,"byte_end":105003,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105008,"byte_end":105037,"line_start":1110,"line_end":1110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105042,"byte_end":105045,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105050,"byte_end":105125,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105130,"byte_end":105133,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105138,"byte_end":105190,"line_start":1114,"line_end":1114,"column_start":5,"column_end":57}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105195,"byte_end":105225,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105230,"byte_end":105274,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105279,"byte_end":105323,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105328,"byte_end":105335,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105340,"byte_end":105343,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105348,"byte_end":105367,"line_start":1120,"line_end":1120,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105372,"byte_end":105401,"line_start":1121,"line_end":1121,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105406,"byte_end":105443,"line_start":1122,"line_end":1122,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105448,"byte_end":105503,"line_start":1123,"line_end":1123,"column_start":5,"column_end":60}},{"value":"/ map.append_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105508,"byte_end":105600,"line_start":1124,"line_end":1124,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105605,"byte_end":105612,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105617,"byte_end":105620,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105625,"byte_end":105644,"line_start":1127,"line_end":1127,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105649,"byte_end":105678,"line_start":1128,"line_end":1128,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105683,"byte_end":105720,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is ascii panics (use append).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105725,"byte_end":105789,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ map.append_bin(\"x-host\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105794,"byte_end":105881,"line_start":1131,"line_end":1131,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":105886,"byte_end":105893,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107462,"byte_end":107468,"line_start":1173,"line_end":1173,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetadataMap>::remove","value":"pub fn remove<K>(&mut Self, K) -> Option<MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Removes an ascii key from the map, returning the value associated with\n the key. To remove a binary key, use `remove_bin`.","sig":null,"attributes":[{"value":"/ Removes an ascii key from the map, returning the value associated with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106071,"byte_end":106145,"line_start":1140,"line_end":1140,"column_start":5,"column_end":79}},{"value":"/ the key. To remove a binary key, use `remove_bin`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106150,"byte_end":106204,"line_start":1141,"line_end":1141,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106209,"byte_end":106212,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the map does not contain the key. If there are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106217,"byte_end":106285,"line_start":1143,"line_end":1143,"column_start":5,"column_end":73}},{"value":"/ multiple values associated with the key, then the first one is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106290,"byte_end":106366,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/ See `remove_entry_mult` on `OccupiedEntry` for an API that yields all","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106371,"byte_end":106444,"line_start":1145,"line_end":1145,"column_start":5,"column_end":78}},{"value":"/ values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106449,"byte_end":106460,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106465,"byte_end":106468,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106473,"byte_end":106487,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106492,"byte_end":106495,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106500,"byte_end":106507,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106512,"byte_end":106541,"line_start":1151,"line_end":1151,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106546,"byte_end":106583,"line_start":1152,"line_end":1152,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106588,"byte_end":106645,"line_start":1153,"line_end":1153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106650,"byte_end":106653,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove(\"x-host\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106658,"byte_end":106703,"line_start":1155,"line_end":1155,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106708,"byte_end":106744,"line_start":1156,"line_end":1156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106749,"byte_end":106752,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove(\"x-host\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106757,"byte_end":106801,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106806,"byte_end":106809,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106814,"byte_end":106878,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106883,"byte_end":106907,"line_start":1161,"line_end":1161,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106912,"byte_end":106980,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/ assert!(map.remove(\"host-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":106985,"byte_end":107031,"line_start":1163,"line_end":1163,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove(\"host-bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107036,"byte_end":107094,"line_start":1164,"line_end":1164,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107099,"byte_end":107160,"line_start":1165,"line_end":1165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107165,"byte_end":107168,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107173,"byte_end":107235,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107240,"byte_end":107264,"line_start":1168,"line_end":1168,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove(\"host{}\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107269,"byte_end":107313,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ assert!(map.remove(\"host{}\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107318,"byte_end":107374,"line_start":1170,"line_end":1170,"column_start":5,"column_end":61}},{"value":"/ assert!(map.remove(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107379,"byte_end":107438,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107443,"byte_end":107450,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108734,"byte_end":108744,"line_start":1207,"line_end":1207,"column_start":12,"column_end":22},"name":"remove_bin","qualname":"<MetadataMap>::remove_bin","value":"pub fn remove_bin<K>(&mut Self, K) -> Option<MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like remove, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like remove, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107608,"byte_end":107677,"line_start":1180,"line_end":1180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107682,"byte_end":107685,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107690,"byte_end":107704,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107709,"byte_end":107712,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107717,"byte_end":107724,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107729,"byte_end":107758,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107763,"byte_end":107800,"line_start":1186,"line_end":1186,"column_start":5,"column_end":42}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello.world\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107805,"byte_end":107886,"line_start":1187,"line_end":1187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107891,"byte_end":107894,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove_bin(\"trace-proto-bin\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107899,"byte_end":107957,"line_start":1189,"line_end":1189,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":107962,"byte_end":107998,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108003,"byte_end":108006,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108011,"byte_end":108068,"line_start":1192,"line_end":1192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108073,"byte_end":108076,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108081,"byte_end":108145,"line_start":1194,"line_end":1194,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108150,"byte_end":108174,"line_start":1195,"line_end":1195,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108179,"byte_end":108228,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/ assert!(map.remove_bin(\"host\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108233,"byte_end":108279,"line_start":1197,"line_end":1197,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove_bin(\"host\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108284,"byte_end":108342,"line_start":1198,"line_end":1198,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108347,"byte_end":108408,"line_start":1199,"line_end":1199,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108413,"byte_end":108416,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108421,"byte_end":108483,"line_start":1201,"line_end":1201,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108488,"byte_end":108512,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\").is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108517,"byte_end":108569,"line_start":1203,"line_end":1203,"column_start":5,"column_end":57}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108574,"byte_end":108638,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/ assert!(map.remove_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108643,"byte_end":108710,"line_start":1205,"line_end":1205,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":108715,"byte_end":108722,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115280,"byte_end":115289,"line_start":1448,"line_end":1448,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114427,"byte_end":114497,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114502,"byte_end":114505,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114510,"byte_end":114578,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114583,"byte_end":114586,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114591,"byte_end":114605,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114610,"byte_end":114613,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114618,"byte_end":114625,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114630,"byte_end":114659,"line_start":1428,"line_end":1428,"column_start":5,"column_end":34}},{"value":"/ let mut map: MetadataMap = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114664,"byte_end":114718,"line_start":1429,"line_end":1429,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114723,"byte_end":114726,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let keys = &[","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114731,"byte_end":114748,"line_start":1431,"line_end":1431,"column_start":5,"column_end":22}},{"value":"/     \"content-length\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114753,"byte_end":114778,"line_start":1432,"line_end":1432,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114783,"byte_end":114801,"line_start":1433,"line_end":1433,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114806,"byte_end":114831,"line_start":1434,"line_end":1434,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114836,"byte_end":114854,"line_start":1435,"line_end":1435,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114859,"byte_end":114865,"line_start":1436,"line_end":1436,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114870,"byte_end":114873,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ for &key in keys {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114878,"byte_end":114900,"line_start":1438,"line_end":1438,"column_start":5,"column_end":27}},{"value":"/     let counter = map.entry(key)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114905,"byte_end":114941,"line_start":1439,"line_end":1439,"column_start":5,"column_end":41}},{"value":"/         .expect(\"valid key names\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114946,"byte_end":114984,"line_start":1440,"line_end":1440,"column_start":5,"column_end":43}},{"value":"/         .or_insert(\"\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114989,"byte_end":115033,"line_start":1441,"line_end":1441,"column_start":5,"column_end":49}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115038,"byte_end":115122,"line_start":1442,"line_end":1442,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115127,"byte_end":115132,"line_start":1443,"line_end":1443,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115137,"byte_end":115140,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115145,"byte_end":115202,"line_start":1445,"line_end":1445,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115207,"byte_end":115256,"line_start":1446,"line_end":1446,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115261,"byte_end":115268,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116533,"byte_end":116547,"line_start":1491,"line_end":1491,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> MetadataValue<VE>>(Self, F)\n-> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115511,"byte_end":115585,"line_start":1457,"line_end":1457,"column_start":5,"column_end":79}},{"value":"/ function if empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115590,"byte_end":115612,"line_start":1458,"line_end":1458,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115617,"byte_end":115620,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115625,"byte_end":115695,"line_start":1460,"line_end":1460,"column_start":5,"column_end":75}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115700,"byte_end":115768,"line_start":1461,"line_end":1461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115773,"byte_end":115776,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115781,"byte_end":115795,"line_start":1463,"line_end":1463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115800,"byte_end":115803,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Basic usage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115808,"byte_end":115824,"line_start":1465,"line_end":1465,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115829,"byte_end":115832,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115837,"byte_end":115844,"line_start":1467,"line_end":1467,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115849,"byte_end":115878,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115883,"byte_end":115920,"line_start":1469,"line_end":1469,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115925,"byte_end":115928,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"x-hello\").unwrap()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115933,"byte_end":115976,"line_start":1471,"line_end":1471,"column_start":5,"column_end":48}},{"value":"/     .or_insert_with(|| \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":115981,"byte_end":116034,"line_start":1472,"line_end":1472,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116039,"byte_end":116042,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116047,"byte_end":116076,"line_start":1474,"line_end":1474,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116081,"byte_end":116088,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116093,"byte_end":116096,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116101,"byte_end":116171,"line_start":1477,"line_end":1477,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116176,"byte_end":116179,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116184,"byte_end":116191,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116196,"byte_end":116225,"line_start":1480,"line_end":1480,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116230,"byte_end":116267,"line_start":1481,"line_end":1481,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116272,"byte_end":116321,"line_start":1482,"line_end":1482,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116326,"byte_end":116329,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"host\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116334,"byte_end":116365,"line_start":1484,"line_end":1484,"column_start":5,"column_end":36}},{"value":"/     .expect(\"host is a valid string\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116370,"byte_end":116411,"line_start":1485,"line_end":1485,"column_start":5,"column_end":46}},{"value":"/     .or_insert_with(|| unreachable!());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116416,"byte_end":116459,"line_start":1486,"line_end":1486,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116464,"byte_end":116467,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116472,"byte_end":116475,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116480,"byte_end":116509,"line_start":1489,"line_end":1489,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116514,"byte_end":116521,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117077,"byte_end":117080,"line_start":1513,"line_end":1513,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116812,"byte_end":116854,"line_start":1503,"line_end":1503,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116859,"byte_end":116862,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116867,"byte_end":116881,"line_start":1505,"line_end":1505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116886,"byte_end":116889,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116894,"byte_end":116901,"line_start":1507,"line_end":1507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116906,"byte_end":116935,"line_start":1508,"line_end":1508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116940,"byte_end":116977,"line_start":1509,"line_end":1509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116982,"byte_end":116985,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":116990,"byte_end":117053,"line_start":1511,"line_end":1511,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117058,"byte_end":117065,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117667,"byte_end":117670,"line_start":1536,"line_end":1536,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117402,"byte_end":117444,"line_start":1526,"line_end":1526,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117449,"byte_end":117452,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117457,"byte_end":117471,"line_start":1528,"line_end":1528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117476,"byte_end":117479,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117484,"byte_end":117491,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117496,"byte_end":117525,"line_start":1531,"line_end":1531,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117530,"byte_end":117567,"line_start":1532,"line_end":1532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117572,"byte_end":117575,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117580,"byte_end":117643,"line_start":1534,"line_end":1534,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117648,"byte_end":117655,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118099,"byte_end":118107,"line_start":1552,"line_end":1552,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key","sig":null,"attributes":[{"value":"/ Take ownership of the key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117781,"byte_end":117810,"line_start":1540,"line_end":1540,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117815,"byte_end":117818,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117823,"byte_end":117837,"line_start":1542,"line_end":1542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117842,"byte_end":117845,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117850,"byte_end":117857,"line_start":1544,"line_end":1544,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117862,"byte_end":117891,"line_start":1545,"line_end":1545,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117896,"byte_end":117933,"line_start":1546,"line_end":1546,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117938,"byte_end":117941,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117946,"byte_end":118007,"line_start":1548,"line_end":1548,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(v.into_key().as_str(), \"x-hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118012,"byte_end":118065,"line_start":1549,"line_end":1549,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118070,"byte_end":118075,"line_start":1550,"line_end":1550,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118080,"byte_end":118087,"line_start":1551,"line_end":1551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118734,"byte_end":118740,"line_start":1573,"line_end":1573,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118217,"byte_end":118253,"line_start":1556,"line_end":1556,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118258,"byte_end":118261,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. A mutable reference","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118266,"byte_end":118341,"line_start":1558,"line_end":1558,"column_start":5,"column_end":80}},{"value":"/ to the inserted value will be returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118346,"byte_end":118389,"line_start":1559,"line_end":1559,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118394,"byte_end":118397,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118402,"byte_end":118416,"line_start":1561,"line_end":1561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118421,"byte_end":118424,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118429,"byte_end":118436,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118441,"byte_end":118470,"line_start":1564,"line_end":1564,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118475,"byte_end":118512,"line_start":1565,"line_end":1565,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118517,"byte_end":118520,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118525,"byte_end":118586,"line_start":1567,"line_end":1567,"column_start":5,"column_end":66}},{"value":"/     v.insert(\"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118591,"byte_end":118634,"line_start":1568,"line_end":1568,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118639,"byte_end":118644,"line_start":1569,"line_end":1569,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118649,"byte_end":118652,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118657,"byte_end":118710,"line_start":1571,"line_end":1571,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118715,"byte_end":118722,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119503,"byte_end":119515,"line_start":1595,"line_end":1595,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<VacantEntry>::insert_entry","value":"pub fn insert_entry(Self, MetadataValue<VE>) -> OccupiedEntry","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118906,"byte_end":118942,"line_start":1577,"line_end":1577,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118947,"byte_end":118950,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. The new","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":118955,"byte_end":119018,"line_start":1579,"line_end":1579,"column_start":5,"column_end":68}},{"value":"/ `OccupiedEntry` is returned, allowing for further manipulation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119023,"byte_end":119090,"line_start":1580,"line_end":1580,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119095,"byte_end":119098,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119103,"byte_end":119117,"line_start":1582,"line_end":1582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119122,"byte_end":119125,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119130,"byte_end":119137,"line_start":1584,"line_end":1584,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119142,"byte_end":119171,"line_start":1585,"line_end":1585,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119176,"byte_end":119213,"line_start":1586,"line_end":1586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119218,"byte_end":119221,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119226,"byte_end":119287,"line_start":1588,"line_end":1588,"column_start":5,"column_end":66}},{"value":"/     let mut e = v.insert_entry(\"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119292,"byte_end":119353,"line_start":1589,"line_end":1589,"column_start":5,"column_end":66}},{"value":"/     e.insert(\"world2\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119358,"byte_end":119402,"line_start":1590,"line_end":1590,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119407,"byte_end":119412,"line_start":1591,"line_end":1591,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119417,"byte_end":119420,"line_start":1592,"line_end":1592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world2\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119425,"byte_end":119479,"line_start":1593,"line_end":1593,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119484,"byte_end":119491,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120171,"byte_end":120174,"line_start":1619,"line_end":1619,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119803,"byte_end":119846,"line_start":1606,"line_end":1606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119851,"byte_end":119854,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119859,"byte_end":119873,"line_start":1608,"line_end":1608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119878,"byte_end":119881,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119886,"byte_end":119893,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119898,"byte_end":119927,"line_start":1611,"line_end":1611,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119932,"byte_end":119969,"line_start":1612,"line_end":1612,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119974,"byte_end":120023,"line_start":1613,"line_end":1613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120028,"byte_end":120031,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120036,"byte_end":120096,"line_start":1615,"line_end":1615,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(\"host\", e.key());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120101,"byte_end":120137,"line_start":1616,"line_end":1616,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120142,"byte_end":120147,"line_start":1617,"line_end":1617,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120152,"byte_end":120159,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120957,"byte_end":120960,"line_start":1646,"line_end":1646,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a reference to the first value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120285,"byte_end":120337,"line_start":1623,"line_end":1623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120342,"byte_end":120345,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120350,"byte_end":120391,"line_start":1625,"line_end":1625,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120396,"byte_end":120399,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120404,"byte_end":120416,"line_start":1627,"line_end":1627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120421,"byte_end":120424,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ `get` panics if there are no values associated with the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120429,"byte_end":120495,"line_start":1629,"line_end":1629,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120500,"byte_end":120503,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120508,"byte_end":120522,"line_start":1631,"line_end":1631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120527,"byte_end":120530,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120535,"byte_end":120542,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120547,"byte_end":120576,"line_start":1634,"line_end":1634,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120581,"byte_end":120618,"line_start":1635,"line_end":1635,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120623,"byte_end":120678,"line_start":1636,"line_end":1636,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120683,"byte_end":120686,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120691,"byte_end":120755,"line_start":1638,"line_end":1638,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120760,"byte_end":120804,"line_start":1639,"line_end":1639,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120809,"byte_end":120812,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/     e.append(\"hello.earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120817,"byte_end":120866,"line_start":1641,"line_end":1641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120871,"byte_end":120874,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120879,"byte_end":120923,"line_start":1643,"line_end":1643,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120928,"byte_end":120933,"line_start":1644,"line_end":1644,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":120938,"byte_end":120945,"line_start":1645,"line_end":1645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121735,"byte_end":121742,"line_start":1671,"line_end":1671,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121076,"byte_end":121136,"line_start":1650,"line_end":1650,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121141,"byte_end":121144,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121149,"byte_end":121190,"line_start":1652,"line_end":1652,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121195,"byte_end":121198,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121203,"byte_end":121215,"line_start":1654,"line_end":1654,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121220,"byte_end":121223,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ `get_mut` panics if there are no values associated with the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121228,"byte_end":121298,"line_start":1656,"line_end":1656,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121303,"byte_end":121306,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121311,"byte_end":121325,"line_start":1658,"line_end":1658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121330,"byte_end":121333,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121338,"byte_end":121345,"line_start":1660,"line_end":1660,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121350,"byte_end":121379,"line_start":1661,"line_end":1661,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121384,"byte_end":121425,"line_start":1662,"line_end":1662,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121430,"byte_end":121485,"line_start":1663,"line_end":1663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121490,"byte_end":121493,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121498,"byte_end":121562,"line_start":1665,"line_end":1665,"column_start":5,"column_end":69}},{"value":"/     e.get_mut().set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121567,"byte_end":121607,"line_start":1666,"line_end":1666,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121612,"byte_end":121656,"line_start":1667,"line_end":1667,"column_start":5,"column_end":49}},{"value":"/     assert!(e.get().is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121661,"byte_end":121701,"line_start":1668,"line_end":1668,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121706,"byte_end":121711,"line_start":1669,"line_end":1669,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121716,"byte_end":121723,"line_start":1670,"line_end":1670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122623,"byte_end":122631,"line_start":1698,"line_end":1698,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the **first**\n value.","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the **first**","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121874,"byte_end":121948,"line_start":1675,"line_end":1675,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121953,"byte_end":121963,"line_start":1676,"line_end":1676,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121968,"byte_end":121971,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference is bound to the original map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":121976,"byte_end":122048,"line_start":1678,"line_end":1678,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122053,"byte_end":122056,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122061,"byte_end":122073,"line_start":1680,"line_end":1680,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122078,"byte_end":122081,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ `into_mut` panics if there are no values associated with the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122086,"byte_end":122157,"line_start":1682,"line_end":1682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122162,"byte_end":122165,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122170,"byte_end":122184,"line_start":1684,"line_end":1684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122189,"byte_end":122192,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122197,"byte_end":122204,"line_start":1686,"line_end":1686,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122209,"byte_end":122238,"line_start":1687,"line_end":1687,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122243,"byte_end":122284,"line_start":1688,"line_end":1688,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122289,"byte_end":122344,"line_start":1689,"line_end":1689,"column_start":5,"column_end":60}},{"value":"/ map.append(\"host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122349,"byte_end":122404,"line_start":1690,"line_end":1690,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122409,"byte_end":122412,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122417,"byte_end":122477,"line_start":1692,"line_end":1692,"column_start":5,"column_end":65}},{"value":"/     e.into_mut().set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122482,"byte_end":122523,"line_start":1693,"line_end":1693,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122528,"byte_end":122533,"line_start":1694,"line_end":1694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122538,"byte_end":122541,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"host\").unwrap().is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122546,"byte_end":122599,"line_start":1696,"line_end":1696,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122604,"byte_end":122611,"line_start":1697,"line_end":1697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123426,"byte_end":123432,"line_start":1721,"line_end":1721,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, MetadataValue<VE>) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122762,"byte_end":122794,"line_start":1702,"line_end":1702,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122799,"byte_end":122802,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ All previous values associated with the entry are removed and the first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122807,"byte_end":122882,"line_start":1704,"line_end":1704,"column_start":5,"column_end":80}},{"value":"/ one is returned. See `insert_mult` for an API that returns all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122887,"byte_end":122961,"line_start":1705,"line_end":1705,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122966,"byte_end":122969,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122974,"byte_end":122988,"line_start":1707,"line_end":1707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":122993,"byte_end":122996,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123001,"byte_end":123008,"line_start":1709,"line_end":1709,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123013,"byte_end":123042,"line_start":1710,"line_end":1710,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123047,"byte_end":123084,"line_start":1711,"line_end":1711,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123089,"byte_end":123144,"line_start":1712,"line_end":1712,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123149,"byte_end":123152,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123157,"byte_end":123221,"line_start":1714,"line_end":1714,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert(\"earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123226,"byte_end":123284,"line_start":1715,"line_end":1715,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(\"hello.world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123289,"byte_end":123329,"line_start":1716,"line_end":1716,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123334,"byte_end":123339,"line_start":1717,"line_end":1717,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123344,"byte_end":123347,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123352,"byte_end":123402,"line_start":1719,"line_end":1719,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123407,"byte_end":123414,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124442,"byte_end":124453,"line_start":1748,"line_end":1748,"column_start":12,"column_end":23},"name":"insert_mult","qualname":"<OccupiedEntry>::insert_mult","value":"pub fn insert_mult(&mut Self, MetadataValue<VE>) -> ValueDrain<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123628,"byte_end":123660,"line_start":1726,"line_end":1726,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123665,"byte_end":123668,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ This function does the same as `insert` except it returns an iterator","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123673,"byte_end":123746,"line_start":1728,"line_end":1728,"column_start":5,"column_end":78}},{"value":"/ that yields all values previously associated with the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123751,"byte_end":123813,"line_start":1729,"line_end":1729,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123818,"byte_end":123821,"line_start":1730,"line_end":1730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123826,"byte_end":123840,"line_start":1731,"line_end":1731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123845,"byte_end":123848,"line_start":1732,"line_end":1732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123853,"byte_end":123860,"line_start":1733,"line_end":1733,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123865,"byte_end":123894,"line_start":1734,"line_end":1734,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123899,"byte_end":123936,"line_start":1735,"line_end":1735,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123941,"byte_end":123990,"line_start":1736,"line_end":1736,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"world2\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":123995,"byte_end":124045,"line_start":1737,"line_end":1737,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124050,"byte_end":124053,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124058,"byte_end":124122,"line_start":1739,"line_end":1739,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert_mult(\"earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124127,"byte_end":124190,"line_start":1740,"line_end":1740,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(\"world\", prev.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124195,"byte_end":124245,"line_start":1741,"line_end":1741,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(\"world2\", prev.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124250,"byte_end":124301,"line_start":1742,"line_end":1742,"column_start":5,"column_end":56}},{"value":"/     assert!(prev.next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124306,"byte_end":124345,"line_start":1743,"line_end":1743,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124350,"byte_end":124355,"line_start":1744,"line_end":1744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124360,"byte_end":124363,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124368,"byte_end":124418,"line_start":1746,"line_end":1746,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124423,"byte_end":124430,"line_start":1747,"line_end":1747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125350,"byte_end":125356,"line_start":1776,"line_end":1776,"column_start":12,"column_end":18},"name":"append","qualname":"<OccupiedEntry>::append","value":"pub fn append(&mut Self, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124647,"byte_end":124683,"line_start":1755,"line_end":1755,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124688,"byte_end":124691,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ The new value is appended to the end of the entry's value list. All","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124696,"byte_end":124767,"line_start":1757,"line_end":1757,"column_start":5,"column_end":76}},{"value":"/ previous values associated with the entry are retained.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124772,"byte_end":124831,"line_start":1758,"line_end":1758,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124836,"byte_end":124839,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124844,"byte_end":124858,"line_start":1760,"line_end":1760,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124863,"byte_end":124866,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124871,"byte_end":124878,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124883,"byte_end":124912,"line_start":1763,"line_end":1763,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124917,"byte_end":124954,"line_start":1764,"line_end":1764,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":124959,"byte_end":125008,"line_start":1765,"line_end":1765,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125013,"byte_end":125016,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125021,"byte_end":125085,"line_start":1767,"line_end":1767,"column_start":5,"column_end":69}},{"value":"/     e.append(\"earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125090,"byte_end":125133,"line_start":1768,"line_end":1768,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125138,"byte_end":125143,"line_start":1769,"line_end":1769,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125148,"byte_end":125151,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"host\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125156,"byte_end":125193,"line_start":1771,"line_end":1771,"column_start":5,"column_end":42}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125198,"byte_end":125228,"line_start":1772,"line_end":1772,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125233,"byte_end":125277,"line_start":1773,"line_end":1773,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125282,"byte_end":125326,"line_start":1774,"line_end":1774,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125331,"byte_end":125338,"line_start":1775,"line_end":1775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126058,"byte_end":126064,"line_start":1799,"line_end":1799,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125446,"byte_end":125480,"line_start":1780,"line_end":1780,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125485,"byte_end":125488,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ All values associated with the entry are removed and the first one is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125493,"byte_end":125566,"line_start":1782,"line_end":1782,"column_start":5,"column_end":78}},{"value":"/ returned. See `remove_entry_mult` for an API that returns all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125571,"byte_end":125644,"line_start":1783,"line_end":1783,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125649,"byte_end":125652,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125657,"byte_end":125671,"line_start":1785,"line_end":1785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125676,"byte_end":125679,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125684,"byte_end":125691,"line_start":1787,"line_end":1787,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125696,"byte_end":125725,"line_start":1788,"line_end":1788,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125730,"byte_end":125767,"line_start":1789,"line_end":1789,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125772,"byte_end":125821,"line_start":1790,"line_end":1790,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125826,"byte_end":125829,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125834,"byte_end":125894,"line_start":1792,"line_end":1792,"column_start":5,"column_end":65}},{"value":"/     let mut prev = e.remove();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125899,"byte_end":125933,"line_start":1793,"line_end":1793,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125938,"byte_end":125972,"line_start":1794,"line_end":1794,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125977,"byte_end":125982,"line_start":1795,"line_end":1795,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125987,"byte_end":125990,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":125995,"byte_end":126034,"line_start":1797,"line_end":1797,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126039,"byte_end":126046,"line_start":1798,"line_end":1798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126895,"byte_end":126907,"line_start":1825,"line_end":1825,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (MetadataKey<VE>, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126204,"byte_end":126238,"line_start":1804,"line_end":1804,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126243,"byte_end":126246,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126251,"byte_end":126323,"line_start":1806,"line_end":1806,"column_start":5,"column_end":77}},{"value":"/ first one is returned. See `remove_entry_mult` for an API that returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126328,"byte_end":126402,"line_start":1807,"line_end":1807,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126407,"byte_end":126422,"line_start":1808,"line_end":1808,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126427,"byte_end":126430,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126435,"byte_end":126449,"line_start":1810,"line_end":1810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126454,"byte_end":126457,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126462,"byte_end":126469,"line_start":1812,"line_end":1812,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126474,"byte_end":126503,"line_start":1813,"line_end":1813,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126508,"byte_end":126545,"line_start":1814,"line_end":1814,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126550,"byte_end":126599,"line_start":1815,"line_end":1815,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126604,"byte_end":126607,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126612,"byte_end":126672,"line_start":1817,"line_end":1817,"column_start":5,"column_end":65}},{"value":"/     let (key, mut prev) = e.remove_entry();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126677,"byte_end":126724,"line_start":1818,"line_end":1818,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(\"host\", key.as_str());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126729,"byte_end":126770,"line_start":1819,"line_end":1819,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126775,"byte_end":126809,"line_start":1820,"line_end":1820,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126814,"byte_end":126819,"line_start":1821,"line_end":1821,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126824,"byte_end":126827,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126832,"byte_end":126871,"line_start":1823,"line_end":1823,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":126876,"byte_end":126883,"line_start":1824,"line_end":1824,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127309,"byte_end":127326,"line_start":1837,"line_end":1837,"column_start":12,"column_end":29},"name":"remove_entry_mult","qualname":"<OccupiedEntry>::remove_entry_mult","value":"pub fn remove_entry_mult(Self) -> (MetadataKey<VE>, ValueDrain)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127164,"byte_end":127198,"line_start":1833,"line_end":1833,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127203,"byte_end":127206,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127211,"byte_end":127279,"line_start":1835,"line_end":1835,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127284,"byte_end":127297,"line_start":1836,"line_end":1836,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128303,"byte_end":128307,"line_start":1867,"line_end":1867,"column_start":12,"column_end":16},"name":"iter","qualname":"<OccupiedEntry>::iter","value":"pub fn iter(&Self) -> ValueIter<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127646,"byte_end":127716,"line_start":1848,"line_end":1848,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127721,"byte_end":127724,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127729,"byte_end":127772,"line_start":1850,"line_end":1850,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127777,"byte_end":127780,"line_start":1851,"line_end":1851,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127785,"byte_end":127799,"line_start":1852,"line_end":1852,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127804,"byte_end":127807,"line_start":1853,"line_end":1853,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127812,"byte_end":127819,"line_start":1854,"line_end":1854,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127824,"byte_end":127853,"line_start":1855,"line_end":1855,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127858,"byte_end":127895,"line_start":1856,"line_end":1856,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127900,"byte_end":127949,"line_start":1857,"line_end":1857,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":127954,"byte_end":128003,"line_start":1858,"line_end":1858,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128008,"byte_end":128011,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128016,"byte_end":128076,"line_start":1860,"line_end":1860,"column_start":5,"column_end":65}},{"value":"/     let mut iter = e.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128081,"byte_end":128113,"line_start":1861,"line_end":1861,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(&\"world\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128118,"byte_end":128169,"line_start":1862,"line_end":1862,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"earth\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128174,"byte_end":128225,"line_start":1863,"line_end":1863,"column_start":5,"column_end":56}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128230,"byte_end":128269,"line_start":1864,"line_end":1864,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128274,"byte_end":128279,"line_start":1865,"line_end":1865,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128284,"byte_end":128291,"line_start":1866,"line_end":1866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129225,"byte_end":129233,"line_start":1898,"line_end":1898,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OccupiedEntry>::iter_mut","value":"pub fn iter_mut(&mut Self) -> ValueIterMut<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator mutably visiting all values associated with the\n entry.","sig":null,"attributes":[{"value":"/ Returns an iterator mutably visiting all values associated with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128457,"byte_end":128528,"line_start":1874,"line_end":1874,"column_start":5,"column_end":76}},{"value":"/ entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128533,"byte_end":128543,"line_start":1875,"line_end":1875,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128548,"byte_end":128551,"line_start":1876,"line_end":1876,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128556,"byte_end":128599,"line_start":1877,"line_end":1877,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128604,"byte_end":128607,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128612,"byte_end":128626,"line_start":1879,"line_end":1879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128631,"byte_end":128634,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128639,"byte_end":128646,"line_start":1881,"line_end":1881,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128651,"byte_end":128680,"line_start":1882,"line_end":1882,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128685,"byte_end":128726,"line_start":1883,"line_end":1883,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128731,"byte_end":128780,"line_start":1884,"line_end":1884,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128785,"byte_end":128834,"line_start":1885,"line_end":1885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128839,"byte_end":128842,"line_start":1886,"line_end":1886,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128847,"byte_end":128911,"line_start":1887,"line_end":1887,"column_start":5,"column_end":69}},{"value":"/     for e in e.iter_mut() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128916,"byte_end":128947,"line_start":1888,"line_end":1888,"column_start":5,"column_end":36}},{"value":"/         e.set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128952,"byte_end":128986,"line_start":1889,"line_end":1889,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":128991,"byte_end":129000,"line_start":1890,"line_end":1890,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129005,"byte_end":129010,"line_start":1891,"line_end":1891,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129015,"byte_end":129018,"line_start":1892,"line_end":1892,"column_start":5,"column_end":8}},{"value":"/ let mut values = map.get_all(\"host\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129023,"byte_end":129064,"line_start":1893,"line_end":1893,"column_start":5,"column_end":46}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129069,"byte_end":129099,"line_start":1894,"line_end":1894,"column_start":5,"column_end":35}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129104,"byte_end":129150,"line_start":1895,"line_end":1895,"column_start":5,"column_end":51}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129155,"byte_end":129201,"line_start":1896,"line_end":1896,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129206,"byte_end":129213,"line_start":1897,"line_end":1897,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130938,"byte_end":130942,"line_start":1960,"line_end":1960,"column_start":12,"column_end":16},"name":"iter","qualname":"<GetAll>::iter","value":"pub fn iter(&Self) -> ValueIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130295,"byte_end":130365,"line_start":1942,"line_end":1942,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130370,"byte_end":130373,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130378,"byte_end":130421,"line_start":1944,"line_end":1944,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130426,"byte_end":130429,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130434,"byte_end":130448,"line_start":1946,"line_end":1946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130453,"byte_end":130456,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130461,"byte_end":130468,"line_start":1948,"line_end":1948,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130473,"byte_end":130502,"line_start":1949,"line_end":1949,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130507,"byte_end":130544,"line_start":1950,"line_end":1950,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130549,"byte_end":130606,"line_start":1951,"line_end":1951,"column_start":5,"column_end":62}},{"value":"/ map.append(\"x-host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130611,"byte_end":130668,"line_start":1952,"line_end":1952,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130673,"byte_end":130676,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130681,"byte_end":130720,"line_start":1954,"line_end":1954,"column_start":5,"column_end":44}},{"value":"/ let mut iter = values.iter();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130725,"byte_end":130758,"line_start":1955,"line_end":1955,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&\"hello.world\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130763,"byte_end":130816,"line_start":1956,"line_end":1956,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(&\"hello.earth\", iter.next().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130821,"byte_end":130874,"line_start":1957,"line_end":1957,"column_start":5,"column_end":58}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130879,"byte_end":130914,"line_start":1958,"line_end":1958,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130919,"byte_end":130926,"line_start":1959,"line_end":1959,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":917},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132258,"byte_end":132273,"line_start":2009,"line_end":2009,"column_start":15,"column_end":30},"name":"IntoMetadataKey","qualname":"::metadata::map::into_metadata_key::IntoMetadataKey","value":"IntoMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as insert keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as insert keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132141,"byte_end":132215,"line_start":2007,"line_end":2007,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132220,"byte_end":132243,"line_start":2008,"line_end":2008,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":919},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132713,"byte_end":132719,"line_start":2019,"line_end":2019,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::into_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132775,"byte_end":132781,"line_start":2021,"line_end":2021,"column_start":12,"column_end":18},"name":"insert","qualname":"::metadata::map::into_metadata_key::Sealed::insert","value":"pub fn insert(Self, &mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132912,"byte_end":132918,"line_start":2025,"line_end":2025,"column_start":12,"column_end":18},"name":"append","qualname":"::metadata::map::into_metadata_key::Sealed::append","value":"pub fn append(Self, &mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":971},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":135535,"byte_end":135548,"line_start":2108,"line_end":2108,"column_start":15,"column_end":28},"name":"AsMetadataKey","qualname":"::metadata::map::as_metadata_key::AsMetadataKey","value":"AsMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":135418,"byte_end":135492,"line_start":2106,"line_end":2106,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":135497,"byte_end":135520,"line_start":2107,"line_end":2107,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":973},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":135965,"byte_end":135971,"line_start":2118,"line_end":2118,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136027,"byte_end":136030,"line_start":2120,"line_end":2120,"column_start":12,"column_end":15},"name":"get","qualname":"::metadata::map::as_metadata_key::Sealed::get","value":"pub fn get(Self, &MetadataMap) -> Option<&MetadataValue<VE>>","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136122,"byte_end":136129,"line_start":2123,"line_end":2123,"column_start":12,"column_end":19},"name":"get_mut","qualname":"::metadata::map::as_metadata_key::Sealed::get_mut","value":"pub fn get_mut(Self, &mut MetadataMap) -> Option<&mut MetadataValue<VE>>","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136229,"byte_end":136236,"line_start":2126,"line_end":2126,"column_start":12,"column_end":19},"name":"get_all","qualname":"::metadata::map::as_metadata_key::Sealed::get_all","value":"pub fn get_all(Self, &MetadataMap) -> Option<GetAll<, HeaderValue>>","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136333,"byte_end":136338,"line_start":2129,"line_end":2129,"column_start":12,"column_end":17},"name":"entry","qualname":"::metadata::map::as_metadata_key::Sealed::entry","value":"pub fn entry(Self, &mut MetadataMap)\n-> Result<Entry<, HeaderValue>, InvalidMetadataKey>","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136470,"byte_end":136476,"line_start":2133,"line_end":2133,"column_start":12,"column_end":18},"name":"remove","qualname":"::metadata::map::as_metadata_key::Sealed::remove","value":"pub fn remove(Self, &mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1045},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145326,"byte_end":145355,"line_start":2415,"line_end":2415,"column_start":15,"column_end":44},"name":"AsEncodingAgnosticMetadataKey","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::AsEncodingAgnosticMetadataKey","value":"AsEncodingAgnosticMetadataKey: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`, for operations that don't expose the actual value.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145158,"byte_end":145232,"line_start":2413,"line_end":2413,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`, for operations that don't expose the actual value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145237,"byte_end":145311,"line_start":2414,"line_end":2414,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1046},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145796,"byte_end":145802,"line_start":2426,"line_end":2426,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1047}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145839,"byte_end":145851,"line_start":2428,"line_end":2428,"column_start":12,"column_end":24},"name":"contains_key","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed::contains_key","value":"pub fn contains_key(&Self, &MetadataMap) -> bool","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3875},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155508,"byte_end":155521,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"MetadataValue","qualname":"::metadata::value::MetadataValue","value":"MetadataValue {  }","parent":null,"children":[{"krate":0,"index":3877},{"krate":0,"index":3878}],"decl_id":null,"docs":" Represents a custom metadata field value.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155261,"byte_end":155306,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155307,"byte_end":155310,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `MetadataValue` is used as the [`MetadataMap`] value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155311,"byte_end":155368,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155369,"byte_end":155372,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155373,"byte_end":155413,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155414,"byte_end":155458,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155476,"byte_end":155496,"line_start":23,"line_end":23,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155979,"byte_end":155989,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"ToStrError","qualname":"::metadata::value::ToStrError","value":"ToStrError {  }","parent":null,"children":[{"krate":0,"index":3883}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` to a string representation.","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` to a string representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155739,"byte_end":155821,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155822,"byte_end":155825,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Metadata field values may contain opaque bytes, in which case it is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155826,"byte_end":155901,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ possible to represent the value as a string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":155902,"byte_end":155950,"line_start":34,"line_end":34,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1122},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156048,"byte_end":156066,"line_start":41,"line_end":41,"column_start":10,"column_end":28},"name":"AsciiMetadataValue","qualname":"::metadata::value::AsciiMetadataValue","value":"MetadataValue<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156010,"byte_end":156038,"line_start":40,"line_end":40,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156129,"byte_end":156148,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"BinaryMetadataValue","qualname":"::metadata::value::BinaryMetadataValue","value":"MetadataValue<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata value.\n","sig":null,"attributes":[{"value":"/ A binary metadata value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156091,"byte_end":156119,"line_start":42,"line_end":42,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157081,"byte_end":157092,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataValue<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a static string to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Convert a static string to a `MetadataValue`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156223,"byte_end":156272,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156277,"byte_end":156280,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function will not perform any copying, however the string is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156285,"byte_end":156354,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ checked to ensure that no invalid characters are present.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156359,"byte_end":156420,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156425,"byte_end":156428,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ For Ascii values, only visible ASCII characters (32-127) are permitted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156433,"byte_end":156508,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ For Binary values, the string must be valid base64.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156513,"byte_end":156568,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156573,"byte_end":156576,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156581,"byte_end":156593,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156598,"byte_end":156601,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument contains invalid metadata value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156606,"byte_end":156678,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ characters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156683,"byte_end":156698,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156703,"byte_end":156706,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156711,"byte_end":156725,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156730,"byte_end":156733,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156738,"byte_end":156745,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156750,"byte_end":156779,"line_start":62,"line_end":62,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156784,"byte_end":156839,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156844,"byte_end":156873,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156878,"byte_end":156885,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156890,"byte_end":156893,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156898,"byte_end":156905,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156910,"byte_end":156939,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_static(\"SGVsbG8hIQ==\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156944,"byte_end":157007,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(val, \"Hello!!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157012,"byte_end":157043,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157048,"byte_end":157055,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157060,"byte_end":157069,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158239,"byte_end":158253,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"try_from_bytes","qualname":"<MetadataValue<VE>>::try_from_bytes","value":"pub fn try_from_bytes(&[u8]) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a byte slice to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a byte slice to a `MetadataValue`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157242,"byte_end":157299,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157304,"byte_end":157307,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ For Ascii metadata values, If the argument contains invalid metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157312,"byte_end":157384,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157389,"byte_end":157463,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157468,"byte_end":157524,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157529,"byte_end":157532,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ For Binary metadata values this method cannot fail. See also the Binary","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157537,"byte_end":157612,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ only version of this method `from_bytes`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157617,"byte_end":157662,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157667,"byte_end":157670,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157675,"byte_end":157748,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157753,"byte_end":157808,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157813,"byte_end":157816,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157821,"byte_end":157835,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157840,"byte_end":157843,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157848,"byte_end":157855,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157860,"byte_end":157889,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"hello\\xfa\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157894,"byte_end":157966,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":157971,"byte_end":158010,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158015,"byte_end":158022,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158027,"byte_end":158030,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158035,"byte_end":158055,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158060,"byte_end":158063,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158068,"byte_end":158075,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158080,"byte_end":158109,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"\\n\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158114,"byte_end":158170,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158175,"byte_end":158201,"line_start":105,"line_end":105,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158206,"byte_end":158213,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158218,"byte_end":158227,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159184,"byte_end":159195,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<MetadataValue<VE>>::from_shared","value":"pub fn from_shared(Bytes) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a `Bytes` buffer to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a `Bytes` buffer to a `MetadataValue`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158449,"byte_end":158510,"line_start":115,"line_end":115,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158515,"byte_end":158518,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Ascii>`, if the argument contains invalid metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158523,"byte_end":158596,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158601,"byte_end":158675,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158680,"byte_end":158736,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158741,"byte_end":158744,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Binary>`, if the argument is not valid base64, an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158749,"byte_end":158821,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ error is returned. In use cases where the input is not base64 encoded,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158826,"byte_end":158900,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ use `from_bytes`; if the value has to be encoded it's not possible to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158905,"byte_end":158978,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ share the memory anyways.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":158983,"byte_end":159012,"line_start":124,"line_end":124,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159017,"byte_end":159020,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159025,"byte_end":159098,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159103,"byte_end":159158,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159163,"byte_end":159172,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159757,"byte_end":159778,"line_start":145,"line_end":145,"column_start":19,"column_end":40},"name":"from_shared_unchecked","qualname":"<MetadataValue<VE>>::from_shared_unchecked","value":"pub unsafe fn from_shared_unchecked(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Bytes` directly into a `MetadataValue` without validating.\n For MetadataValue<Binary> the provided parameter must be base64\n encoded without padding bytes at the end.","sig":null,"attributes":[{"value":"/ Convert a `Bytes` directly into a `MetadataValue` without validating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159392,"byte_end":159465,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ For MetadataValue<Binary> the provided parameter must be base64","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159470,"byte_end":159537,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ encoded without padding bytes at the end.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159542,"byte_end":159587,"line_start":138,"line_end":138,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159592,"byte_end":159595,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159600,"byte_end":159612,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159617,"byte_end":159620,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function does NOT validate that illegal bytes are not contained","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159625,"byte_end":159697,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ within the buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159702,"byte_end":159724,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159729,"byte_end":159738,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160322,"byte_end":160330,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataValue<VE>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `MetadataValue` has a length of zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the `MetadataValue` has a length of zero bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":159946,"byte_end":160013,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160018,"byte_end":160021,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160026,"byte_end":160040,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160045,"byte_end":160048,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160053,"byte_end":160060,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160065,"byte_end":160094,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160099,"byte_end":160149,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/ assert!(val.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160154,"byte_end":160182,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160187,"byte_end":160190,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160195,"byte_end":160250,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/ assert!(!val.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160255,"byte_end":160284,"line_start":162,"line_end":162,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160289,"byte_end":160296,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160301,"byte_end":160310,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161000,"byte_end":161008,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MetadataValue<VE>>::to_bytes","value":"pub fn to_bytes(&Self) -> Result<Bytes, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a Bytes buffer. This method cannot\n fail for Ascii values. For Ascii values, `as_bytes` is more convenient\n to use.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a Bytes buffer. This method cannot","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160403,"byte_end":160471,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ fail for Ascii values. For Ascii values, `as_bytes` is more convenient","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160476,"byte_end":160550,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ to use.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160555,"byte_end":160566,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160571,"byte_end":160574,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160579,"byte_end":160593,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160598,"byte_end":160601,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160606,"byte_end":160613,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160618,"byte_end":160647,"line_start":176,"line_end":176,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160652,"byte_end":160707,"line_start":177,"line_end":177,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160712,"byte_end":160771,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160776,"byte_end":160783,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160788,"byte_end":160791,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160796,"byte_end":160803,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160808,"byte_end":160837,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160842,"byte_end":160898,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160903,"byte_end":160962,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160967,"byte_end":160974,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":160979,"byte_end":160988,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161526,"byte_end":161539,"line_start":206,"line_end":206,"column_start":12,"column_end":25},"name":"set_sensitive","qualname":"<MetadataValue<VE>>::set_sensitive","value":"pub fn set_sensitive(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Mark that the metadata value represents sensitive information.","sig":null,"attributes":[{"value":"/ Mark that the metadata value represents sensitive information.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161115,"byte_end":161181,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161186,"byte_end":161189,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161194,"byte_end":161208,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161213,"byte_end":161216,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161221,"byte_end":161228,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161233,"byte_end":161262,"line_start":196,"line_end":196,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161267,"byte_end":161330,"line_start":197,"line_end":197,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161335,"byte_end":161338,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161343,"byte_end":161371,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161376,"byte_end":161408,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161413,"byte_end":161416,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161421,"byte_end":161450,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161455,"byte_end":161488,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161493,"byte_end":161500,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161505,"byte_end":161514,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162412,"byte_end":162424,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"is_sensitive","qualname":"<MetadataValue<VE>>::is_sensitive","value":"pub fn is_sensitive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value represents sensitive data.","sig":null,"attributes":[{"value":"/ Returns `true` if the value represents sensitive data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161614,"byte_end":161672,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161677,"byte_end":161680,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Sensitive data could represent passwords or other data that should not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161685,"byte_end":161759,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ be stored on disk or in memory. This setting can be used by components","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161764,"byte_end":161838,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ like caches to avoid storing the value. HPACK encoders must set the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161843,"byte_end":161914,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/ metadata field to never index when `is_sensitive` returns true.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161919,"byte_end":161986,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161991,"byte_end":161994,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that sensitivity is not factored into equality or ordering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":161999,"byte_end":162067,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162072,"byte_end":162075,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162080,"byte_end":162094,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162099,"byte_end":162102,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162107,"byte_end":162114,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162119,"byte_end":162148,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162153,"byte_end":162216,"line_start":223,"line_end":223,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162221,"byte_end":162224,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162229,"byte_end":162257,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162262,"byte_end":162294,"line_start":226,"line_end":226,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162299,"byte_end":162302,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162307,"byte_end":162336,"line_start":228,"line_end":228,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162341,"byte_end":162374,"line_start":229,"line_end":229,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162379,"byte_end":162386,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162391,"byte_end":162400,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":163015,"byte_end":163031,"line_start":253,"line_end":253,"column_start":12,"column_end":28},"name":"as_encoded_bytes","qualname":"<MetadataValue<VE>>::as_encoded_bytes","value":"pub fn as_encoded_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, the\n return value is base64 encoded.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162487,"byte_end":162557,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ return value is base64 encoded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162562,"byte_end":162597,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162602,"byte_end":162605,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162610,"byte_end":162624,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162629,"byte_end":162632,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162637,"byte_end":162644,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162649,"byte_end":162678,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162683,"byte_end":162738,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162743,"byte_end":162792,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162797,"byte_end":162804,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162809,"byte_end":162812,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162817,"byte_end":162824,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162829,"byte_end":162858,"line_start":248,"line_end":248,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"Hello!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162863,"byte_end":162920,"line_start":249,"line_end":249,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"SGVsbG8h\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162925,"byte_end":162977,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162982,"byte_end":162989,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":162994,"byte_end":163003,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165264,"byte_end":165272,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"from_str","qualname":"<MetadataValue<Ascii>>::from_str","value":"pub fn from_str(&str) -> Result<Self, InvalidMetadataValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a string to a `MetadataValue<Ascii>`.","sig":null,"attributes":[{"value":"/ Attempt to convert a string to a `MetadataValue<Ascii>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164350,"byte_end":164410,"line_start":288,"line_end":288,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164415,"byte_end":164418,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If the argument contains invalid metadata value characters, an error is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164423,"byte_end":164498,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ returned. Only visible ASCII characters (32-127) are permitted. Use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164503,"byte_end":164574,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ `from_bytes` to create a `MetadataValue` that includes opaque octets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164579,"byte_end":164651,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ (128-255).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164656,"byte_end":164670,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164675,"byte_end":164678,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be replaced in the future by a `TryFrom`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164683,"byte_end":164756,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ implementation once the trait is stabilized in std.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164761,"byte_end":164816,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164821,"byte_end":164824,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164829,"byte_end":164843,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164848,"byte_end":164851,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164856,"byte_end":164863,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164868,"byte_end":164897,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"hello\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164902,"byte_end":164963,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164968,"byte_end":164997,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165002,"byte_end":165009,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165014,"byte_end":165017,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165022,"byte_end":165042,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165047,"byte_end":165050,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165055,"byte_end":165062,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165067,"byte_end":165096,"line_start":309,"line_end":309,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"\\n\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165101,"byte_end":165150,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165155,"byte_end":165181,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165186,"byte_end":165193,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165198,"byte_end":165238,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165243,"byte_end":165252,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165991,"byte_end":165999,"line_start":337,"line_end":337,"column_start":12,"column_end":20},"name":"from_key","qualname":"<MetadataValue<Ascii>>::from_key","value":"pub fn from_key<KeyVE: ValueEncoding>(MetadataKey<KeyVE>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a MetadataKey into a MetadataValue<Ascii>.","sig":null,"attributes":[{"value":"/ Converts a MetadataKey into a MetadataValue<Ascii>.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165548,"byte_end":165603,"line_start":324,"line_end":324,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165608,"byte_end":165611,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Since every valid MetadataKey is a valid MetadataValue this is done","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165616,"byte_end":165687,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/ infallibly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165692,"byte_end":165707,"line_start":327,"line_end":327,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165712,"byte_end":165715,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165720,"byte_end":165734,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165739,"byte_end":165742,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165747,"byte_end":165754,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165759,"byte_end":165788,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_key::<Ascii>(\"accept\".parse().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165793,"byte_end":165872,"line_start":333,"line_end":333,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(val, AsciiMetadataValue::try_from_bytes(b\"accept\").unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165877,"byte_end":165953,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165958,"byte_end":165965,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":165970,"byte_end":165979,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166628,"byte_end":166631,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataValue<Ascii>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of `self`, in bytes.","sig":null,"attributes":[{"value":"/ Returns the length of `self`, in bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166087,"byte_end":166130,"line_start":341,"line_end":341,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166135,"byte_end":166138,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This method is not available for MetadataValue<Binary> because that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166143,"byte_end":166214,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/ cannot be implemented in constant time, which most people would probably","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166219,"byte_end":166295,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ expect. To get the length of MetadataValue<Binary>, convert it to a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166300,"byte_end":166371,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/ Bytes value and measure its length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166376,"byte_end":166415,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166420,"byte_end":166423,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166428,"byte_end":166442,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166447,"byte_end":166450,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166455,"byte_end":166462,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166467,"byte_end":166496,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166501,"byte_end":166556,"line_start":352,"line_end":352,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.len(), 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166561,"byte_end":166590,"line_start":353,"line_end":353,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166595,"byte_end":166602,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166607,"byte_end":166616,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167104,"byte_end":167110,"line_start":373,"line_end":373,"column_start":12,"column_end":18},"name":"to_str","qualname":"<MetadataValue<Ascii>>::to_str","value":"pub fn to_str(&Self) -> Result<&str, ToStrError>","parent":null,"children":[],"decl_id":null,"docs":" Yields a `&str` slice if the `MetadataValue` only contains visible ASCII\n chars.","sig":null,"attributes":[{"value":"/ Yields a `&str` slice if the `MetadataValue` only contains visible ASCII","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166686,"byte_end":166762,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ chars.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166767,"byte_end":166777,"line_start":361,"line_end":361,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166782,"byte_end":166785,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This function will perform a scan of the metadata value, checking all the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166790,"byte_end":166867,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ characters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166872,"byte_end":166887,"line_start":364,"line_end":364,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166892,"byte_end":166895,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166900,"byte_end":166914,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166919,"byte_end":166922,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166927,"byte_end":166934,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166939,"byte_end":166968,"line_start":369,"line_end":369,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":166973,"byte_end":167028,"line_start":370,"line_end":370,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_str().unwrap(), \"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167033,"byte_end":167080,"line_start":371,"line_end":371,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167085,"byte_end":167092,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167533,"byte_end":167541,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MetadataValue<Ascii>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, use\n `to_bytes`.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167218,"byte_end":167288,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ `to_bytes`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167293,"byte_end":167308,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167313,"byte_end":167316,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167321,"byte_end":167335,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167340,"byte_end":167343,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167348,"byte_end":167355,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167360,"byte_end":167389,"line_start":383,"line_end":383,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167394,"byte_end":167449,"line_start":384,"line_end":384,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_bytes(), b\"hello\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167454,"byte_end":167495,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167500,"byte_end":167507,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167512,"byte_end":167521,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167914,"byte_end":167924,"line_start":404,"line_end":404,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataValue<Binary>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a byte slice to a `MetadataValue<Binary>`.","sig":null,"attributes":[{"value":"/ Convert a byte slice to a `MetadataValue<Binary>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167632,"byte_end":167686,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167691,"byte_end":167694,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167699,"byte_end":167713,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167718,"byte_end":167721,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167726,"byte_end":167733,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167738,"byte_end":167767,"line_start":399,"line_end":399,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\\xfa\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167772,"byte_end":167832,"line_start":400,"line_end":400,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167837,"byte_end":167876,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167881,"byte_end":167888,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167893,"byte_end":167902,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1334},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52742,"byte_end":52748,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"errors","qualname":"::metadata::errors","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1344}],"decl_id":null,"docs":" The metadata::errors module contains types for errors that can occur\n while handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ The metadata::errors module contains types for errors that can occur","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52620,"byte_end":52692,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ while handling gRPC custom metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/mod.rs","byte_start":52693,"byte_end":52733,"line_start":37,"line_end":37,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1347},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1451},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541}],"decl_id":null,"docs":" Generic server implementation.","sig":null,"attributes":[{"value":"/ Generic server implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181574,"byte_end":181608,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181609,"byte_end":181612,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC server. It","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181613,"byte_end":181689,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC server handler.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181690,"byte_end":181740,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181741,"byte_end":181744,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The items in this module are generally designed to be used by some codegen","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181745,"byte_end":181823,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ tool that will provide the user some custom way to implement the server that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181824,"byte_end":181904,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ will implement the proper gRPC service. Thusly, they are a bit hard to use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181905,"byte_end":181983,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ by hand.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/mod.rs","byte_start":181984,"byte_end":181996,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1405},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183203,"byte_end":183207,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::server::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":1407}],"decl_id":null,"docs":" A gRPC Server handler.","sig":null,"attributes":[{"value":"/ A gRPC Server handler.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":182803,"byte_end":182829,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":182830,"byte_end":182833,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Codec`] and provide utilities to handle","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":182834,"byte_end":182905,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ inbound unary, client side streaming, server side streaming, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":182906,"byte_end":182974,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ bi-directional streaming.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":182975,"byte_end":183004,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183005,"byte_end":183008,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Each request handler method accepts some service that implements the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183009,"byte_end":183081,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ corresponding service trait and a http request that contains some body that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183082,"byte_end":183161,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ implements some [`Body`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183162,"byte_end":183191,"line_start":33,"line_end":33,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183683,"byte_end":183686,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183613,"byte_end":183671,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":185090,"byte_end":185101,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"accept_gzip","qualname":"<Grpc<T>>::accept_gzip","value":"pub fn accept_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":185042,"byte_end":185078,"line_start":93,"line_end":93,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":186241,"byte_end":186250,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"send_gzip","qualname":"<Grpc<T>>::send_gzip","value":"pub fn send_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":186193,"byte_end":186229,"line_start":131,"line_end":131,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":187088,"byte_end":187112,"line_start":163,"line_end":163,"column_start":12,"column_end":36},"name":"apply_compression_config","qualname":"<Grpc<T>>::apply_compression_config","value":"pub fn apply_compression_config(Self, (), ()) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":186990,"byte_end":187026,"line_start":160,"line_end":160,"column_start":5,"column_end":41}},{"value":"allow(unused_variables)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":187050,"byte_end":187076,"line_start":162,"line_end":162,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":187252,"byte_end":187257,"line_start":168,"line_end":168,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: UnaryService<T::Decode, Response = T::Encode>,\nB: Body + Send + 'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a single unary gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":187195,"byte_end":187234,"line_start":167,"line_end":167,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":188820,"byte_end":188836,"line_start":216,"line_end":216,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ServerStreamingService<T::Decode, Response =\nT::Encode>, S::ResponseStream: Send + 'static, B: Body + Send + 'static,\nB::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a server side streaming request.\n","sig":null,"attributes":[{"value":"/ Handle a server side streaming request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":188759,"byte_end":188802,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":190304,"byte_end":190320,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ClientStreamingService<T::Decode, Response =\nT::Encode>, B: Body + Send + 'static, B::Error: Into<crate::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Handle a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a client side streaming gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":190238,"byte_end":190286,"line_start":259,"line_end":259,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":191425,"byte_end":191434,"line_start":296,"line_end":296,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: StreamingService<T::Decode, Response = T::Encode> +\nSend, S::ResponseStream: Send + 'static, B: Body + Send + 'static,\nB::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a bi-directional streaming gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":191356,"byte_end":191407,"line_start":295,"line_end":295,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197091,"byte_end":197103,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"UnaryService","qualname":"::server::service::UnaryService","value":"UnaryService<R>","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":196906,"byte_end":196953,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":196954,"byte_end":196957,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":196958,"byte_end":197036,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ automatically implement `UnaryService`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197037,"byte_end":197080,"line_start":9,"line_end":9,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197157,"byte_end":197165,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::UnaryService::Response","value":"type Response;","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197113,"byte_end":197147,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1477},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197201,"byte_end":197207,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::UnaryService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197172,"byte_end":197191,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197301,"byte_end":197305,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::UnaryService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197273,"byte_end":197293,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1486},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197840,"byte_end":197862,"line_start":37,"line_end":37,"column_start":11,"column_end":33},"name":"ServerStreamingService","qualname":"::server::service::ServerStreamingService","value":"ServerStreamingService<R>","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197645,"byte_end":197692,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197693,"byte_end":197696,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197697,"byte_end":197775,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ServerStreamingService`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197776,"byte_end":197829,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197916,"byte_end":197924,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ServerStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197872,"byte_end":197906,"line_start":38,"line_end":38,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1489},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197981,"byte_end":197995,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::ServerStreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197931,"byte_end":197971,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198078,"byte_end":198084,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ServerStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198049,"byte_end":198068,"line_start":44,"line_end":44,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198184,"byte_end":198188,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ServerStreamingService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198156,"byte_end":198176,"line_start":47,"line_end":47,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1501},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198813,"byte_end":198835,"line_start":69,"line_end":69,"column_start":11,"column_end":33},"name":"ClientStreamingService","qualname":"::server::service::ClientStreamingService","value":"ClientStreamingService<R>","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198618,"byte_end":198665,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198666,"byte_end":198669,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198670,"byte_end":198748,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ClientStreamingService`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198749,"byte_end":198802,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1503},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198889,"byte_end":198897,"line_start":71,"line_end":71,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ClientStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198845,"byte_end":198879,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1504},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198933,"byte_end":198939,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ClientStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198904,"byte_end":198923,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199033,"byte_end":199037,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ClientStreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199005,"byte_end":199025,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1513},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199609,"byte_end":199625,"line_start":96,"line_end":96,"column_start":11,"column_end":27},"name":"StreamingService","qualname":"::server::service::StreamingService","value":"StreamingService<R>","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199420,"byte_end":199467,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199468,"byte_end":199471,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199472,"byte_end":199550,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ automatically implement `StreamingService`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199551,"byte_end":199598,"line_start":95,"line_end":95,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1515},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199679,"byte_end":199687,"line_start":98,"line_end":98,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::StreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199635,"byte_end":199669,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1516},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199744,"byte_end":199758,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::StreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199694,"byte_end":199734,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1517},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199841,"byte_end":199847,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::StreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199812,"byte_end":199831,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199947,"byte_end":199951,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::StreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1513},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199919,"byte_end":199939,"line_start":106,"line_end":106,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1544},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634}],"decl_id":null,"docs":" Utilities for using Tower services with Tonic.\n","sig":null,"attributes":[{"value":"/ Utilities for using Tower services with Tonic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","byte_start":200408,"byte_end":200458,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1545},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interceptor","qualname":"::service::interceptor","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":1588},{"krate":0,"index":1593},{"krate":0,"index":3913},{"krate":0,"index":3918},{"krate":0,"index":3922},{"krate":0,"index":1595},{"krate":0,"index":1599},{"krate":0,"index":1603},{"krate":0,"index":1613},{"krate":0,"index":3965},{"krate":0,"index":3928},{"krate":0,"index":3925},{"krate":0,"index":1617},{"krate":0,"index":4005},{"krate":0,"index":3971},{"krate":0,"index":3980},{"krate":0,"index":3968},{"krate":0,"index":1621}],"decl_id":null,"docs":" gRPC interceptors which are a kind of middleware.","sig":null,"attributes":[{"value":"/ gRPC interceptors which are a kind of middleware.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":200590,"byte_end":200643,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":200644,"byte_end":200647,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":200648,"byte_end":200689,"line_start":3,"line_end":3,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1579},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202229,"byte_end":202240,"line_start":41,"line_end":41,"column_start":11,"column_end":22},"name":"Interceptor","qualname":"::service::interceptor::Interceptor","value":"Interceptor","parent":null,"children":[{"krate":0,"index":1580}],"decl_id":null,"docs":" A gRPC interceptor.","sig":null,"attributes":[{"value":"/ A gRPC interceptor.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":200905,"byte_end":200928,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":200929,"byte_end":200932,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ gRPC interceptors are similar to middleware but have less flexibility. An interceptor allows","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":200933,"byte_end":201029,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ you to do two main things, one is to add/remove/check items in the `MetadataMap` of each","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201030,"byte_end":201122,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ request. Two, cancel a request with a `Status`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201123,"byte_end":201174,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201175,"byte_end":201178,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Any function that satisfies the bound `FnMut(Request<()>) -> Result<Request<()>, Status>` can be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201179,"byte_end":201279,"line_start":22,"line_end":22,"column_start":1,"column_end":101}},{"value":"/ used as an `Interceptor`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201280,"byte_end":201309,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201310,"byte_end":201313,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An interceptor can be used on both the server and client side through the `tonic-build` crate's","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201314,"byte_end":201413,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ generated structs.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201414,"byte_end":201436,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201437,"byte_end":201440,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ See the [interceptor example][example] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201441,"byte_end":201501,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201502,"byte_end":201505,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If you need more powerful middleware, [tower] is the recommended approach. You can find","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201506,"byte_end":201597,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ examples of how to use tower with tonic [here][tower-example].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201598,"byte_end":201664,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201665,"byte_end":201668,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, interceptors is not the recommended way to add logging to your service. For that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201669,"byte_end":201767,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ a [tower] middleware is more appropriate since it can also act on the response. For example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201768,"byte_end":201863,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ tower-http's [`Trace`](https://docs.rs/tower-http/latest/tower_http/trace/index.html)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201864,"byte_end":201953,"line_start":35,"line_end":35,"column_start":1,"column_end":90}},{"value":"/ middleware supports gRPC out of the box.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201954,"byte_end":201998,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":201999,"byte_end":202002,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [tower]: https://crates.io/crates/tower","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202003,"byte_end":202046,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ [example]: https://github.com/hyperium/tonic/tree/master/examples/src/interceptor","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202047,"byte_end":202132,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ [tower-example]: https://github.com/hyperium/tonic/tree/master/examples/src/tower","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202133,"byte_end":202218,"line_start":40,"line_end":40,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202323,"byte_end":202327,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"call","qualname":"::service::interceptor::Interceptor::call","value":"pub fn call(&mut Self, crate::Request<()>)\n-> Result<crate::Request<()>, Status>","parent":{"krate":0,"index":1579},"children":[],"decl_id":null,"docs":" Intercept a request before it is sent, optionally cancelling it.\n","sig":null,"attributes":[{"value":"/ Intercept a request before it is sent, optionally cancelling it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202247,"byte_end":202315,"line_start":42,"line_end":42,"column_start":5,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":1584},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202728,"byte_end":202739,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"interceptor","qualname":"::service::interceptor::interceptor","value":"pub fn interceptor<F>(F) -> InterceptorLayer<F> where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new interceptor layer.","sig":null,"attributes":[{"value":"/ Create a new interceptor layer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202639,"byte_end":202674,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202675,"byte_end":202678,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202679,"byte_end":202720,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1586},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203016,"byte_end":203030,"line_start":72,"line_end":72,"column_start":8,"column_end":22},"name":"interceptor_fn","qualname":"::service::interceptor::interceptor_fn","value":"pub fn interceptor_fn<F>(F) -> InterceptorLayer<F> where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new interceptor layer.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.1\", note =\n             \"Please use the `interceptor` function instead\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202830,"byte_end":202926,"line_start":65,"line_end":68,"column_start":1,"column_end":3}},{"value":"/ Create a new interceptor layer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202927,"byte_end":202962,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202963,"byte_end":202966,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202967,"byte_end":203008,"line_start":71,"line_end":71,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3902},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203296,"byte_end":203312,"line_start":84,"line_end":84,"column_start":12,"column_end":28},"name":"InterceptorLayer","qualname":"::service::interceptor::InterceptorLayer","value":"InterceptorLayer {  }","parent":null,"children":[{"krate":0,"index":3904}],"decl_id":null,"docs":" A gRPC interceptor that can be used as a [`Layer`],\n created by calling [`interceptor`].","sig":null,"attributes":[{"value":"/ A gRPC interceptor that can be used as a [`Layer`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203113,"byte_end":203168,"line_start":79,"line_end":79,"column_start":1,"column_end":56}},{"value":"/ created by calling [`interceptor`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203169,"byte_end":203208,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203209,"byte_end":203212,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203213,"byte_end":203254,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1593},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203823,"byte_end":203836,"line_start":107,"line_end":107,"column_start":10,"column_end":23},"name":"InterceptorFn","qualname":"::service::interceptor::InterceptorFn","value":"InterceptorLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" A gRPC interceptor that can be used as a [`Layer`],\n created by calling [`interceptor`].","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.1\", note =\n             \"Please use the `InterceptorLayer` type instead\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203574,"byte_end":203671,"line_start":99,"line_end":102,"column_start":1,"column_end":3}},{"value":"/ A gRPC interceptor that can be used as a [`Layer`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203672,"byte_end":203727,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"/ created by calling [`interceptor`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203728,"byte_end":203767,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203768,"byte_end":203771,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203772,"byte_end":203813,"line_start":106,"line_end":106,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203996,"byte_end":204014,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"InterceptedService","qualname":"::service::interceptor::InterceptedService","value":"InterceptedService {  }","parent":null,"children":[{"krate":0,"index":3916},{"krate":0,"index":3917}],"decl_id":null,"docs":" A service wrapped in an interceptor middleware.","sig":null,"attributes":[{"value":"/ A service wrapped in an interceptor middleware.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203864,"byte_end":203915,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203916,"byte_end":203919,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203920,"byte_end":203961,"line_start":111,"line_end":111,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204215,"byte_end":204218,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<InterceptedService<S, F>>::new","value":"pub fn new(S, F) -> Self where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new `InterceptedService` that wraps `S` and intercepts each request with the\n function `F`.\n","sig":null,"attributes":[{"value":"/ Create a new `InterceptedService` that wraps `S` and intercepts each request with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204092,"byte_end":204181,"line_start":119,"line_end":119,"column_start":5,"column_end":94}},{"value":"/ function `F`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204186,"byte_end":204203,"line_start":120,"line_end":120,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206232,"byte_end":206246,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::service::interceptor::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3967}],"decl_id":null,"docs":" Response future for [`InterceptedService`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206189,"byte_end":206203,"line_start":186,"line_end":186,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3946},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206232,"byte_end":206246,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::service::interceptor::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3949},{"krate":0,"index":3950}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206189,"byte_end":206203,"line_start":186,"line_end":186,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1637},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1866},{"krate":0,"index":2292},{"krate":0,"index":2322},{"krate":0,"index":2933},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972}],"decl_id":null,"docs":" Batteries included server and client.","sig":null,"attributes":[{"value":"cfg(feature = \"transport\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4010,"byte_end":4039,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/ Batteries included server and client.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208327,"byte_end":208368,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208369,"byte_end":208372,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a set of batteries included, fully featured and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208373,"byte_end":208445,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ fast set of HTTP/2 server and client's. These components each provide a or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208446,"byte_end":208524,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ `rustls` tls backend when the respective feature flag is enabled, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208525,"byte_end":208598,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ provides builders to configure transport behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208599,"byte_end":208653,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208654,"byte_end":208657,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208658,"byte_end":208672,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208673,"byte_end":208676,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - TLS support via [rustls].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208677,"byte_end":208708,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/ - Load balancing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208709,"byte_end":208729,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/ - Timeouts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208730,"byte_end":208744,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ - Concurrency Limits","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208745,"byte_end":208769,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ - Rate limiting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208770,"byte_end":208789,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208790,"byte_end":208793,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208794,"byte_end":208808,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208809,"byte_end":208812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Client","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208813,"byte_end":208826,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208827,"byte_end":208830,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208831,"byte_end":208844,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Channel, Certificate, ClientTlsConfig};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208845,"byte_end":208913,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208914,"byte_end":208944,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # use tonic::body::BoxBody;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208945,"byte_end":208976,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ # use tonic::client::GrpcService;;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":208977,"byte_end":209015,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ # use http::Request;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209016,"byte_end":209040,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209041,"byte_end":209073,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209074,"byte_end":209143,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ let cert = std::fs::read_to_string(\"ca.pem\")?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209144,"byte_end":209194,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209195,"byte_end":209198,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut channel = Channel::from_static(\"https://example.com\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209199,"byte_end":209264,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/     .tls_config(ClientTlsConfig::new()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209265,"byte_end":209307,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/         .ca_certificate(Certificate::from_pem(&cert))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209308,"byte_end":209365,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/         .domain_name(\"example.com\".to_string()))?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209366,"byte_end":209419,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/     .timeout(Duration::from_secs(5))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209420,"byte_end":209460,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209461,"byte_end":209507,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/     .concurrency_limit(256)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209508,"byte_end":209539,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/     .connect()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209540,"byte_end":209558,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/     .await?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209559,"byte_end":209575,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209576,"byte_end":209579,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ channel.call(Request::new(BoxBody::empty())).await?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209580,"byte_end":209636,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ # Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209637,"byte_end":209649,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209650,"byte_end":209657,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209658,"byte_end":209665,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209666,"byte_end":209669,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Server","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209670,"byte_end":209683,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209684,"byte_end":209687,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209688,"byte_end":209701,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Server, Identity, ServerTlsConfig};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209702,"byte_end":209766,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ # use tower::{Service, service_fn};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209767,"byte_end":209806,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ # use futures_util::future::{err, ok};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209807,"byte_end":209849,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209850,"byte_end":209882,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209883,"byte_end":209952,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209953,"byte_end":209975,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ # pub struct Svc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209976,"byte_end":209997,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ # impl Service<hyper::Request<hyper::Body>> for Svc {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":209998,"byte_end":210055,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ #   type Response = hyper::Response<tonic::body::BoxBody>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210056,"byte_end":210118,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ #   type Error = tonic::Status;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210119,"byte_end":210154,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Self::Response, Self::Error>>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210155,"byte_end":210242,"line_start":58,"line_end":58,"column_start":1,"column_end":88}},{"value":"/ #   fn poll_ready(&mut self, _cx: &mut std::task::Context<'_>) -> std::task::Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210243,"byte_end":210355,"line_start":59,"line_end":59,"column_start":1,"column_end":113}},{"value":"/ #       Ok(()).into()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210356,"byte_end":210381,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ #  }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210382,"byte_end":210390,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"/ #   fn call(&mut self, _req: hyper::Request<hyper::Body>) -> Self::Future {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210391,"byte_end":210470,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ #       unimplemented!()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210471,"byte_end":210499,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/ #   }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210500,"byte_end":210509,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210510,"byte_end":210517,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # impl tonic::transport::NamedService for Svc {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210518,"byte_end":210569,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ # const NAME: &'static str = \"some_svc\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210570,"byte_end":210614,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210615,"byte_end":210622,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # let my_svc = Svc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210623,"byte_end":210646,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ let cert = std::fs::read_to_string(\"server.pem\")?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210647,"byte_end":210701,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/ let key = std::fs::read_to_string(\"server.key\")?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210702,"byte_end":210755,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210756,"byte_end":210759,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let addr = \"[::1]:50051\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210760,"byte_end":210798,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210799,"byte_end":210802,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Server::builder()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210803,"byte_end":210824,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     .tls_config(ServerTlsConfig::new()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210825,"byte_end":210867,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/         .identity(Identity::from_pem(&cert, &key)))?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210868,"byte_end":210924,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/     .concurrency_limit_per_connection(256)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210925,"byte_end":210971,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/     .add_service(my_svc)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":210972,"byte_end":211000,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/     .serve(addr)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211001,"byte_end":211021,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211022,"byte_end":211038,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211039,"byte_end":211042,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211043,"byte_end":211055,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211056,"byte_end":211063,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211064,"byte_end":211071,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211072,"byte_end":211075,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [rustls]: https://docs.rs/rustls/0.16.0/rustls/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211076,"byte_end":211127,"line_start":87,"line_end":87,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1638},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1853},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1864}],"decl_id":null,"docs":" Client implementation and builder.\n","sig":null,"attributes":[{"value":"/ Client implementation and builder.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":211895,"byte_end":211933,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4013},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":219365,"byte_end":219373,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::transport::channel::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028}],"decl_id":null,"docs":" Channel builder.","sig":null,"attributes":[{"value":"/ Channel builder.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":219248,"byte_end":219268,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":219269,"byte_end":219272,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This struct is used to build and configure HTTP/2 channels.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":219273,"byte_end":219336,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220342,"byte_end":220345,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"pub fn new<D>(D) -> Result<Self, Error> where D: TryInto<Self>,\nD::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220846,"byte_end":220857,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Endpoint>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from a static string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220562,"byte_end":220609,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220614,"byte_end":220617,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220622,"byte_end":220634,"line_start":60,"line_end":60,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220639,"byte_end":220642,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument is an invalid URI.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220647,"byte_end":220706,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220711,"byte_end":220714,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220719,"byte_end":220726,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220731,"byte_end":220768,"line_start":65,"line_end":65,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220773,"byte_end":220822,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220827,"byte_end":220834,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221155,"byte_end":221166,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Endpoint>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Self, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from shared bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220959,"byte_end":221003,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221008,"byte_end":221011,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221016,"byte_end":221023,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221028,"byte_end":221065,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_shared(\"https://example.com\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221070,"byte_end":221131,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221136,"byte_end":221143,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221858,"byte_end":221868,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<Endpoint>::user_agent","value":"pub fn user_agent<T>(Self, T) -> Result<Self, Error> where\nT: TryInto<HeaderValue>","parent":null,"children":[],"decl_id":null,"docs":" Set a custom user-agent header.","sig":null,"attributes":[{"value":"/ Set a custom user-agent header.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221310,"byte_end":221345,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221350,"byte_end":221353,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `user_agent` will be prepended to Tonic's default user-agent string (`tonic/x.x.x`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221358,"byte_end":221446,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/ It must be a value that can be converted into a valid  `http::HeaderValue` or building","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221451,"byte_end":221541,"line_start":87,"line_end":87,"column_start":5,"column_end":95}},{"value":"/ the endpoint will fail.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221546,"byte_end":221573,"line_start":88,"line_end":88,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221578,"byte_end":221585,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221590,"byte_end":221627,"line_start":90,"line_end":90,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221632,"byte_end":221701,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/ builder.user_agent(\"Greeter\").expect(\"Greeter should be a valid header value\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221706,"byte_end":221789,"line_start":92,"line_end":92,"column_start":5,"column_end":88}},{"value":"/ // user-agent: \"Greeter tonic/x.x.x\"","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221794,"byte_end":221834,"line_start":93,"line_end":93,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":221839,"byte_end":221846,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222771,"byte_end":222778,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Endpoint>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to each request.","sig":null,"attributes":[{"value":"/ Apply a timeout to each request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222186,"byte_end":222222,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222227,"byte_end":222230,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222235,"byte_end":222242,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222247,"byte_end":222284,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222289,"byte_end":222319,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222324,"byte_end":222393,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ builder.timeout(Duration::from_secs(5));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222398,"byte_end":222442,"line_start":114,"line_end":114,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222447,"byte_end":222454,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222459,"byte_end":222462,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222467,"byte_end":222478,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222483,"byte_end":222486,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This does **not** set the timeout metadata (`grpc-timeout` header) on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222491,"byte_end":222564,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ the request, meaning the server will not be informed of this timeout,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222569,"byte_end":222642,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ for that use [`Request::set_timeout`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222647,"byte_end":222689,"line_start":121,"line_end":121,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222694,"byte_end":222697,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Request::set_timeout`]: crate::Request::set_timeout","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222702,"byte_end":222759,"line_start":123,"line_end":123,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223238,"byte_end":223253,"line_start":141,"line_end":141,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Endpoint>::connect_timeout","value":"pub fn connect_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to connecting to the uri.","sig":null,"attributes":[{"value":"/ Apply a timeout to connecting to the uri.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222901,"byte_end":222946,"line_start":131,"line_end":131,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222951,"byte_end":222954,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Defaults to no timeout.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222959,"byte_end":222986,"line_start":133,"line_end":133,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222991,"byte_end":222994,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":222999,"byte_end":223006,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223011,"byte_end":223048,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223053,"byte_end":223083,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223088,"byte_end":223157,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ builder.connect_timeout(Duration::from_secs(5));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223162,"byte_end":223214,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223219,"byte_end":223226,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223709,"byte_end":223722,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Endpoint>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223384,"byte_end":223459,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223464,"byte_end":223467,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223472,"byte_end":223545,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223550,"byte_end":223624,"line_start":151,"line_end":151,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223629,"byte_end":223640,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223645,"byte_end":223648,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223653,"byte_end":223689,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223694,"byte_end":223697,"line_start":155,"line_end":155,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224104,"byte_end":224121,"line_start":170,"line_end":170,"column_start":12,"column_end":29},"name":"concurrency_limit","qualname":"<Endpoint>::concurrency_limit","value":"pub fn concurrency_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a concurrency limit to each request.","sig":null,"attributes":[{"value":"/ Apply a concurrency limit to each request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223858,"byte_end":223904,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223909,"byte_end":223912,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223917,"byte_end":223924,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223929,"byte_end":223966,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":223971,"byte_end":224040,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ builder.concurrency_limit(256);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224045,"byte_end":224080,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224085,"byte_end":224092,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224545,"byte_end":224555,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"rate_limit","qualname":"<Endpoint>::rate_limit","value":"pub fn rate_limit(Self, u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a rate limit to each request.","sig":null,"attributes":[{"value":"/ Apply a rate limit to each request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224255,"byte_end":224294,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224299,"byte_end":224302,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224307,"byte_end":224314,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224319,"byte_end":224356,"line_start":180,"line_end":180,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224361,"byte_end":224391,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224396,"byte_end":224465,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ builder.rate_limit(32, Duration::from_secs(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224470,"byte_end":224521,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224526,"byte_end":224533,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224950,"byte_end":224976,"line_start":198,"line_end":198,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Endpoint>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                             impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224712,"byte_end":224780,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224785,"byte_end":224815,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224820,"byte_end":224823,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224828,"byte_end":224849,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224854,"byte_end":224857,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":224862,"byte_end":224938,"line_start":197,"line_end":197,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":225230,"byte_end":225260,"line_start":208,"line_end":208,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Endpoint>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":225128,"byte_end":225184,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":225189,"byte_end":225192,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":225197,"byte_end":225218,"line_start":207,"line_end":207,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":225945,"byte_end":225956,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Endpoint>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":225846,"byte_end":225933,"line_start":229,"line_end":229,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226161,"byte_end":226186,"line_start":238,"line_end":238,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Endpoint>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226081,"byte_end":226149,"line_start":237,"line_end":237,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226416,"byte_end":226434,"line_start":246,"line_end":246,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Endpoint>::keep_alive_timeout","value":"pub fn keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226337,"byte_end":226404,"line_start":245,"line_end":245,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226666,"byte_end":226687,"line_start":254,"line_end":254,"column_start":12,"column_end":33},"name":"keep_alive_while_idle","qualname":"<Endpoint>::keep_alive_while_idle","value":"pub fn keep_alive_while_idle(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226584,"byte_end":226654,"line_start":253,"line_end":253,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226929,"byte_end":226950,"line_start":262,"line_end":262,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Endpoint>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":226834,"byte_end":226917,"line_start":261,"line_end":261,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":227147,"byte_end":227154,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"name":"connect","qualname":"<Endpoint>::connect","value":"pub async fn connect<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.\n","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":227091,"byte_end":227129,"line_start":269,"line_end":269,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":228113,"byte_end":228125,"line_start":295,"line_end":295,"column_start":12,"column_end":24},"name":"connect_lazy","qualname":"<Endpoint>::connect_lazy","value":"pub fn connect_lazy(&Self) -> Channel","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":227942,"byte_end":227980,"line_start":291,"line_end":291,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":227985,"byte_end":227988,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The channel returned by this method does not attempt to connect to the endpoint until first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":227993,"byte_end":228088,"line_start":293,"line_end":293,"column_start":5,"column_end":100}},{"value":"/ use.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":228093,"byte_end":228101,"line_start":294,"line_end":294,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":229261,"byte_end":229283,"line_start":323,"line_end":323,"column_start":18,"column_end":40},"name":"connect_with_connector","qualname":"<Endpoint>::connect_with_connector","value":"pub async fn connect_with_connector<C, '_>(&'_ Self, C) -> /*impl Trait*/\nwhere C: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector.","sig":null,"attributes":[{"value":"/ Connect with a custom connector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":228878,"byte_end":228914,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":228919,"byte_end":228922,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":228927,"byte_end":229020,"line_start":318,"line_end":318,"column_start":5,"column_end":98}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":229025,"byte_end":229115,"line_start":319,"line_end":319,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":229120,"byte_end":229153,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":229158,"byte_end":229161,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The [`connect_timeout`](Endpoint::connect_timeout) will still be applied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":229166,"byte_end":229243,"line_start":322,"line_end":322,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230432,"byte_end":230459,"line_start":352,"line_end":352,"column_start":12,"column_end":39},"name":"connect_with_connector_lazy","qualname":"<Endpoint>::connect_with_connector_lazy","value":"pub fn connect_with_connector_lazy<C>(&Self, C) -> Result<Channel, Error>\nwhere C: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector lazily.","sig":null,"attributes":[{"value":"/ Connect with a custom connector lazily.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230102,"byte_end":230145,"line_start":345,"line_end":345,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230150,"byte_end":230153,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230158,"byte_end":230250,"line_start":347,"line_end":347,"column_start":5,"column_end":97}},{"value":"/ connec to it lazily.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230255,"byte_end":230279,"line_start":348,"line_end":348,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230284,"byte_end":230287,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230292,"byte_end":230382,"line_start":350,"line_end":350,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230387,"byte_end":230420,"line_start":351,"line_end":351,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231263,"byte_end":231266,"line_start":377,"line_end":377,"column_start":12,"column_end":15},"name":"uri","qualname":"<Endpoint>::uri","value":"pub fn uri(&Self) -> &Uri","parent":null,"children":[],"decl_id":null,"docs":" Get the endpoint uri.","sig":null,"attributes":[{"value":"/ Get the endpoint uri.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":230972,"byte_end":230997,"line_start":368,"line_end":368,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231002,"byte_end":231005,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231010,"byte_end":231017,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231022,"byte_end":231059,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/ # use http::Uri;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231064,"byte_end":231084,"line_start":372,"line_end":372,"column_start":5,"column_end":25}},{"value":"/ let endpoint = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231089,"byte_end":231153,"line_start":373,"line_end":373,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231158,"byte_end":231161,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(endpoint.uri(), &Uri::from_static(\"https://example.com\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231166,"byte_end":231239,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231244,"byte_end":231251,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4031},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214098,"byte_end":214105,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":4032}],"decl_id":null,"docs":" A default batteries included `transport` channel.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212822,"byte_end":212875,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212876,"byte_end":212879,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This provides a fully featured http2 gRPC client based on [`hyper::Client`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212880,"byte_end":212959,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ and `tower` services.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212960,"byte_end":212985,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212986,"byte_end":212989,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiplexing requests","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":212990,"byte_end":213017,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213018,"byte_end":213021,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Sending a request on a channel requires a `&mut self` and thus can only send","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213022,"byte_end":213102,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ one request in flight. This is intentional and is required to follow the `Service`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213103,"byte_end":213189,"line_start":52,"line_end":52,"column_start":1,"column_end":87}},{"value":"/ contract from the `tower` library which this channel implementation is built on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213190,"byte_end":213273,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ top of.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213274,"byte_end":213285,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213286,"byte_end":213289,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `tower` itself has a concept of `poll_ready` which is the main mechanism to apply","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213290,"byte_end":213375,"line_start":56,"line_end":56,"column_start":1,"column_end":86}},{"value":"/ back pressure. `poll_ready` takes a `&mut self` and when it returns `Poll::Ready`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213376,"byte_end":213461,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ we know the `Service` is able to accept only one request before we must `poll_ready`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213462,"byte_end":213550,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/ again. Due to this fact any `async fn` that wants to poll for readiness and submit","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213551,"byte_end":213637,"line_start":59,"line_end":59,"column_start":1,"column_end":87}},{"value":"/ the request must have a `&mut self` reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213638,"byte_end":213688,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213689,"byte_end":213692,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To work around this and to ease the use of the channel, `Channel` provides a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213693,"byte_end":213773,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ `Clone` implementation that is _cheap_. This is because at the very top level","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213774,"byte_end":213855,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/ the channel is backed by a `tower_buffer::Buffer` which runs the connection","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213856,"byte_end":213935,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ in a background task and provides a `mpsc` channel interface. Due to this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":213936,"byte_end":214013,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ cloning the `Channel` type is cheap and encouraged.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214014,"byte_end":214069,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214274,"byte_end":214288,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::transport::channel::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1834}],"decl_id":null,"docs":" A future that resolves to an HTTP response.","sig":null,"attributes":[{"value":"/ A future that resolves to an HTTP response.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214151,"byte_end":214198,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214199,"byte_end":214202,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is returned by the `Service::call` on [`Channel`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214203,"byte_end":214262,"line_start":74,"line_end":74,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214476,"byte_end":214483,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"builder","qualname":"<Channel>::builder","value":"pub fn builder(Uri) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Endpoint`] builder that can create [`Channel`]s.\n","sig":null,"attributes":[{"value":"/ Create an [`Endpoint`] builder that can create [`Channel`]s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214400,"byte_end":214464,"line_start":80,"line_end":80,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214731,"byte_end":214742,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Channel>::from_static","value":"pub fn from_static(&'static str) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from a static string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214547,"byte_end":214593,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214598,"byte_end":214601,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214606,"byte_end":214613,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214618,"byte_end":214654,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/ Channel::from_static(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214659,"byte_end":214707,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214712,"byte_end":214719,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215032,"byte_end":215043,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Channel>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Endpoint, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from shared bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214851,"byte_end":214894,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214899,"byte_end":214902,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214907,"byte_end":214914,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214919,"byte_end":214955,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ Channel::from_shared(\"https://example.com\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214960,"byte_end":215008,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215013,"byte_end":215020,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215353,"byte_end":215365,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"balance_list","qualname":"<Channel>::balance_list","value":"pub fn balance_list<impl Iterator<Item = Endpoint>: Iterator<Item =\n                    Endpoint>>(impl Iterator<Item = Endpoint>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215194,"byte_end":215231,"line_start":107,"line_end":107,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215236,"byte_end":215239,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will load balance accross all the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215244,"byte_end":215313,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ provided endpoints.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215318,"byte_end":215341,"line_start":110,"line_end":110,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215841,"byte_end":215856,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"balance_channel","qualname":"<Channel>::balance_channel","value":"pub fn balance_channel<K>(usize) -> (Self, Sender<Change<K, Endpoint>>) where\nK: Hash + Eq + Send + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215660,"byte_end":215697,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215702,"byte_end":215705,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":215710,"byte_end":215829,"line_start":123,"line_end":123,"column_start":5,"column_end":124}}]},{"kind":"Mod","id":{"krate":0,"index":1866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::transport::server","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1891},{"krate":0,"index":1956},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":4131},{"krate":0,"index":4146},{"krate":0,"index":4149},{"krate":0,"index":4152},{"krate":0,"index":4158},{"krate":0,"index":4163},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":2151},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2201},{"krate":0,"index":2206},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2249},{"krate":0,"index":4211},{"krate":0,"index":4172},{"krate":0,"index":2257},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2275},{"krate":0,"index":4215},{"krate":0,"index":4217},{"krate":0,"index":4219},{"krate":0,"index":4221},{"krate":0,"index":2286}],"decl_id":null,"docs":" Server implementation and builder.\n","sig":null,"attributes":[{"value":"/ Server implementation and builder.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":232828,"byte_end":232866,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1877},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265644,"byte_end":265653,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"Connected","qualname":"::transport::server::conn::Connected","value":"Connected","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879}],"decl_id":null,"docs":" Trait that connected IO resources implement and use to produce info about the connection.","sig":null,"attributes":[{"value":"/ Trait that connected IO resources implement and use to produce info about the connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264503,"byte_end":264596,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264597,"byte_end":264600,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The goal for this trait is to allow users to implement","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264601,"byte_end":264659,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ custom IO types that can still provide the same connection","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264660,"byte_end":264722,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264723,"byte_end":264736,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264737,"byte_end":264740,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264741,"byte_end":264754,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264755,"byte_end":264758,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `ConnectInfo` returned will be accessible through [request extensions][ext]:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264759,"byte_end":264843,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264844,"byte_end":264847,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264848,"byte_end":264855,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tonic::{Request, transport::server::Connected};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264856,"byte_end":264911,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264912,"byte_end":264915,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // A `Stream` that yields connections","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264916,"byte_end":264957,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ struct MyConnector {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264958,"byte_end":264983,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264984,"byte_end":264987,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Return metadata about the connection as `MyConnectInfo`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":264988,"byte_end":265050,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ impl Connected for MyConnector {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265051,"byte_end":265087,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/     type ConnectInfo = MyConnectInfo;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265088,"byte_end":265129,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265130,"byte_end":265133,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     fn connect_info(&self) -> Self::ConnectInfo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265134,"byte_end":265187,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/         MyConnectInfo {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265188,"byte_end":265216,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265217,"byte_end":265226,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265227,"byte_end":265232,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265233,"byte_end":265236,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265237,"byte_end":265257,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/ struct MyConnectInfo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265258,"byte_end":265284,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/     // Metadata about your connection","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265285,"byte_end":265326,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265327,"byte_end":265332,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265333,"byte_end":265336,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // The connect info can be accessed through request extensions:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265337,"byte_end":265404,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ # fn foo(request: Request<()>) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265405,"byte_end":265441,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ let connect_info: &MyConnectInfo = request","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265442,"byte_end":265488,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     .extensions()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265489,"byte_end":265510,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     .get::<MyConnectInfo>()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265511,"byte_end":265542,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/     .expect(\"bug in tonic\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265543,"byte_end":265575,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265576,"byte_end":265583,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265584,"byte_end":265591,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265592,"byte_end":265595,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265596,"byte_end":265633,"line_start":51,"line_end":51,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1878},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265799,"byte_end":265810,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"ConnectInfo","qualname":"::transport::server::conn::Connected::ConnectInfo","value":"type ConnectInfo: Clone + Send + Sync + 'static;","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" The connection info type the IO resources generates.\n","sig":null,"attributes":[{"value":"/ The connection info type the IO resources generates.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265660,"byte_end":265716,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265913,"byte_end":265925,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"connect_info","qualname":"::transport::server::conn::Connected::connect_info","value":"pub fn connect_info(&Self) -> Self::ConnectInfo","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" Create type holding information about the connection.\n","sig":null,"attributes":[{"value":"/ Create type holding information about the connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265848,"byte_end":265905,"line_start":57,"line_end":57,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4035},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266247,"byte_end":266261,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"TcpConnectInfo","qualname":"::transport::server::conn::TcpConnectInfo","value":"TcpConnectInfo {  }","parent":null,"children":[{"krate":0,"index":4036}],"decl_id":null,"docs":" Connection info for standard TCP streams.","sig":null,"attributes":[{"value":"/ Connection info for standard TCP streams.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":265958,"byte_end":266003,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266004,"byte_end":266007,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type will be accessible through [request extensions][ext] if you're using the default","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266008,"byte_end":266102,"line_start":63,"line_end":63,"column_start":1,"column_end":95}},{"value":"/ non-TLS connector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266103,"byte_end":266125,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266126,"byte_end":266129,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ See [`Connected`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266130,"byte_end":266169,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266170,"byte_end":266173,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266174,"byte_end":266211,"line_start":68,"line_end":68,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266405,"byte_end":266416,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<TcpConnectInfo>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Return the remote address the IO resource is connected too.\n","sig":null,"attributes":[{"value":"/ Return the remote address the IO resource is connected too.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266330,"byte_end":266393,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234961,"byte_end":234967,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Server","qualname":"::transport::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4145}],"decl_id":null,"docs":" A default batteries included `transport` server.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` server.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234399,"byte_end":234451,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234452,"byte_end":234455,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around [`hyper::Server`] and provides an easy builder","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234456,"byte_end":234531,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ pattern style builder [`Server`]. This builder exposes easy configuration parameters","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234532,"byte_end":234620,"line_start":66,"line_end":66,"column_start":1,"column_end":89}},{"value":"/ for providing a fully featured http2 based gRPC server. This should provide","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234621,"byte_end":234700,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ a very good out of the box http2 server for use with tonic but is also a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234701,"byte_end":234777,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ reference implementation that should be a good starting point for anyone","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234778,"byte_end":234854,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ wanting to create a more complex and/or specific implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":234855,"byte_end":234923,"line_start":70,"line_end":70,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4152},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235582,"byte_end":235588,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"Router","qualname":"::transport::server::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4157}],"decl_id":null,"docs":" A stack based `Service` router.\n","sig":null,"attributes":[{"value":"/ A stack based `Service` router.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235518,"byte_end":235553,"line_start":90,"line_end":90,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4163},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235920,"byte_end":235933,"line_start":103,"line_end":103,"column_start":12,"column_end":25},"name":"RouterService","qualname":"::transport::server::RouterService","value":"RouterService {  }","parent":null,"children":[{"krate":0,"index":4165}],"decl_id":null,"docs":" A service that is produced from a Tonic `Router`.","sig":null,"attributes":[{"value":"/ A service that is produced from a Tonic `Router`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235678,"byte_end":235731,"line_start":97,"line_end":97,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235732,"byte_end":235735,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This service implementation will route between multiple Tonic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235736,"byte_end":235801,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ gRPC endpoints and can be consumed with the rest of the `tower`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235802,"byte_end":235869,"line_start":100,"line_end":100,"column_start":1,"column_end":68}},{"value":"/ ecosystem.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235870,"byte_end":235884,"line_start":101,"line_end":101,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":2158},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236737,"byte_end":236749,"line_start":131,"line_end":131,"column_start":11,"column_end":23},"name":"NamedService","qualname":"::transport::server::NamedService","value":"NamedService","parent":null,"children":[{"krate":0,"index":2159}],"decl_id":null,"docs":" A trait to provide a static reference to the service's\n name. This is used for routing service's within the router.\n","sig":null,"attributes":[{"value":"/ A trait to provide a static reference to the service's","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236604,"byte_end":236662,"line_start":129,"line_end":129,"column_start":1,"column_end":59}},{"value":"/ name. This is used for routing service's within the router.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236663,"byte_end":236726,"line_start":130,"line_end":130,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":2159},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236906,"byte_end":236910,"line_start":135,"line_end":135,"column_start":11,"column_end":15},"name":"NAME","qualname":"::transport::server::NamedService::NAME","value":"&'static str","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The `Service-Name` as described [here].","sig":null,"attributes":[{"value":"/ The `Service-Name` as described [here].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236756,"byte_end":236799,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236804,"byte_end":236807,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [here]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236812,"byte_end":236895,"line_start":134,"line_end":134,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237123,"byte_end":237130,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server>::builder","value":"pub fn builder() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new server builder that can configure a [`Server`].\n","sig":null,"attributes":[{"value":"/ Create a new server builder that can configure a [`Server`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237047,"byte_end":237111,"line_start":143,"line_end":143,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237957,"byte_end":237989,"line_start":174,"line_end":174,"column_start":12,"column_end":44},"name":"concurrency_limit_per_connection","qualname":"<Server<L>>::concurrency_limit_per_connection","value":"pub fn concurrency_limit_per_connection(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the concurrency limit applied to on requests inbound per connection.","sig":null,"attributes":[{"value":"/ Set the concurrency limit applied to on requests inbound per connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237636,"byte_end":237712,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237717,"byte_end":237720,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237725,"byte_end":237738,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237743,"byte_end":237746,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237751,"byte_end":237758,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237763,"byte_end":237798,"line_start":169,"line_end":169,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237803,"byte_end":237836,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/ # let builder = Server::builder();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237841,"byte_end":237879,"line_start":171,"line_end":171,"column_start":5,"column_end":43}},{"value":"/ builder.concurrency_limit_per_connection(32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237884,"byte_end":237933,"line_start":172,"line_end":172,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237938,"byte_end":237945,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238447,"byte_end":238454,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Server<L>>::timeout","value":"pub fn timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout on for all request handlers.","sig":null,"attributes":[{"value":"/ Set a timeout on for all request handlers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238121,"byte_end":238167,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238172,"byte_end":238175,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238180,"byte_end":238193,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238198,"byte_end":238201,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238206,"byte_end":238213,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238218,"byte_end":238253,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238258,"byte_end":238291,"line_start":187,"line_end":187,"column_start":5,"column_end":38}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238296,"byte_end":238326,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238331,"byte_end":238373,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/ builder.timeout(Duration::from_secs(30));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238378,"byte_end":238423,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238428,"byte_end":238435,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238800,"byte_end":238826,"line_start":203,"line_end":203,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Server<L>>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                             impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238562,"byte_end":238630,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238635,"byte_end":238665,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238670,"byte_end":238673,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238678,"byte_end":238699,"line_start":200,"line_end":200,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238704,"byte_end":238707,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238712,"byte_end":238788,"line_start":202,"line_end":202,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239078,"byte_end":239108,"line_start":213,"line_end":213,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Server<L>>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":238976,"byte_end":239032,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239037,"byte_end":239040,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239045,"byte_end":239066,"line_start":212,"line_end":212,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239504,"byte_end":239526,"line_start":226,"line_end":226,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Server<L>>::max_concurrent_streams","value":"pub fn max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                         impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239262,"byte_end":239333,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239338,"byte_end":239354,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239359,"byte_end":239362,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`None`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239367,"byte_end":239400,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239405,"byte_end":239408,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239413,"byte_end":239492,"line_start":225,"line_end":225,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240121,"byte_end":240145,"line_start":242,"line_end":242,"column_start":12,"column_end":36},"name":"http2_keepalive_interval","qualname":"<Server<L>>::http2_keepalive_interval","value":"pub fn http2_keepalive_interval(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP2 Ping frames are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether HTTP2 Ping frames are enabled on accepted connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239677,"byte_end":239747,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239752,"byte_end":239755,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, HTTP2 keepalive is disabled, otherwise the duration","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239760,"byte_end":239839,"line_start":235,"line_end":235,"column_start":5,"column_end":84}},{"value":"/ specified will be the time interval between HTTP2 Ping frames.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239844,"byte_end":239910,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/ The timeout for receiving an acknowledgement of the keepalive ping","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239915,"byte_end":239985,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ can be set with [`Server::http2_keepalive_timeout`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":239990,"byte_end":240046,"line_start":238,"line_end":238,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240051,"byte_end":240054,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Default is no HTTP2 keepalive (`None`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240059,"byte_end":240101,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240106,"byte_end":240109,"line_start":241,"line_end":241,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240596,"byte_end":240619,"line_start":256,"line_end":256,"column_start":12,"column_end":35},"name":"http2_keepalive_timeout","qualname":"<Server<L>>::http2_keepalive_timeout","value":"pub fn http2_keepalive_timeout(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keepalive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keepalive ping.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240301,"byte_end":240375,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240380,"byte_end":240383,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will be closed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240388,"byte_end":240474,"line_start":251,"line_end":251,"column_start":5,"column_end":91}},{"value":"/ Does nothing if http2_keep_alive_interval is disabled.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240479,"byte_end":240537,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240542,"byte_end":240545,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240550,"byte_end":240576,"line_start":254,"line_end":254,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240581,"byte_end":240584,"line_start":255,"line_end":255,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241098,"byte_end":241111,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Server<L>>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240773,"byte_end":240848,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240853,"byte_end":240856,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240861,"byte_end":240934,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":240939,"byte_end":241013,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241018,"byte_end":241029,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241034,"byte_end":241037,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241042,"byte_end":241078,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241083,"byte_end":241086,"line_start":270,"line_end":270,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241344,"byte_end":241355,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Server<L>>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241245,"byte_end":241332,"line_start":278,"line_end":278,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241655,"byte_end":241669,"line_start":291,"line_end":291,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Server<L>>::max_frame_size","value":"pub fn max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                 impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241478,"byte_end":241527,"line_start":286,"line_end":286,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241532,"byte_end":241535,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241540,"byte_end":241575,"line_start":288,"line_end":288,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241580,"byte_end":241583,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If not set, will default from underlying transport.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241588,"byte_end":241643,"line_start":290,"line_end":290,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242214,"byte_end":242226,"line_start":306,"line_end":306,"column_start":12,"column_end":24},"name":"accept_http1","qualname":"<Server<L>>::accept_http1","value":"pub fn accept_http1(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allow this server to accept http1 requests.","sig":null,"attributes":[{"value":"/ Allow this server to accept http1 requests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241826,"byte_end":241873,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241878,"byte_end":241881,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Accepting http1 requests is only useful when developing `grpc-web`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241886,"byte_end":241956,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ enabled services. If this setting is set to `true` but services are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":241961,"byte_end":242032,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ not correctly configured to handle grpc-web requests, your server may","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242037,"byte_end":242110,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ return confusing (but correct) protocol errors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242115,"byte_end":242166,"line_start":303,"line_end":303,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242171,"byte_end":242174,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242179,"byte_end":242202,"line_start":305,"line_end":305,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242440,"byte_end":242448,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"trace_fn","qualname":"<Server<L>>::trace_fn","value":"pub fn trace_fn<F>(Self, F) -> Self where F: Fn(&http::Request<()>) ->\ntracing::Span + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Intercept inbound headers and add a [`tracing::Span`] to each response future.\n","sig":null,"attributes":[{"value":"/ Intercept inbound headers and add a [`tracing::Span`] to each response future.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242346,"byte_end":242428,"line_start":313,"line_end":313,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242875,"byte_end":242886,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Server<L>>::add_service","value":"pub fn add_service<S>(&mut Self, S) -> Router<S, Unimplemented, L> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send, L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the `S` typed service as the first service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242671,"byte_end":242739,"line_start":324,"line_end":324,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242744,"byte_end":242747,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242752,"byte_end":242822,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":242827,"byte_end":242863,"line_start":327,"line_end":327,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243693,"byte_end":243713,"line_start":350,"line_end":350,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Server<L>>::add_optional_service","value":"pub fn add_optional_service<S>(&mut Self, Option<S>)\n-> Router<Either<S, Unimplemented>, Unimplemented, L> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send, L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the optional `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the optional `S` typed service as the first service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243257,"byte_end":243334,"line_start":342,"line_end":342,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243339,"byte_end":243342,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243347,"byte_end":243417,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243422,"byte_end":243458,"line_start":345,"line_end":345,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243463,"byte_end":243466,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243471,"byte_end":243481,"line_start":347,"line_end":347,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243486,"byte_end":243583,"line_start":348,"line_end":348,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":243588,"byte_end":243681,"line_start":349,"line_end":349,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246331,"byte_end":246336,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"layer","qualname":"<Server<L>>::layer","value":"pub fn layer<NewLayer>(Self, NewLayer) -> Server<NewLayer>","parent":null,"children":[],"decl_id":null,"docs":" Set the [Tower] [`Layer`] all services will be wrapped in.","sig":null,"attributes":[{"value":"/ Set the [Tower] [`Layer`] all services will be wrapped in.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244279,"byte_end":244341,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244346,"byte_end":244349,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This enables using middleware from the [Tower ecosystem][eco].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244354,"byte_end":244420,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244425,"byte_end":244428,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244433,"byte_end":244446,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244451,"byte_end":244454,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244459,"byte_end":244466,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244471,"byte_end":244506,"line_start":378,"line_end":378,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244511,"byte_end":244544,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/ use tower::timeout::TimeoutLayer;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244549,"byte_end":244586,"line_start":380,"line_end":380,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244591,"byte_end":244619,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244624,"byte_end":244627,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244632,"byte_end":244674,"line_start":383,"line_end":383,"column_start":5,"column_end":47}},{"value":"/ builder.layer(TimeoutLayer::new(Duration::from_secs(30)));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244679,"byte_end":244741,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244746,"byte_end":244753,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244758,"byte_end":244761,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that timeouts should be set using [`Server::timeout`]. `TimeoutLayer` is only used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244766,"byte_end":244857,"line_start":387,"line_end":387,"column_start":5,"column_end":96}},{"value":"/ here as an example.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244862,"byte_end":244885,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244890,"byte_end":244893,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ You can build more complex layers using [`ServiceBuilder`]. Those layers can include","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244898,"byte_end":244986,"line_start":390,"line_end":390,"column_start":5,"column_end":93}},{"value":"/ [interceptors]:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":244991,"byte_end":245010,"line_start":391,"line_end":391,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245015,"byte_end":245018,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245023,"byte_end":245030,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245035,"byte_end":245070,"line_start":394,"line_end":394,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245075,"byte_end":245108,"line_start":395,"line_end":395,"column_start":5,"column_end":38}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245113,"byte_end":245143,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245148,"byte_end":245176,"line_start":397,"line_end":397,"column_start":5,"column_end":33}},{"value":"/ use tonic::{Request, Status, service::interceptor};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245181,"byte_end":245236,"line_start":398,"line_end":398,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245241,"byte_end":245244,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ fn auth_interceptor(request: Request<()>) -> Result<Request<()>, Status> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245249,"byte_end":245327,"line_start":400,"line_end":400,"column_start":5,"column_end":83}},{"value":"/     if valid_credentials(&request) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245332,"byte_end":245372,"line_start":401,"line_end":401,"column_start":5,"column_end":45}},{"value":"/         Ok(request)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245377,"byte_end":245400,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245405,"byte_end":245421,"line_start":403,"line_end":403,"column_start":5,"column_end":21}},{"value":"/         Err(Status::unauthenticated(\"invalid credentials\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245426,"byte_end":245489,"line_start":404,"line_end":404,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245494,"byte_end":245503,"line_start":405,"line_end":405,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245508,"byte_end":245513,"line_start":406,"line_end":406,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245518,"byte_end":245521,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ fn valid_credentials(request: &Request<()>) -> bool {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245526,"byte_end":245583,"line_start":408,"line_end":408,"column_start":5,"column_end":62}},{"value":"/     // ...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245588,"byte_end":245602,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/     # true","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245607,"byte_end":245621,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245626,"byte_end":245631,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245636,"byte_end":245639,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ fn some_other_interceptor(request: Request<()>) -> Result<Request<()>, Status> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245644,"byte_end":245728,"line_start":413,"line_end":413,"column_start":5,"column_end":89}},{"value":"/     Ok(request)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245733,"byte_end":245752,"line_start":414,"line_end":414,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245757,"byte_end":245762,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245767,"byte_end":245770,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let layer = ServiceBuilder::new()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245775,"byte_end":245812,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/     .load_shed()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245817,"byte_end":245837,"line_start":418,"line_end":418,"column_start":5,"column_end":25}},{"value":"/     .timeout(Duration::from_secs(30))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245842,"byte_end":245883,"line_start":419,"line_end":419,"column_start":5,"column_end":46}},{"value":"/     .layer(interceptor(auth_interceptor))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245888,"byte_end":245933,"line_start":420,"line_end":420,"column_start":5,"column_end":50}},{"value":"/     .layer(interceptor(some_other_interceptor))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245938,"byte_end":245989,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/     .into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":245994,"byte_end":246016,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246021,"byte_end":246024,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Server::builder().layer(layer);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246029,"byte_end":246064,"line_start":424,"line_end":424,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246069,"byte_end":246076,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246081,"byte_end":246084,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ [Tower]: https://github.com/tower-rs/tower","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246089,"byte_end":246135,"line_start":427,"line_end":427,"column_start":5,"column_end":51}},{"value":"/ [`Layer`]: tower::layer::Layer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246140,"byte_end":246174,"line_start":428,"line_end":428,"column_start":5,"column_end":39}},{"value":"/ [eco]: https://github.com/tower-rs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246179,"byte_end":246217,"line_start":429,"line_end":429,"column_start":5,"column_end":43}},{"value":"/ [`ServiceBuilder`]: tower::ServiceBuilder","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246222,"byte_end":246267,"line_start":430,"line_end":430,"column_start":5,"column_end":50}},{"value":"/ [interceptors]: crate::service::Interceptor","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":246272,"byte_end":246319,"line_start":431,"line_end":431,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":251031,"byte_end":251042,"line_start":556,"line_end":556,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Router<A, B, L>>::add_service","value":"pub fn add_service<S>(Self, S) -> Router<S, Or<A, B, Request<Body>>, L> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Add a new service to this router.\n","sig":null,"attributes":[{"value":"/ Add a new service to this router.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":250982,"byte_end":251019,"line_start":555,"line_end":555,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":252047,"byte_end":252067,"line_start":586,"line_end":586,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Router<A, B, L>>::add_optional_service","value":"pub fn add_optional_service<S>(Self, Option<S>)\n-> Router<Either<S, Unimplemented>, Or<A, B, Request<Body>>, L> where\nS: Service<Request<Body>, Response = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static,\nS::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Add a new optional service to this router.","sig":null,"attributes":[{"value":"/ Add a new optional service to this router.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":251728,"byte_end":251774,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":251779,"byte_end":251782,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":251787,"byte_end":251797,"line_start":582,"line_end":582,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":251802,"byte_end":251899,"line_start":583,"line_end":583,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":251904,"byte_end":251997,"line_start":584,"line_end":584,"column_start":5,"column_end":98}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":252002,"byte_end":252035,"line_start":585,"line_end":585,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":253165,"byte_end":253170,"line_start":622,"line_end":622,"column_start":18,"column_end":23},"name":"serve","qualname":"<Router<A, B, L>>::serve","value":"pub async fn serve<ResBody>(Self, SocketAddr) -> /*impl Trait*/ where\nL: Layer<Routes<A, B, Request<Body>>>, L::Service: Service<Request<Body>,\nResponse = Response<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Future: Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [tokio]'s default executor.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":252948,"byte_end":253022,"line_start":617,"line_end":617,"column_start":5,"column_end":79}},{"value":"/ on [tokio]'s default executor.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":253027,"byte_end":253061,"line_start":618,"line_end":618,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":253066,"byte_end":253069,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":253074,"byte_end":253108,"line_start":620,"line_end":620,"column_start":5,"column_end":39}},{"value":"/ [tokio]: https://docs.rs/tokio","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":253113,"byte_end":253147,"line_start":621,"line_end":621,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254402,"byte_end":254421,"line_start":650,"line_end":650,"column_start":18,"column_end":37},"name":"serve_with_shutdown","qualname":"<Router<A, B, L>>::serve_with_shutdown","value":"pub async fn serve_with_shutdown<F: Future<Output = ()>,\n                                 ResBody>(Self, SocketAddr, F)\n-> /*impl Trait*/ where L: Layer<Routes<A, B, Request<Body>>>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Future: Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [tokio]'s default executor. And shutdown when the provided signal\n is received.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254126,"byte_end":254200,"line_start":644,"line_end":644,"column_start":5,"column_end":79}},{"value":"/ on [tokio]'s default executor. And shutdown when the provided signal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254205,"byte_end":254277,"line_start":645,"line_end":645,"column_start":5,"column_end":77}},{"value":"/ is received.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254282,"byte_end":254298,"line_start":646,"line_end":646,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254303,"byte_end":254306,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254311,"byte_end":254345,"line_start":648,"line_end":648,"column_start":5,"column_end":39}},{"value":"/ [tokio]: https://docs.rs/tokio","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":254350,"byte_end":254384,"line_start":649,"line_end":649,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":255554,"byte_end":255573,"line_start":676,"line_end":676,"column_start":18,"column_end":37},"name":"serve_with_incoming","qualname":"<Router<A, B, L>>::serve_with_incoming","value":"pub async fn serve_with_incoming<I, IO, IE, ResBody>(Self, I)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IO::ConnectInfo: Clone +\nSend + Sync + 'static, IE: Into<crate::Error>,\nL: Layer<Routes<A, B, Request<Body>>>, L::Service: Service<Request<Body>,\nResponse = Response<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Future: Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":255346,"byte_end":255423,"line_start":672,"line_end":672,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":255428,"byte_end":255489,"line_start":673,"line_end":673,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":255494,"byte_end":255497,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":255502,"byte_end":255536,"line_start":675,"line_end":675,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256948,"byte_end":256976,"line_start":709,"line_end":709,"column_start":18,"column_end":46},"name":"serve_with_incoming_shutdown","qualname":"<Router<A, B, L>>::serve_with_incoming_shutdown","value":"pub async fn serve_with_incoming_shutdown<I, IO, IE, F, ResBody>(Self, I, F)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IO::ConnectInfo: Clone +\nSend + Sync + 'static, IE: Into<crate::Error>, F: Future<Output = ()>,\nL: Layer<Routes<A, B, Request<Body>>>, L::Service: Service<Request<Body>,\nResponse = Response<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Future: Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to\n `serve_with_shutdown` this method will also take a signal future to\n gracefully shutdown the server.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256613,"byte_end":256690,"line_start":703,"line_end":703,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256695,"byte_end":256767,"line_start":704,"line_end":704,"column_start":5,"column_end":77}},{"value":"/ `serve_with_shutdown` this method will also take a signal future to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256772,"byte_end":256843,"line_start":705,"line_end":705,"column_start":5,"column_end":76}},{"value":"/ gracefully shutdown the server.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256848,"byte_end":256883,"line_start":706,"line_end":706,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256888,"byte_end":256891,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":256896,"byte_end":256930,"line_start":708,"line_end":708,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":258028,"byte_end":258040,"line_start":735,"line_end":735,"column_start":12,"column_end":24},"name":"into_service","qualname":"<Router<A, B, L>>::into_service","value":"pub fn into_service<ResBody>(Self) -> RouterService<L::Service> where\nL: Layer<Routes<A, B, Request<Body>>>, L::Service: Service<Request<Body>,\nResponse = Response<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Future: Send + 'static,\n<<L as Layer<Routes<A, B, Request<Body>>>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a tower service out of a router.\n","sig":null,"attributes":[{"value":"/ Create a tower service out of a router.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":257973,"byte_end":258016,"line_start":734,"line_end":734,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":263543,"byte_end":263556,"line_start":906,"line_end":906,"column_start":12,"column_end":25},"name":"Unimplemented","qualname":"::transport::server::Unimplemented","value":"Unimplemented {  }","parent":null,"children":[{"krate":0,"index":4216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2301},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":276645,"byte_end":276650,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::transport::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2302}],"decl_id":null,"docs":" Error's that originate from the client or server;\n","sig":null,"attributes":[{"value":"/ Error's that originate from the client or server;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":276580,"byte_end":276633,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294864,"byte_end":294878,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"TimeoutExpired","qualname":"::transport::service::grpc_timeout::TimeoutExpired","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned if a request didn't complete within the configured timeout.","sig":null,"attributes":[{"value":"/ Error returned if a request didn't complete within the configured timeout.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294387,"byte_end":294465,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294466,"byte_end":294469,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Timeouts can be configured either with [`Endpoint::timeout`], [`Server::timeout`], or by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294470,"byte_end":294562,"line_start":156,"line_end":156,"column_start":1,"column_end":93}},{"value":"/ setting the [`grpc-timeout` metadata value][spec].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294563,"byte_end":294617,"line_start":157,"line_end":157,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294618,"byte_end":294621,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`Endpoint::timeout`]: crate::transport::server::Server::timeout","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294622,"byte_end":294690,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/ [`Server::timeout`]: crate::transport::channel::Endpoint::timeout","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294691,"byte_end":294760,"line_start":160,"line_end":160,"column_start":1,"column_end":70}},{"value":"/ [spec]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294761,"byte_end":294835,"line_start":161,"line_end":161,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4861},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":309730,"byte_end":309736,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Routes","qualname":"::transport::service::router::Routes","value":"Routes {  }","parent":null,"children":[{"krate":0,"index":4865}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2833},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311183,"byte_end":311185,"line_start":71,"line_end":71,"column_start":12,"column_end":14},"name":"Or","qualname":"::transport::service::router::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4878},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":314817,"byte_end":314828,"line_start":3,"line_end":3,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::transport::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":4879}],"decl_id":null,"docs":" Represents a X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a X509 certificate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":314747,"byte_end":314781,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315259,"byte_end":315267,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded X509 Certificate.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded X509 Certificate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315120,"byte_end":315161,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315166,"byte_end":315169,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The provided PEM should include at least one PEM encoded certificate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315174,"byte_end":315247,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315439,"byte_end":315446,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Certificate>::get_ref","value":"pub fn get_ref(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to underlying certificate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315372,"byte_end":315427,"line_start":25,"line_end":25,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315570,"byte_end":315577,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Certificate>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to underlying certificate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315505,"byte_end":315558,"line_start":30,"line_end":30,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315710,"byte_end":315720,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Certificate>::into_inner","value":"pub fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the underlying certificate\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the underlying certificate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315641,"byte_end":315698,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2979},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316530,"byte_end":316540,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"Extensions","qualname":"::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":2980}],"decl_id":null,"docs":" A type map of protocol extensions.","sig":null,"attributes":[{"value":"/ A type map of protocol extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316265,"byte_end":316303,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316304,"byte_end":316307,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `Extensions` can be used by [`Interceptor`] and [`Request`] to store extra data derived from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316308,"byte_end":316404,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ the underlying protocol.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316405,"byte_end":316433,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316434,"byte_end":316437,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Interceptor`]: crate::service::Interceptor","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316438,"byte_end":316486,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Request`]: crate::Request","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316487,"byte_end":316518,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316864,"byte_end":316870,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"insert","qualname":"<Extensions>::insert","value":"pub fn insert<T: Send + Sync + 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a type into this `Extensions`.","sig":null,"attributes":[{"value":"/ Insert a type into this `Extensions`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316707,"byte_end":316748,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316753,"byte_end":316756,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type already existed, it will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316761,"byte_end":316817,"line_start":23,"line_end":23,"column_start":5,"column_end":61}},{"value":"/ be returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316822,"byte_end":316838,"line_start":24,"line_end":24,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316843,"byte_end":316852,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317070,"byte_end":317073,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"get","qualname":"<Extensions>::get","value":"pub fn get<T: Send + Sync + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a type previously inserted on this `Extensions`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316973,"byte_end":317044,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317049,"byte_end":317058,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317264,"byte_end":317271,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Extensions>::get_mut","value":"pub fn get_mut<T: Send + Sync + 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this `Extensions`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317159,"byte_end":317238,"line_start":36,"line_end":36,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317243,"byte_end":317252,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317510,"byte_end":317516,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"remove","qualname":"<Extensions>::remove","value":"pub fn remove<T: Send + Sync + 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a type from this `Extensions`.","sig":null,"attributes":[{"value":"/ Remove a type from this `Extensions`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317369,"byte_end":317410,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317415,"byte_end":317418,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type existed, it will be returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317423,"byte_end":317484,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317489,"byte_end":317498,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2991},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317688,"byte_end":317693,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"clear","qualname":"<Extensions>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `Extensions` of all inserted extensions.\n","sig":null,"attributes":[{"value":"/ Clear the `Extensions` of all inserted extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317608,"byte_end":317662,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317667,"byte_end":317676,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4884},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321213,"byte_end":321220,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888}],"decl_id":null,"docs":" A gRPC request and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC request and metadata from an RPC call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321135,"byte_end":321184,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3030},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322222,"byte_end":322233,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IntoRequest","qualname":"::request::IntoRequest","value":"IntoRequest<T>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3032}],"decl_id":null,"docs":" Trait implemented by RPC request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC request types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321300,"byte_end":321343,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321344,"byte_end":321347,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client RPC","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321348,"byte_end":321420,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ methods without explicitly wrapping them into `tonic::Request`s. The purpose","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321421,"byte_end":321501,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ is to make client calls slightly more convenient to write.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321502,"byte_end":321564,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321565,"byte_end":321568,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321569,"byte_end":321645,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321646,"byte_end":321706,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321707,"byte_end":321710,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321711,"byte_end":321724,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321725,"byte_end":321728,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC method definition:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321729,"byte_end":321776,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ ```proto","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321777,"byte_end":321789,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ rpc GetFeature(Point) returns (Feature) {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321790,"byte_end":321836,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321837,"byte_end":321844,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321845,"byte_end":321848,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ we can call `get_feature` in two equivalent ways:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321849,"byte_end":321902,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321903,"byte_end":321914,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # pub struct Point {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321915,"byte_end":321940,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/ # pub struct Client {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321941,"byte_end":321967,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ # impl Client {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321968,"byte_end":321987,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ #   fn get_feature(&self, r: impl tonic::IntoRequest<Point>) {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":321988,"byte_end":322055,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322056,"byte_end":322063,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322064,"byte_end":322093,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322094,"byte_end":322117,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322118,"byte_end":322121,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ client.get_feature(Point {});","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322122,"byte_end":322155,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ client.get_feature(Request::new(Point {}));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322156,"byte_end":322203,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322204,"byte_end":322211,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322319,"byte_end":322331,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"into_request","qualname":"::request::IntoRequest::into_request","value":"pub fn into_request(Self) -> Request<T>","parent":{"krate":0,"index":3030},"children":[],"decl_id":null,"docs":" Wrap the input message `T` in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the input message `T` in a `tonic::Request`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322259,"byte_end":322311,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3033},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323482,"byte_end":323502,"line_start":87,"line_end":87,"column_start":11,"column_end":31},"name":"IntoStreamingRequest","qualname":"::request::IntoStreamingRequest","value":"IntoStreamingRequest: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036}],"decl_id":null,"docs":" Trait implemented by RPC streaming request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC streaming request types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322356,"byte_end":322409,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322410,"byte_end":322413,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client streaming","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322414,"byte_end":322492,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ RPC methods without explicitly wrapping them into `tonic::Request`s. The","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322493,"byte_end":322569,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ purpose is to make client calls slightly more convenient to write.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322570,"byte_end":322640,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322641,"byte_end":322644,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322645,"byte_end":322721,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322722,"byte_end":322782,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322783,"byte_end":322786,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322787,"byte_end":322800,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322801,"byte_end":322804,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC service method definition:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322805,"byte_end":322860,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/ ```proto","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322861,"byte_end":322873,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/ rpc RecordRoute(stream Point) returns (RouteSummary) {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322874,"byte_end":322933,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322934,"byte_end":322941,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ we can call `record_route` in two equivalent ways:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322942,"byte_end":322996,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322997,"byte_end":323000,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323001,"byte_end":323012,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323013,"byte_end":323035,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ # pub struct Point {};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323036,"byte_end":323062,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/ # pub struct Client {};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323063,"byte_end":323090,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ # impl Client {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323091,"byte_end":323110,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ #   fn record_route(&self, r: impl tonic::IntoStreamingRequest<Message = Point>) {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323111,"byte_end":323198,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323199,"byte_end":323206,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323207,"byte_end":323236,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323237,"byte_end":323260,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ use futures_util::stream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323261,"byte_end":323290,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323291,"byte_end":323294,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let messages = vec![Point {}, Point {}];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323295,"byte_end":323339,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323340,"byte_end":323343,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ client.record_route(Request::new(stream::iter(messages.clone())));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323344,"byte_end":323414,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ client.record_route(stream::iter(messages));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323415,"byte_end":323463,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323464,"byte_end":323471,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3034},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323566,"byte_end":323572,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"Stream","qualname":"::request::IntoStreamingRequest::Stream","value":"type Stream: Stream<Item = Self::Message> + Send + 'static;","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" The RPC request stream type\n","sig":null,"attributes":[{"value":"/ The RPC request stream type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323525,"byte_end":323556,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3035},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323660,"byte_end":323667,"line_start":92,"line_end":92,"column_start":10,"column_end":17},"name":"Message","qualname":"::request::IntoStreamingRequest::Message","value":"type Message;","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" The RPC request type\n","sig":null,"attributes":[{"value":"/ The RPC request type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323626,"byte_end":323650,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323735,"byte_end":323757,"line_start":95,"line_end":95,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"::request::IntoStreamingRequest::into_streaming_request","value":"pub fn into_streaming_request(Self) -> Request<Self::Stream>","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" Wrap the stream of messages in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the stream of messages in a `tonic::Request`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323674,"byte_end":323727,"line_start":94,"line_end":94,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324083,"byte_end":324086,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Request<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC request.","sig":null,"attributes":[{"value":"/ Create a new gRPC request.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323818,"byte_end":323848,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323853,"byte_end":323856,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323861,"byte_end":323872,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Request;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323877,"byte_end":323902,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/ # pub struct HelloRequest {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323907,"byte_end":323938,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ #   pub name: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323943,"byte_end":323968,"line_start":104,"line_end":104,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323973,"byte_end":323980,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ Request::new(HelloRequest {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323985,"byte_end":324016,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/    name: \"Bob\".into(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324021,"byte_end":324047,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324052,"byte_end":324059,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324064,"byte_end":324071,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324300,"byte_end":324307,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Request<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the message\n","sig":null,"attributes":[{"value":"/ Get a reference to the message","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324254,"byte_end":324288,"line_start":118,"line_end":118,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324410,"byte_end":324417,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Request<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324356,"byte_end":324398,"line_start":123,"line_end":123,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324541,"byte_end":324549,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Request<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom request metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom request metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324478,"byte_end":324529,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324673,"byte_end":324685,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Request<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the request metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the request metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324609,"byte_end":324661,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324811,"byte_end":324821,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Request<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":324757,"byte_end":324799,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":325522,"byte_end":325531,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"from_http","qualname":"<Request<T>>::from_http","value":"pub fn from_http(http::Request<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP request to a gRPC request\n","sig":null,"attributes":[{"value":"/ Convert an HTTP request to a gRPC request","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":325465,"byte_end":325510,"line_start":163,"line_end":163,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326342,"byte_end":326345,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"map","qualname":"<Request<T>>::map","value":"pub fn map<F, U>(Self, F) -> Request<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326814,"byte_end":326825,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Request<T>>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of this connection.","sig":null,"attributes":[{"value":"/ Get the remote address of this connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326599,"byte_end":326645,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326650,"byte_end":326653,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This will return `None` if the `IO` type used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326658,"byte_end":326707,"line_start":204,"line_end":204,"column_start":5,"column_end":54}},{"value":"/ does not implement `Connected`. This currently,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326712,"byte_end":326763,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"/ only works on the server side.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":326768,"byte_end":326802,"line_start":206,"line_end":206,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328034,"byte_end":328044,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"peer_certs","qualname":"<Request<T>>::peer_certs","value":"pub fn peer_certs(&Self) -> Option<Arc<Vec<Certificate>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the peer certificates of the connected client.","sig":null,"attributes":[{"value":"/ Get the peer certificates of the connected client.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327638,"byte_end":327692,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327697,"byte_end":327700,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This is used to fetch the certificates from the TLS session","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327705,"byte_end":327768,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/ and is mostly used for mTLS. This currently only returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327773,"byte_end":327833,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ `Some` on the server side of the `transport` server with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327838,"byte_end":327898,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ TLS enabled connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327903,"byte_end":327931,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"transport\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":327936,"byte_end":327965,"line_start":242,"line_end":242,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329165,"byte_end":329176,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"set_timeout","qualname":"<Request<T>>::set_timeout","value":"pub fn set_timeout(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Set the max duration the request is allowed to take.","sig":null,"attributes":[{"value":"/ Set the max duration the request is allowed to take.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328358,"byte_end":328414,"line_start":258,"line_end":258,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328419,"byte_end":328422,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Requires the server to support the `grpc-timeout` metadata, which Tonic does.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328427,"byte_end":328508,"line_start":260,"line_end":260,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328513,"byte_end":328516,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The duration will be formatted according to [the spec] and use the most precise unit","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328521,"byte_end":328609,"line_start":262,"line_end":262,"column_start":5,"column_end":93}},{"value":"/ possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328614,"byte_end":328627,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328632,"byte_end":328635,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328640,"byte_end":328652,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328657,"byte_end":328660,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328665,"byte_end":328676,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328681,"byte_end":328709,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/ use tonic::Request;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328714,"byte_end":328737,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328742,"byte_end":328745,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let mut request = Request::new(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328750,"byte_end":328789,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328794,"byte_end":328797,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ request.set_timeout(Duration::from_secs(30));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328802,"byte_end":328851,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328856,"byte_end":328859,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let value = request.metadata().get(\"grpc-timeout\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328864,"byte_end":328928,"line_start":275,"line_end":275,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328933,"byte_end":328936,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328941,"byte_end":328956,"line_start":277,"line_end":277,"column_start":5,"column_end":20}},{"value":"/     value,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328961,"byte_end":328975,"line_start":278,"line_end":278,"column_start":5,"column_end":19}},{"value":"/     // equivalent to 30 seconds","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":328980,"byte_end":329015,"line_start":279,"line_end":279,"column_start":5,"column_end":40}},{"value":"/     \"30000000u\"","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329020,"byte_end":329039,"line_start":280,"line_end":280,"column_start":5,"column_end":24}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329044,"byte_end":329050,"line_start":281,"line_end":281,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329055,"byte_end":329062,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329067,"byte_end":329070,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [the spec]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329075,"byte_end":329153,"line_start":284,"line_end":284,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329471,"byte_end":329481,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Request<T>>::extensions","value":"pub fn extensions(&Self) -> &Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329406,"byte_end":329459,"line_start":291,"line_end":291,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330857,"byte_end":330871,"line_start":341,"line_end":341,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Request<T>>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329542,"byte_end":329603,"line_start":296,"line_end":296,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329608,"byte_end":329611,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329616,"byte_end":329629,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329634,"byte_end":329637,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Extensions can be set in interceptors:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329642,"byte_end":329684,"line_start":300,"line_end":300,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329689,"byte_end":329692,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329697,"byte_end":329710,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ use tonic::{Request, service::interceptor};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329715,"byte_end":329762,"line_start":303,"line_end":303,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329767,"byte_end":329770,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ struct MyExtension {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329775,"byte_end":329799,"line_start":305,"line_end":305,"column_start":5,"column_end":29}},{"value":"/     some_piece_of_data: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329804,"byte_end":329839,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329844,"byte_end":329849,"line_start":307,"line_end":307,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329854,"byte_end":329857,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ interceptor(|mut request: Request<()>| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329862,"byte_end":329906,"line_start":309,"line_end":309,"column_start":5,"column_end":49}},{"value":"/     request.extensions_mut().insert(MyExtension {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329911,"byte_end":329964,"line_start":310,"line_end":310,"column_start":5,"column_end":58}},{"value":"/         some_piece_of_data: \"foo\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":329969,"byte_end":330019,"line_start":311,"line_end":311,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330024,"byte_end":330035,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330040,"byte_end":330043,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/     Ok(request)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330048,"byte_end":330067,"line_start":314,"line_end":314,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330072,"byte_end":330079,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330084,"byte_end":330091,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330096,"byte_end":330099,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ And picked up by RPCs:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330104,"byte_end":330130,"line_start":318,"line_end":318,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330135,"byte_end":330138,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330143,"byte_end":330156,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tonic::{async_trait, Status, Request, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330161,"byte_end":330217,"line_start":321,"line_end":321,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330222,"byte_end":330227,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ # struct Output {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330232,"byte_end":330254,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/ # struct Input;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330259,"byte_end":330278,"line_start":324,"line_end":324,"column_start":5,"column_end":24}},{"value":"/ # struct MyService;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330283,"byte_end":330306,"line_start":325,"line_end":325,"column_start":5,"column_end":28}},{"value":"/ # struct MyExtension;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330311,"byte_end":330336,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/ # #[async_trait]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330341,"byte_end":330361,"line_start":327,"line_end":327,"column_start":5,"column_end":25}},{"value":"/ # trait TestService {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330366,"byte_end":330391,"line_start":328,"line_end":328,"column_start":5,"column_end":30}},{"value":"/ #     async fn handler(&self, req: Request<Input>) -> Result<Response<Output>, Status>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330396,"byte_end":330487,"line_start":329,"line_end":329,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330492,"byte_end":330499,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330504,"byte_end":330507,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ #[async_trait]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330512,"byte_end":330530,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/ impl TestService for MyService {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330535,"byte_end":330571,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/     async fn handler(&self, req: Request<Input>) -> Result<Response<Output>, Status> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330576,"byte_end":330666,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/         let value: &MyExtension = req.extensions().get::<MyExtension>().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330671,"byte_end":330756,"line_start":335,"line_end":335,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330761,"byte_end":330764,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/         Ok(Response::new(Output {}))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330769,"byte_end":330809,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330814,"byte_end":330823,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330828,"byte_end":330833,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330838,"byte_end":330845,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3078},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331636,"byte_end":331642,"line_start":385,"line_end":385,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::request::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4892},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334481,"byte_end":334489,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4896}],"decl_id":null,"docs":" A gRPC response and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC response and metadata from an RPC call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334402,"byte_end":334452,"line_start":3,"line_end":3,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334913,"byte_end":334916,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC response.","sig":null,"attributes":[{"value":"/ Create a new gRPC response.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334595,"byte_end":334626,"line_start":12,"line_end":12,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334631,"byte_end":334634,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334639,"byte_end":334650,"line_start":14,"line_end":14,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Response;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334655,"byte_end":334681,"line_start":15,"line_end":15,"column_start":5,"column_end":31}},{"value":"/ # pub struct HelloReply {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334686,"byte_end":334715,"line_start":16,"line_end":16,"column_start":5,"column_end":34}},{"value":"/ #   pub message: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334720,"byte_end":334748,"line_start":17,"line_end":17,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334753,"byte_end":334760,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ # let name = \"\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334765,"byte_end":334785,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/ Response::new(HelloReply {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334790,"byte_end":334820,"line_start":20,"line_end":20,"column_start":5,"column_end":35}},{"value":"/     message: format!(\"Hello, {}!\", name).into(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334825,"byte_end":334877,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334882,"byte_end":334889,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334894,"byte_end":334901,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335134,"byte_end":335141,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Response<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to `T`.\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to `T`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335085,"byte_end":335122,"line_start":32,"line_end":32,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335244,"byte_end":335251,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Response<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335190,"byte_end":335232,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335376,"byte_end":335384,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Response<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom response metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom response metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335312,"byte_end":335364,"line_start":42,"line_end":42,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335509,"byte_end":335521,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Response<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the response metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the response metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335444,"byte_end":335497,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335647,"byte_end":335657,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Response<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":335593,"byte_end":335635,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":336668,"byte_end":336671,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"map","qualname":"<Response<T>>::map","value":"pub fn map<F, U>(Self, F) -> Response<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":336991,"byte_end":337001,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response<T>>::extensions","value":"pub fn extensions(&Self) -> &Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":336926,"byte_end":336979,"line_start":101,"line_end":101,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":337135,"byte_end":337149,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Response<T>>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":337062,"byte_end":337123,"line_start":106,"line_end":106,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339499,"byte_end":339505,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Status","qualname":"::status::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183}],"decl_id":null,"docs":" A gRPC status describing the result of an RPC call.","sig":null,"attributes":[{"value":"/ A gRPC status describing the result of an RPC call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339029,"byte_end":339084,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339085,"byte_end":339088,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Values can be created using the `new` function or one of the specialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339089,"byte_end":339165,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ associated functions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339166,"byte_end":339191,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339192,"byte_end":339203,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use tonic::{Status, Code};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339204,"byte_end":339236,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ let status1 = Status::new(Code::InvalidArgument, \"name is invalid\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339237,"byte_end":339309,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ let status2 = Status::invalid_argument(\"name is invalid\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339310,"byte_end":339372,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339373,"byte_end":339376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(status1.code(), Code::InvalidArgument);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339377,"byte_end":339431,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(status1.code(), status2.code());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339432,"byte_end":339479,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":339480,"byte_end":339487,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4901},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340442,"byte_end":340444,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"Ok","qualname":"::status::Code::Ok","value":"Code::Ok","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340396,"byte_end":340437,"line_start":58,"line_end":58,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4904},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340492,"byte_end":340501,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"Cancelled","qualname":"::status::Code::Cancelled","value":"Code::Cancelled","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The operation was cancelled.\n","sig":null,"attributes":[{"value":"/ The operation was cancelled.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340455,"byte_end":340487,"line_start":61,"line_end":61,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4907},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340535,"byte_end":340542,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::status::Code::Unknown","value":"Code::Unknown","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"/ Unknown error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340512,"byte_end":340530,"line_start":64,"line_end":64,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4910},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340599,"byte_end":340614,"line_start":68,"line_end":68,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::status::Code::InvalidArgument","value":"Code::InvalidArgument","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Client specified an invalid argument.\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340553,"byte_end":340594,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4913},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340683,"byte_end":340699,"line_start":71,"line_end":71,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::status::Code::DeadlineExceeded","value":"Code::DeadlineExceeded","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340625,"byte_end":340678,"line_start":70,"line_end":70,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4916},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340755,"byte_end":340763,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::status::Code::NotFound","value":"Code::NotFound","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Some requested entity was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity was not found.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340710,"byte_end":340750,"line_start":73,"line_end":73,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4919},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340838,"byte_end":340851,"line_start":77,"line_end":77,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::status::Code::AlreadyExists","value":"Code::AlreadyExists","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Some entity that we attempted to create already exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create already exists.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340774,"byte_end":340833,"line_start":76,"line_end":76,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4922},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340942,"byte_end":340958,"line_start":80,"line_end":80,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::status::Code::PermissionDenied","value":"Code::PermissionDenied","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340862,"byte_end":340937,"line_start":79,"line_end":79,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4925},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341011,"byte_end":341028,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"ResourceExhausted","qualname":"::status::Code::ResourceExhausted","value":"Code::ResourceExhausted","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Some resource has been exhausted.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340969,"byte_end":341006,"line_start":82,"line_end":82,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4928},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341116,"byte_end":341134,"line_start":86,"line_end":86,"column_start":5,"column_end":23},"name":"FailedPrecondition","qualname":"::status::Code::FailedPrecondition","value":"Code::FailedPrecondition","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The system is not in a state required for the operation's execution.\n","sig":null,"attributes":[{"value":"/ The system is not in a state required for the operation's execution.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341039,"byte_end":341111,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4931},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341180,"byte_end":341187,"line_start":89,"line_end":89,"column_start":5,"column_end":12},"name":"Aborted","qualname":"::status::Code::Aborted","value":"Code::Aborted","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The operation was aborted.\n","sig":null,"attributes":[{"value":"/ The operation was aborted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341145,"byte_end":341175,"line_start":88,"line_end":88,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4934},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341253,"byte_end":341263,"line_start":92,"line_end":92,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::status::Code::OutOfRange","value":"Code::OutOfRange","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range.\n","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341199,"byte_end":341248,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4937},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341330,"byte_end":341343,"line_start":95,"line_end":95,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::status::Code::Unimplemented","value":"Code::Unimplemented","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341275,"byte_end":341325,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4940},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341379,"byte_end":341387,"line_start":98,"line_end":98,"column_start":5,"column_end":13},"name":"Internal","qualname":"::status::Code::Internal","value":"Code::Internal","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Internal error.\n","sig":null,"attributes":[{"value":"/ Internal error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341355,"byte_end":341374,"line_start":97,"line_end":97,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341445,"byte_end":341456,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"Unavailable","qualname":"::status::Code::Unavailable","value":"Code::Unavailable","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The service is currently unavailable.\n","sig":null,"attributes":[{"value":"/ The service is currently unavailable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341399,"byte_end":341440,"line_start":100,"line_end":100,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341515,"byte_end":341523,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"DataLoss","qualname":"::status::Code::DataLoss","value":"Code::DataLoss","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341468,"byte_end":341510,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341602,"byte_end":341617,"line_start":107,"line_end":107,"column_start":5,"column_end":20},"name":"Unauthenticated","qualname":"::status::Code::Unauthenticated","value":"Code::Unauthenticated","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341535,"byte_end":341597,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4900},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340385,"byte_end":340389,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Code","qualname":"::status::Code","value":"pub enum Code {\n    Ok = ,\n    Cancelled = ,\n    Unknown = ,\n    InvalidArgument = ,\n    DeadlineExceeded = ,\n    NotFound = ,\n    AlreadyExists = ,\n    PermissionDenied = ,\n    ResourceExhausted = ,\n    FailedPrecondition = ,\n    Aborted = ,\n    OutOfRange = ,\n    Unimplemented = ,\n    Internal = ,\n    Unavailable = ,\n    DataLoss = ,\n    Unauthenticated = ,\n}","parent":null,"children":[{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4907},{"krate":0,"index":4910},{"krate":0,"index":4913},{"krate":0,"index":4916},{"krate":0,"index":4919},{"krate":0,"index":4922},{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4937},{"krate":0,"index":4940},{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4949}],"decl_id":null,"docs":" gRPC status codes used by [`Status`].","sig":null,"attributes":[{"value":"/ gRPC status codes used by [`Status`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340111,"byte_end":340152,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340153,"byte_end":340156,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ These variants match the [gRPC status codes].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340157,"byte_end":340206,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340207,"byte_end":340210,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [gRPC status codes]: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":340211,"byte_end":340330,"line_start":55,"line_end":55,"column_start":1,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":342121,"byte_end":342132,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"description","qualname":"<Code>::description","value":"pub fn description(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get description of this `Code`.\n ```\n fn make_grpc_request() -> tonic::Code {\n     // ...\n     tonic::Code::Ok\n }\n let code = make_grpc_request();\n println!(\"Operation completed. Human readable description: {}\", code.description());\n ```\n If you only need description in `println`, `format`, `log` and other\n formatting contexts, you may want to use `Display` impl for `Code`\n instead.\n","sig":null,"attributes":[{"value":"/ Get description of this `Code`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341643,"byte_end":341678,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341683,"byte_end":341690,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ fn make_grpc_request() -> tonic::Code {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341695,"byte_end":341738,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/     // ...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341743,"byte_end":341757,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/     tonic::Code::Ok","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341762,"byte_end":341785,"line_start":115,"line_end":115,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341790,"byte_end":341795,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ let code = make_grpc_request();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341800,"byte_end":341835,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ println!(\"Operation completed. Human readable description: {}\", code.description());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341840,"byte_end":341928,"line_start":118,"line_end":118,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341933,"byte_end":341940,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ If you only need description in `println`, `format`, `log` and other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341945,"byte_end":342017,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ formatting contexts, you may want to use `Display` impl for `Code`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":342022,"byte_end":342092,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":342097,"byte_end":342109,"line_start":122,"line_end":122,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":343863,"byte_end":343866,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Status>::new","value":"pub fn new<impl Into<String>: Into<String>>(Code, impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code and message.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code and message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":343788,"byte_end":343851,"line_start":159,"line_end":159,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344168,"byte_end":344170,"line_start":171,"line_end":171,"column_start":12,"column_end":14},"name":"ok","qualname":"<Status>::ok","value":"pub fn ok<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344115,"byte_end":344156,"line_start":170,"line_end":170,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344331,"byte_end":344340,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<Status>::cancelled","value":"pub fn cancelled<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was cancelled (typically by the caller).\n","sig":null,"attributes":[{"value":"/ The operation was cancelled (typically by the caller).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344261,"byte_end":344319,"line_start":175,"line_end":175,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344768,"byte_end":344775,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"unknown","qualname":"<Status>::unknown","value":"pub fn unknown<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unknown error. An example of where this error may be returned is if a\n `Status` value received from another address space belongs to an error-space\n that is not known in this address space. Also errors raised by APIs that\n do not return enough error information may be converted to this error.\n","sig":null,"attributes":[{"value":"/ Unknown error. An example of where this error may be returned is if a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344438,"byte_end":344511,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ `Status` value received from another address space belongs to an error-space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344516,"byte_end":344596,"line_start":181,"line_end":181,"column_start":5,"column_end":85}},{"value":"/ that is not known in this address space. Also errors raised by APIs that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344601,"byte_end":344677,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ do not return enough error information may be converted to this error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344682,"byte_end":344756,"line_start":183,"line_end":183,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345126,"byte_end":345142,"line_start":192,"line_end":192,"column_start":12,"column_end":28},"name":"invalid_argument","qualname":"<Status>::invalid_argument","value":"pub fn invalid_argument<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Client specified an invalid argument. Note that this differs from\n `FailedPrecondition`. `InvalidArgument` indicates arguments that are\n problematic regardless of the state of the system (e.g., a malformed file\n name).\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument. Note that this differs from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344871,"byte_end":344940,"line_start":188,"line_end":188,"column_start":5,"column_end":74}},{"value":"/ `FailedPrecondition`. `InvalidArgument` indicates arguments that are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":344945,"byte_end":345017,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ problematic regardless of the state of the system (e.g., a malformed file","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345022,"byte_end":345099,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"/ name).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345104,"byte_end":345114,"line_start":191,"line_end":191,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345585,"byte_end":345602,"line_start":201,"line_end":201,"column_start":12,"column_end":29},"name":"deadline_exceeded","qualname":"<Status>::deadline_exceeded","value":"pub fn deadline_exceeded<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete. For operations that\n change the state of the system, this error may be returned even if the\n operation has completed successfully. For example, a successful response\n from a server could have been delayed long enough for the deadline to\n expire.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete. For operations that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345246,"byte_end":345319,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ change the state of the system, this error may be returned even if the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345324,"byte_end":345398,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ operation has completed successfully. For example, a successful response","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345403,"byte_end":345479,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ from a server could have been delayed long enough for the deadline to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345484,"byte_end":345557,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ expire.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345562,"byte_end":345573,"line_start":200,"line_end":200,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345785,"byte_end":345794,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Status>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Some requested entity (e.g., file or directory) was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity (e.g., file or directory) was not found.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345707,"byte_end":345773,"line_start":205,"line_end":205,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345996,"byte_end":346010,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"already_exists","qualname":"<Status>::already_exists","value":"pub fn already_exists<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some entity that we attempted to create (e.g., file or directory) already\n exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create (e.g., file or directory) already","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345891,"byte_end":345968,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ exists.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":345973,"byte_end":345984,"line_start":211,"line_end":211,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346490,"byte_end":346507,"line_start":221,"line_end":221,"column_start":12,"column_end":29},"name":"permission_denied","qualname":"<Status>::permission_denied","value":"pub fn permission_denied<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n `PermissionDenied` must not be used for rejections caused by exhausting\n some resource (use `ResourceExhausted` instead for those errors).\n `PermissionDenied` must not be used if the caller cannot be identified\n (use `Unauthenticated` instead for those errors).\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346112,"byte_end":346187,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ `PermissionDenied` must not be used for rejections caused by exhausting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346192,"byte_end":346267,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ some resource (use `ResourceExhausted` instead for those errors).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346272,"byte_end":346341,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/ `PermissionDenied` must not be used if the caller cannot be identified","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346346,"byte_end":346420,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ (use `Unauthenticated` instead for those errors).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346425,"byte_end":346478,"line_start":220,"line_end":220,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346746,"byte_end":346764,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"resource_exhausted","qualname":"<Status>::resource_exhausted","value":"pub fn resource_exhausted<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some resource has been exhausted, perhaps a per-user quota, or perhaps\n the entire file system is out of space.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted, perhaps a per-user quota, or perhaps","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346612,"byte_end":346686,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ the entire file system is out of space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346691,"byte_end":346734,"line_start":226,"line_end":226,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347842,"byte_end":347861,"line_start":245,"line_end":245,"column_start":12,"column_end":31},"name":"failed_precondition","qualname":"<Status>::failed_precondition","value":"pub fn failed_precondition<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was rejected because the system is not in a state required for\n the operation's execution. For example, directory to be deleted may be\n non-empty, an rmdir operation is applied to a non-directory, etc.","sig":null,"attributes":[{"value":"/ Operation was rejected because the system is not in a state required for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346870,"byte_end":346946,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ the operation's execution. For example, directory to be deleted may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":346951,"byte_end":347025,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ non-empty, an rmdir operation is applied to a non-directory, etc.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347030,"byte_end":347099,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347104,"byte_end":347107,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ A litmus test that may help a service implementor in deciding between","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347112,"byte_end":347185,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ `FailedPrecondition`, `Aborted`, and `Unavailable`:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347190,"byte_end":347245,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/ (a) Use `Unavailable` if the client can retry just the failing call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347250,"byte_end":347322,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ (b) Use `Aborted` if the client should retry at a higher-level (e.g.,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347327,"byte_end":347400,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/     restarting a read-modify-write sequence).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347405,"byte_end":347454,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ (c) Use `FailedPrecondition` if the client should not retry until the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347459,"byte_end":347532,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/     system state has been explicitly fixed.  E.g., if an \"rmdir\" fails","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347537,"byte_end":347611,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/     because the directory is non-empty, `FailedPrecondition` should be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347616,"byte_end":347690,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/     returned since the client should not retry unless they have first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347695,"byte_end":347768,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/     fixed up the directory by deleting files from it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347773,"byte_end":347830,"line_start":244,"line_end":244,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348230,"byte_end":348237,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"aborted","qualname":"<Status>::aborted","value":"pub fn aborted<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was aborted, typically due to a concurrency issue like\n sequencer check failures, transaction aborts, etc.","sig":null,"attributes":[{"value":"/ The operation was aborted, typically due to a concurrency issue like","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":347968,"byte_end":348040,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ sequencer check failures, transaction aborts, etc.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348045,"byte_end":348099,"line_start":250,"line_end":250,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348104,"byte_end":348107,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348112,"byte_end":348180,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348185,"byte_end":348218,"line_start":253,"line_end":253,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349137,"byte_end":349149,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"out_of_range","qualname":"<Status>::out_of_range","value":"pub fn out_of_range<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range. E.g., seeking or reading\n past end of file.","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range. E.g., seeking or reading","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348333,"byte_end":348407,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ past end of file.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348412,"byte_end":348433,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348438,"byte_end":348441,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Unlike `InvalidArgument`, this error indicates a problem that may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348446,"byte_end":348518,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ fixed if the system state changes. For example, a 32-bit file system will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348523,"byte_end":348600,"line_start":262,"line_end":262,"column_start":5,"column_end":82}},{"value":"/ generate `InvalidArgument if asked to read at an offset that is not in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348605,"byte_end":348683,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ range [0,2^32-1], but it will generate `OutOfRange` if asked to read from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348688,"byte_end":348765,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ an offset past the current file size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348770,"byte_end":348811,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348816,"byte_end":348819,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ There is a fair bit of overlap between `FailedPrecondition` and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348824,"byte_end":348891,"line_start":267,"line_end":267,"column_start":5,"column_end":72}},{"value":"/ `OutOfRange`. We recommend using `OutOfRange` (the more specific error)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348896,"byte_end":348971,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ when it applies so that callers who are iterating through a space can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":348976,"byte_end":349049,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ easily look for an `OutOfRange` error to detect when they are done.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349054,"byte_end":349125,"line_start":270,"line_end":270,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349334,"byte_end":349347,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"unimplemented","qualname":"<Status>::unimplemented","value":"pub fn unimplemented<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported/enabled in this service.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported/enabled in this service.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349248,"byte_end":349322,"line_start":275,"line_end":275,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349616,"byte_end":349624,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"internal","qualname":"<Status>::internal","value":"pub fn internal<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Internal errors. Means some invariants expected by underlying system has\n been broken. If you see one of these errors, something is very broken.\n","sig":null,"attributes":[{"value":"/ Internal errors. Means some invariants expected by underlying system has","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349449,"byte_end":349525,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ been broken. If you see one of these errors, something is very broken.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349530,"byte_end":349604,"line_start":281,"line_end":281,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349996,"byte_end":350007,"line_start":291,"line_end":291,"column_start":12,"column_end":23},"name":"unavailable","qualname":"<Status>::unavailable","value":"pub fn unavailable<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The service is currently unavailable.  This is a most likely a transient\n condition and may be corrected by retrying with a back-off.","sig":null,"attributes":[{"value":"/ The service is currently unavailable.  This is a most likely a transient","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349721,"byte_end":349797,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ condition and may be corrected by retrying with a back-off.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349802,"byte_end":349865,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349870,"byte_end":349873,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349878,"byte_end":349946,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":349951,"byte_end":349984,"line_start":290,"line_end":290,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":350161,"byte_end":350170,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"data_loss","qualname":"<Status>::data_loss","value":"pub fn data_loss<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":350107,"byte_end":350149,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":350368,"byte_end":350383,"line_start":302,"line_end":302,"column_start":12,"column_end":27},"name":"unauthenticated","qualname":"<Status>::unauthenticated","value":"pub fn unauthenticated<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials for the\n operation.\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":350267,"byte_end":350337,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":350342,"byte_end":350356,"line_start":301,"line_end":301,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":354916,"byte_end":354931,"line_start":415,"line_end":415,"column_start":12,"column_end":27},"name":"from_header_map","qualname":"<Status>::from_header_map","value":"pub fn from_header_map(&HeaderMap) -> Option<Status>","parent":null,"children":[],"decl_id":null,"docs":" Extract a `Status` from a hyper `HeaderMap`.\n","sig":null,"attributes":[{"value":"/ Extract a `Status` from a hyper `HeaderMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":354856,"byte_end":354904,"line_start":414,"line_end":414,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":356866,"byte_end":356870,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"code","qualname":"<Status>::code","value":"pub fn code(&Self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the gRPC `Code` of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the gRPC `Code` of this `Status`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":356813,"byte_end":356854,"line_start":463,"line_end":463,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":356977,"byte_end":356984,"line_start":469,"line_end":469,"column_start":12,"column_end":19},"name":"message","qualname":"<Status>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the text error message of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the text error message of this `Status`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":356917,"byte_end":356965,"line_start":468,"line_end":468,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":357097,"byte_end":357104,"line_start":474,"line_end":474,"column_start":12,"column_end":19},"name":"details","qualname":"<Status>::details","value":"pub fn details(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the opaque error details of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the opaque error details of this `Status`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":357035,"byte_end":357085,"line_start":473,"line_end":473,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":357211,"byte_end":357219,"line_start":479,"line_end":479,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Status>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":357156,"byte_end":357199,"line_start":478,"line_end":478,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":357342,"byte_end":357354,"line_start":484,"line_end":484,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Status>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the custom metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":357279,"byte_end":357330,"line_start":483,"line_end":483,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":358733,"byte_end":358745,"line_start":523,"line_end":523,"column_start":12,"column_end":24},"name":"with_details","qualname":"<Status>::with_details","value":"pub fn with_details<impl Into<String>: Into<String>>(Code, impl Into<String>,\n                                                     Bytes) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and binary details field.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and binary details field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":358635,"byte_end":358721,"line_start":522,"line_end":522,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":359001,"byte_end":359014,"line_start":528,"line_end":528,"column_start":12,"column_end":25},"name":"with_metadata","qualname":"<Status>::with_metadata","value":"pub fn with_metadata<impl Into<String>: Into<String>>(Code, impl Into<String>,\n                                                      MetadataMap) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and custom metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":358909,"byte_end":358989,"line_start":527,"line_end":527,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":359293,"byte_end":359318,"line_start":533,"line_end":533,"column_start":12,"column_end":37},"name":"with_details_and_metadata","qualname":"<Status>::with_details_and_metadata","value":"pub fn with_details_and_metadata<impl Into<String>: Into<String>>(Code,\n                                                                  impl Into<String>,\n                                                                  Bytes,\n                                                                  MetadataMap)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, binary details field and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, binary details field and custom metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":359180,"byte_end":359281,"line_start":532,"line_end":532,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":359721,"byte_end":359728,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"to_http","qualname":"<Status>::to_http","value":"pub fn to_http(Self) -> http::Response<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Build an `http::Response` from the given `Status`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":359611,"byte_end":359650,"line_start":548,"line_end":548,"column_start":5,"column_end":44}},{"value":"/ Build an `http::Response` from the given `Status`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":359655,"byte_end":359709,"line_start":549,"line_end":549,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365880,"byte_end":365888,"line_start":743,"line_end":743,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Code>::from_i32","value":"pub fn from_i32(i32) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the `Code` that represents the integer, if known.","sig":null,"attributes":[{"value":"/ Get the `Code` that represents the integer, if known.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365744,"byte_end":365801,"line_start":740,"line_end":740,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365806,"byte_end":365809,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ If not known, returns `Code::Unknown` (surprise!).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365814,"byte_end":365868,"line_start":742,"line_end":742,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":366176,"byte_end":366186,"line_start":750,"line_end":750,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Code>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Convert the string representation of a `Code` (as stored, for example, in the `grpc-status`\n header in a response) into a `Code`. Returns `Code::Unknown` if the code string is not a\n valid gRPC status code.\n","sig":null,"attributes":[{"value":"/ Convert the string representation of a `Code` (as stored, for example, in the `grpc-status`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365940,"byte_end":366035,"line_start":747,"line_end":747,"column_start":5,"column_end":100}},{"value":"/ header in a response) into a `Code`. Returns `Code::Unknown` if the code string is not a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":366040,"byte_end":366132,"line_start":748,"line_end":748,"column_start":5,"column_end":97}},{"value":"/ valid gRPC status code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":366137,"byte_end":366164,"line_start":749,"line_end":749,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":3317},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3334},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3347},{"krate":0,"index":3350},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3360},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3370}],"decl_id":null,"docs":" Codegen exports used by `tonic-build`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"codegen\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4670,"byte_end":4697,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ Codegen exports used by `tonic-build`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374068,"byte_end":374110,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3353},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374374,"byte_end":374382,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"StdError","qualname":"::codegen::StdError","value":"Box<dyn std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3360},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374635,"byte_end":374644,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::codegen::BoxFuture","value":"self::Pin<Box<dyn self::Future<Output = Result<T, E>> + Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3363},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374736,"byte_end":374745,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::codegen::BoxStream","value":"self::Pin<Box<dyn futures_core::Stream<Item = Result<T, crate::Status>> +\n              Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3365},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374856,"byte_end":374860,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"http","qualname":"::codegen::http","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3366}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5143},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374913,"byte_end":374918,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Never","qualname":"::codegen::Never","value":"pub enum Never { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3370},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":375107,"byte_end":375117,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"empty_body","qualname":"::codegen::empty_body","value":"pub fn empty_body() -> crate::body::BoxBody","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7694,"byte_end":7698,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":103},{"krate":0,"index":112},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":16825,"byte_end":16829,"line_start":328,"line_end":328,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":17211,"byte_end":17215,"line_start":340,"line_end":340,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18806,"byte_end":18807,"line_start":32,"line_end":32,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22087,"byte_end":22096,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22223,"byte_end":22232,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22669,"byte_end":22678,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22780,"byte_end":22789,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":23194,"byte_end":23203,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25580,"byte_end":25589,"line_start":36,"line_end":36,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25797,"byte_end":25806,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28143,"byte_end":28152,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":35391,"byte_end":35400,"line_start":309,"line_end":309,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":37885,"byte_end":37894,"line_start":374,"line_end":374,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/encode.rs","byte_start":43149,"byte_end":43159,"line_start":156,"line_end":156,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/encode.rs","byte_start":43617,"byte_end":43627,"line_start":179,"line_end":179,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":45507,"byte_end":45517,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":45617,"byte_end":45627,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46163,"byte_end":46175,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46602,"byte_end":46614,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54679,"byte_end":54684,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":55659,"byte_end":55664,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":55790,"byte_end":55796,"line_start":103,"line_end":103,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":57813,"byte_end":57819,"line_start":165,"line_end":165,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":57949,"byte_end":57969,"line_start":173,"line_end":173,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58080,"byte_end":58100,"line_start":179,"line_end":179,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58244,"byte_end":58264,"line_start":185,"line_end":185,"column_start":16,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58493,"byte_end":58518,"line_start":194,"line_end":194,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58649,"byte_end":58674,"line_start":200,"line_end":200,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58786,"byte_end":58811,"line_start":206,"line_end":206,"column_start":16,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59854,"byte_end":59865,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63476,"byte_end":63487,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63726,"byte_end":63737,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63846,"byte_end":63857,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63978,"byte_end":63989,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64097,"byte_end":64108,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64274,"byte_end":64285,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64417,"byte_end":64435,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64606,"byte_end":64617,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64762,"byte_end":64767,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64954,"byte_end":64965,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":65299,"byte_end":65310,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":66496,"byte_end":66507,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":66982,"byte_end":67000,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":67146,"byte_end":67164,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":67238,"byte_end":67256,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73563,"byte_end":73574,"line_start":201,"line_end":201,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":109040,"byte_end":109044,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":109871,"byte_end":109878,"line_start":1248,"line_end":1248,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":110740,"byte_end":110750,"line_start":1275,"line_end":1275,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":111091,"byte_end":111095,"line_start":1291,"line_end":1291,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":111604,"byte_end":111608,"line_start":1309,"line_end":1309,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":111666,"byte_end":111672,"line_start":1313,"line_end":1313,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":112259,"byte_end":112268,"line_start":1334,"line_end":1334,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":112891,"byte_end":112900,"line_start":1355,"line_end":1355,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":113456,"byte_end":113465,"line_start":1378,"line_end":1378,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":113834,"byte_end":113846,"line_start":1394,"line_end":1394,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114136,"byte_end":114148,"line_start":1407,"line_end":1407,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114407,"byte_end":114412,"line_start":1420,"line_end":1420,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117376,"byte_end":117387,"line_start":1525,"line_end":1525,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119775,"byte_end":119788,"line_start":1605,"line_end":1605,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129434,"byte_end":129447,"line_start":1906,"line_end":1906,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130274,"byte_end":130280,"line_start":1941,"line_end":1941,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":131154,"byte_end":131160,"line_start":1968,"line_end":1968,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":131315,"byte_end":131321,"line_start":1974,"line_end":1974,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":133055,"byte_end":133066,"line_start":2030,"line_end":2030,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":133656,"byte_end":133667,"line_start":2050,"line_end":2050,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136610,"byte_end":136621,"line_start":2138,"line_end":2138,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":137880,"byte_end":137891,"line_start":2179,"line_end":2179,"column_start":51,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":141203,"byte_end":141209,"line_start":2286,"line_end":2286,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":143095,"byte_end":143101,"line_start":2345,"line_end":2345,"column_start":51,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145957,"byte_end":145968,"line_start":2433,"line_end":2433,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":146205,"byte_end":146216,"line_start":2441,"line_end":2441,"column_start":63,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":146823,"byte_end":146829,"line_start":2463,"line_end":2463,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":147045,"byte_end":147051,"line_start":2471,"line_end":2471,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156199,"byte_end":156212,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164323,"byte_end":164336,"line_start":287,"line_end":287,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167604,"byte_end":167617,"line_start":393,"line_end":393,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":168101,"byte_end":168114,"line_start":410,"line_end":410,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":168243,"byte_end":168256,"line_start":417,"line_end":417,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":168423,"byte_end":168436,"line_start":423,"line_end":423,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":170492,"byte_end":170505,"line_start":509,"line_end":509,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":170742,"byte_end":170747,"line_start":518,"line_end":518,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":170937,"byte_end":170950,"line_start":525,"line_end":525,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171078,"byte_end":171088,"line_start":534,"line_end":534,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171189,"byte_end":171199,"line_start":540,"line_end":540,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171348,"byte_end":171358,"line_start":546,"line_end":546,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171377,"byte_end":171390,"line_start":548,"line_end":548,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171501,"byte_end":171514,"line_start":554,"line_end":554,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171773,"byte_end":171786,"line_start":565,"line_end":565,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172175,"byte_end":172188,"line_start":576,"line_end":576,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172236,"byte_end":172249,"line_start":578,"line_end":578,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172436,"byte_end":172449,"line_start":585,"line_end":585,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172610,"byte_end":172623,"line_start":592,"line_end":592,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172787,"byte_end":172800,"line_start":599,"line_end":599,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172954,"byte_end":172967,"line_start":606,"line_end":606,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":173157,"byte_end":173170,"line_start":613,"line_end":613,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174124,"byte_end":174137,"line_start":648,"line_end":648,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174284,"byte_end":174297,"line_start":655,"line_end":655,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174502,"byte_end":174508,"line_start":662,"line_end":662,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174670,"byte_end":174676,"line_start":669,"line_end":669,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":175314,"byte_end":175327,"line_start":690,"line_end":690,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":175528,"byte_end":175541,"line_start":700,"line_end":700,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183579,"byte_end":183583,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1421},{"krate":0,"index":1426},{"krate":0,"index":1433},{"krate":0,"index":1438},{"krate":0,"index":1443},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":195872,"byte_end":195876,"line_start":438,"line_end":438,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197395,"byte_end":197396,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198291,"byte_end":198292,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199148,"byte_end":199149,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":200059,"byte_end":200060,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202434,"byte_end":202435,"line_start":46,"line_end":46,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203355,"byte_end":203371,"line_start":88,"line_end":88,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204061,"byte_end":204079,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204355,"byte_end":204373,"line_start":129,"line_end":129,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204725,"byte_end":204743,"line_start":141,"line_end":141,"column_start":66,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206026,"byte_end":206044,"line_start":178,"line_end":178,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206293,"byte_end":206307,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206682,"byte_end":206696,"line_start":214,"line_end":214,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220184,"byte_end":220192,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1716},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231330,"byte_end":231338,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232028,"byte_end":232036,"line_start":406,"line_end":406,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232189,"byte_end":232197,"line_start":414,"line_end":414,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232370,"byte_end":232378,"line_start":422,"line_end":422,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232544,"byte_end":232552,"line_start":430,"line_end":430,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232688,"byte_end":232696,"line_start":436,"line_end":436,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214386,"byte_end":214393,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":217727,"byte_end":217734,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":218219,"byte_end":218233,"line_start":196,"line_end":196,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":218561,"byte_end":218568,"line_start":206,"line_end":206,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":218706,"byte_end":218720,"line_start":212,"line_end":212,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266309,"byte_end":266323,"line_start":74,"line_end":74,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266501,"byte_end":266511,"line_start":81,"line_end":81,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266718,"byte_end":266727,"line_start":91,"line_end":91,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266942,"byte_end":266954,"line_start":101,"line_end":101,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/incoming.rs","byte_start":272306,"byte_end":272317,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/incoming.rs","byte_start":272654,"byte_end":272665,"line_start":147,"line_end":147,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":273318,"byte_end":273330,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":273445,"byte_end":273457,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":274077,"byte_end":274091,"line_start":54,"line_end":54,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":275121,"byte_end":275135,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":275371,"byte_end":275385,"line_start":102,"line_end":102,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235991,"byte_end":236004,"line_start":107,"line_end":107,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236971,"byte_end":236977,"line_start":138,"line_end":138,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237034,"byte_end":237040,"line_start":142,"line_end":142,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237284,"byte_end":237290,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":249922,"byte_end":249928,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":250638,"byte_end":250644,"line_start":546,"line_end":546,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2216},{"krate":0,"index":2220},{"krate":0,"index":2225},{"krate":0,"index":2232},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":258736,"byte_end":258742,"line_start":751,"line_end":751,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":258989,"byte_end":258992,"line_start":762,"line_end":762,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":260197,"byte_end":260206,"line_start":806,"line_end":806,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":260863,"byte_end":260866,"line_start":825,"line_end":825,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":261224,"byte_end":261231,"line_start":839,"line_end":839,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":263606,"byte_end":263619,"line_start":910,"line_end":910,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":276845,"byte_end":276850,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":277728,"byte_end":277733,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":278039,"byte_end":278044,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":278177,"byte_end":278182,"line_start":80,"line_end":80,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/add_origin.rs","byte_start":279241,"byte_end":279250,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/add_origin.rs","byte_start":279398,"byte_end":279407,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":281682,"byte_end":281692,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2442},{"krate":0,"index":2448},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":284182,"byte_end":284192,"line_start":95,"line_end":95,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":284584,"byte_end":284594,"line_start":109,"line_end":109,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":284699,"byte_end":284709,"line_start":117,"line_end":117,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connector.rs","byte_start":285494,"byte_end":285503,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connector.rs","byte_start":286398,"byte_end":286407,"line_start":61,"line_end":61,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","byte_start":287992,"byte_end":288012,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","byte_start":288162,"byte_end":288182,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","byte_start":289446,"byte_end":289466,"line_start":55,"line_end":55,"column_start":38,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":289915,"byte_end":289926,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":290136,"byte_end":290147,"line_start":30,"line_end":30,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":291582,"byte_end":291596,"line_start":78,"line_end":78,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2620},{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294907,"byte_end":294921,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":295128,"byte_end":295142,"line_start":172,"line_end":172,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299100,"byte_end":299101,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299206,"byte_end":299213,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299335,"byte_end":299342,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299447,"byte_end":299454,"line_start":31,"line_end":31,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299659,"byte_end":299666,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299892,"byte_end":299899,"line_start":52,"line_end":52,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":300776,"byte_end":300784,"line_start":85,"line_end":85,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":301616,"byte_end":301624,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":302053,"byte_end":302061,"line_start":135,"line_end":135,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":303630,"byte_end":303639,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":304037,"byte_end":304046,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":307846,"byte_end":307855,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":308628,"byte_end":308642,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":308943,"byte_end":308957,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":309808,"byte_end":309814,"line_start":18,"line_end":18,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":310069,"byte_end":310075,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":310408,"byte_end":310414,"line_start":40,"line_end":40,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311028,"byte_end":311034,"line_start":62,"line_end":62,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311316,"byte_end":311318,"line_start":77,"line_end":77,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311596,"byte_end":311598,"line_start":87,"line_end":87,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":312495,"byte_end":312497,"line_start":118,"line_end":118,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":312723,"byte_end":312725,"line_start":128,"line_end":128,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/user_agent.rs","byte_start":313145,"byte_end":313154,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/user_agent.rs","byte_start":313741,"byte_end":313750,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315102,"byte_end":315113,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315787,"byte_end":315798,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316580,"byte_end":316590,"line_start":14,"line_end":14,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317971,"byte_end":317981,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323801,"byte_end":323808,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330969,"byte_end":330970,"line_start":346,"line_end":346,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331081,"byte_end":331088,"line_start":352,"line_end":352,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331191,"byte_end":331192,"line_start":358,"line_end":358,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331407,"byte_end":331414,"line_start":370,"line_end":370,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331603,"byte_end":331604,"line_start":382,"line_end":382,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334577,"byte_end":334585,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341632,"byte_end":341636,"line_start":110,"line_end":110,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":343599,"byte_end":343603,"line_start":150,"line_end":150,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":343775,"byte_end":343781,"line_start":158,"line_end":158,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3195},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":361259,"byte_end":361265,"line_start":599,"line_end":599,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":362180,"byte_end":362186,"line_start":633,"line_end":633,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":362328,"byte_end":362333,"line_start":640,"line_end":640,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":362442,"byte_end":362448,"line_start":646,"line_end":646,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":363532,"byte_end":363538,"line_start":673,"line_end":673,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":363853,"byte_end":363859,"line_start":686,"line_end":686,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365733,"byte_end":365737,"line_start":739,"line_end":739,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":368584,"byte_end":368588,"line_start":807,"line_end":807,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3280}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374950,"byte_end":374955,"line_start":29,"line_end":29,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":375090,"byte_end":375095,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3921,"byte_end":3925,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3935,"byte_end":3941,"line_start":88,"line_end":88,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3951,"byte_end":3956,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":174}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3966,"byte_end":3974,"line_start":90,"line_end":90,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":508}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":3984,"byte_end":3990,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1347}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4000,"byte_end":4007,"line_start":92,"line_end":92,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1544}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/mod.rs","byte_start":200468,"byte_end":200479,"line_start":3,"line_end":3,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1545}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4101,"byte_end":4110,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1637}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211137,"byte_end":211144,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1638}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/mod.rs","byte_start":211154,"byte_end":211160,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1866}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/lib.rs","byte_start":4757,"byte_end":4764,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3317}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":7694,"byte_end":7698,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":16825,"byte_end":16829,"line_start":328,"line_end":328,"column_start":26,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/grpc.rs","byte_start":17211,"byte_end":17215,"line_start":340,"line_end":340,"column_start":36,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/client/service.rs","byte_start":18806,"byte_end":18807,"line_start":32,"line_end":32,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":152}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22087,"byte_end":22096,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22223,"byte_end":22232,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3372},"to":{"krate":21,"index":42}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22669,"byte_end":22678,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":22780,"byte_end":22789,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/buffer.rs","byte_start":23194,"byte_end":23203,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3379},"to":{"krate":21,"index":140}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25580,"byte_end":25589,"line_start":36,"line_end":36,"column_start":19,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":3058}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":25797,"byte_end":25806,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":28143,"byte_end":28152,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":35391,"byte_end":35400,"line_start":309,"line_end":309,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":277},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/decode.rs","byte_start":37885,"byte_end":37894,"line_start":374,"line_end":374,"column_start":24,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/encode.rs","byte_start":43149,"byte_end":43159,"line_start":156,"line_end":156,"column_start":9,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/encode.rs","byte_start":43617,"byte_end":43627,"line_start":179,"line_end":179,"column_start":18,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3598},"to":{"krate":20,"index":406}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":45507,"byte_end":45517,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3604},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":45617,"byte_end":45627,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3604},"to":{"krate":0,"index":493}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46163,"byte_end":46175,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3616},"to":{"krate":0,"index":500}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/prost.rs","byte_start":46602,"byte_end":46614,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3629},"to":{"krate":0,"index":504}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codec/mod.rs","byte_start":20301,"byte_end":20308,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2995},"to":{"krate":0,"index":493}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54157,"byte_end":54162,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2638},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54165,"byte_end":54167,"line_start":47,"line_end":47,"column_start":34,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2673},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54170,"byte_end":54179,"line_start":47,"line_end":47,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2668},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54182,"byte_end":54186,"line_start":47,"line_end":47,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":9755},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54211,"byte_end":54217,"line_start":47,"line_end":47,"column_start":80,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":54679,"byte_end":54684,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3649},"to":{"krate":0,"index":538}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":55659,"byte_end":55664,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3649},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":55790,"byte_end":55796,"line_start":103,"line_end":103,"column_start":39,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3663},"to":{"krate":0,"index":538}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":57813,"byte_end":57819,"line_start":165,"line_end":165,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3663},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":57949,"byte_end":57969,"line_start":173,"line_end":173,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58080,"byte_end":58100,"line_start":179,"line_end":179,"column_start":23,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3642},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58244,"byte_end":58264,"line_start":185,"line_end":185,"column_start":16,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3642},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58493,"byte_end":58518,"line_start":194,"line_end":194,"column_start":6,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58649,"byte_end":58674,"line_start":200,"line_end":200,"column_start":23,"column_end":48},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3677},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/encoding.rs","byte_start":58786,"byte_end":58811,"line_start":206,"line_end":206,"column_start":16,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3677},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":59854,"byte_end":59865,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63476,"byte_end":63487,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63726,"byte_end":63737,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63846,"byte_end":63857,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":63978,"byte_end":63989,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64097,"byte_end":64108,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64274,"byte_end":64285,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64417,"byte_end":64435,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64606,"byte_end":64617,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64762,"byte_end":64767,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":21,"index":526},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":64954,"byte_end":64965,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":65299,"byte_end":65310,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":66496,"byte_end":66507,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":66982,"byte_end":67000,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":67146,"byte_end":67164,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/key.rs","byte_start":67238,"byte_end":67256,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3707},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":73563,"byte_end":73574,"line_start":201,"line_end":201,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":109040,"byte_end":109044,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":109871,"byte_end":109878,"line_start":1248,"line_end":1248,"column_start":23,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":110740,"byte_end":110750,"line_start":1275,"line_end":1275,"column_start":42,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3757},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":111091,"byte_end":111095,"line_start":1291,"line_end":1291,"column_start":23,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":111604,"byte_end":111608,"line_start":1309,"line_end":1309,"column_start":32,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":111666,"byte_end":111672,"line_start":1313,"line_end":1313,"column_start":23,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3783},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":112259,"byte_end":112268,"line_start":1334,"line_end":1334,"column_start":23,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":112891,"byte_end":112900,"line_start":1355,"line_end":1355,"column_start":42,"column_end":51},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3817},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":113456,"byte_end":113465,"line_start":1378,"line_end":1378,"column_start":53,"column_end":62},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3817},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":113834,"byte_end":113846,"line_start":1394,"line_end":1394,"column_start":42,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3826},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114136,"byte_end":114148,"line_start":1407,"line_end":1407,"column_start":53,"column_end":65},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3826},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":114407,"byte_end":114412,"line_start":1420,"line_end":1420,"column_start":29,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":117376,"byte_end":117387,"line_start":1525,"line_end":1525,"column_start":29,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":119775,"byte_end":119788,"line_start":1605,"line_end":1605,"column_start":29,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":129434,"byte_end":129447,"line_start":1906,"line_end":1906,"column_start":46,"column_end":59},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":130274,"byte_end":130280,"line_start":1941,"line_end":1941,"column_start":29,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":131154,"byte_end":131160,"line_start":1968,"line_end":1968,"column_start":43,"column_end":49},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3835},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":131315,"byte_end":131321,"line_start":1974,"line_end":1974,"column_start":46,"column_end":52},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3835},"to":{"krate":2,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":132294,"byte_end":132300,"line_start":2009,"line_end":2009,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":919},"to":{"krate":0,"index":917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":133055,"byte_end":133066,"line_start":2030,"line_end":2030,"column_start":44,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":133656,"byte_end":133667,"line_start":2050,"line_end":2050,"column_start":53,"column_end":64},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":135569,"byte_end":135575,"line_start":2108,"line_end":2108,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":973},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":136610,"byte_end":136621,"line_start":2138,"line_end":2138,"column_start":44,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":973}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":137880,"byte_end":137891,"line_start":2179,"line_end":2179,"column_start":51,"column_end":62},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":141203,"byte_end":141209,"line_start":2286,"line_end":2286,"column_start":44,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":973}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":143095,"byte_end":143101,"line_start":2345,"line_end":2345,"column_start":51,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145357,"byte_end":145363,"line_start":2415,"line_end":2415,"column_start":46,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1046},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":145957,"byte_end":145968,"line_start":2433,"line_end":2433,"column_start":40,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":1046}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":146205,"byte_end":146216,"line_start":2441,"line_end":2441,"column_start":63,"column_end":74},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":146823,"byte_end":146829,"line_start":2463,"line_end":2463,"column_start":21,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":1046}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/map.rs","byte_start":147045,"byte_end":147051,"line_start":2471,"line_end":2471,"column_start":44,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":156199,"byte_end":156212,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":164323,"byte_end":164336,"line_start":287,"line_end":287,"column_start":6,"column_end":19},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":167604,"byte_end":167617,"line_start":393,"line_end":393,"column_start":6,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":168101,"byte_end":168114,"line_start":410,"line_end":410,"column_start":41,"column_end":54},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":168243,"byte_end":168256,"line_start":417,"line_end":417,"column_start":40,"column_end":53},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":168423,"byte_end":168436,"line_start":423,"line_end":423,"column_start":57,"column_end":70},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":170492,"byte_end":170505,"line_start":509,"line_end":509,"column_start":18,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":170742,"byte_end":170747,"line_start":518,"line_end":518,"column_start":53,"column_end":58},"kind":{"Impl":{"id":88}},"from":{"krate":21,"index":526},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":170937,"byte_end":170950,"line_start":525,"line_end":525,"column_start":61,"column_end":74},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171078,"byte_end":171088,"line_start":534,"line_end":534,"column_start":6,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171189,"byte_end":171199,"line_start":540,"line_end":540,"column_start":23,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3882},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171348,"byte_end":171358,"line_start":546,"line_end":546,"column_start":16,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3882},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171377,"byte_end":171390,"line_start":548,"line_end":548,"column_start":15,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171501,"byte_end":171514,"line_start":554,"line_end":554,"column_start":15,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":171773,"byte_end":171786,"line_start":565,"line_end":565,"column_start":39,"column_end":52},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172175,"byte_end":172188,"line_start":576,"line_end":576,"column_start":32,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172236,"byte_end":172249,"line_start":578,"line_end":578,"column_start":40,"column_end":53},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172436,"byte_end":172449,"line_start":585,"line_end":585,"column_start":33,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172610,"byte_end":172623,"line_start":592,"line_end":592,"column_start":44,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172787,"byte_end":172800,"line_start":599,"line_end":599,"column_start":45,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":172954,"byte_end":172967,"line_start":606,"line_end":606,"column_start":45,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":173157,"byte_end":173170,"line_start":613,"line_end":613,"column_start":46,"column_end":59},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174124,"byte_end":174137,"line_start":648,"line_end":648,"column_start":47,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174284,"byte_end":174297,"line_start":655,"line_end":655,"column_start":48,"column_end":61},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174502,"byte_end":174508,"line_start":662,"line_end":662,"column_start":58,"column_end":64},"kind":{"Impl":{"id":107}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":174670,"byte_end":174676,"line_start":669,"line_end":669,"column_start":59,"column_end":65},"kind":{"Impl":{"id":108}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":175314,"byte_end":175327,"line_start":690,"line_end":690,"column_start":61,"column_end":74},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/metadata/value.rs","byte_start":175528,"byte_end":175541,"line_start":700,"line_end":700,"column_start":62,"column_end":75},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":183579,"byte_end":183583,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/grpc.rs","byte_start":195872,"byte_end":195876,"line_start":438,"line_end":438,"column_start":36,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":197395,"byte_end":197396,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1480},"to":{"krate":0,"index":1474}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":198291,"byte_end":198292,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1493},"to":{"krate":0,"index":1486}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":199148,"byte_end":199149,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":1501}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/server/service.rs","byte_start":200059,"byte_end":200060,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1520},"to":{"krate":0,"index":1513}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":202434,"byte_end":202435,"line_start":46,"line_end":46,"column_start":25,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":1579}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":203355,"byte_end":203371,"line_start":88,"line_end":88,"column_start":25,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3902},"to":{"krate":41,"index":71}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204061,"byte_end":204079,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204355,"byte_end":204373,"line_start":129,"line_end":129,"column_start":27,"column_end":45},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3913},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":204725,"byte_end":204743,"line_start":141,"line_end":141,"column_start":66,"column_end":84},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3913},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206026,"byte_end":206044,"line_start":178,"line_end":178,"column_start":47,"column_end":65},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3913},"to":{"krate":0,"index":2158}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206293,"byte_end":206307,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/service/interceptor.rs","byte_start":206682,"byte_end":206696,"line_start":214,"line_end":214,"column_start":26,"column_end":40},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":12910}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":220184,"byte_end":220192,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":231330,"byte_end":231338,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232028,"byte_end":232036,"line_start":406,"line_end":406,"column_start":25,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232189,"byte_end":232197,"line_start":414,"line_end":414,"column_start":26,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232370,"byte_end":232378,"line_start":422,"line_end":422,"column_start":32,"column_end":40},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232544,"byte_end":232552,"line_start":430,"line_end":430,"column_start":21,"column_end":29},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/endpoint.rs","byte_start":232688,"byte_end":232696,"line_start":436,"line_end":436,"column_start":18,"column_end":26},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":214386,"byte_end":214393,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":217727,"byte_end":217734,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4031},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":218219,"byte_end":218233,"line_start":196,"line_end":196,"column_start":17,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":12910}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":218561,"byte_end":218568,"line_start":206,"line_end":206,"column_start":21,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4031},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/channel/mod.rs","byte_start":218706,"byte_end":218720,"line_start":212,"line_end":212,"column_start":21,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266309,"byte_end":266323,"line_start":74,"line_end":74,"column_start":6,"column_end":20},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266501,"byte_end":266511,"line_start":81,"line_end":81,"column_start":20,"column_end":30},"kind":{"Impl":{"id":148}},"from":{"krate":63,"index":6402},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266718,"byte_end":266727,"line_start":91,"line_end":91,"column_start":20,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":49,"index":5571},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/conn.rs","byte_start":266942,"byte_end":266954,"line_start":101,"line_end":101,"column_start":31,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":49,"index":4310},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/incoming.rs","byte_start":272306,"byte_end":272317,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/incoming.rs","byte_start":272654,"byte_end":272665,"line_start":147,"line_end":147,"column_start":17,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1949},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":273318,"byte_end":273330,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":273445,"byte_end":273457,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4042},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":274077,"byte_end":274091,"line_start":54,"line_end":54,"column_start":32,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4088},"to":{"krate":2,"index":12910}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":275121,"byte_end":275135,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/recover_error.rs","byte_start":275371,"byte_end":275385,"line_start":102,"line_end":102,"column_start":29,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4128},"to":{"krate":20,"index":406}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":235991,"byte_end":236004,"line_start":107,"line_end":107,"column_start":36,"column_end":49},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4163},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":236971,"byte_end":236977,"line_start":138,"line_end":138,"column_start":43,"column_end":49},"kind":{"Impl":{"id":169}},"from":{"krate":42,"index":5768},"to":{"krate":0,"index":2158}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237034,"byte_end":237040,"line_start":142,"line_end":142,"column_start":6,"column_end":12},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":237284,"byte_end":237290,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":249922,"byte_end":249928,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":250638,"byte_end":250644,"line_start":546,"line_end":546,"column_start":15,"column_end":21},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":258736,"byte_end":258742,"line_start":751,"line_end":751,"column_start":24,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4131},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":258989,"byte_end":258992,"line_start":762,"line_end":762,"column_start":45,"column_end":48},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2245},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":260197,"byte_end":260206,"line_start":806,"line_end":806,"column_start":32,"column_end":41},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4211},"to":{"krate":2,"index":12910}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":260863,"byte_end":260866,"line_start":825,"line_end":825,"column_start":24,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2245},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":261224,"byte_end":261231,"line_start":839,"line_end":839,"column_start":49,"column_end":56},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2267},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/server/mod.rs","byte_start":263606,"byte_end":263619,"line_start":910,"line_end":910,"column_start":33,"column_end":46},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4215},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":276845,"byte_end":276850,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":277728,"byte_end":277733,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":278039,"byte_end":278044,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/error.rs","byte_start":278177,"byte_end":278182,"line_start":80,"line_end":80,"column_start":19,"column_end":24},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2301},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/add_origin.rs","byte_start":279241,"byte_end":279250,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/add_origin.rs","byte_start":279398,"byte_end":279407,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4232},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":281682,"byte_end":281692,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":284182,"byte_end":284192,"line_start":95,"line_end":95,"column_start":27,"column_end":37},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2439},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":284584,"byte_end":284594,"line_start":109,"line_end":109,"column_start":15,"column_end":25},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2439},"to":{"krate":42,"index":1289}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connection.rs","byte_start":284699,"byte_end":284709,"line_start":117,"line_end":117,"column_start":21,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connector.rs","byte_start":285494,"byte_end":285503,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/connector.rs","byte_start":286398,"byte_end":286407,"line_start":61,"line_end":61,"column_start":26,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2490},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","byte_start":287992,"byte_end":288012,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","byte_start":288162,"byte_end":288182,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2542},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/discover.rs","byte_start":289446,"byte_end":289466,"line_start":55,"line_end":55,"column_start":38,"column_end":58},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2542},"to":{"krate":2,"index":3058}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":289915,"byte_end":289926,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":290136,"byte_end":290147,"line_start":30,"line_end":30,"column_start":48,"column_end":59},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4239},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":291582,"byte_end":291596,"line_start":78,"line_end":78,"column_start":28,"column_end":42},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4324},"to":{"krate":2,"index":12910}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":294907,"byte_end":294921,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4328},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/grpc_timeout.rs","byte_start":295128,"byte_end":295142,"line_start":172,"line_end":172,"column_start":28,"column_end":42},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4328},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299040,"byte_end":299049,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":49,"index":228},"to":{"krate":0,"index":2665}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299052,"byte_end":299062,"line_start":11,"line_end":11,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":49,"index":307},"to":{"krate":0,"index":2665}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299065,"byte_end":299069,"line_start":11,"line_end":11,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3017},"to":{"krate":0,"index":2665}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299100,"byte_end":299101,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2667},"to":{"krate":0,"index":2665}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299206,"byte_end":299213,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299335,"byte_end":299342,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2668},"to":{"krate":63,"index":3970}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299447,"byte_end":299454,"line_start":31,"line_end":31,"column_start":20,"column_end":27},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2668},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299659,"byte_end":299666,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2668},"to":{"krate":49,"index":228}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":299892,"byte_end":299899,"line_start":52,"line_end":52,"column_start":21,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2668},"to":{"krate":49,"index":307}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":300776,"byte_end":300784,"line_start":85,"line_end":85,"column_start":10,"column_end":18},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":301616,"byte_end":301624,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2685},"to":{"krate":49,"index":228}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/io.rs","byte_start":302053,"byte_end":302061,"line_start":135,"line_end":135,"column_start":25,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2685},"to":{"krate":49,"index":307}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":303630,"byte_end":303639,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":304037,"byte_end":304046,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2740},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":307846,"byte_end":307855,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":308628,"byte_end":308642,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/reconnect.rs","byte_start":308943,"byte_end":308957,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4813},"to":{"krate":2,"index":12910}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":309808,"byte_end":309814,"line_start":18,"line_end":18,"column_start":21,"column_end":27},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":310069,"byte_end":310075,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":310408,"byte_end":310414,"line_start":40,"line_end":40,"column_start":42,"column_end":48},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4861},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311028,"byte_end":311034,"line_start":62,"line_end":62,"column_start":45,"column_end":51},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4861},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311316,"byte_end":311318,"line_start":77,"line_end":77,"column_start":21,"column_end":23},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":311596,"byte_end":311598,"line_start":87,"line_end":87,"column_start":42,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2833},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":312495,"byte_end":312497,"line_start":118,"line_end":118,"column_start":45,"column_end":47},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2833},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/router.rs","byte_start":312723,"byte_end":312725,"line_start":128,"line_end":128,"column_start":36,"column_end":38},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2833},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/user_agent.rs","byte_start":313145,"byte_end":313154,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/service/user_agent.rs","byte_start":313741,"byte_end":313750,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4871},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315102,"byte_end":315113,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/transport/tls.rs","byte_start":315787,"byte_end":315798,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4878},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":316580,"byte_end":316590,"line_start":14,"line_end":14,"column_start":6,"column_end":16},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/extensions.rs","byte_start":317971,"byte_end":317981,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2979},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":322246,"byte_end":322252,"line_start":49,"line_end":49,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3078},"to":{"krate":0,"index":3030}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323512,"byte_end":323518,"line_start":87,"line_end":87,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3078},"to":{"krate":0,"index":3033}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":323801,"byte_end":323808,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":330969,"byte_end":330970,"line_start":346,"line_end":346,"column_start":28,"column_end":29},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3060},"to":{"krate":0,"index":3030}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331081,"byte_end":331088,"line_start":352,"line_end":352,"column_start":28,"column_end":35},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4884},"to":{"krate":0,"index":3030}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331191,"byte_end":331192,"line_start":358,"line_end":358,"column_start":34,"column_end":35},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3066},"to":{"krate":0,"index":3033}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331407,"byte_end":331414,"line_start":370,"line_end":370,"column_start":34,"column_end":41},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4884},"to":{"krate":0,"index":3033}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/request.rs","byte_start":331603,"byte_end":331604,"line_start":382,"line_end":382,"column_start":28,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3076},"to":{"krate":0,"index":3078}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/response.rs","byte_start":334577,"byte_end":334585,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":341632,"byte_end":341636,"line_start":110,"line_end":110,"column_start":6,"column_end":10},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":343599,"byte_end":343603,"line_start":150,"line_end":150,"column_start":28,"column_end":32},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":343775,"byte_end":343781,"line_start":158,"line_end":158,"column_start":6,"column_end":12},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":361259,"byte_end":361265,"line_start":599,"line_end":599,"column_start":21,"column_end":27},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":362180,"byte_end":362186,"line_start":633,"line_end":633,"column_start":26,"column_end":32},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":362328,"byte_end":362333,"line_start":640,"line_end":640,"column_start":27,"column_end":32},"kind":{"Impl":{"id":260}},"from":{"krate":66,"index":5117},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":362442,"byte_end":362448,"line_start":646,"line_end":646,"column_start":31,"column_end":37},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":363532,"byte_end":363538,"line_start":673,"line_end":673,"column_start":23,"column_end":29},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":363853,"byte_end":363859,"line_start":686,"line_end":686,"column_start":16,"column_end":22},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3178},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":365733,"byte_end":365737,"line_start":739,"line_end":739,"column_start":6,"column_end":10},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/status.rs","byte_start":368584,"byte_end":368588,"line_start":807,"line_end":807,"column_start":20,"column_end":24},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":374950,"byte_end":374955,"line_start":29,"line_end":29,"column_start":28,"column_end":33},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5143},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.6.2/src/codegen.rs","byte_start":375090,"byte_end":375095,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5143},"to":{"krate":1,"index":2338}}]}