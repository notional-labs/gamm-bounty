{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=a4c837dffcc0f831","-C","extra-filename=-a4c837dffcc0f831","--out-dir","/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","--extern","cfg_if=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libcfg_if-88879d2dc0fa106c.rmeta","--extern","crossbeam_utils=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libcrossbeam_utils-63e17451a3a86611.rmeta","--extern","lazy_static=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/liblazy_static-3ab14ef94a1f89cf.rmeta","--extern","memoffset=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libmemoffset-aed047b9c650959e.rmeta","--extern","scopeguard=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libscopeguard-033365f7c16f4ed6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libcrossbeam_epoch-a4c837dffcc0f831.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[11322286628760309929,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[15464623033196885315,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[16969469496657381976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","num":23,"id":{"name":"scopeguard","disambiguator":[2852243315756917497,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","num":24,"id":{"name":"memoffset","disambiguator":[7685902231978804099,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":357},{"krate":0,"index":400},{"krate":0,"index":437},{"krate":0,"index":456},{"krate":0,"index":508},{"krate":0,"index":653},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":874},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13441837,"byte_end":13441855,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13441666,"byte_end":13441725,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13441769,"byte_end":13441827,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13441973,"byte_end":13441993,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13441901,"byte_end":13441961,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442123,"byte_end":13442130,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442042,"byte_end":13442114,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442216,"byte_end":13442219,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442152,"byte_end":13442207,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443330,"byte_end":13443351,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442534,"byte_end":13442586,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442587,"byte_end":13442590,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442591,"byte_end":13442682,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442683,"byte_end":13442775,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442776,"byte_end":13442779,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442780,"byte_end":13442845,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442846,"byte_end":13442849,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442850,"byte_end":13442944,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442945,"byte_end":13442971,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442972,"byte_end":13443064,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443065,"byte_end":13443093,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443137,"byte_end":13443319,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443417,"byte_end":13443424,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443358,"byte_end":13443409,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443642,"byte_end":13443649,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443450,"byte_end":13443498,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443503,"byte_end":13443506,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443511,"byte_end":13443604,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443609,"byte_end":13443634,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445999,"byte_end":13446008,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445026,"byte_end":13445073,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445074,"byte_end":13445077,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445078,"byte_end":13445176,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445177,"byte_end":13445272,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445273,"byte_end":13445335,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445336,"byte_end":13445339,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445340,"byte_end":13445432,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445433,"byte_end":13445532,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445533,"byte_end":13445633,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445634,"byte_end":13445656,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445657,"byte_end":13445660,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445661,"byte_end":13445754,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445755,"byte_end":13445826,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445827,"byte_end":13445830,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445831,"byte_end":13445838,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445839,"byte_end":13445869,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445870,"byte_end":13445901,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445902,"byte_end":13445905,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445906,"byte_end":13445980,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13445981,"byte_end":13445988,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446055,"byte_end":13446060,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446015,"byte_end":13446044,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446114,"byte_end":13446118,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446074,"byte_end":13446104,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446270,"byte_end":13446274,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446125,"byte_end":13446170,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446175,"byte_end":13446178,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446183,"byte_end":13446195,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446200,"byte_end":13446203,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446208,"byte_end":13446255,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446638,"byte_end":13446643,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446308,"byte_end":13446343,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446348,"byte_end":13446351,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446356,"byte_end":13446368,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446373,"byte_end":13446376,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446381,"byte_end":13446457,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446462,"byte_end":13446530,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446535,"byte_end":13446623,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447042,"byte_end":13447051,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446678,"byte_end":13446721,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446726,"byte_end":13446729,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446734,"byte_end":13446746,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446751,"byte_end":13446754,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446759,"byte_end":13446835,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446840,"byte_end":13446908,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13446913,"byte_end":13447003,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447008,"byte_end":13447027,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447464,"byte_end":13447468,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447090,"byte_end":13447143,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447148,"byte_end":13447151,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447156,"byte_end":13447168,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447173,"byte_end":13447176,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447181,"byte_end":13447257,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447262,"byte_end":13447330,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447335,"byte_end":13447425,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447430,"byte_end":13447449,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450577,"byte_end":13450583,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450059,"byte_end":13450123,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450124,"byte_end":13450127,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450128,"byte_end":13450226,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450227,"byte_end":13450324,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450325,"byte_end":13450396,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450397,"byte_end":13450400,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450401,"byte_end":13450481,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450482,"byte_end":13450485,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450486,"byte_end":13450565,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451069,"byte_end":13451072,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450836,"byte_end":13450918,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450923,"byte_end":13450926,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450931,"byte_end":13450945,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450950,"byte_end":13450953,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450958,"byte_end":13450965,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450970,"byte_end":13451002,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451007,"byte_end":13451010,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451015,"byte_end":13451045,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451050,"byte_end":13451057,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451416,"byte_end":13451420,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451175,"byte_end":13451257,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451262,"byte_end":13451265,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451270,"byte_end":13451284,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451289,"byte_end":13451292,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451297,"byte_end":13451304,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451309,"byte_end":13451341,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451346,"byte_end":13451349,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451354,"byte_end":13451392,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451397,"byte_end":13451404,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452009,"byte_end":13452013,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451725,"byte_end":13451763,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451768,"byte_end":13451771,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451776,"byte_end":13451790,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451795,"byte_end":13451798,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451803,"byte_end":13451810,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451815,"byte_end":13451847,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451852,"byte_end":13451855,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451860,"byte_end":13451894,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451899,"byte_end":13451906,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451911,"byte_end":13451914,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452598,"byte_end":13452602,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452140,"byte_end":13452185,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452190,"byte_end":13452193,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452198,"byte_end":13452288,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452293,"byte_end":13452307,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452312,"byte_end":13452315,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452320,"byte_end":13452334,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452339,"byte_end":13452342,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452347,"byte_end":13452354,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452359,"byte_end":13452408,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452413,"byte_end":13452457,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452462,"byte_end":13452465,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452470,"byte_end":13452500,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452505,"byte_end":13452535,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452540,"byte_end":13452574,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452579,"byte_end":13452586,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453609,"byte_end":13453621,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452732,"byte_end":13452811,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452816,"byte_end":13452819,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452824,"byte_end":13452897,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452902,"byte_end":13452978,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13452983,"byte_end":13453054,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453059,"byte_end":13453133,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453138,"byte_end":13453161,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453166,"byte_end":13453169,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453174,"byte_end":13453249,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453254,"byte_end":13453328,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453333,"byte_end":13453367,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453372,"byte_end":13453375,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453380,"byte_end":13453394,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453399,"byte_end":13453402,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453407,"byte_end":13453414,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453419,"byte_end":13453468,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453473,"byte_end":13453476,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453481,"byte_end":13453511,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453516,"byte_end":13453546,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453551,"byte_end":13453585,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453590,"byte_end":13453597,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454229,"byte_end":13454234,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453741,"byte_end":13453806,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453811,"byte_end":13453814,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453819,"byte_end":13453909,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453914,"byte_end":13453928,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453933,"byte_end":13453936,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453941,"byte_end":13453955,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453960,"byte_end":13453963,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453968,"byte_end":13453975,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13453980,"byte_end":13454029,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454034,"byte_end":13454078,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454083,"byte_end":13454086,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454091,"byte_end":13454121,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454126,"byte_end":13454162,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454167,"byte_end":13454205,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454210,"byte_end":13454217,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454884,"byte_end":13454888,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454341,"byte_end":13454429,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454434,"byte_end":13454447,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454452,"byte_end":13454455,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454460,"byte_end":13454550,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454555,"byte_end":13454569,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454574,"byte_end":13454577,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454582,"byte_end":13454596,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454601,"byte_end":13454604,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454609,"byte_end":13454616,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454621,"byte_end":13454678,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454683,"byte_end":13454727,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454732,"byte_end":13454735,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454740,"byte_end":13454770,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454775,"byte_end":13454805,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454810,"byte_end":13454860,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13454865,"byte_end":13454872,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456724,"byte_end":13456740,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455059,"byte_end":13455155,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455160,"byte_end":13455254,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455259,"byte_end":13455330,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455335,"byte_end":13455338,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455343,"byte_end":13455438,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455443,"byte_end":13455534,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455539,"byte_end":13455552,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455557,"byte_end":13455560,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455565,"byte_end":13455634,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455639,"byte_end":13455720,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455725,"byte_end":13455816,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455821,"byte_end":13455911,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13455916,"byte_end":13455998,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456003,"byte_end":13456081,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456086,"byte_end":13456166,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456171,"byte_end":13456237,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456242,"byte_end":13456245,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456250,"byte_end":13456264,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456269,"byte_end":13456272,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456277,"byte_end":13456284,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456289,"byte_end":13456353,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456358,"byte_end":13456402,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456407,"byte_end":13456410,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456415,"byte_end":13456445,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456450,"byte_end":13456453,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456458,"byte_end":13456488,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456493,"byte_end":13456530,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456535,"byte_end":13456614,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456619,"byte_end":13456700,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13456705,"byte_end":13456712,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459774,"byte_end":13459795,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457402,"byte_end":13457498,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457503,"byte_end":13457597,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457602,"byte_end":13457673,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457678,"byte_end":13457681,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457686,"byte_end":13457781,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457786,"byte_end":13457881,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457886,"byte_end":13457976,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13457981,"byte_end":13458065,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458070,"byte_end":13458073,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458078,"byte_end":13458147,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458152,"byte_end":13458233,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458238,"byte_end":13458329,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458334,"byte_end":13458424,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458429,"byte_end":13458511,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458516,"byte_end":13458594,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458599,"byte_end":13458679,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458684,"byte_end":13458750,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458755,"byte_end":13458758,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458763,"byte_end":13458813,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458818,"byte_end":13458821,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458826,"byte_end":13458840,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458845,"byte_end":13458848,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458853,"byte_end":13458860,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458865,"byte_end":13458929,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458934,"byte_end":13458978,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458983,"byte_end":13458986,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13458991,"byte_end":13459021,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459026,"byte_end":13459056,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459061,"byte_end":13459064,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459069,"byte_end":13459104,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459109,"byte_end":13459149,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459154,"byte_end":13459164,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459169,"byte_end":13459241,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459246,"byte_end":13459268,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459273,"byte_end":13459297,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459302,"byte_end":13459324,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459329,"byte_end":13459342,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459347,"byte_end":13459372,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459377,"byte_end":13459411,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459416,"byte_end":13459446,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459451,"byte_end":13459464,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459469,"byte_end":13459478,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459483,"byte_end":13459488,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459493,"byte_end":13459496,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459501,"byte_end":13459542,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459547,"byte_end":13459557,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459562,"byte_end":13459646,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459651,"byte_end":13459678,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459683,"byte_end":13459726,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459731,"byte_end":13459740,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459745,"byte_end":13459750,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13459755,"byte_end":13459762,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462292,"byte_end":13462304,"line_start":604,"line_end":604,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460462,"byte_end":13460546,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460551,"byte_end":13460645,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460650,"byte_end":13460653,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460658,"byte_end":13460752,"line_start":568,"line_end":568,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460757,"byte_end":13460851,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460856,"byte_end":13460913,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460918,"byte_end":13460921,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13460926,"byte_end":13461000,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461005,"byte_end":13461082,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461087,"byte_end":13461157,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461162,"byte_end":13461238,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461243,"byte_end":13461302,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461307,"byte_end":13461310,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461315,"byte_end":13461385,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461390,"byte_end":13461465,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461470,"byte_end":13461542,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461547,"byte_end":13461622,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461627,"byte_end":13461648,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461653,"byte_end":13461656,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461661,"byte_end":13461695,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461700,"byte_end":13461734,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461739,"byte_end":13461773,"line_start":586,"line_end":586,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461778,"byte_end":13461810,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461815,"byte_end":13461818,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461823,"byte_end":13461837,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461842,"byte_end":13461845,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461850,"byte_end":13461857,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461862,"byte_end":13461911,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461916,"byte_end":13461960,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461965,"byte_end":13461968,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13461973,"byte_end":13462003,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462008,"byte_end":13462038,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462043,"byte_end":13462046,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462051,"byte_end":13462129,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462134,"byte_end":13462160,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462165,"byte_end":13462168,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462173,"byte_end":13462236,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462241,"byte_end":13462268,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462273,"byte_end":13462280,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464604,"byte_end":13464619,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13462902,"byte_end":13462998,"line_start":624,"line_end":624,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463003,"byte_end":13463097,"line_start":625,"line_end":625,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463102,"byte_end":13463173,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463178,"byte_end":13463181,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463186,"byte_end":13463281,"line_start":628,"line_end":628,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463286,"byte_end":13463377,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463382,"byte_end":13463395,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463400,"byte_end":13463403,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463408,"byte_end":13463493,"line_start":632,"line_end":632,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463498,"byte_end":13463529,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463534,"byte_end":13463537,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463542,"byte_end":13463579,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463584,"byte_end":13463587,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463592,"byte_end":13463680,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463685,"byte_end":13463706,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463711,"byte_end":13463714,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463719,"byte_end":13463751,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463756,"byte_end":13463788,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463793,"byte_end":13463825,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463830,"byte_end":13463862,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463867,"byte_end":13463899,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463904,"byte_end":13463936,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463941,"byte_end":13463972,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463977,"byte_end":13463980,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13463985,"byte_end":13463999,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464004,"byte_end":13464007,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464012,"byte_end":13464019,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464024,"byte_end":13464051,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464056,"byte_end":13464120,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464125,"byte_end":13464169,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464174,"byte_end":13464177,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464182,"byte_end":13464212,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464217,"byte_end":13464220,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464225,"byte_end":13464255,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464260,"byte_end":13464297,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464302,"byte_end":13464372,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464377,"byte_end":13464449,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464454,"byte_end":13464461,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464513,"byte_end":13464533,"line_start":663,"line_end":663,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464538,"byte_end":13464592,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467388,"byte_end":13467408,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13464962,"byte_end":13465058,"line_start":679,"line_end":679,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465063,"byte_end":13465157,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465162,"byte_end":13465233,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465238,"byte_end":13465241,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465246,"byte_end":13465340,"line_start":683,"line_end":683,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465345,"byte_end":13465440,"line_start":684,"line_end":684,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465445,"byte_end":13465535,"line_start":685,"line_end":685,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465540,"byte_end":13465624,"line_start":686,"line_end":686,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465629,"byte_end":13465632,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465637,"byte_end":13465722,"line_start":688,"line_end":688,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465727,"byte_end":13465758,"line_start":689,"line_end":689,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465763,"byte_end":13465766,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465771,"byte_end":13465819,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465824,"byte_end":13465827,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465832,"byte_end":13465874,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465879,"byte_end":13465882,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465887,"byte_end":13465985,"line_start":695,"line_end":695,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13465990,"byte_end":13466011,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466016,"byte_end":13466019,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466024,"byte_end":13466056,"line_start":698,"line_end":698,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466061,"byte_end":13466093,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466098,"byte_end":13466130,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466135,"byte_end":13466167,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466172,"byte_end":13466204,"line_start":702,"line_end":702,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466209,"byte_end":13466241,"line_start":703,"line_end":703,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466246,"byte_end":13466277,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466282,"byte_end":13466285,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466290,"byte_end":13466304,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466309,"byte_end":13466312,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466317,"byte_end":13466324,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466329,"byte_end":13466356,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466361,"byte_end":13466425,"line_start":710,"line_end":710,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466430,"byte_end":13466474,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466479,"byte_end":13466482,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466487,"byte_end":13466517,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466522,"byte_end":13466552,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466557,"byte_end":13466560,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466565,"byte_end":13466600,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466605,"byte_end":13466645,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466650,"byte_end":13466660,"line_start":718,"line_end":718,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466665,"byte_end":13466728,"line_start":719,"line_end":719,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466733,"byte_end":13466755,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466760,"byte_end":13466784,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466789,"byte_end":13466811,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466816,"byte_end":13466829,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466834,"byte_end":13466859,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466864,"byte_end":13466898,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466903,"byte_end":13466933,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466938,"byte_end":13466951,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466956,"byte_end":13466965,"line_start":728,"line_end":728,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466970,"byte_end":13466975,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466980,"byte_end":13466983,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13466988,"byte_end":13467029,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467034,"byte_end":13467044,"line_start":732,"line_end":732,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467049,"byte_end":13467124,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467129,"byte_end":13467156,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467161,"byte_end":13467204,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467209,"byte_end":13467218,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467223,"byte_end":13467228,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467233,"byte_end":13467240,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467292,"byte_end":13467312,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467317,"byte_end":13467376,"line_start":741,"line_end":741,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468487,"byte_end":13468496,"line_start":775,"line_end":775,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467756,"byte_end":13467795,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467800,"byte_end":13467803,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467808,"byte_end":13467902,"line_start":758,"line_end":758,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467907,"byte_end":13467963,"line_start":759,"line_end":759,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467968,"byte_end":13467971,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13467976,"byte_end":13468066,"line_start":761,"line_end":761,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468071,"byte_end":13468085,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468090,"byte_end":13468093,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468098,"byte_end":13468112,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468117,"byte_end":13468120,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468125,"byte_end":13468132,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468137,"byte_end":13468194,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468199,"byte_end":13468243,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468248,"byte_end":13468251,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468256,"byte_end":13468316,"line_start":770,"line_end":770,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468321,"byte_end":13468351,"line_start":771,"line_end":771,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468356,"byte_end":13468411,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468416,"byte_end":13468463,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468468,"byte_end":13468475,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469395,"byte_end":13469403,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468667,"byte_end":13468705,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468710,"byte_end":13468713,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468718,"byte_end":13468811,"line_start":781,"line_end":781,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468816,"byte_end":13468872,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468877,"byte_end":13468880,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468885,"byte_end":13468975,"line_start":784,"line_end":784,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468980,"byte_end":13468994,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13468999,"byte_end":13469002,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469007,"byte_end":13469021,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469026,"byte_end":13469029,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469034,"byte_end":13469041,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469046,"byte_end":13469103,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469108,"byte_end":13469152,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469157,"byte_end":13469160,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469165,"byte_end":13469225,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469230,"byte_end":13469260,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469265,"byte_end":13469319,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469324,"byte_end":13469371,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469376,"byte_end":13469383,"line_start":797,"line_end":797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470303,"byte_end":13470312,"line_start":821,"line_end":821,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469572,"byte_end":13469611,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469616,"byte_end":13469619,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469624,"byte_end":13469718,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469723,"byte_end":13469779,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469784,"byte_end":13469787,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469792,"byte_end":13469882,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469887,"byte_end":13469901,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469906,"byte_end":13469909,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469914,"byte_end":13469928,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469933,"byte_end":13469936,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469941,"byte_end":13469948,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13469953,"byte_end":13470010,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470015,"byte_end":13470059,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470064,"byte_end":13470067,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470072,"byte_end":13470132,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470137,"byte_end":13470167,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470172,"byte_end":13470227,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470232,"byte_end":13470279,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470284,"byte_end":13470291,"line_start":820,"line_end":820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471609,"byte_end":13471619,"line_start":859,"line_end":859,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470482,"byte_end":13470517,"line_start":825,"line_end":825,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470522,"byte_end":13470525,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470530,"byte_end":13470619,"line_start":827,"line_end":827,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470624,"byte_end":13470710,"line_start":828,"line_end":828,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470715,"byte_end":13470750,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470755,"byte_end":13470758,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470763,"byte_end":13470775,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470780,"byte_end":13470783,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470788,"byte_end":13470847,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470852,"byte_end":13470855,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470860,"byte_end":13470872,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470877,"byte_end":13470880,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470885,"byte_end":13470972,"line_start":837,"line_end":837,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13470977,"byte_end":13471010,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471015,"byte_end":13471018,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471023,"byte_end":13471037,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471042,"byte_end":13471045,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471050,"byte_end":13471061,"line_start":842,"line_end":842,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471066,"byte_end":13471085,"line_start":843,"line_end":843,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471090,"byte_end":13471124,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471129,"byte_end":13471155,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471160,"byte_end":13471187,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471192,"byte_end":13471197,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471202,"byte_end":13471205,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471210,"byte_end":13471243,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471248,"byte_end":13471276,"line_start":850,"line_end":850,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471281,"byte_end":13471375,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471380,"byte_end":13471427,"line_start":852,"line_end":852,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471432,"byte_end":13471452,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471457,"byte_end":13471536,"line_start":854,"line_end":854,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471541,"byte_end":13471554,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471559,"byte_end":13471568,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471573,"byte_end":13471578,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13471583,"byte_end":13471590,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474636,"byte_end":13474643,"line_start":972,"line_end":972,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474573,"byte_end":13474625,"line_start":971,"line_end":971,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474735,"byte_end":13474745,"line_start":974,"line_end":974,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474673,"byte_end":13474727,"line_start":973,"line_end":973,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475052,"byte_end":13475062,"line_start":982,"line_end":982,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474767,"byte_end":13474831,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474836,"byte_end":13474839,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474844,"byte_end":13474856,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474861,"byte_end":13474864,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474869,"byte_end":13474964,"line_start":980,"line_end":980,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474969,"byte_end":13475037,"line_start":981,"line_end":981,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475328,"byte_end":13475333,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475088,"byte_end":13475123,"line_start":985,"line_end":985,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475124,"byte_end":13475127,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475128,"byte_end":13475170,"line_start":987,"line_end":987,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475171,"byte_end":13475174,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475175,"byte_end":13475273,"line_start":989,"line_end":989,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475274,"byte_end":13475316,"line_start":990,"line_end":990,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476731,"byte_end":13476739,"line_start":1042,"line_end":1042,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475983,"byte_end":13476033,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476038,"byte_end":13476041,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476046,"byte_end":13476138,"line_start":1022,"line_end":1022,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476143,"byte_end":13476236,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476241,"byte_end":13476266,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476271,"byte_end":13476274,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476279,"byte_end":13476291,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476296,"byte_end":13476299,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476304,"byte_end":13476348,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476353,"byte_end":13476356,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476361,"byte_end":13476373,"line_start":1030,"line_end":1030,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476378,"byte_end":13476381,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476386,"byte_end":13476482,"line_start":1032,"line_end":1032,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476487,"byte_end":13476534,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476539,"byte_end":13476542,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476547,"byte_end":13476561,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476566,"byte_end":13476569,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476574,"byte_end":13476581,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476586,"byte_end":13476617,"line_start":1038,"line_end":1038,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476622,"byte_end":13476625,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476630,"byte_end":13476700,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476705,"byte_end":13476712,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477137,"byte_end":13477145,"line_start":1059,"line_end":1059,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476874,"byte_end":13476918,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476923,"byte_end":13476926,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476931,"byte_end":13476945,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476950,"byte_end":13476953,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476958,"byte_end":13476965,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13476970,"byte_end":13477001,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477006,"byte_end":13477009,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477014,"byte_end":13477043,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477048,"byte_end":13477083,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477088,"byte_end":13477113,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477118,"byte_end":13477125,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477534,"byte_end":13477537,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477304,"byte_end":13477385,"line_start":1065,"line_end":1065,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477390,"byte_end":13477393,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477398,"byte_end":13477412,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477417,"byte_end":13477420,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477425,"byte_end":13477432,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477437,"byte_end":13477468,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477473,"byte_end":13477476,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477481,"byte_end":13477510,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477515,"byte_end":13477522,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477876,"byte_end":13477880,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477638,"byte_end":13477719,"line_start":1080,"line_end":1080,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477724,"byte_end":13477727,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477732,"byte_end":13477746,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477751,"byte_end":13477754,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477759,"byte_end":13477766,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477771,"byte_end":13477802,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477807,"byte_end":13477810,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477815,"byte_end":13477852,"line_start":1087,"line_end":1087,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477857,"byte_end":13477864,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478301,"byte_end":13478312,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477972,"byte_end":13478021,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478026,"byte_end":13478029,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478034,"byte_end":13478048,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478053,"byte_end":13478056,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478061,"byte_end":13478068,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478073,"byte_end":13478121,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478126,"byte_end":13478129,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478134,"byte_end":13478163,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478168,"byte_end":13478198,"line_start":1101,"line_end":1101,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478203,"byte_end":13478236,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478241,"byte_end":13478248,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478253,"byte_end":13478289,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478632,"byte_end":13478635,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478424,"byte_end":13478470,"line_start":1109,"line_end":1109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478475,"byte_end":13478478,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478483,"byte_end":13478497,"line_start":1111,"line_end":1111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478502,"byte_end":13478505,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478510,"byte_end":13478517,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478522,"byte_end":13478553,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478558,"byte_end":13478561,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478566,"byte_end":13478608,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478613,"byte_end":13478620,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479108,"byte_end":13479116,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478731,"byte_end":13478821,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478826,"byte_end":13478864,"line_start":1124,"line_end":1124,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478869,"byte_end":13478872,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478877,"byte_end":13478891,"line_start":1126,"line_end":1126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478896,"byte_end":13478899,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478904,"byte_end":13478911,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478916,"byte_end":13478947,"line_start":1129,"line_end":1129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478952,"byte_end":13478955,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478960,"byte_end":13478989,"line_start":1131,"line_end":1131,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13478994,"byte_end":13479021,"line_start":1132,"line_end":1132,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479026,"byte_end":13479052,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479057,"byte_end":13479084,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479089,"byte_end":13479096,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481578,"byte_end":13481584,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481299,"byte_end":13481352,"line_start":1233,"line_end":1233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481353,"byte_end":13481356,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481357,"byte_end":13481420,"line_start":1235,"line_end":1235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481421,"byte_end":13481424,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481425,"byte_end":13481523,"line_start":1237,"line_end":1237,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481524,"byte_end":13481566,"line_start":1238,"line_end":1238,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482706,"byte_end":13482712,"line_start":1287,"line_end":1287,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482236,"byte_end":13482296,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482301,"byte_end":13482304,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482309,"byte_end":13482323,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482328,"byte_end":13482331,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482336,"byte_end":13482343,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482348,"byte_end":13482404,"line_start":1276,"line_end":1276,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482409,"byte_end":13482453,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482458,"byte_end":13482461,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482466,"byte_end":13482495,"line_start":1279,"line_end":1279,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482500,"byte_end":13482530,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482535,"byte_end":13482563,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482568,"byte_end":13482571,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482576,"byte_end":13482606,"line_start":1283,"line_end":1283,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482611,"byte_end":13482645,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482650,"byte_end":13482682,"line_start":1285,"line_end":1285,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482687,"byte_end":13482694,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483089,"byte_end":13483093,"line_start":1304,"line_end":1304,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482873,"byte_end":13482904,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482909,"byte_end":13482912,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482917,"byte_end":13482931,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482936,"byte_end":13482939,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482944,"byte_end":13482951,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482956,"byte_end":13482988,"line_start":1299,"line_end":1299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482993,"byte_end":13482996,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483001,"byte_end":13483035,"line_start":1301,"line_end":1301,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483040,"byte_end":13483065,"line_start":1302,"line_end":1302,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483070,"byte_end":13483077,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483650,"byte_end":13483657,"line_start":1325,"line_end":1325,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483208,"byte_end":13483250,"line_start":1311,"line_end":1311,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483255,"byte_end":13483258,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483263,"byte_end":13483277,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483282,"byte_end":13483285,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483290,"byte_end":13483297,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483302,"byte_end":13483358,"line_start":1316,"line_end":1316,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483363,"byte_end":13483407,"line_start":1317,"line_end":1317,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483412,"byte_end":13483415,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483420,"byte_end":13483447,"line_start":1319,"line_end":1319,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483452,"byte_end":13483482,"line_start":1320,"line_end":1320,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483487,"byte_end":13483532,"line_start":1321,"line_end":1321,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483537,"byte_end":13483575,"line_start":1322,"line_end":1322,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483580,"byte_end":13483626,"line_start":1323,"line_end":1323,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483631,"byte_end":13483638,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484937,"byte_end":13484942,"line_start":1361,"line_end":1361,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483757,"byte_end":13483786,"line_start":1330,"line_end":1330,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483791,"byte_end":13483794,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483799,"byte_end":13483877,"line_start":1332,"line_end":1332,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483882,"byte_end":13483885,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483890,"byte_end":13483902,"line_start":1334,"line_end":1334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483907,"byte_end":13483910,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13483915,"byte_end":13484000,"line_start":1336,"line_end":1336,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484005,"byte_end":13484008,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484013,"byte_end":13484104,"line_start":1338,"line_end":1338,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484109,"byte_end":13484158,"line_start":1339,"line_end":1339,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484163,"byte_end":13484166,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484171,"byte_end":13484243,"line_start":1341,"line_end":1341,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484248,"byte_end":13484323,"line_start":1342,"line_end":1342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484328,"byte_end":13484331,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484336,"byte_end":13484429,"line_start":1344,"line_end":1344,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484434,"byte_end":13484527,"line_start":1345,"line_end":1345,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484532,"byte_end":13484570,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484575,"byte_end":13484578,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484583,"byte_end":13484597,"line_start":1348,"line_end":1348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484602,"byte_end":13484605,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484610,"byte_end":13484617,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484622,"byte_end":13484671,"line_start":1351,"line_end":1351,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484676,"byte_end":13484720,"line_start":1352,"line_end":1352,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484725,"byte_end":13484728,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484733,"byte_end":13484763,"line_start":1354,"line_end":1354,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484768,"byte_end":13484798,"line_start":1355,"line_end":1355,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484803,"byte_end":13484837,"line_start":1356,"line_end":1356,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484842,"byte_end":13484854,"line_start":1357,"line_end":1357,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484859,"byte_end":13484896,"line_start":1358,"line_end":1358,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484901,"byte_end":13484906,"line_start":1359,"line_end":1359,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13484911,"byte_end":13484918,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486208,"byte_end":13486217,"line_start":1402,"line_end":1402,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485048,"byte_end":13485077,"line_start":1366,"line_end":1366,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485082,"byte_end":13485085,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485090,"byte_end":13485176,"line_start":1368,"line_end":1368,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485181,"byte_end":13485184,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485189,"byte_end":13485201,"line_start":1370,"line_end":1370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485206,"byte_end":13485209,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485214,"byte_end":13485309,"line_start":1372,"line_end":1372,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485314,"byte_end":13485351,"line_start":1373,"line_end":1373,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485356,"byte_end":13485359,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485364,"byte_end":13485453,"line_start":1375,"line_end":1375,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485458,"byte_end":13485461,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485466,"byte_end":13485540,"line_start":1377,"line_end":1377,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485545,"byte_end":13485548,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485553,"byte_end":13485567,"line_start":1379,"line_end":1379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485572,"byte_end":13485575,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485580,"byte_end":13485587,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485592,"byte_end":13485641,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485646,"byte_end":13485690,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485695,"byte_end":13485698,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485703,"byte_end":13485745,"line_start":1385,"line_end":1385,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485750,"byte_end":13485780,"line_start":1386,"line_end":1386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485785,"byte_end":13485788,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485793,"byte_end":13485831,"line_start":1388,"line_end":1388,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485836,"byte_end":13485848,"line_start":1389,"line_end":1389,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485853,"byte_end":13485883,"line_start":1390,"line_end":1390,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485888,"byte_end":13485918,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485923,"byte_end":13485964,"line_start":1392,"line_end":1392,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485969,"byte_end":13485987,"line_start":1393,"line_end":1393,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13485992,"byte_end":13486036,"line_start":1394,"line_end":1394,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486041,"byte_end":13486046,"line_start":1395,"line_end":1395,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486051,"byte_end":13486054,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486059,"byte_end":13486093,"line_start":1397,"line_end":1397,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486098,"byte_end":13486110,"line_start":1398,"line_end":1398,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486115,"byte_end":13486167,"line_start":1399,"line_end":1399,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486172,"byte_end":13486177,"line_start":1400,"line_end":1400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486182,"byte_end":13486189,"line_start":1401,"line_end":1401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487550,"byte_end":13487556,"line_start":1438,"line_end":1438,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486335,"byte_end":13486375,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486380,"byte_end":13486383,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486388,"byte_end":13486483,"line_start":1409,"line_end":1409,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486488,"byte_end":13486491,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486496,"byte_end":13486508,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486513,"byte_end":13486516,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486521,"byte_end":13486606,"line_start":1413,"line_end":1413,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486611,"byte_end":13486614,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486619,"byte_end":13486710,"line_start":1415,"line_end":1415,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486715,"byte_end":13486764,"line_start":1416,"line_end":1416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486769,"byte_end":13486772,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486777,"byte_end":13486849,"line_start":1418,"line_end":1418,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486854,"byte_end":13486929,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486934,"byte_end":13486937,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13486942,"byte_end":13487035,"line_start":1421,"line_end":1421,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487040,"byte_end":13487133,"line_start":1422,"line_end":1422,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487138,"byte_end":13487176,"line_start":1423,"line_end":1423,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487181,"byte_end":13487184,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487189,"byte_end":13487203,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487208,"byte_end":13487211,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487216,"byte_end":13487223,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487228,"byte_end":13487277,"line_start":1428,"line_end":1428,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487282,"byte_end":13487326,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487331,"byte_end":13487334,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487339,"byte_end":13487369,"line_start":1431,"line_end":1431,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487374,"byte_end":13487404,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487409,"byte_end":13487443,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487448,"byte_end":13487460,"line_start":1434,"line_end":1434,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487465,"byte_end":13487509,"line_start":1435,"line_end":1435,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487514,"byte_end":13487519,"line_start":1436,"line_end":1436,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487524,"byte_end":13487531,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488416,"byte_end":13488426,"line_start":1471,"line_end":1471,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487746,"byte_end":13487781,"line_start":1447,"line_end":1447,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487786,"byte_end":13487789,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487794,"byte_end":13487806,"line_start":1449,"line_end":1449,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487811,"byte_end":13487814,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487819,"byte_end":13487878,"line_start":1451,"line_end":1451,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487883,"byte_end":13487886,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487891,"byte_end":13487903,"line_start":1453,"line_end":1453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487908,"byte_end":13487911,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13487916,"byte_end":13488003,"line_start":1455,"line_end":1455,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488008,"byte_end":13488041,"line_start":1456,"line_end":1456,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488046,"byte_end":13488049,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488054,"byte_end":13488068,"line_start":1458,"line_end":1458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488073,"byte_end":13488076,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488081,"byte_end":13488088,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488093,"byte_end":13488142,"line_start":1461,"line_end":1461,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488147,"byte_end":13488191,"line_start":1462,"line_end":1462,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488196,"byte_end":13488199,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488204,"byte_end":13488234,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488239,"byte_end":13488251,"line_start":1465,"line_end":1465,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488256,"byte_end":13488298,"line_start":1466,"line_end":1466,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488303,"byte_end":13488341,"line_start":1467,"line_end":1467,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488346,"byte_end":13488375,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488380,"byte_end":13488385,"line_start":1469,"line_end":1469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488390,"byte_end":13488397,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488986,"byte_end":13488989,"line_start":1489,"line_end":1489,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488578,"byte_end":13488624,"line_start":1476,"line_end":1476,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488629,"byte_end":13488632,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488637,"byte_end":13488651,"line_start":1478,"line_end":1478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488656,"byte_end":13488659,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488664,"byte_end":13488671,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488676,"byte_end":13488732,"line_start":1481,"line_end":1481,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488737,"byte_end":13488781,"line_start":1482,"line_end":1482,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488786,"byte_end":13488789,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488794,"byte_end":13488856,"line_start":1484,"line_end":1484,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488861,"byte_end":13488891,"line_start":1485,"line_end":1485,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488896,"byte_end":13488930,"line_start":1486,"line_end":1486,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488935,"byte_end":13488962,"line_start":1487,"line_end":1487,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13488967,"byte_end":13488974,"line_start":1488,"line_end":1488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489663,"byte_end":13489671,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489085,"byte_end":13489175,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489180,"byte_end":13489218,"line_start":1495,"line_end":1495,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489223,"byte_end":13489226,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489231,"byte_end":13489245,"line_start":1497,"line_end":1497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489250,"byte_end":13489253,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489258,"byte_end":13489265,"line_start":1499,"line_end":1499,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489270,"byte_end":13489319,"line_start":1500,"line_end":1500,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489324,"byte_end":13489368,"line_start":1501,"line_end":1501,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489373,"byte_end":13489376,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489381,"byte_end":13489411,"line_start":1503,"line_end":1503,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489416,"byte_end":13489446,"line_start":1504,"line_end":1504,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489451,"byte_end":13489486,"line_start":1505,"line_end":1505,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489491,"byte_end":13489519,"line_start":1506,"line_end":1506,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489524,"byte_end":13489527,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489532,"byte_end":13489560,"line_start":1508,"line_end":1508,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489565,"byte_end":13489593,"line_start":1509,"line_end":1509,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489598,"byte_end":13489639,"line_start":1510,"line_end":1510,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489644,"byte_end":13489651,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492600,"byte_end":13492609,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492551,"byte_end":13492588,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492916,"byte_end":13492919,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492876,"byte_end":13492904,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493024,"byte_end":13493032,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492967,"byte_end":13493012,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493700,"byte_end":13493711,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493652,"byte_end":13493688,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493822,"byte_end":13493825,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493776,"byte_end":13493796,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493801,"byte_end":13493810,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493963,"byte_end":13493972,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493894,"byte_end":13493937,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493942,"byte_end":13493951,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494128,"byte_end":13494137,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494046,"byte_end":13494102,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494107,"byte_end":13494116,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514789,"byte_end":13514794,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":479}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513073,"byte_end":13513122,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513123,"byte_end":13513126,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513127,"byte_end":13513140,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513141,"byte_end":13513144,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513145,"byte_end":13513224,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513225,"byte_end":13513228,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513229,"byte_end":13513236,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513237,"byte_end":13513270,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513271,"byte_end":13513274,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513275,"byte_end":13513373,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513374,"byte_end":13513466,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513467,"byte_end":13513497,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513498,"byte_end":13513505,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513506,"byte_end":13513509,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513510,"byte_end":13513586,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513587,"byte_end":13513590,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513591,"byte_end":13513618,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513619,"byte_end":13513622,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513623,"byte_end":13513710,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513711,"byte_end":13513727,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513728,"byte_end":13513731,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513732,"byte_end":13513739,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513740,"byte_end":13513789,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513790,"byte_end":13513834,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513835,"byte_end":13513838,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513839,"byte_end":13513877,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513878,"byte_end":13513907,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513908,"byte_end":13513911,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513912,"byte_end":13513942,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513943,"byte_end":13513973,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513974,"byte_end":13513977,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13513978,"byte_end":13514052,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514053,"byte_end":13514087,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514088,"byte_end":13514091,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514092,"byte_end":13514143,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514144,"byte_end":13514190,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514191,"byte_end":13514234,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514235,"byte_end":13514240,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514241,"byte_end":13514248,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514249,"byte_end":13514252,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514253,"byte_end":13514274,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514275,"byte_end":13514278,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514279,"byte_end":13514374,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514375,"byte_end":13514473,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514474,"byte_end":13514493,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514494,"byte_end":13514497,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514498,"byte_end":13514505,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514506,"byte_end":13514539,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514540,"byte_end":13514543,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514544,"byte_end":13514574,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514575,"byte_end":13514605,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514606,"byte_end":13514638,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514639,"byte_end":13514656,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514657,"byte_end":13514689,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514690,"byte_end":13514707,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514708,"byte_end":13514741,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514742,"byte_end":13514749,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514750,"byte_end":13514753,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514754,"byte_end":13514777,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515769,"byte_end":13515774,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514853,"byte_end":13514942,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514947,"byte_end":13514972,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514977,"byte_end":13514980,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514985,"byte_end":13515078,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515083,"byte_end":13515171,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515176,"byte_end":13515266,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515271,"byte_end":13515311,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515316,"byte_end":13515319,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515324,"byte_end":13515414,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515419,"byte_end":13515510,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515515,"byte_end":13515602,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515607,"byte_end":13515627,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515632,"byte_end":13515635,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515640,"byte_end":13515727,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515732,"byte_end":13515757,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520074,"byte_end":13520089,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13515938,"byte_end":13516027,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516032,"byte_end":13516057,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516062,"byte_end":13516065,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516070,"byte_end":13516163,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516168,"byte_end":13516256,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516261,"byte_end":13516351,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516356,"byte_end":13516396,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516401,"byte_end":13516404,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516409,"byte_end":13516499,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516504,"byte_end":13516595,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516600,"byte_end":13516687,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516692,"byte_end":13516712,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516717,"byte_end":13516720,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516725,"byte_end":13516812,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516817,"byte_end":13516842,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516847,"byte_end":13516850,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516855,"byte_end":13516867,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516872,"byte_end":13516875,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516880,"byte_end":13516972,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13516977,"byte_end":13517064,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517069,"byte_end":13517081,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517086,"byte_end":13517089,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517094,"byte_end":13517101,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517106,"byte_end":13517139,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517144,"byte_end":13517147,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517152,"byte_end":13517182,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517187,"byte_end":13517214,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517219,"byte_end":13517231,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517236,"byte_end":13517311,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517316,"byte_end":13517355,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517360,"byte_end":13517396,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517401,"byte_end":13517412,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517417,"byte_end":13517422,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517427,"byte_end":13517434,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517439,"byte_end":13517442,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517447,"byte_end":13517541,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517546,"byte_end":13517577,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517582,"byte_end":13517585,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517590,"byte_end":13517685,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517690,"byte_end":13517782,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517787,"byte_end":13517876,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517881,"byte_end":13517884,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517889,"byte_end":13517902,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517907,"byte_end":13517960,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13517965,"byte_end":13518047,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518052,"byte_end":13518059,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518064,"byte_end":13518067,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518072,"byte_end":13518165,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518170,"byte_end":13518265,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518270,"byte_end":13518330,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518335,"byte_end":13518338,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518343,"byte_end":13518357,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518362,"byte_end":13518365,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518370,"byte_end":13518456,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518461,"byte_end":13518555,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518560,"byte_end":13518656,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518661,"byte_end":13518753,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518758,"byte_end":13518814,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518819,"byte_end":13518822,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518827,"byte_end":13518834,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518839,"byte_end":13518895,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518900,"byte_end":13518944,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518949,"byte_end":13518952,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518957,"byte_end":13518988,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13518993,"byte_end":13518996,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519001,"byte_end":13519078,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519083,"byte_end":13519114,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519119,"byte_end":13519122,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519127,"byte_end":13519157,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519162,"byte_end":13519192,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519197,"byte_end":13519200,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519205,"byte_end":13519282,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519287,"byte_end":13519359,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519364,"byte_end":13519367,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519372,"byte_end":13519393,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519398,"byte_end":13519458,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519463,"byte_end":13519545,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519550,"byte_end":13519566,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519571,"byte_end":13519650,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519655,"byte_end":13519698,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519703,"byte_end":13519771,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519776,"byte_end":13519868,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519873,"byte_end":13519957,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13519962,"byte_end":13519999,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520004,"byte_end":13520019,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520024,"byte_end":13520033,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520038,"byte_end":13520043,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520048,"byte_end":13520055,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523676,"byte_end":13523689,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520328,"byte_end":13520421,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520426,"byte_end":13520478,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520483,"byte_end":13520486,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520491,"byte_end":13520584,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520589,"byte_end":13520679,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520684,"byte_end":13520773,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520778,"byte_end":13520832,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520837,"byte_end":13520840,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520845,"byte_end":13520938,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13520943,"byte_end":13521036,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521041,"byte_end":13521134,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521139,"byte_end":13521170,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521175,"byte_end":13521178,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521183,"byte_end":13521272,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521277,"byte_end":13521302,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521307,"byte_end":13521310,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521315,"byte_end":13521327,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521332,"byte_end":13521335,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521340,"byte_end":13521433,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521438,"byte_end":13521471,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521476,"byte_end":13521479,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521484,"byte_end":13521579,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521584,"byte_end":13521622,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521627,"byte_end":13521630,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521635,"byte_end":13521730,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521735,"byte_end":13521827,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521832,"byte_end":13521921,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521926,"byte_end":13521929,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521934,"byte_end":13521947,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13521952,"byte_end":13522005,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522010,"byte_end":13522069,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522074,"byte_end":13522081,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522086,"byte_end":13522089,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522094,"byte_end":13522188,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522193,"byte_end":13522280,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522285,"byte_end":13522345,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522350,"byte_end":13522353,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522358,"byte_end":13522372,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522377,"byte_end":13522380,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522385,"byte_end":13522471,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522476,"byte_end":13522570,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522575,"byte_end":13522671,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522676,"byte_end":13522768,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522773,"byte_end":13522829,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522834,"byte_end":13522837,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522842,"byte_end":13522849,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522854,"byte_end":13522910,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522915,"byte_end":13522959,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522964,"byte_end":13522967,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13522972,"byte_end":13523003,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523008,"byte_end":13523011,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523016,"byte_end":13523093,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523098,"byte_end":13523129,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523134,"byte_end":13523137,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523142,"byte_end":13523172,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523177,"byte_end":13523207,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523212,"byte_end":13523215,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523220,"byte_end":13523297,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523302,"byte_end":13523374,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523379,"byte_end":13523382,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523387,"byte_end":13523408,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523413,"byte_end":13523473,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523478,"byte_end":13523560,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523565,"byte_end":13523581,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523586,"byte_end":13523621,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523626,"byte_end":13523635,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523640,"byte_end":13523645,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523650,"byte_end":13523657,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524574,"byte_end":13524579,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523789,"byte_end":13523884,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523889,"byte_end":13523906,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523911,"byte_end":13523914,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13523919,"byte_end":13524013,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524018,"byte_end":13524110,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524115,"byte_end":13524183,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524188,"byte_end":13524191,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524196,"byte_end":13524288,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524293,"byte_end":13524296,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524301,"byte_end":13524315,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524320,"byte_end":13524323,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524328,"byte_end":13524335,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524340,"byte_end":13524373,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524378,"byte_end":13524381,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524386,"byte_end":13524416,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524421,"byte_end":13524446,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524451,"byte_end":13524515,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524520,"byte_end":13524527,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524532,"byte_end":13524550,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524555,"byte_end":13524562,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525741,"byte_end":13525746,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524703,"byte_end":13524754,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524759,"byte_end":13524762,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524767,"byte_end":13524857,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524862,"byte_end":13524956,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13524961,"byte_end":13525055,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525060,"byte_end":13525112,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525117,"byte_end":13525120,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525125,"byte_end":13525218,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525223,"byte_end":13525226,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525231,"byte_end":13525245,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525250,"byte_end":13525253,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525258,"byte_end":13525265,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525270,"byte_end":13525319,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525324,"byte_end":13525368,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525373,"byte_end":13525376,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525381,"byte_end":13525410,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525415,"byte_end":13525448,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525453,"byte_end":13525458,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525463,"byte_end":13525502,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525507,"byte_end":13525561,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525566,"byte_end":13525571,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525576,"byte_end":13525594,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525599,"byte_end":13525604,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525609,"byte_end":13525648,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525653,"byte_end":13525707,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525712,"byte_end":13525717,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525722,"byte_end":13525729,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527073,"byte_end":13527084,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525870,"byte_end":13525961,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525966,"byte_end":13525969,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13525974,"byte_end":13526065,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526070,"byte_end":13526166,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526171,"byte_end":13526265,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526270,"byte_end":13526289,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526294,"byte_end":13526297,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526302,"byte_end":13526396,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526401,"byte_end":13526443,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526448,"byte_end":13526451,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526456,"byte_end":13526470,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526475,"byte_end":13526478,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526483,"byte_end":13526490,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526495,"byte_end":13526544,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526549,"byte_end":13526593,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526598,"byte_end":13526618,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526623,"byte_end":13526651,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526656,"byte_end":13526659,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526664,"byte_end":13526693,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526698,"byte_end":13526731,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526736,"byte_end":13526741,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526746,"byte_end":13526785,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526790,"byte_end":13526844,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526849,"byte_end":13526854,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526859,"byte_end":13526926,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526931,"byte_end":13526936,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526941,"byte_end":13526980,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13526985,"byte_end":13527039,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527044,"byte_end":13527049,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527054,"byte_end":13527061,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528230,"byte_end":13528239,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527689,"byte_end":13527744,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527749,"byte_end":13527752,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527757,"byte_end":13527832,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527837,"byte_end":13527887,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527892,"byte_end":13527895,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527900,"byte_end":13527984,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527989,"byte_end":13527992,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13527997,"byte_end":13528011,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528016,"byte_end":13528019,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528024,"byte_end":13528031,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528036,"byte_end":13528069,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528074,"byte_end":13528077,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528082,"byte_end":13528112,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528117,"byte_end":13528147,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528152,"byte_end":13528206,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528211,"byte_end":13528218,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531538,"byte_end":13531549,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528649,"byte_end":13528736,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528737,"byte_end":13528740,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528741,"byte_end":13528836,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528837,"byte_end":13528926,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528927,"byte_end":13528930,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528931,"byte_end":13529024,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529025,"byte_end":13529062,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529063,"byte_end":13529066,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529067,"byte_end":13529163,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529164,"byte_end":13529167,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529168,"byte_end":13529180,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529181,"byte_end":13529184,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529185,"byte_end":13529275,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529276,"byte_end":13529343,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529344,"byte_end":13529347,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529348,"byte_end":13529362,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529363,"byte_end":13529366,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529367,"byte_end":13529374,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529375,"byte_end":13529424,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529425,"byte_end":13529470,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529471,"byte_end":13529474,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529475,"byte_end":13529502,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529503,"byte_end":13529506,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529507,"byte_end":13529519,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529520,"byte_end":13529575,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529576,"byte_end":13529622,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529623,"byte_end":13529626,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529627,"byte_end":13529701,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529702,"byte_end":13529752,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529753,"byte_end":13529756,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529757,"byte_end":13529786,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529787,"byte_end":13529843,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529844,"byte_end":13529855,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529856,"byte_end":13529859,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529860,"byte_end":13529941,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529942,"byte_end":13529947,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529948,"byte_end":13529955,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529956,"byte_end":13529959,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13529960,"byte_end":13530054,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530055,"byte_end":13530058,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530059,"byte_end":13530153,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530154,"byte_end":13530239,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530240,"byte_end":13530243,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530244,"byte_end":13530343,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530344,"byte_end":13530442,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530443,"byte_end":13530463,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530464,"byte_end":13530467,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530468,"byte_end":13530475,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530476,"byte_end":13530525,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530526,"byte_end":13530557,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530558,"byte_end":13530603,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530604,"byte_end":13530607,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530608,"byte_end":13530629,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530630,"byte_end":13530660,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530661,"byte_end":13530666,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530667,"byte_end":13530670,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530671,"byte_end":13530691,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530692,"byte_end":13530722,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530723,"byte_end":13530753,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530754,"byte_end":13530759,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530760,"byte_end":13530763,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530764,"byte_end":13530795,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530796,"byte_end":13530824,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530825,"byte_end":13530845,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530846,"byte_end":13530882,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530883,"byte_end":13530960,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530961,"byte_end":13530964,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13530965,"byte_end":13531016,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531017,"byte_end":13531057,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531058,"byte_end":13531132,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531133,"byte_end":13531136,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531137,"byte_end":13531225,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531226,"byte_end":13531276,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531277,"byte_end":13531329,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531330,"byte_end":13531358,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531359,"byte_end":13531362,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531363,"byte_end":13531395,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531396,"byte_end":13531413,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531414,"byte_end":13531427,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531428,"byte_end":13531437,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531438,"byte_end":13531443,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531444,"byte_end":13531451,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531452,"byte_end":13531455,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531456,"byte_end":13531485,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531486,"byte_end":13531513,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531514,"byte_end":13531523,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587541,"byte_end":13587544,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587495,"byte_end":13587523,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587524,"byte_end":13587533,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587669,"byte_end":13587678,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587600,"byte_end":13587651,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587652,"byte_end":13587661,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587788,"byte_end":13587805,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13587739,"byte_end":13587780,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442278,"byte_end":13442298,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443725,"byte_end":13443733,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447507,"byte_end":13447508,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450727,"byte_end":13450733,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450798,"byte_end":13450804,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450820,"byte_end":13450826,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451159,"byte_end":13451165,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13472128,"byte_end":13472134,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13472481,"byte_end":13472487,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13472775,"byte_end":13472781,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473128,"byte_end":13473134,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473246,"byte_end":13473252,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473647,"byte_end":13473653,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473756,"byte_end":13473762,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473882,"byte_end":13473888,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474237,"byte_end":13474243,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475456,"byte_end":13475461,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475968,"byte_end":13475973,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477623,"byte_end":13477628,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479298,"byte_end":13479303,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479493,"byte_end":13479498,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479776,"byte_end":13479781,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479922,"byte_end":13479927,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480120,"byte_end":13480125,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480291,"byte_end":13480296,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480386,"byte_end":13480391,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480864,"byte_end":13480869,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480979,"byte_end":13480984,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481106,"byte_end":13481111,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481217,"byte_end":13481222,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481723,"byte_end":13481729,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481903,"byte_end":13481909,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481964,"byte_end":13481970,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482216,"byte_end":13482222,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482853,"byte_end":13482859,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489816,"byte_end":13489822,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490385,"byte_end":13490391,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490518,"byte_end":13490524,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490598,"byte_end":13490604,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490769,"byte_end":13490775,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490923,"byte_end":13490929,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13491232,"byte_end":13491238,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13491429,"byte_end":13491435,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492672,"byte_end":13492681,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492706,"byte_end":13492715,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492737,"byte_end":13492746,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492860,"byte_end":13492869,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493111,"byte_end":13493120,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493318,"byte_end":13493327,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493455,"byte_end":13493464,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493638,"byte_end":13493647,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493758,"byte_end":13493769,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494229,"byte_end":13494240,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494387,"byte_end":13494398,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13505141,"byte_end":13505149,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13505273,"byte_end":13505281,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13509141,"byte_end":13509146,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13510950,"byte_end":13510961,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514841,"byte_end":13514846,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528364,"byte_end":13528369,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528539,"byte_end":13528544,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531828,"byte_end":13531840,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13534913,"byte_end":13534916,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13534926,"byte_end":13534929,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13535878,"byte_end":13535881,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13539155,"byte_end":13539158,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13539557,"byte_end":13539560,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13539987,"byte_end":13539996,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13540006,"byte_end":13540015,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13540697,"byte_end":13540703,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13545827,"byte_end":13545832,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13554557,"byte_end":13554562,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13560627,"byte_end":13560632,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13560768,"byte_end":13560773,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13561286,"byte_end":13561290,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13563873,"byte_end":13563877,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13564409,"byte_end":13564413,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13574234,"byte_end":13574239,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13574276,"byte_end":13574281,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13574297,"byte_end":13574302,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13580222,"byte_end":13580227,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13442278,"byte_end":13442298,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13443725,"byte_end":13443733,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":46923},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13447507,"byte_end":13447508,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450727,"byte_end":13450733,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450798,"byte_end":13450804,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13450820,"byte_end":13450826,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13451159,"byte_end":13451165,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13472128,"byte_end":13472134,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13472481,"byte_end":13472487,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13472775,"byte_end":13472781,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473128,"byte_end":13473134,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473246,"byte_end":13473252,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473647,"byte_end":13473653,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473756,"byte_end":13473762,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13473882,"byte_end":13473888,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13474237,"byte_end":13474243,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475456,"byte_end":13475461,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13475968,"byte_end":13475973,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13477623,"byte_end":13477628,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479298,"byte_end":13479303,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479493,"byte_end":13479498,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479776,"byte_end":13479781,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13479922,"byte_end":13479927,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480120,"byte_end":13480125,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480291,"byte_end":13480296,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480386,"byte_end":13480391,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480864,"byte_end":13480869,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13480979,"byte_end":13480984,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2619}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481106,"byte_end":13481111,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481217,"byte_end":13481222,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481723,"byte_end":13481729,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481903,"byte_end":13481909,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3027}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13481964,"byte_end":13481970,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482216,"byte_end":13482222,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13482853,"byte_end":13482859,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13489816,"byte_end":13489822,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490385,"byte_end":13490391,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490518,"byte_end":13490524,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490598,"byte_end":13490604,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490769,"byte_end":13490775,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13490923,"byte_end":13490929,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13491232,"byte_end":13491238,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13491429,"byte_end":13491435,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492672,"byte_end":13492681,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492706,"byte_end":13492715,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492737,"byte_end":13492746,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13492860,"byte_end":13492869,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493111,"byte_end":13493120,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493318,"byte_end":13493327,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493455,"byte_end":13493464,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493638,"byte_end":13493647,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13493758,"byte_end":13493769,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494229,"byte_end":13494240,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13494387,"byte_end":13494398,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13505141,"byte_end":13505149,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13505273,"byte_end":13505281,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13509141,"byte_end":13509146,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13510950,"byte_end":13510961,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13514841,"byte_end":13514846,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528364,"byte_end":13528369,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13528539,"byte_end":13528544,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13531828,"byte_end":13531840,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13534913,"byte_end":13534916,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13534926,"byte_end":13534929,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13535878,"byte_end":13535881,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13539155,"byte_end":13539158,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13539557,"byte_end":13539560,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13539987,"byte_end":13539996,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13540006,"byte_end":13540015,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13540697,"byte_end":13540703,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13545827,"byte_end":13545832,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13554557,"byte_end":13554562,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13560627,"byte_end":13560632,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13560768,"byte_end":13560773,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13561286,"byte_end":13561290,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13563873,"byte_end":13563877,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13564409,"byte_end":13564413,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13574234,"byte_end":13574239,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13574276,"byte_end":13574281,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13574297,"byte_end":13574302,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13580222,"byte_end":13580227,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3256}}]}