{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hashbrown","--edition=2021","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"ahash\"","--cfg","feature=\"default\"","--cfg","feature=\"inline-more\"","-C","metadata=72cdb9ec2f7bb184","-C","extra-filename=-72cdb9ec2f7bb184","--out-dir","/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","--extern","ahash=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libahash-292916f1dc4546aa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libhashbrown-72cdb9ec2f7bb184.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[8074797147926892348,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":5,"id":{"name":"ahash","disambiguator":[10278159724966603971,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":6,"id":{"name":"once_cell","disambiguator":[4545148886036118984,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":7,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":8,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":9,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":10,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":14,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":15,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":16,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":17,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":18,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":19,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":20,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":21,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":22,"id":{"name":"getrandom","disambiguator":[4404432128622822102,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":23,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","num":24,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":0,"byte_end":4242,"line_start":1,"line_end":148,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":2293,"byte_end":2294,"line_start":85,"line_end":85,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2118}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":2848,"byte_end":2849,"line_start":102,"line_end":102,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3231,"byte_end":3238,"line_start":115,"line_end":115,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3260,"byte_end":3267,"line_start":116,"line_end":116,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":0,"byte_end":4242,"line_start":1,"line_end":148,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":1606},{"krate":0,"index":1635},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2199},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2213}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"/ This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ and `HashSet` types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\n        must_use_candidate, clippy :: option_if_let_else, clippy ::\n        redundant_else, clippy :: manual_map)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":899,"byte_end":1089,"line_start":28,"line_end":35,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":1090,"byte_end":1112,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":1113,"byte_end":1139,"line_start":37,"line_end":37,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94341,"byte_end":94350,"line_start":37,"line_end":37,"column_start":22,"column_end":31},"name":"Allocator","qualname":"::raw::alloc::inner::Allocator","value":"Allocator","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94246,"byte_end":94282,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94364,"byte_end":94372,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"allocate","qualname":"::raw::alloc::inner::Allocator::allocate","value":"pub fn allocate(&Self, Layout) -> Result<NonNull<u8>, ()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94442,"byte_end":94452,"line_start":39,"line_end":39,"column_start":19,"column_end":29},"name":"deallocate","qualname":"::raw::alloc::inner::Allocator::deallocate","value":"pub unsafe fn deallocate(&Self, NonNull<u8>, Layout)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2172},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94544,"byte_end":94550,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"name":"Global","qualname":"::raw::alloc::inner::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":99908,"byte_end":99926,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"ahash::RandomState","parent":null,"children":[],"decl_id":null,"docs":" Default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Default hasher for `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":99839,"byte_end":99872,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"ahash\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":99873,"byte_end":99898,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106319,"byte_end":106326,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100053,"byte_end":100119,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100120,"byte_end":100123,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100124,"byte_end":100196,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100197,"byte_end":100273,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100274,"byte_end":100353,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100354,"byte_end":100390,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100391,"byte_end":100394,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100395,"byte_end":100471,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100472,"byte_end":100552,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100553,"byte_end":100634,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100635,"byte_end":100638,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100639,"byte_end":100722,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100723,"byte_end":100801,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100802,"byte_end":100873,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100874,"byte_end":100893,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100894,"byte_end":100897,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100898,"byte_end":100909,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100910,"byte_end":100946,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100947,"byte_end":100954,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100955,"byte_end":100958,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":100959,"byte_end":101029,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101030,"byte_end":101033,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101034,"byte_end":101111,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101112,"byte_end":101192,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101193,"byte_end":101268,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101269,"byte_end":101347,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101348,"byte_end":101351,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101352,"byte_end":101431,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101432,"byte_end":101510,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101511,"byte_end":101591,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101592,"byte_end":101637,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101638,"byte_end":101641,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101642,"byte_end":101656,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101657,"byte_end":101660,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101661,"byte_end":101668,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101669,"byte_end":101696,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101697,"byte_end":101700,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101701,"byte_end":101769,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101770,"byte_end":101829,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101830,"byte_end":101872,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101873,"byte_end":101876,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101877,"byte_end":101902,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101903,"byte_end":101927,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101928,"byte_end":101981,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":101982,"byte_end":102022,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102023,"byte_end":102029,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102030,"byte_end":102054,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102055,"byte_end":102097,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102098,"byte_end":102133,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102134,"byte_end":102140,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102141,"byte_end":102165,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102166,"byte_end":102208,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102209,"byte_end":102247,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102248,"byte_end":102254,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102255,"byte_end":102279,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102280,"byte_end":102336,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102337,"byte_end":102378,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102379,"byte_end":102385,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102386,"byte_end":102389,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102390,"byte_end":102422,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102423,"byte_end":102493,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102494,"byte_end":102533,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102534,"byte_end":102588,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102589,"byte_end":102661,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102662,"byte_end":102699,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102700,"byte_end":102705,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102706,"byte_end":102709,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102710,"byte_end":102783,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102784,"byte_end":102845,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102846,"byte_end":102849,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102850,"byte_end":102902,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102903,"byte_end":102980,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":102981,"byte_end":103008,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103009,"byte_end":103047,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103048,"byte_end":103109,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103110,"byte_end":103165,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103166,"byte_end":103175,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103176,"byte_end":103181,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103182,"byte_end":103185,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103186,"byte_end":103258,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103259,"byte_end":103332,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103333,"byte_end":103336,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103337,"byte_end":103368,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103369,"byte_end":103410,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103411,"byte_end":103456,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103457,"byte_end":103462,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103463,"byte_end":103470,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103471,"byte_end":103474,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103475,"byte_end":103550,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103551,"byte_end":103631,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103632,"byte_end":103649,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103650,"byte_end":103653,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103654,"byte_end":103661,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103662,"byte_end":103689,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103690,"byte_end":103693,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103694,"byte_end":103762,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103763,"byte_end":103816,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103817,"byte_end":103859,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103860,"byte_end":103863,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103864,"byte_end":103897,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103898,"byte_end":103973,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":103974,"byte_end":104009,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104010,"byte_end":104020,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104021,"byte_end":104026,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104027,"byte_end":104030,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104031,"byte_end":104083,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104084,"byte_end":104132,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104133,"byte_end":104136,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104137,"byte_end":104210,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104211,"byte_end":104239,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104240,"byte_end":104307,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104308,"byte_end":104311,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104312,"byte_end":104380,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104381,"byte_end":104440,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104441,"byte_end":104473,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104474,"byte_end":104481,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104482,"byte_end":104485,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104486,"byte_end":104579,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104580,"byte_end":104618,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104619,"byte_end":104622,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104623,"byte_end":104682,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104683,"byte_end":104747,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104748,"byte_end":104821,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104822,"byte_end":104893,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104894,"byte_end":104959,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104960,"byte_end":104992,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":104993,"byte_end":105033,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105034,"byte_end":105100,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105101,"byte_end":105142,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105143,"byte_end":105188,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105189,"byte_end":105192,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105193,"byte_end":105200,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105201,"byte_end":105228,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105229,"byte_end":105232,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105233,"byte_end":105274,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105275,"byte_end":105294,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105295,"byte_end":105316,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105317,"byte_end":105341,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105342,"byte_end":105347,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105348,"byte_end":105351,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105352,"byte_end":105369,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105370,"byte_end":105403,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105404,"byte_end":105457,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105458,"byte_end":105533,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105534,"byte_end":105543,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105544,"byte_end":105549,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105550,"byte_end":105553,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105554,"byte_end":105611,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105612,"byte_end":105649,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105650,"byte_end":105653,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105654,"byte_end":105709,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105710,"byte_end":105765,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105766,"byte_end":105823,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105824,"byte_end":105827,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105828,"byte_end":105897,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105898,"byte_end":105936,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105937,"byte_end":105988,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105989,"byte_end":105994,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":105995,"byte_end":106002,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106003,"byte_end":106006,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106007,"byte_end":106084,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106085,"byte_end":106088,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106089,"byte_end":106096,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106097,"byte_end":106124,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106125,"byte_end":106128,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106129,"byte_end":106227,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106228,"byte_end":106263,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106264,"byte_end":106299,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106300,"byte_end":106307,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109647,"byte_end":109650,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109269,"byte_end":109300,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109305,"byte_end":109308,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109313,"byte_end":109405,"line_start":295,"line_end":295,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109410,"byte_end":109437,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109442,"byte_end":109445,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109450,"byte_end":109464,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109469,"byte_end":109472,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109477,"byte_end":109484,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109489,"byte_end":109516,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109521,"byte_end":109574,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109579,"byte_end":109586,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109627,"byte_end":109633,"line_start":304,"line_end":304,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110140,"byte_end":110153,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109698,"byte_end":109757,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109762,"byte_end":109765,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109770,"byte_end":109844,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109849,"byte_end":109918,"line_start":312,"line_end":312,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109923,"byte_end":109926,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109931,"byte_end":109945,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109950,"byte_end":109953,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109958,"byte_end":109965,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109970,"byte_end":109997,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110002,"byte_end":110067,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110072,"byte_end":110079,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110120,"byte_end":110126,"line_start":320,"line_end":320,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110627,"byte_end":110633,"line_start":333,"line_end":333,"column_start":12,"column_end":18},"name":"new_in","qualname":"<HashMap<K, V, DefaultHashBuilder, A>>::new_in","value":"pub fn new_in(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` using the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` using the given allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110372,"byte_end":110429,"line_start":328,"line_end":328,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110434,"byte_end":110437,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110442,"byte_end":110534,"line_start":330,"line_end":330,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110539,"byte_end":110566,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110607,"byte_end":110613,"line_start":332,"line_end":332,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111039,"byte_end":111055,"line_start":342,"line_end":342,"column_start":12,"column_end":28},"name":"with_capacity_in","qualname":"<HashMap<K, V, DefaultHashBuilder, A>>::with_capacity_in","value":"pub fn with_capacity_in(usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity using the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity using the given allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110732,"byte_end":110817,"line_start":337,"line_end":337,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110822,"byte_end":110825,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110830,"byte_end":110904,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110909,"byte_end":110978,"line_start":340,"line_end":340,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111019,"byte_end":111025,"line_start":341,"line_end":341,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112236,"byte_end":112247,"line_start":374,"line_end":374,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111229,"byte_end":111305,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111310,"byte_end":111319,"line_start":349,"line_end":349,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111324,"byte_end":111327,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111332,"byte_end":111385,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111390,"byte_end":111393,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111398,"byte_end":111461,"line_start":353,"line_end":353,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111466,"byte_end":111531,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111536,"byte_end":111599,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111604,"byte_end":111668,"line_start":356,"line_end":356,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111673,"byte_end":111676,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111681,"byte_end":111757,"line_start":358,"line_end":358,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111762,"byte_end":111826,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111831,"byte_end":111834,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111839,"byte_end":111853,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111858,"byte_end":111861,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111866,"byte_end":111873,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111878,"byte_end":111905,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111910,"byte_end":111958,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111963,"byte_end":111966,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111971,"byte_end":112013,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112018,"byte_end":112060,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112065,"byte_end":112086,"line_start":369,"line_end":369,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112091,"byte_end":112098,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112103,"byte_end":112106,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112111,"byte_end":112169,"line_start":372,"line_end":372,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112210,"byte_end":112216,"line_start":373,"line_end":373,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113502,"byte_end":113526,"line_start":408,"line_end":408,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112373,"byte_end":112453,"line_start":381,"line_end":381,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112458,"byte_end":112479,"line_start":382,"line_end":382,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112484,"byte_end":112487,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112492,"byte_end":112566,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112571,"byte_end":112640,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112645,"byte_end":112648,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112653,"byte_end":112716,"line_start":387,"line_end":387,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112721,"byte_end":112786,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112791,"byte_end":112854,"line_start":389,"line_end":389,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112859,"byte_end":112923,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112928,"byte_end":112931,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":112936,"byte_end":113012,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113017,"byte_end":113081,"line_start":393,"line_end":393,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113086,"byte_end":113089,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113094,"byte_end":113108,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113113,"byte_end":113116,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113121,"byte_end":113128,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113133,"byte_end":113160,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113165,"byte_end":113213,"line_start":399,"line_end":399,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113218,"byte_end":113221,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113226,"byte_end":113268,"line_start":401,"line_end":401,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113273,"byte_end":113332,"line_start":402,"line_end":402,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113337,"byte_end":113358,"line_start":403,"line_end":403,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113363,"byte_end":113370,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113375,"byte_end":113378,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113383,"byte_end":113441,"line_start":406,"line_end":406,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113482,"byte_end":113488,"line_start":407,"line_end":407,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113825,"byte_end":113834,"line_start":419,"line_end":419,"column_start":12,"column_end":21},"name":"allocator","qualname":"<HashMap<K, V, S, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113747,"byte_end":113799,"line_start":417,"line_end":417,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113804,"byte_end":113813,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114711,"byte_end":114725,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"with_hasher_in","qualname":"<HashMap<K, V, S, A>>::with_hasher_in","value":"pub fn with_hasher_in(S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys. It will be allocated with the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113892,"byte_end":113968,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ keys. It will be allocated with the given allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113973,"byte_end":114029,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114034,"byte_end":114037,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114042,"byte_end":114095,"line_start":426,"line_end":426,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114100,"byte_end":114103,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114108,"byte_end":114171,"line_start":428,"line_end":428,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114176,"byte_end":114241,"line_start":429,"line_end":429,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114246,"byte_end":114309,"line_start":430,"line_end":430,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114314,"byte_end":114378,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114383,"byte_end":114386,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114391,"byte_end":114405,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114410,"byte_end":114413,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114418,"byte_end":114425,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114430,"byte_end":114457,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114462,"byte_end":114510,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114515,"byte_end":114518,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114523,"byte_end":114565,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114570,"byte_end":114612,"line_start":440,"line_end":440,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114617,"byte_end":114638,"line_start":441,"line_end":441,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114643,"byte_end":114650,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114691,"byte_end":114697,"line_start":443,"line_end":443,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115816,"byte_end":115843,"line_start":473,"line_end":473,"column_start":12,"column_end":39},"name":"with_capacity_and_hasher_in","qualname":"<HashMap<K, V, S, A>>::with_capacity_and_hasher_in","value":"pub fn with_capacity_and_hasher_in(usize, S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys. It will be allocated with the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114869,"byte_end":114949,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ to hash the keys. It will be allocated with the given allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":114954,"byte_end":115022,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115027,"byte_end":115030,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115035,"byte_end":115109,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115114,"byte_end":115183,"line_start":455,"line_end":455,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115188,"byte_end":115191,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115196,"byte_end":115259,"line_start":457,"line_end":457,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115264,"byte_end":115329,"line_start":458,"line_end":458,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115334,"byte_end":115397,"line_start":459,"line_end":459,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115402,"byte_end":115466,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115471,"byte_end":115474,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115479,"byte_end":115493,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115498,"byte_end":115501,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115506,"byte_end":115513,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115518,"byte_end":115545,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115550,"byte_end":115598,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115603,"byte_end":115606,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115611,"byte_end":115653,"line_start":468,"line_end":468,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115658,"byte_end":115717,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115722,"byte_end":115743,"line_start":470,"line_end":470,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115748,"byte_end":115755,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":115796,"byte_end":115802,"line_start":472,"line_end":472,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116556,"byte_end":116562,"line_start":495,"line_end":495,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S, A>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116024,"byte_end":116077,"line_start":480,"line_end":480,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116082,"byte_end":116085,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116090,"byte_end":116168,"line_start":482,"line_end":482,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116173,"byte_end":116176,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116181,"byte_end":116195,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116200,"byte_end":116203,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116208,"byte_end":116215,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116220,"byte_end":116247,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116252,"byte_end":116300,"line_start":488,"line_end":488,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116305,"byte_end":116308,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116313,"byte_end":116360,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116365,"byte_end":116427,"line_start":491,"line_end":491,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116432,"byte_end":116483,"line_start":492,"line_end":492,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116488,"byte_end":116495,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116536,"byte_end":116542,"line_start":494,"line_end":494,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117106,"byte_end":117114,"line_start":512,"line_end":512,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116616,"byte_end":116689,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116694,"byte_end":116697,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116702,"byte_end":116777,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116782,"byte_end":116848,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116853,"byte_end":116856,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116861,"byte_end":116875,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116880,"byte_end":116883,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116888,"byte_end":116895,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116900,"byte_end":116927,"line_start":507,"line_end":507,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116932,"byte_end":116993,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":116998,"byte_end":117033,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117038,"byte_end":117045,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117086,"byte_end":117092,"line_start":511,"line_end":511,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117638,"byte_end":117642,"line_start":534,"line_end":534,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S, A>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117174,"byte_end":117227,"line_start":516,"line_end":516,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117232,"byte_end":117273,"line_start":517,"line_end":517,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117278,"byte_end":117281,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117286,"byte_end":117300,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117305,"byte_end":117308,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117313,"byte_end":117320,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117325,"byte_end":117352,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117357,"byte_end":117360,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117365,"byte_end":117398,"line_start":524,"line_end":524,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117403,"byte_end":117426,"line_start":525,"line_end":525,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117431,"byte_end":117454,"line_start":526,"line_end":526,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117459,"byte_end":117482,"line_start":527,"line_end":527,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117487,"byte_end":117490,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117495,"byte_end":117522,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117527,"byte_end":117555,"line_start":530,"line_end":530,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117560,"byte_end":117565,"line_start":531,"line_end":531,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117570,"byte_end":117577,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117618,"byte_end":117624,"line_start":533,"line_end":533,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118185,"byte_end":118191,"line_start":556,"line_end":556,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S, A>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117717,"byte_end":117772,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117777,"byte_end":117818,"line_start":539,"line_end":539,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117823,"byte_end":117826,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117831,"byte_end":117845,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117850,"byte_end":117853,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117858,"byte_end":117865,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117870,"byte_end":117897,"line_start":544,"line_end":544,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117902,"byte_end":117905,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117910,"byte_end":117943,"line_start":546,"line_end":546,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117948,"byte_end":117971,"line_start":547,"line_end":547,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":117976,"byte_end":117999,"line_start":548,"line_end":548,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118004,"byte_end":118027,"line_start":549,"line_end":549,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118032,"byte_end":118035,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118040,"byte_end":118069,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118074,"byte_end":118102,"line_start":552,"line_end":552,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118107,"byte_end":118112,"line_start":553,"line_end":553,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118117,"byte_end":118124,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118165,"byte_end":118171,"line_start":555,"line_end":555,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118844,"byte_end":118854,"line_start":583,"line_end":583,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S, A>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118270,"byte_end":118333,"line_start":560,"line_end":560,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118338,"byte_end":118383,"line_start":561,"line_end":561,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118388,"byte_end":118391,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118396,"byte_end":118410,"line_start":563,"line_end":563,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118415,"byte_end":118418,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118423,"byte_end":118430,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118435,"byte_end":118462,"line_start":566,"line_end":566,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118467,"byte_end":118470,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118475,"byte_end":118508,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118513,"byte_end":118516,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118521,"byte_end":118544,"line_start":570,"line_end":570,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118549,"byte_end":118572,"line_start":571,"line_end":571,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118577,"byte_end":118600,"line_start":572,"line_end":572,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118605,"byte_end":118608,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118613,"byte_end":118646,"line_start":574,"line_end":574,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118651,"byte_end":118676,"line_start":575,"line_end":575,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118681,"byte_end":118686,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118691,"byte_end":118694,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118699,"byte_end":118728,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118733,"byte_end":118761,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118766,"byte_end":118771,"line_start":580,"line_end":580,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118776,"byte_end":118783,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118824,"byte_end":118830,"line_start":582,"line_end":582,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119477,"byte_end":119481,"line_start":607,"line_end":607,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S, A>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":118968,"byte_end":119032,"line_start":589,"line_end":589,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119037,"byte_end":119087,"line_start":590,"line_end":590,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119092,"byte_end":119095,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119100,"byte_end":119114,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119119,"byte_end":119122,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119127,"byte_end":119134,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119139,"byte_end":119166,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119171,"byte_end":119174,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119179,"byte_end":119212,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119217,"byte_end":119240,"line_start":598,"line_end":598,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119245,"byte_end":119268,"line_start":599,"line_end":599,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119273,"byte_end":119296,"line_start":600,"line_end":600,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119301,"byte_end":119304,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119309,"byte_end":119343,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119348,"byte_end":119394,"line_start":603,"line_end":603,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119399,"byte_end":119404,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119409,"byte_end":119416,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119457,"byte_end":119463,"line_start":606,"line_end":606,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120381,"byte_end":120389,"line_start":641,"line_end":641,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S, A>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119716,"byte_end":119780,"line_start":617,"line_end":617,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119785,"byte_end":119827,"line_start":618,"line_end":618,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119832,"byte_end":119886,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119891,"byte_end":119894,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119899,"byte_end":119913,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119918,"byte_end":119921,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119926,"byte_end":119933,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119938,"byte_end":119965,"line_start":624,"line_end":624,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119970,"byte_end":119973,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":119978,"byte_end":120011,"line_start":626,"line_end":626,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120016,"byte_end":120039,"line_start":627,"line_end":627,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120044,"byte_end":120067,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120072,"byte_end":120095,"line_start":629,"line_end":629,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120100,"byte_end":120103,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120108,"byte_end":120132,"line_start":631,"line_end":631,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120137,"byte_end":120173,"line_start":632,"line_end":632,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120178,"byte_end":120196,"line_start":633,"line_end":633,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120201,"byte_end":120206,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120211,"byte_end":120214,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120219,"byte_end":120247,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120252,"byte_end":120298,"line_start":637,"line_end":637,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120303,"byte_end":120308,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120313,"byte_end":120320,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120361,"byte_end":120367,"line_start":640,"line_end":640,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121106,"byte_end":121109,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120774,"byte_end":120820,"line_start":657,"line_end":657,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120825,"byte_end":120828,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120833,"byte_end":120847,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120852,"byte_end":120855,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120860,"byte_end":120867,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120872,"byte_end":120899,"line_start":662,"line_end":662,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120904,"byte_end":120907,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120912,"byte_end":120943,"line_start":664,"line_end":664,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120948,"byte_end":120975,"line_start":665,"line_end":665,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":120980,"byte_end":121001,"line_start":666,"line_end":666,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121006,"byte_end":121033,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121038,"byte_end":121045,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121086,"byte_end":121092,"line_start":669,"line_end":669,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121500,"byte_end":121508,"line_start":687,"line_end":687,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121164,"byte_end":121215,"line_start":674,"line_end":674,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121220,"byte_end":121223,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121228,"byte_end":121242,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121247,"byte_end":121250,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121255,"byte_end":121262,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121267,"byte_end":121294,"line_start":679,"line_end":679,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121299,"byte_end":121302,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121307,"byte_end":121338,"line_start":681,"line_end":681,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121343,"byte_end":121369,"line_start":682,"line_end":682,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121374,"byte_end":121395,"line_start":683,"line_end":683,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121400,"byte_end":121427,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121432,"byte_end":121439,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121480,"byte_end":121486,"line_start":686,"line_end":686,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122101,"byte_end":122106,"line_start":711,"line_end":711,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S, A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121561,"byte_end":121636,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121641,"byte_end":121672,"line_start":692,"line_end":692,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121677,"byte_end":121680,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121685,"byte_end":121699,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121704,"byte_end":121707,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121712,"byte_end":121719,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121724,"byte_end":121751,"line_start":697,"line_end":697,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121756,"byte_end":121759,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121764,"byte_end":121795,"line_start":699,"line_end":699,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121800,"byte_end":121821,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121826,"byte_end":121847,"line_start":701,"line_end":701,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121852,"byte_end":121855,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121860,"byte_end":121897,"line_start":703,"line_end":703,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121902,"byte_end":121936,"line_start":704,"line_end":704,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121941,"byte_end":121979,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121984,"byte_end":121989,"line_start":706,"line_end":706,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":121994,"byte_end":121997,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122002,"byte_end":122028,"line_start":708,"line_end":708,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122033,"byte_end":122040,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122081,"byte_end":122087,"line_start":710,"line_end":710,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122637,"byte_end":122643,"line_start":730,"line_end":730,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S, A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122218,"byte_end":122275,"line_start":717,"line_end":717,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122280,"byte_end":122283,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122288,"byte_end":122375,"line_start":719,"line_end":719,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122380,"byte_end":122383,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122388,"byte_end":122402,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122407,"byte_end":122410,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122415,"byte_end":122422,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122427,"byte_end":122454,"line_start":724,"line_end":724,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122459,"byte_end":122462,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122467,"byte_end":122539,"line_start":726,"line_end":726,"column_start":5,"column_end":77}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122544,"byte_end":122579,"line_start":727,"line_end":727,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122584,"byte_end":122613,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":122618,"byte_end":122625,"line_start":729,"line_end":729,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124059,"byte_end":124071,"line_start":771,"line_end":771,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S, A>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, K, V, F, A> where\nF: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123060,"byte_end":123121,"line_start":745,"line_end":745,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123126,"byte_end":123177,"line_start":746,"line_end":746,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123182,"byte_end":123185,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ In other words, move all pairs `(k, v)` such that `f(&k,&mut v)` returns `true` out","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123190,"byte_end":123277,"line_start":748,"line_end":748,"column_start":5,"column_end":92}},{"value":"/ into another iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123282,"byte_end":123308,"line_start":749,"line_end":749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123313,"byte_end":123316,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123321,"byte_end":123404,"line_start":751,"line_end":751,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the table.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123409,"byte_end":123454,"line_start":752,"line_end":752,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123459,"byte_end":123462,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123467,"byte_end":123481,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123486,"byte_end":123489,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123494,"byte_end":123501,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123506,"byte_end":123533,"line_start":757,"line_end":757,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123538,"byte_end":123541,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123546,"byte_end":123616,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123621,"byte_end":123705,"line_start":760,"line_end":760,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123710,"byte_end":123713,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123718,"byte_end":123782,"line_start":762,"line_end":762,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123787,"byte_end":123846,"line_start":763,"line_end":763,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123851,"byte_end":123868,"line_start":764,"line_end":764,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123873,"byte_end":123889,"line_start":765,"line_end":765,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123894,"byte_end":123897,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123902,"byte_end":123942,"line_start":767,"line_end":767,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123947,"byte_end":123986,"line_start":768,"line_end":768,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":123991,"byte_end":123998,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124039,"byte_end":124045,"line_start":770,"line_end":770,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124747,"byte_end":124752,"line_start":798,"line_end":798,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124380,"byte_end":124456,"line_start":784,"line_end":784,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124461,"byte_end":124475,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124480,"byte_end":124483,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124488,"byte_end":124502,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124507,"byte_end":124510,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124515,"byte_end":124522,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124527,"byte_end":124554,"line_start":790,"line_end":790,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124559,"byte_end":124562,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124567,"byte_end":124598,"line_start":792,"line_end":792,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124603,"byte_end":124624,"line_start":793,"line_end":793,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124629,"byte_end":124643,"line_start":794,"line_end":794,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124648,"byte_end":124674,"line_start":795,"line_end":795,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124679,"byte_end":124686,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124727,"byte_end":124733,"line_start":797,"line_end":797,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125283,"byte_end":125292,"line_start":819,"line_end":819,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<HashMap<K, V, S, A>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the keys in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `K`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the keys in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124805,"byte_end":124879,"line_start":802,"line_end":802,"column_start":5,"column_end":79}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124884,"byte_end":124930,"line_start":803,"line_end":803,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `K`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124935,"byte_end":124972,"line_start":804,"line_end":804,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124977,"byte_end":124980,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":124985,"byte_end":124999,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125004,"byte_end":125007,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125012,"byte_end":125019,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125024,"byte_end":125051,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125056,"byte_end":125059,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125064,"byte_end":125097,"line_start":811,"line_end":811,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125102,"byte_end":125125,"line_start":812,"line_end":812,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125130,"byte_end":125153,"line_start":813,"line_end":813,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125158,"byte_end":125181,"line_start":814,"line_end":814,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125186,"byte_end":125189,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<&str> = map.into_keys().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125194,"byte_end":125245,"line_start":816,"line_end":816,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125250,"byte_end":125257,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125262,"byte_end":125271,"line_start":818,"line_end":818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125880,"byte_end":125891,"line_start":842,"line_end":842,"column_start":12,"column_end":23},"name":"into_values","qualname":"<HashMap<K, V, S, A>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the values in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `V`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the values in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125399,"byte_end":125475,"line_start":825,"line_end":825,"column_start":5,"column_end":81}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125480,"byte_end":125526,"line_start":826,"line_end":826,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `V`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125531,"byte_end":125568,"line_start":827,"line_end":827,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125573,"byte_end":125576,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125581,"byte_end":125595,"line_start":829,"line_end":829,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125600,"byte_end":125603,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125608,"byte_end":125615,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125620,"byte_end":125647,"line_start":832,"line_end":832,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125652,"byte_end":125655,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125660,"byte_end":125693,"line_start":834,"line_end":834,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125698,"byte_end":125721,"line_start":835,"line_end":835,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125726,"byte_end":125749,"line_start":836,"line_end":836,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125754,"byte_end":125777,"line_start":837,"line_end":837,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125782,"byte_end":125785,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<i32> = map.into_values().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125790,"byte_end":125842,"line_start":839,"line_end":839,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125847,"byte_end":125854,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":125859,"byte_end":125868,"line_start":841,"line_end":841,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126703,"byte_end":126710,"line_start":873,"line_end":873,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S, A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126113,"byte_end":126189,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126194,"byte_end":126262,"line_start":856,"line_end":856,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126267,"byte_end":126294,"line_start":857,"line_end":857,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126299,"byte_end":126302,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126307,"byte_end":126319,"line_start":859,"line_end":859,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126324,"byte_end":126327,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126332,"byte_end":126390,"line_start":861,"line_end":861,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126395,"byte_end":126398,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126403,"byte_end":126468,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126473,"byte_end":126476,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126481,"byte_end":126495,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126500,"byte_end":126503,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126508,"byte_end":126515,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126520,"byte_end":126547,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126552,"byte_end":126605,"line_start":869,"line_end":869,"column_start":5,"column_end":58}},{"value":"/ map.reserve(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126610,"byte_end":126630,"line_start":870,"line_end":870,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126635,"byte_end":126642,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126683,"byte_end":126689,"line_start":872,"line_end":872,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127488,"byte_end":127499,"line_start":895,"line_end":895,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S, A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126854,"byte_end":126938,"line_start":878,"line_end":878,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126943,"byte_end":127022,"line_start":879,"line_end":879,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127027,"byte_end":127054,"line_start":880,"line_end":880,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127059,"byte_end":127062,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127067,"byte_end":127079,"line_start":882,"line_end":882,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127084,"byte_end":127087,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127092,"byte_end":127172,"line_start":884,"line_end":884,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127177,"byte_end":127193,"line_start":885,"line_end":885,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127198,"byte_end":127201,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127206,"byte_end":127220,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127225,"byte_end":127228,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127233,"byte_end":127240,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127245,"byte_end":127272,"line_start":890,"line_end":890,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127277,"byte_end":127332,"line_start":891,"line_end":891,"column_start":5,"column_end":60}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127337,"byte_end":127415,"line_start":892,"line_end":892,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127420,"byte_end":127427,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127468,"byte_end":127474,"line_start":894,"line_end":894,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128283,"byte_end":128296,"line_start":917,"line_end":917,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S, A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127677,"byte_end":127746,"line_start":900,"line_end":900,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127751,"byte_end":127816,"line_start":901,"line_end":901,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127821,"byte_end":127894,"line_start":902,"line_end":902,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127899,"byte_end":127902,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127907,"byte_end":127921,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127926,"byte_end":127929,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127934,"byte_end":127941,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127946,"byte_end":127973,"line_start":907,"line_end":907,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127978,"byte_end":127981,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":127986,"byte_end":128051,"line_start":909,"line_end":909,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128056,"byte_end":128077,"line_start":910,"line_end":910,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128082,"byte_end":128103,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128108,"byte_end":128143,"line_start":912,"line_end":912,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128148,"byte_end":128172,"line_start":913,"line_end":913,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128177,"byte_end":128210,"line_start":914,"line_end":914,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128215,"byte_end":128222,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128263,"byte_end":128269,"line_start":916,"line_end":916,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129282,"byte_end":129291,"line_start":946,"line_end":946,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S, A>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128414,"byte_end":128482,"line_start":922,"line_end":922,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128487,"byte_end":128565,"line_start":923,"line_end":923,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128570,"byte_end":128643,"line_start":924,"line_end":924,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128648,"byte_end":128651,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128656,"byte_end":128730,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128735,"byte_end":128765,"line_start":927,"line_end":927,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128770,"byte_end":128773,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128778,"byte_end":128792,"line_start":929,"line_end":929,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128797,"byte_end":128800,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128805,"byte_end":128812,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128817,"byte_end":128844,"line_start":932,"line_end":932,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128849,"byte_end":128852,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128857,"byte_end":128922,"line_start":934,"line_end":934,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128927,"byte_end":128948,"line_start":935,"line_end":935,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128953,"byte_end":128974,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":128979,"byte_end":129014,"line_start":937,"line_end":937,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129019,"byte_end":129041,"line_start":938,"line_end":938,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129046,"byte_end":129080,"line_start":939,"line_end":939,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129085,"byte_end":129106,"line_start":940,"line_end":940,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129111,"byte_end":129144,"line_start":941,"line_end":941,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129149,"byte_end":129171,"line_start":942,"line_end":942,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129176,"byte_end":129209,"line_start":943,"line_end":943,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129214,"byte_end":129221,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129262,"byte_end":129268,"line_start":945,"line_end":945,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130051,"byte_end":130056,"line_start":971,"line_end":971,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S, A>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129441,"byte_end":129523,"line_start":951,"line_end":951,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129528,"byte_end":129531,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129536,"byte_end":129550,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129555,"byte_end":129558,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129563,"byte_end":129570,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129575,"byte_end":129602,"line_start":956,"line_end":956,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129607,"byte_end":129610,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129615,"byte_end":129652,"line_start":958,"line_end":958,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129657,"byte_end":129660,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129665,"byte_end":129716,"line_start":960,"line_end":960,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129721,"byte_end":129774,"line_start":961,"line_end":961,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129779,"byte_end":129801,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129806,"byte_end":129811,"line_start":963,"line_end":963,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129816,"byte_end":129819,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129824,"byte_end":129857,"line_start":965,"line_end":965,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129862,"byte_end":129895,"line_start":966,"line_end":966,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129900,"byte_end":129933,"line_start":967,"line_end":967,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129938,"byte_end":129978,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":129983,"byte_end":129990,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130031,"byte_end":130037,"line_start":970,"line_end":970,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131214,"byte_end":131223,"line_start":1007,"line_end":1007,"column_start":12,"column_end":21},"name":"entry_ref","qualname":"<HashMap<K, V, S, A>>::entry_ref","value":"pub fn entry_ref<'a, 'b, Q: ?Sized>(&'a mut Self, &'b Q) -> EntryRef where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry by reference in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry by reference in the map for in-place manipulation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130577,"byte_end":130672,"line_start":989,"line_end":989,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130677,"byte_end":130680,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130685,"byte_end":130699,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130704,"byte_end":130707,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130712,"byte_end":130719,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130724,"byte_end":130751,"line_start":994,"line_end":994,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130756,"byte_end":130759,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ let mut words: HashMap<String, usize> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130764,"byte_end":130823,"line_start":996,"line_end":996,"column_start":5,"column_end":64}},{"value":"/ let source = [\"poneyland\", \"horseyland\", \"poneyland\", \"poneyland\"];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130828,"byte_end":130899,"line_start":997,"line_end":997,"column_start":5,"column_end":76}},{"value":"/ for (i, &s) in source.iter().enumerate() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130904,"byte_end":130950,"line_start":998,"line_end":998,"column_start":5,"column_end":51}},{"value":"/     let counter = words.entry_ref(s).or_insert(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":130955,"byte_end":131009,"line_start":999,"line_end":999,"column_start":5,"column_end":59}},{"value":"/     *counter += 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131014,"byte_end":131036,"line_start":1000,"line_end":1000,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131041,"byte_end":131046,"line_start":1001,"line_end":1001,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131051,"byte_end":131054,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(words[\"poneyland\"], 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131059,"byte_end":131097,"line_start":1003,"line_end":1003,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(words[\"horseyland\"], 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131102,"byte_end":131141,"line_start":1004,"line_end":1004,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131146,"byte_end":131153,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131194,"byte_end":131200,"line_start":1006,"line_end":1006,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132537,"byte_end":132540,"line_start":1049,"line_end":1049,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S, A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131889,"byte_end":131951,"line_start":1029,"line_end":1029,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131956,"byte_end":131959,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":131964,"byte_end":132027,"line_start":1031,"line_end":1031,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132032,"byte_end":132099,"line_start":1032,"line_end":1032,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132104,"byte_end":132121,"line_start":1033,"line_end":1033,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132126,"byte_end":132129,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132134,"byte_end":132193,"line_start":1035,"line_end":1035,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132198,"byte_end":132262,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132267,"byte_end":132270,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132275,"byte_end":132289,"line_start":1038,"line_end":1038,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132294,"byte_end":132297,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132302,"byte_end":132309,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132314,"byte_end":132341,"line_start":1041,"line_end":1041,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132346,"byte_end":132349,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132354,"byte_end":132387,"line_start":1043,"line_end":1043,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132392,"byte_end":132415,"line_start":1044,"line_end":1044,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132420,"byte_end":132460,"line_start":1045,"line_end":1045,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132465,"byte_end":132499,"line_start":1046,"line_end":1046,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132504,"byte_end":132511,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132516,"byte_end":132525,"line_start":1048,"line_end":1048,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133507,"byte_end":133520,"line_start":1081,"line_end":1081,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S, A>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132821,"byte_end":132886,"line_start":1061,"line_end":1061,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132891,"byte_end":132894,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132899,"byte_end":132971,"line_start":1063,"line_end":1063,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":132976,"byte_end":133043,"line_start":1064,"line_end":1064,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133048,"byte_end":133065,"line_start":1065,"line_end":1065,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133070,"byte_end":133073,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133078,"byte_end":133137,"line_start":1067,"line_end":1067,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133142,"byte_end":133206,"line_start":1068,"line_end":1068,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133211,"byte_end":133214,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133219,"byte_end":133233,"line_start":1070,"line_end":1070,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133238,"byte_end":133241,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133246,"byte_end":133253,"line_start":1072,"line_end":1072,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133258,"byte_end":133285,"line_start":1073,"line_end":1073,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133290,"byte_end":133293,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133298,"byte_end":133331,"line_start":1075,"line_end":1075,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133336,"byte_end":133359,"line_start":1076,"line_end":1076,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133364,"byte_end":133420,"line_start":1077,"line_end":1077,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133425,"byte_end":133469,"line_start":1078,"line_end":1078,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133474,"byte_end":133481,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":133486,"byte_end":133495,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135037,"byte_end":135054,"line_start":1131,"line_end":1131,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S, A>>::get_key_value_mut","value":"pub fn get_key_value_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(&K, &mut V)>\nwhere K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134169,"byte_end":134269,"line_start":1107,"line_end":1107,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134274,"byte_end":134277,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134282,"byte_end":134354,"line_start":1109,"line_end":1109,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134359,"byte_end":134426,"line_start":1110,"line_end":1110,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134431,"byte_end":134448,"line_start":1111,"line_end":1111,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134453,"byte_end":134456,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134461,"byte_end":134520,"line_start":1113,"line_end":1113,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134525,"byte_end":134589,"line_start":1114,"line_end":1114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134594,"byte_end":134597,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134602,"byte_end":134616,"line_start":1116,"line_end":1116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134621,"byte_end":134624,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134629,"byte_end":134636,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134641,"byte_end":134668,"line_start":1119,"line_end":1119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134673,"byte_end":134676,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134681,"byte_end":134714,"line_start":1121,"line_end":1121,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134719,"byte_end":134742,"line_start":1122,"line_end":1122,"column_start":5,"column_end":28}},{"value":"/ let (k, v) = map.get_key_value_mut(&1).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134747,"byte_end":134799,"line_start":1123,"line_end":1123,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(k, &1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134804,"byte_end":134826,"line_start":1124,"line_end":1124,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(v, &mut \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134831,"byte_end":134859,"line_start":1125,"line_end":1125,"column_start":5,"column_end":33}},{"value":"/ *v = \"b\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134864,"byte_end":134877,"line_start":1126,"line_end":1126,"column_start":5,"column_end":18}},{"value":"/ assert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134882,"byte_end":134946,"line_start":1127,"line_end":1127,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(map.get_key_value_mut(&2), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":134951,"byte_end":134999,"line_start":1128,"line_end":1128,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135004,"byte_end":135011,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135016,"byte_end":135025,"line_start":1130,"line_end":1130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136085,"byte_end":136097,"line_start":1163,"line_end":1163,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S, A>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135382,"byte_end":135451,"line_start":1143,"line_end":1143,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135456,"byte_end":135459,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135464,"byte_end":135527,"line_start":1145,"line_end":1145,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135532,"byte_end":135599,"line_start":1146,"line_end":1146,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135604,"byte_end":135621,"line_start":1147,"line_end":1147,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135626,"byte_end":135629,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135634,"byte_end":135693,"line_start":1149,"line_end":1149,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135698,"byte_end":135762,"line_start":1150,"line_end":1150,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135767,"byte_end":135770,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135775,"byte_end":135789,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135794,"byte_end":135797,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135802,"byte_end":135809,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135814,"byte_end":135841,"line_start":1155,"line_end":1155,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135846,"byte_end":135849,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135854,"byte_end":135887,"line_start":1157,"line_end":1157,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135892,"byte_end":135915,"line_start":1158,"line_end":1158,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135920,"byte_end":135963,"line_start":1159,"line_end":1159,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":135968,"byte_end":136012,"line_start":1160,"line_end":1160,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136017,"byte_end":136024,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136065,"byte_end":136071,"line_start":1162,"line_end":1162,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136954,"byte_end":136961,"line_start":1193,"line_end":1193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S, A>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136238,"byte_end":136308,"line_start":1171,"line_end":1171,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136313,"byte_end":136316,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136321,"byte_end":136384,"line_start":1173,"line_end":1173,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136389,"byte_end":136456,"line_start":1174,"line_end":1174,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136461,"byte_end":136478,"line_start":1175,"line_end":1175,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136483,"byte_end":136486,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136491,"byte_end":136550,"line_start":1177,"line_end":1177,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136555,"byte_end":136619,"line_start":1178,"line_end":1178,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136624,"byte_end":136627,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136632,"byte_end":136646,"line_start":1180,"line_end":1180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136651,"byte_end":136654,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136659,"byte_end":136666,"line_start":1182,"line_end":1182,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136671,"byte_end":136698,"line_start":1183,"line_end":1183,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136703,"byte_end":136706,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136711,"byte_end":136744,"line_start":1185,"line_end":1185,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136749,"byte_end":136772,"line_start":1186,"line_end":1186,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136777,"byte_end":136815,"line_start":1187,"line_end":1187,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136820,"byte_end":136837,"line_start":1188,"line_end":1188,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136842,"byte_end":136847,"line_start":1189,"line_end":1189,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136852,"byte_end":136881,"line_start":1190,"line_end":1190,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136886,"byte_end":136893,"line_start":1191,"line_end":1191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":136934,"byte_end":136940,"line_start":1192,"line_end":1192,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138996,"byte_end":139008,"line_start":1262,"line_end":1262,"column_start":12,"column_end":24},"name":"get_many_mut","qualname":"<HashMap<K, V, S, A>>::get_many_mut","value":"pub fn get_many_mut<Q: ?Sized, const N: usize>(&mut Self, [&Q; ])\n-> Option<[&mut V; ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137619,"byte_end":137691,"line_start":1219,"line_end":1219,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137696,"byte_end":137699,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. For soundness, at most one","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137704,"byte_end":137797,"line_start":1221,"line_end":1221,"column_start":5,"column_end":98}},{"value":"/ mutable reference will be returned to any value. `None` will be returned if any of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137802,"byte_end":137892,"line_start":1222,"line_end":1222,"column_start":5,"column_end":95}},{"value":"/ keys are duplicates or missing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137897,"byte_end":137932,"line_start":1223,"line_end":1223,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137937,"byte_end":137940,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137945,"byte_end":137959,"line_start":1225,"line_end":1225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137964,"byte_end":137967,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137972,"byte_end":137979,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":137984,"byte_end":138011,"line_start":1228,"line_end":1228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138016,"byte_end":138019,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138024,"byte_end":138063,"line_start":1230,"line_end":1230,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138068,"byte_end":138127,"line_start":1231,"line_end":1231,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138132,"byte_end":138184,"line_start":1232,"line_end":1232,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138189,"byte_end":138263,"line_start":1233,"line_end":1233,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138268,"byte_end":138330,"line_start":1234,"line_end":1234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138335,"byte_end":138338,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138343,"byte_end":138381,"line_start":1236,"line_end":1236,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138386,"byte_end":138406,"line_start":1237,"line_end":1237,"column_start":5,"column_end":24}},{"value":"/     \"Library of Congress\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138411,"byte_end":138441,"line_start":1238,"line_end":1238,"column_start":5,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138446,"byte_end":138453,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138458,"byte_end":138473,"line_start":1240,"line_end":1240,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138478,"byte_end":138490,"line_start":1241,"line_end":1241,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138495,"byte_end":138509,"line_start":1242,"line_end":1242,"column_start":5,"column_end":19}},{"value":"/         &mut 1807,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138514,"byte_end":138536,"line_start":1243,"line_end":1243,"column_start":5,"column_end":27}},{"value":"/         &mut 1800,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138541,"byte_end":138563,"line_start":1244,"line_end":1244,"column_start":5,"column_end":27}},{"value":"/     ]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138568,"byte_end":138579,"line_start":1245,"line_end":1245,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138584,"byte_end":138590,"line_start":1246,"line_end":1246,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138595,"byte_end":138598,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ // Missing keys result in None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138603,"byte_end":138637,"line_start":1248,"line_end":1248,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138642,"byte_end":138680,"line_start":1249,"line_end":1249,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138685,"byte_end":138705,"line_start":1250,"line_end":1250,"column_start":5,"column_end":24}},{"value":"/     \"New York Public Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138710,"byte_end":138744,"line_start":1251,"line_end":1251,"column_start":5,"column_end":39}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138749,"byte_end":138756,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138761,"byte_end":138787,"line_start":1253,"line_end":1253,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138792,"byte_end":138795,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ // Duplicate keys result in None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138800,"byte_end":138836,"line_start":1255,"line_end":1255,"column_start":5,"column_end":41}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138841,"byte_end":138879,"line_start":1256,"line_end":1256,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138884,"byte_end":138904,"line_start":1257,"line_end":1257,"column_start":5,"column_end":24}},{"value":"/     \"Athenæum\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138909,"byte_end":138929,"line_start":1258,"line_end":1258,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138934,"byte_end":138941,"line_start":1259,"line_end":1259,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138946,"byte_end":138972,"line_start":1260,"line_end":1260,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":138977,"byte_end":138984,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140714,"byte_end":140736,"line_start":1315,"line_end":1315,"column_start":19,"column_end":41},"name":"get_many_unchecked_mut","qualname":"<HashMap<K, V, S, A>>::get_many_unchecked_mut","value":"pub unsafe fn get_many_unchecked_mut<Q: ?Sized, const N:\n                                     usize>(&mut Self, [&Q; ])\n-> Option<[&mut V; ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, without validating that\n the values are unique.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, without validating that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139224,"byte_end":139320,"line_start":1270,"line_end":1270,"column_start":5,"column_end":101}},{"value":"/ the values are unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139325,"byte_end":139351,"line_start":1271,"line_end":1271,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139356,"byte_end":139359,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. `None` will be returned if","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139364,"byte_end":139457,"line_start":1273,"line_end":1273,"column_start":5,"column_end":98}},{"value":"/ any of the keys are missing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139462,"byte_end":139494,"line_start":1274,"line_end":1274,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139499,"byte_end":139502,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative see [`get_many_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139507,"byte_end":139555,"line_start":1276,"line_end":1276,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139560,"byte_end":139563,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139568,"byte_end":139580,"line_start":1278,"line_end":1278,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139585,"byte_end":139588,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ Calling this method with overlapping keys is *[undefined behavior]* even if the resulting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139593,"byte_end":139686,"line_start":1280,"line_end":1280,"column_start":5,"column_end":98}},{"value":"/ references are not used.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139691,"byte_end":139719,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139724,"byte_end":139727,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139732,"byte_end":139828,"line_start":1283,"line_end":1283,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139833,"byte_end":139836,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139841,"byte_end":139855,"line_start":1285,"line_end":1285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139860,"byte_end":139863,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139868,"byte_end":139875,"line_start":1287,"line_end":1287,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139880,"byte_end":139907,"line_start":1288,"line_end":1288,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139912,"byte_end":139915,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139920,"byte_end":139959,"line_start":1290,"line_end":1290,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":139964,"byte_end":140023,"line_start":1291,"line_end":1291,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140028,"byte_end":140080,"line_start":1292,"line_end":1292,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140085,"byte_end":140159,"line_start":1293,"line_end":1293,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140164,"byte_end":140226,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140231,"byte_end":140234,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140239,"byte_end":140277,"line_start":1296,"line_end":1296,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140282,"byte_end":140302,"line_start":1297,"line_end":1297,"column_start":5,"column_end":24}},{"value":"/     \"Library of Congress\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140307,"byte_end":140337,"line_start":1298,"line_end":1298,"column_start":5,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140342,"byte_end":140349,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140354,"byte_end":140369,"line_start":1300,"line_end":1300,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140374,"byte_end":140386,"line_start":1301,"line_end":1301,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140391,"byte_end":140405,"line_start":1302,"line_end":1302,"column_start":5,"column_end":19}},{"value":"/         &mut 1807,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140410,"byte_end":140432,"line_start":1303,"line_end":1303,"column_start":5,"column_end":27}},{"value":"/         &mut 1800,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140437,"byte_end":140459,"line_start":1304,"line_end":1304,"column_start":5,"column_end":27}},{"value":"/     ]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140464,"byte_end":140475,"line_start":1305,"line_end":1305,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140480,"byte_end":140486,"line_start":1306,"line_end":1306,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140491,"byte_end":140494,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ // Missing keys result in None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140499,"byte_end":140533,"line_start":1308,"line_end":1308,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140538,"byte_end":140576,"line_start":1309,"line_end":1309,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140581,"byte_end":140601,"line_start":1310,"line_end":1310,"column_start":5,"column_end":24}},{"value":"/     \"New York Public Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140606,"byte_end":140640,"line_start":1311,"line_end":1311,"column_start":5,"column_end":39}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140645,"byte_end":140652,"line_start":1312,"line_end":1312,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140657,"byte_end":140683,"line_start":1313,"line_end":1313,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140688,"byte_end":140695,"line_start":1314,"line_end":1314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142632,"byte_end":142654,"line_start":1371,"line_end":1371,"column_start":12,"column_end":34},"name":"get_many_key_value_mut","qualname":"<HashMap<K, V, S, A>>::get_many_key_value_mut","value":"pub fn get_many_key_value_mut<Q: ?Sized, const N: usize>(&mut Self, [&Q; ])\n-> Option<[(&K, &mut V); ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, with immutable\n references to the corresponding keys.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, with immutable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":140998,"byte_end":141085,"line_start":1327,"line_end":1327,"column_start":5,"column_end":92}},{"value":"/ references to the corresponding keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141090,"byte_end":141131,"line_start":1328,"line_end":1328,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141136,"byte_end":141139,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. For soundness, at most one","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141144,"byte_end":141237,"line_start":1330,"line_end":1330,"column_start":5,"column_end":98}},{"value":"/ mutable reference will be returned to any value. `None` will be returned if any of the keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141242,"byte_end":141337,"line_start":1331,"line_end":1331,"column_start":5,"column_end":100}},{"value":"/ are duplicates or missing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141342,"byte_end":141372,"line_start":1332,"line_end":1332,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141377,"byte_end":141380,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141385,"byte_end":141399,"line_start":1334,"line_end":1334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141404,"byte_end":141407,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141412,"byte_end":141419,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141424,"byte_end":141451,"line_start":1337,"line_end":1337,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141456,"byte_end":141459,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141464,"byte_end":141503,"line_start":1339,"line_end":1339,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141508,"byte_end":141567,"line_start":1340,"line_end":1340,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141572,"byte_end":141624,"line_start":1341,"line_end":1341,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141629,"byte_end":141703,"line_start":1342,"line_end":1342,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141708,"byte_end":141770,"line_start":1343,"line_end":1343,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141775,"byte_end":141778,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141783,"byte_end":141831,"line_start":1345,"line_end":1345,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141836,"byte_end":141863,"line_start":1346,"line_end":1346,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141868,"byte_end":141910,"line_start":1347,"line_end":1347,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141915,"byte_end":141922,"line_start":1348,"line_end":1348,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141927,"byte_end":141942,"line_start":1349,"line_end":1349,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141947,"byte_end":141959,"line_start":1350,"line_end":1350,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141964,"byte_end":141978,"line_start":1351,"line_end":1351,"column_start":5,"column_end":19}},{"value":"/         (&\"Bodleian Library\".to_string(), &mut 1602),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":141983,"byte_end":142040,"line_start":1352,"line_end":1352,"column_start":5,"column_end":62}},{"value":"/         (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142045,"byte_end":142117,"line_start":1353,"line_end":1353,"column_start":5,"column_end":77}},{"value":"/     ]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142122,"byte_end":142133,"line_start":1354,"line_end":1354,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142138,"byte_end":142144,"line_start":1355,"line_end":1355,"column_start":5,"column_end":11}},{"value":"/ // Missing keys result in None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142149,"byte_end":142183,"line_start":1356,"line_end":1356,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142188,"byte_end":142236,"line_start":1357,"line_end":1357,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142241,"byte_end":142268,"line_start":1358,"line_end":1358,"column_start":5,"column_end":32}},{"value":"/     \"Gewandhaus\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142273,"byte_end":142294,"line_start":1359,"line_end":1359,"column_start":5,"column_end":26}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142299,"byte_end":142306,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142311,"byte_end":142337,"line_start":1361,"line_end":1361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142342,"byte_end":142345,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ // Duplicate keys result in None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142350,"byte_end":142386,"line_start":1363,"line_end":1363,"column_start":5,"column_end":41}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142391,"byte_end":142439,"line_start":1364,"line_end":1364,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142444,"byte_end":142471,"line_start":1365,"line_end":1365,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142476,"byte_end":142518,"line_start":1366,"line_end":1366,"column_start":5,"column_end":47}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142523,"byte_end":142565,"line_start":1367,"line_end":1367,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142570,"byte_end":142577,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142582,"byte_end":142608,"line_start":1369,"line_end":1369,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142613,"byte_end":142620,"line_start":1370,"line_end":1370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144585,"byte_end":144617,"line_start":1427,"line_end":1427,"column_start":19,"column_end":51},"name":"get_many_key_value_unchecked_mut","qualname":"<HashMap<K, V, S, A>>::get_many_key_value_unchecked_mut","value":"pub unsafe fn get_many_key_value_unchecked_mut<Q: ?Sized, const N:\n                                               usize>(&mut Self, [&Q; ])\n-> Option<[(&K, &mut V); ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, with immutable\n references to the corresponding keys, without validating that the values are unique.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, with immutable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":142922,"byte_end":143009,"line_start":1383,"line_end":1383,"column_start":5,"column_end":92}},{"value":"/ references to the corresponding keys, without validating that the values are unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143014,"byte_end":143102,"line_start":1384,"line_end":1384,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143107,"byte_end":143110,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. `None` will be returned if","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143115,"byte_end":143208,"line_start":1386,"line_end":1386,"column_start":5,"column_end":98}},{"value":"/ any of the keys are missing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143213,"byte_end":143245,"line_start":1387,"line_end":1387,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143250,"byte_end":143253,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative see [`get_many_key_value_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143258,"byte_end":143316,"line_start":1389,"line_end":1389,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143321,"byte_end":143324,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143329,"byte_end":143341,"line_start":1391,"line_end":1391,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143346,"byte_end":143349,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ Calling this method with overlapping keys is *[undefined behavior]* even if the resulting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143354,"byte_end":143447,"line_start":1393,"line_end":1393,"column_start":5,"column_end":98}},{"value":"/ references are not used.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143452,"byte_end":143480,"line_start":1394,"line_end":1394,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143485,"byte_end":143488,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143493,"byte_end":143589,"line_start":1396,"line_end":1396,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143594,"byte_end":143597,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143602,"byte_end":143616,"line_start":1398,"line_end":1398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143621,"byte_end":143624,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143629,"byte_end":143636,"line_start":1400,"line_end":1400,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143641,"byte_end":143668,"line_start":1401,"line_end":1401,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143673,"byte_end":143676,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143681,"byte_end":143720,"line_start":1403,"line_end":1403,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143725,"byte_end":143784,"line_start":1404,"line_end":1404,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143789,"byte_end":143841,"line_start":1405,"line_end":1405,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143846,"byte_end":143920,"line_start":1406,"line_end":1406,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143925,"byte_end":143987,"line_start":1407,"line_end":1407,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":143992,"byte_end":143995,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144000,"byte_end":144048,"line_start":1409,"line_end":1409,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144053,"byte_end":144080,"line_start":1410,"line_end":1410,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144085,"byte_end":144127,"line_start":1411,"line_end":1411,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144132,"byte_end":144139,"line_start":1412,"line_end":1412,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144144,"byte_end":144159,"line_start":1413,"line_end":1413,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144164,"byte_end":144176,"line_start":1414,"line_end":1414,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144181,"byte_end":144195,"line_start":1415,"line_end":1415,"column_start":5,"column_end":19}},{"value":"/         (&\"Bodleian Library\".to_string(), &mut 1602),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144200,"byte_end":144257,"line_start":1416,"line_end":1416,"column_start":5,"column_end":62}},{"value":"/         (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144262,"byte_end":144334,"line_start":1417,"line_end":1417,"column_start":5,"column_end":77}},{"value":"/     ]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144339,"byte_end":144350,"line_start":1418,"line_end":1418,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144355,"byte_end":144361,"line_start":1419,"line_end":1419,"column_start":5,"column_end":11}},{"value":"/ // Missing keys result in None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144366,"byte_end":144400,"line_start":1420,"line_end":1420,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144405,"byte_end":144453,"line_start":1421,"line_end":1421,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144458,"byte_end":144485,"line_start":1422,"line_end":1422,"column_start":5,"column_end":32}},{"value":"/     \"Gewandhaus\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144490,"byte_end":144511,"line_start":1423,"line_end":1423,"column_start":5,"column_end":26}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144516,"byte_end":144523,"line_start":1424,"line_end":1424,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144528,"byte_end":144554,"line_start":1425,"line_end":1425,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":144559,"byte_end":144566,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146878,"byte_end":146884,"line_start":1503,"line_end":1503,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S, A>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":145903,"byte_end":145945,"line_start":1477,"line_end":1477,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":145950,"byte_end":145953,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":145958,"byte_end":146025,"line_start":1479,"line_end":1479,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146030,"byte_end":146033,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146038,"byte_end":146113,"line_start":1481,"line_end":1481,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146118,"byte_end":146189,"line_start":1482,"line_end":1482,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146194,"byte_end":146267,"line_start":1483,"line_end":1483,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146272,"byte_end":146300,"line_start":1484,"line_end":1484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146305,"byte_end":146308,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146313,"byte_end":146393,"line_start":1486,"line_end":1486,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146398,"byte_end":146466,"line_start":1487,"line_end":1487,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146471,"byte_end":146474,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146479,"byte_end":146493,"line_start":1489,"line_end":1489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146498,"byte_end":146501,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146506,"byte_end":146513,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146518,"byte_end":146545,"line_start":1492,"line_end":1492,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146550,"byte_end":146553,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146558,"byte_end":146591,"line_start":1494,"line_end":1494,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146596,"byte_end":146638,"line_start":1495,"line_end":1495,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146643,"byte_end":146681,"line_start":1496,"line_end":1496,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146686,"byte_end":146689,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146694,"byte_end":146718,"line_start":1498,"line_end":1498,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146723,"byte_end":146770,"line_start":1499,"line_end":1499,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146775,"byte_end":146805,"line_start":1500,"line_end":1500,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146810,"byte_end":146817,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":146858,"byte_end":146864,"line_start":1502,"line_end":1502,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148250,"byte_end":148273,"line_start":1535,"line_end":1535,"column_start":12,"column_end":35},"name":"insert_unique_unchecked","qualname":"<HashMap<K, V, S, A>>::insert_unique_unchecked","value":"pub fn insert_unique_unchecked(&mut Self, K, V) -> (&K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair into the map without checking\n if the key already exists in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair into the map without checking","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147276,"byte_end":147333,"line_start":1514,"line_end":1514,"column_start":5,"column_end":62}},{"value":"/ if the key already exists in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147338,"byte_end":147379,"line_start":1515,"line_end":1515,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147384,"byte_end":147387,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the key and value just inserted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147392,"byte_end":147451,"line_start":1517,"line_end":1517,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147456,"byte_end":147459,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This operation is safe if a key does not exist in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147464,"byte_end":147526,"line_start":1519,"line_end":1519,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147531,"byte_end":147534,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ However, if a key exists in the map already, the behavior is unspecified:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147539,"byte_end":147616,"line_start":1521,"line_end":1521,"column_start":5,"column_end":82}},{"value":"/ this operation may panic, loop forever, or any following operation with the map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147621,"byte_end":147704,"line_start":1522,"line_end":1522,"column_start":5,"column_end":88}},{"value":"/ may panic, loop forever or return arbitrary result.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147709,"byte_end":147764,"line_start":1523,"line_end":1523,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147769,"byte_end":147772,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ That said, this operation (and following operations) are guaranteed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147777,"byte_end":147851,"line_start":1525,"line_end":1525,"column_start":5,"column_end":79}},{"value":"/ not violate memory safety.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147856,"byte_end":147886,"line_start":1526,"line_end":1526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147891,"byte_end":147894,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ This operation is faster than regular insert, because it does not perform","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147899,"byte_end":147976,"line_start":1528,"line_end":1528,"column_start":5,"column_end":82}},{"value":"/ lookup before insertion.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":147981,"byte_end":148009,"line_start":1529,"line_end":1529,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148014,"byte_end":148017,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ This operation is useful during initial population of the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148022,"byte_end":148088,"line_start":1531,"line_end":1531,"column_start":5,"column_end":71}},{"value":"/ For example, when constructing a map from another map, we know","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148093,"byte_end":148159,"line_start":1532,"line_end":1532,"column_start":5,"column_end":71}},{"value":"/ that keys are unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148164,"byte_end":148189,"line_start":1533,"line_end":1533,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148230,"byte_end":148236,"line_start":1534,"line_end":1534,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149371,"byte_end":149381,"line_start":1568,"line_end":1568,"column_start":12,"column_end":22},"name":"try_insert","qualname":"<HashMap<K, V, S, A>>::try_insert","value":"pub fn try_insert(&mut Self, K, V)\n-> Result<&mut V, OccupiedError<, K, V, S, A>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to insert a key-value pair into the map, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Tries to insert a key-value pair into the map, and returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148602,"byte_end":148664,"line_start":1544,"line_end":1544,"column_start":5,"column_end":67}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148669,"byte_end":148719,"line_start":1545,"line_end":1545,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148724,"byte_end":148727,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148732,"byte_end":148744,"line_start":1547,"line_end":1547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148749,"byte_end":148752,"line_start":1548,"line_end":1548,"column_start":5,"column_end":8}},{"value":"/ If the map already had this key present, nothing is updated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148757,"byte_end":148825,"line_start":1549,"line_end":1549,"column_start":5,"column_end":73}},{"value":"/ an error containing the occupied entry and the value is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148830,"byte_end":148899,"line_start":1550,"line_end":1550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148904,"byte_end":148907,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148912,"byte_end":148926,"line_start":1552,"line_end":1552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148931,"byte_end":148934,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148939,"byte_end":148955,"line_start":1554,"line_end":1554,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148960,"byte_end":148963,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148968,"byte_end":148975,"line_start":1556,"line_end":1556,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":148980,"byte_end":149007,"line_start":1557,"line_end":1557,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149012,"byte_end":149015,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149020,"byte_end":149053,"line_start":1559,"line_end":1559,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.try_insert(37, \"a\").unwrap(), &\"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149058,"byte_end":149113,"line_start":1560,"line_end":1560,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149118,"byte_end":149121,"line_start":1561,"line_end":1561,"column_start":5,"column_end":8}},{"value":"/ let err = map.try_insert(37, \"b\").unwrap_err();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149126,"byte_end":149177,"line_start":1562,"line_end":1562,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(err.entry.key(), &37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149182,"byte_end":149219,"line_start":1563,"line_end":1563,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(err.entry.get(), &\"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149224,"byte_end":149262,"line_start":1564,"line_end":1564,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(err.value, \"b\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149267,"byte_end":149298,"line_start":1565,"line_end":1565,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149303,"byte_end":149310,"line_start":1566,"line_end":1566,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149351,"byte_end":149357,"line_start":1567,"line_end":1567,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150416,"byte_end":150422,"line_start":1600,"line_end":1600,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S, A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149682,"byte_end":149755,"line_start":1579,"line_end":1579,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149760,"byte_end":149790,"line_start":1580,"line_end":1580,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149795,"byte_end":149798,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149803,"byte_end":149866,"line_start":1582,"line_end":1582,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149871,"byte_end":149938,"line_start":1583,"line_end":1583,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149943,"byte_end":149960,"line_start":1584,"line_end":1584,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149965,"byte_end":149968,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":149973,"byte_end":150032,"line_start":1586,"line_end":1586,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150037,"byte_end":150101,"line_start":1587,"line_end":1587,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150106,"byte_end":150109,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150114,"byte_end":150128,"line_start":1589,"line_end":1589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150133,"byte_end":150136,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150141,"byte_end":150148,"line_start":1591,"line_end":1591,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150153,"byte_end":150180,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150185,"byte_end":150188,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150193,"byte_end":150226,"line_start":1594,"line_end":1594,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150231,"byte_end":150254,"line_start":1595,"line_end":1595,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150259,"byte_end":150301,"line_start":1596,"line_end":1596,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150306,"byte_end":150343,"line_start":1597,"line_end":1597,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150348,"byte_end":150355,"line_start":1598,"line_end":1598,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150396,"byte_end":150402,"line_start":1599,"line_end":1599,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151453,"byte_end":151465,"line_start":1633,"line_end":1633,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S, A>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150704,"byte_end":150777,"line_start":1612,"line_end":1612,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150782,"byte_end":150816,"line_start":1613,"line_end":1613,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150821,"byte_end":150824,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150829,"byte_end":150892,"line_start":1615,"line_end":1615,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150897,"byte_end":150964,"line_start":1616,"line_end":1616,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150969,"byte_end":150986,"line_start":1617,"line_end":1617,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150991,"byte_end":150994,"line_start":1618,"line_end":1618,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":150999,"byte_end":151058,"line_start":1619,"line_end":1619,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151063,"byte_end":151127,"line_start":1620,"line_end":1620,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151132,"byte_end":151135,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151140,"byte_end":151154,"line_start":1622,"line_end":1622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151159,"byte_end":151162,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151167,"byte_end":151174,"line_start":1624,"line_end":1624,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151179,"byte_end":151206,"line_start":1625,"line_end":1625,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151211,"byte_end":151214,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151219,"byte_end":151252,"line_start":1627,"line_end":1627,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151257,"byte_end":151280,"line_start":1628,"line_end":1628,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151285,"byte_end":151338,"line_start":1629,"line_end":1629,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151343,"byte_end":151380,"line_start":1630,"line_end":1630,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151385,"byte_end":151392,"line_start":1631,"line_end":1631,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151433,"byte_end":151439,"line_start":1632,"line_end":1632,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153705,"byte_end":153718,"line_start":1676,"line_end":1676,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S, A>>::raw_entry_mut","value":"pub fn raw_entry_mut(&mut Self) -> RawEntryBuilderMut<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151765,"byte_end":151813,"line_start":1644,"line_end":1644,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151818,"byte_end":151821,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151826,"byte_end":151895,"line_start":1646,"line_end":1646,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151900,"byte_end":151973,"line_start":1647,"line_end":1647,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151978,"byte_end":152048,"line_start":1648,"line_end":1648,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152053,"byte_end":152099,"line_start":1649,"line_end":1649,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152104,"byte_end":152107,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152112,"byte_end":152169,"line_start":1651,"line_end":1651,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152174,"byte_end":152177,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152182,"byte_end":152204,"line_start":1653,"line_end":1653,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152209,"byte_end":152286,"line_start":1654,"line_end":1654,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152291,"byte_end":152355,"line_start":1655,"line_end":1655,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152360,"byte_end":152420,"line_start":1656,"line_end":1656,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152425,"byte_end":152428,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152433,"byte_end":152510,"line_start":1658,"line_end":1658,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152515,"byte_end":152590,"line_start":1659,"line_end":1659,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152595,"byte_end":152671,"line_start":1660,"line_end":1660,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152676,"byte_end":152747,"line_start":1661,"line_end":1661,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152752,"byte_end":152755,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152760,"byte_end":152835,"line_start":1663,"line_end":1663,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152840,"byte_end":152919,"line_start":1664,"line_end":1664,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":152924,"byte_end":152999,"line_start":1665,"line_end":1665,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153004,"byte_end":153066,"line_start":1666,"line_end":1666,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153071,"byte_end":153074,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153079,"byte_end":153149,"line_start":1668,"line_end":1668,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153154,"byte_end":153234,"line_start":1669,"line_end":1669,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153239,"byte_end":153311,"line_start":1670,"line_end":1670,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153316,"byte_end":153392,"line_start":1671,"line_end":1671,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153397,"byte_end":153472,"line_start":1672,"line_end":1672,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153477,"byte_end":153559,"line_start":1673,"line_end":1673,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153564,"byte_end":153644,"line_start":1674,"line_end":1674,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153685,"byte_end":153691,"line_start":1675,"line_end":1675,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154559,"byte_end":154568,"line_start":1696,"line_end":1696,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S, A>>::raw_entry","value":"pub fn raw_entry(&Self) -> RawEntryBuilder<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153822,"byte_end":153880,"line_start":1680,"line_end":1680,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153885,"byte_end":153888,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153893,"byte_end":153962,"line_start":1682,"line_end":1682,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":153967,"byte_end":154040,"line_start":1683,"line_end":1683,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154045,"byte_end":154072,"line_start":1684,"line_end":1684,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154077,"byte_end":154080,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154085,"byte_end":154107,"line_start":1686,"line_end":1686,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154112,"byte_end":154134,"line_start":1687,"line_end":1687,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154139,"byte_end":154203,"line_start":1688,"line_end":1688,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154208,"byte_end":154268,"line_start":1689,"line_end":1689,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154273,"byte_end":154276,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154281,"byte_end":154362,"line_start":1691,"line_end":1691,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154367,"byte_end":154397,"line_start":1692,"line_end":1692,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154402,"byte_end":154405,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154410,"byte_end":154498,"line_start":1694,"line_end":1694,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154539,"byte_end":154545,"line_start":1695,"line_end":1695,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":764},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157081,"byte_end":157085,"line_start":1798,"line_end":1798,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156826,"byte_end":156874,"line_start":1791,"line_end":1791,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156875,"byte_end":156878,"line_start":1792,"line_end":1792,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156879,"byte_end":156954,"line_start":1793,"line_end":1793,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156955,"byte_end":156982,"line_start":1794,"line_end":1794,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156983,"byte_end":156986,"line_start":1795,"line_end":1795,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156987,"byte_end":157032,"line_start":1796,"line_end":1796,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157033,"byte_end":157069,"line_start":1797,"line_end":1797,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157905,"byte_end":157912,"line_start":1827,"line_end":1827,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157631,"byte_end":157686,"line_start":1820,"line_end":1820,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157687,"byte_end":157690,"line_start":1821,"line_end":1821,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157691,"byte_end":157770,"line_start":1822,"line_end":1822,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157771,"byte_end":157798,"line_start":1823,"line_end":1823,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157799,"byte_end":157802,"line_start":1824,"line_end":1824,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157803,"byte_end":157856,"line_start":1825,"line_end":1825,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157857,"byte_end":157893,"line_start":1826,"line_end":1826,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158911,"byte_end":158919,"line_start":1856,"line_end":1856,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":795}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158595,"byte_end":158650,"line_start":1849,"line_end":1849,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158651,"byte_end":158654,"line_start":1850,"line_end":1850,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158655,"byte_end":158726,"line_start":1851,"line_end":1851,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158727,"byte_end":158802,"line_start":1852,"line_end":1852,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158803,"byte_end":158806,"line_start":1853,"line_end":1853,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158807,"byte_end":158862,"line_start":1854,"line_end":1854,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158863,"byte_end":158899,"line_start":1855,"line_end":1855,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159595,"byte_end":159603,"line_start":1878,"line_end":1878,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" An owning iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159321,"byte_end":159373,"line_start":1871,"line_end":1871,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159374,"byte_end":159377,"line_start":1872,"line_end":1872,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`HashMap`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159378,"byte_end":159450,"line_start":1873,"line_end":1873,"column_start":1,"column_end":73}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159451,"byte_end":159486,"line_start":1874,"line_end":1874,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159487,"byte_end":159490,"line_start":1875,"line_end":1875,"column_start":1,"column_end":4}},{"value":"/ [`into_keys`]: struct.HashMap.html#method.into_keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159491,"byte_end":159546,"line_start":1876,"line_end":1876,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159547,"byte_end":159583,"line_start":1877,"line_end":1877,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160730,"byte_end":160740,"line_start":1919,"line_end":1919,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":833}],"decl_id":null,"docs":" An owning iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160448,"byte_end":160502,"line_start":1912,"line_end":1912,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160503,"byte_end":160506,"line_start":1913,"line_end":1913,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`HashMap`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160507,"byte_end":160581,"line_start":1914,"line_end":1914,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160582,"byte_end":160617,"line_start":1915,"line_end":1915,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160618,"byte_end":160621,"line_start":1916,"line_end":1916,"column_start":1,"column_end":4}},{"value":"/ [`into_values`]: struct.HashMap.html#method.into_values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160622,"byte_end":160681,"line_start":1917,"line_end":1917,"column_start":1,"column_end":60}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160682,"byte_end":160718,"line_start":1918,"line_end":1918,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161845,"byte_end":161849,"line_start":1960,"line_end":1960,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":861}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161593,"byte_end":161638,"line_start":1953,"line_end":1953,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161639,"byte_end":161642,"line_start":1954,"line_end":1954,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161643,"byte_end":161718,"line_start":1955,"line_end":1955,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161719,"byte_end":161746,"line_start":1956,"line_end":1956,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161747,"byte_end":161750,"line_start":1957,"line_end":1957,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161751,"byte_end":161796,"line_start":1958,"line_end":1958,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161797,"byte_end":161833,"line_start":1959,"line_end":1959,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162573,"byte_end":162579,"line_start":1987,"line_end":1987,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":874}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162313,"byte_end":162360,"line_start":1980,"line_end":1980,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162361,"byte_end":162364,"line_start":1981,"line_end":1981,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162365,"byte_end":162442,"line_start":1982,"line_end":1982,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162443,"byte_end":162470,"line_start":1983,"line_end":1983,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162471,"byte_end":162474,"line_start":1984,"line_end":1984,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162475,"byte_end":162524,"line_start":1985,"line_end":1985,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162525,"byte_end":162561,"line_start":1986,"line_end":1986,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163315,"byte_end":163320,"line_start":2014,"line_end":2014,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":888}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163049,"byte_end":163105,"line_start":2007,"line_end":2007,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163106,"byte_end":163109,"line_start":2008,"line_end":2008,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163110,"byte_end":163186,"line_start":2009,"line_end":2009,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163187,"byte_end":163214,"line_start":2010,"line_end":2010,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163215,"byte_end":163218,"line_start":2011,"line_end":2011,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163219,"byte_end":163266,"line_start":2012,"line_end":2012,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163267,"byte_end":163303,"line_start":2013,"line_end":2013,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":894},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164049,"byte_end":164060,"line_start":2036,"line_end":2036,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163728,"byte_end":163818,"line_start":2029,"line_end":2029,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163819,"byte_end":163822,"line_start":2030,"line_end":2030,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163823,"byte_end":163906,"line_start":2031,"line_end":2031,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163907,"byte_end":163934,"line_start":2032,"line_end":2032,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163935,"byte_end":163938,"line_start":2033,"line_end":2033,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashMap.html#method.drain_filter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163939,"byte_end":164000,"line_start":2034,"line_end":2034,"column_start":1,"column_end":62}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164001,"byte_end":164037,"line_start":2035,"line_end":2035,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":942},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166314,"byte_end":166323,"line_start":2119,"line_end":2119,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":946}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166035,"byte_end":166089,"line_start":2112,"line_end":2112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166090,"byte_end":166093,"line_start":2113,"line_end":2113,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166094,"byte_end":166175,"line_start":2114,"line_end":2114,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166176,"byte_end":166203,"line_start":2115,"line_end":2115,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166204,"byte_end":166207,"line_start":2116,"line_end":2116,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166208,"byte_end":166265,"line_start":2117,"line_end":2117,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166266,"byte_end":166302,"line_start":2118,"line_end":2118,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166610,"byte_end":166628,"line_start":2128,"line_end":2128,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":953}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166369,"byte_end":166453,"line_start":2123,"line_end":2123,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166454,"byte_end":166457,"line_start":2124,"line_end":2124,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166458,"byte_end":166521,"line_start":2125,"line_end":2125,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166522,"byte_end":166525,"line_start":2126,"line_end":2126,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166526,"byte_end":166598,"line_start":2127,"line_end":2127,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167298,"byte_end":167306,"line_start":2145,"line_end":2145,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut)","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167271,"byte_end":167293,"line_start":2144,"line_end":2144,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167373,"byte_end":167379,"line_start":2147,"line_end":2147,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut)","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167349,"byte_end":167368,"line_start":2146,"line_end":2146,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":954},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167209,"byte_end":167220,"line_start":2143,"line_end":2143,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"pub enum RawEntryMut<'a, K, V, S, A: Allocator + Clone = Global> {\n    Occupied(RawOccupiedEntryMut),\n    Vacant(RawVacantEntryMut),\n}","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":963}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166716,"byte_end":166796,"line_start":2132,"line_end":2132,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166797,"byte_end":166800,"line_start":2133,"line_end":2133,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166801,"byte_end":166848,"line_start":2134,"line_end":2134,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166849,"byte_end":166852,"line_start":2135,"line_end":2135,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166853,"byte_end":166936,"line_start":2136,"line_end":2136,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":166937,"byte_end":167004,"line_start":2137,"line_end":2137,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167005,"byte_end":167008,"line_start":2138,"line_end":2138,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167009,"byte_end":167045,"line_start":2139,"line_end":2139,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167046,"byte_end":167076,"line_start":2140,"line_end":2140,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167077,"byte_end":167140,"line_start":2141,"line_end":2141,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167141,"byte_end":167199,"line_start":2142,"line_end":2142,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167571,"byte_end":167590,"line_start":2154,"line_end":2154,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167419,"byte_end":167468,"line_start":2150,"line_end":2150,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167469,"byte_end":167512,"line_start":2151,"line_end":2151,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167513,"byte_end":167516,"line_start":2152,"line_end":2152,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167517,"byte_end":167559,"line_start":2153,"line_end":2153,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168183,"byte_end":168200,"line_start":2181,"line_end":2181,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168034,"byte_end":168080,"line_start":2177,"line_end":2177,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168081,"byte_end":168124,"line_start":2178,"line_end":2178,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168125,"byte_end":168128,"line_start":2179,"line_end":2179,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168129,"byte_end":168171,"line_start":2180,"line_end":2180,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":993},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168544,"byte_end":168559,"line_start":2191,"line_end":2191,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":999}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168315,"byte_end":168399,"line_start":2186,"line_end":2186,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168400,"byte_end":168403,"line_start":2187,"line_end":2187,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168404,"byte_end":168463,"line_start":2188,"line_end":2188,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168464,"byte_end":168467,"line_start":2189,"line_end":2189,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168468,"byte_end":168532,"line_start":2190,"line_end":2190,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168876,"byte_end":168884,"line_start":2199,"line_end":2199,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> RawEntryMut where S: BuildHasher,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168724,"byte_end":168771,"line_start":2196,"line_end":2196,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168812,"byte_end":168818,"line_start":2197,"line_end":2197,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168825,"byte_end":168864,"line_start":2198,"line_end":2198,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169279,"byte_end":169302,"line_start":2212,"line_end":2212,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q) -> RawEntryMut where\nK: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169149,"byte_end":169209,"line_start":2209,"line_end":2209,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169214,"byte_end":169223,"line_start":2210,"line_end":2210,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169228,"byte_end":169267,"line_start":2211,"line_end":2211,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169709,"byte_end":169718,"line_start":2225,"line_end":2225,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> RawEntryMut where for<'b> F: FnMut(&'b K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169556,"byte_end":169604,"line_start":2222,"line_end":2222,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169645,"byte_end":169651,"line_start":2223,"line_end":2223,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169658,"byte_end":169697,"line_start":2224,"line_end":2224,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":170744,"byte_end":170752,"line_start":2255,"line_end":2255,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> Option<(&'a K, &'a V)> where\nS: BuildHasher, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"/ Access an entry by key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":170612,"byte_end":170639,"line_start":2252,"line_end":2252,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":170680,"byte_end":170686,"line_start":2253,"line_end":2253,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":170693,"byte_end":170732,"line_start":2254,"line_end":2254,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171159,"byte_end":171182,"line_start":2268,"line_end":2268,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q)\n-> Option<(&'a K, &'a V)> where K: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by a key and its hash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171012,"byte_end":171054,"line_start":2265,"line_end":2265,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171095,"byte_end":171101,"line_start":2266,"line_end":2266,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171108,"byte_end":171147,"line_start":2267,"line_end":2267,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171826,"byte_end":171835,"line_start":2290,"line_end":2290,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> Option<(&'a K, &'a V)> where F: FnMut(&K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by hash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171693,"byte_end":171721,"line_start":2287,"line_end":2287,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171762,"byte_end":171768,"line_start":2288,"line_end":2288,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":171775,"byte_end":171814,"line_start":2289,"line_end":2289,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172504,"byte_end":172510,"line_start":2312,"line_end":2312,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"pub fn insert(Self, K, V) -> RawOccupiedEntryMut where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172060,"byte_end":172127,"line_start":2299,"line_end":2299,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172132,"byte_end":172135,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172140,"byte_end":172154,"line_start":2301,"line_end":2301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172159,"byte_end":172162,"line_start":2302,"line_end":2302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172167,"byte_end":172174,"line_start":2303,"line_end":2303,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172179,"byte_end":172206,"line_start":2304,"line_end":2304,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172211,"byte_end":172214,"line_start":2305,"line_end":2305,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172219,"byte_end":172272,"line_start":2306,"line_end":2306,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172277,"byte_end":172361,"line_start":2307,"line_end":2307,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172366,"byte_end":172369,"line_start":2308,"line_end":2308,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172374,"byte_end":172431,"line_start":2309,"line_end":2309,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172436,"byte_end":172443,"line_start":2310,"line_end":2310,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172484,"byte_end":172490,"line_start":2311,"line_end":2311,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173493,"byte_end":173502,"line_start":2343,"line_end":2343,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"pub fn or_insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172870,"byte_end":172952,"line_start":2326,"line_end":2326,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172957,"byte_end":173014,"line_start":2327,"line_end":2327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173019,"byte_end":173022,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173027,"byte_end":173041,"line_start":2329,"line_end":2329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173046,"byte_end":173049,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173054,"byte_end":173061,"line_start":2331,"line_end":2331,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173066,"byte_end":173093,"line_start":2332,"line_end":2332,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173098,"byte_end":173101,"line_start":2333,"line_end":2333,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173106,"byte_end":173159,"line_start":2334,"line_end":2334,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173164,"byte_end":173167,"line_start":2335,"line_end":2335,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173172,"byte_end":173244,"line_start":2336,"line_end":2336,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173249,"byte_end":173285,"line_start":2337,"line_end":2337,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173290,"byte_end":173293,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173298,"byte_end":173379,"line_start":2339,"line_end":2339,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173384,"byte_end":173420,"line_start":2340,"line_end":2340,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173425,"byte_end":173432,"line_start":2341,"line_end":2341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173473,"byte_end":173479,"line_start":2342,"line_end":2342,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174406,"byte_end":174420,"line_start":2371,"line_end":2371,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> (&'a mut K, &'a mut V) where F: FnOnce()\n-> (K, V), K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173816,"byte_end":173909,"line_start":2354,"line_end":2354,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173914,"byte_end":173983,"line_start":2355,"line_end":2355,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173988,"byte_end":173991,"line_start":2356,"line_end":2356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":173996,"byte_end":174010,"line_start":2357,"line_end":2357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174015,"byte_end":174018,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174023,"byte_end":174030,"line_start":2359,"line_end":2359,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174035,"byte_end":174062,"line_start":2360,"line_end":2360,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174067,"byte_end":174070,"line_start":2361,"line_end":2361,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174075,"byte_end":174131,"line_start":2362,"line_end":2362,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174136,"byte_end":174139,"line_start":2363,"line_end":2363,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174144,"byte_end":174209,"line_start":2364,"line_end":2364,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174214,"byte_end":174255,"line_start":2365,"line_end":2365,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174260,"byte_end":174267,"line_start":2366,"line_end":2366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174272,"byte_end":174275,"line_start":2367,"line_end":2367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174280,"byte_end":174333,"line_start":2368,"line_end":2368,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174338,"byte_end":174345,"line_start":2369,"line_end":2369,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174386,"byte_end":174392,"line_start":2370,"line_end":2370,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175516,"byte_end":175526,"line_start":2409,"line_end":2409,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K, &mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174799,"byte_end":174867,"line_start":2386,"line_end":2386,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174872,"byte_end":174907,"line_start":2387,"line_end":2387,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174912,"byte_end":174915,"line_start":2388,"line_end":2388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174920,"byte_end":174934,"line_start":2389,"line_end":2389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174939,"byte_end":174942,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174947,"byte_end":174954,"line_start":2391,"line_end":2391,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174959,"byte_end":174986,"line_start":2392,"line_end":2392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174991,"byte_end":174994,"line_start":2393,"line_end":2393,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":174999,"byte_end":175052,"line_start":2394,"line_end":2394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175057,"byte_end":175060,"line_start":2395,"line_end":2395,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175065,"byte_end":175088,"line_start":2396,"line_end":2396,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175093,"byte_end":175122,"line_start":2397,"line_end":2397,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175127,"byte_end":175166,"line_start":2398,"line_end":2398,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175171,"byte_end":175206,"line_start":2399,"line_end":2399,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175211,"byte_end":175248,"line_start":2400,"line_end":2400,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175253,"byte_end":175256,"line_start":2401,"line_end":2401,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175261,"byte_end":175284,"line_start":2402,"line_end":2402,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175289,"byte_end":175318,"line_start":2403,"line_end":2403,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175323,"byte_end":175362,"line_start":2404,"line_end":2404,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175367,"byte_end":175401,"line_start":2405,"line_end":2405,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175406,"byte_end":175443,"line_start":2406,"line_end":2406,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175448,"byte_end":175455,"line_start":2407,"line_end":2407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175496,"byte_end":175502,"line_start":2408,"line_end":2408,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177612,"byte_end":177634,"line_start":2481,"line_end":2481,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":175947,"byte_end":176017,"line_start":2425,"line_end":2425,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176022,"byte_end":176091,"line_start":2426,"line_end":2426,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176096,"byte_end":176129,"line_start":2427,"line_end":2427,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176134,"byte_end":176137,"line_start":2428,"line_end":2428,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176142,"byte_end":176156,"line_start":2429,"line_end":2429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176161,"byte_end":176164,"line_start":2430,"line_end":2430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176169,"byte_end":176176,"line_start":2431,"line_end":2431,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176181,"byte_end":176208,"line_start":2432,"line_end":2432,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::RawEntryMut;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176213,"byte_end":176254,"line_start":2433,"line_end":2433,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176259,"byte_end":176262,"line_start":2434,"line_end":2434,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176267,"byte_end":176320,"line_start":2435,"line_end":2435,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176325,"byte_end":176328,"line_start":2436,"line_end":2436,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176333,"byte_end":176352,"line_start":2437,"line_end":2437,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176357,"byte_end":176381,"line_start":2438,"line_end":2438,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176386,"byte_end":176416,"line_start":2439,"line_end":2439,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176421,"byte_end":176472,"line_start":2440,"line_end":2440,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176477,"byte_end":176480,"line_start":2441,"line_end":2441,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176485,"byte_end":176502,"line_start":2442,"line_end":2442,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176507,"byte_end":176544,"line_start":2443,"line_end":2443,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176549,"byte_end":176594,"line_start":2444,"line_end":2444,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176599,"byte_end":176604,"line_start":2445,"line_end":2445,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176609,"byte_end":176612,"line_start":2446,"line_end":2446,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176617,"byte_end":176649,"line_start":2447,"line_end":2447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176654,"byte_end":176657,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176662,"byte_end":176681,"line_start":2449,"line_end":2449,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176686,"byte_end":176710,"line_start":2450,"line_end":2450,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176715,"byte_end":176745,"line_start":2451,"line_end":2451,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176750,"byte_end":176790,"line_start":2452,"line_end":2452,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176795,"byte_end":176835,"line_start":2453,"line_end":2453,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176840,"byte_end":176870,"line_start":2454,"line_end":2454,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176875,"byte_end":176898,"line_start":2455,"line_end":2455,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176903,"byte_end":176914,"line_start":2456,"line_end":2456,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176919,"byte_end":176922,"line_start":2457,"line_end":2457,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176927,"byte_end":176944,"line_start":2458,"line_end":2458,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176949,"byte_end":176986,"line_start":2459,"line_end":2459,"column_start":5,"column_end":42}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":176991,"byte_end":177037,"line_start":2460,"line_end":2460,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177042,"byte_end":177079,"line_start":2461,"line_end":2461,"column_start":5,"column_end":42}},{"value":"/     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177084,"byte_end":177094,"line_start":2462,"line_end":2462,"column_start":5,"column_end":15}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177099,"byte_end":177142,"line_start":2463,"line_end":2463,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177147,"byte_end":177152,"line_start":2464,"line_end":2464,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177157,"byte_end":177160,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177165,"byte_end":177202,"line_start":2466,"line_end":2466,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177207,"byte_end":177210,"line_start":2467,"line_end":2467,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177215,"byte_end":177234,"line_start":2468,"line_end":2468,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177239,"byte_end":177263,"line_start":2469,"line_end":2469,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177268,"byte_end":177298,"line_start":2470,"line_end":2470,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177303,"byte_end":177350,"line_start":2471,"line_end":2471,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177355,"byte_end":177358,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177363,"byte_end":177380,"line_start":2473,"line_end":2473,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177385,"byte_end":177422,"line_start":2474,"line_end":2474,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177427,"byte_end":177472,"line_start":2475,"line_end":2475,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177477,"byte_end":177482,"line_start":2476,"line_end":2476,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177487,"byte_end":177490,"line_start":2477,"line_end":2477,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177495,"byte_end":177539,"line_start":2478,"line_end":2478,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177544,"byte_end":177551,"line_start":2479,"line_end":2479,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177592,"byte_end":177598,"line_start":2480,"line_end":2480,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178058,"byte_end":178061,"line_start":2495,"line_end":2495,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177952,"byte_end":177997,"line_start":2493,"line_end":2493,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178038,"byte_end":178044,"line_start":2494,"line_end":2494,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178243,"byte_end":178250,"line_start":2501,"line_end":2501,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"pub fn key_mut(&mut Self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178129,"byte_end":178182,"line_start":2499,"line_end":2499,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178223,"byte_end":178229,"line_start":2500,"line_end":2500,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178511,"byte_end":178519,"line_start":2508,"line_end":2508,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"pub fn into_key(Self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178330,"byte_end":178401,"line_start":2505,"line_end":2505,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178406,"byte_end":178450,"line_start":2506,"line_end":2506,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178491,"byte_end":178497,"line_start":2507,"line_end":2507,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178705,"byte_end":178708,"line_start":2514,"line_end":2514,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178597,"byte_end":178644,"line_start":2512,"line_end":2512,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178685,"byte_end":178691,"line_start":2513,"line_end":2513,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178967,"byte_end":178975,"line_start":2521,"line_end":2521,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178776,"byte_end":178857,"line_start":2518,"line_end":2518,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178862,"byte_end":178906,"line_start":2519,"line_end":2519,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":178947,"byte_end":178953,"line_start":2520,"line_end":2520,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179169,"byte_end":179176,"line_start":2527,"line_end":2527,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179053,"byte_end":179108,"line_start":2525,"line_end":2525,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179149,"byte_end":179155,"line_start":2526,"line_end":2526,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179372,"byte_end":179385,"line_start":2533,"line_end":2533,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"pub fn get_key_value(&mut Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179256,"byte_end":179311,"line_start":2531,"line_end":2531,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179352,"byte_end":179358,"line_start":2532,"line_end":2532,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179658,"byte_end":179675,"line_start":2542,"line_end":2542,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"pub fn get_key_value_mut(&mut Self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179534,"byte_end":179597,"line_start":2540,"line_end":2540,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179638,"byte_end":179644,"line_start":2541,"line_end":2541,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180043,"byte_end":180057,"line_start":2552,"line_end":2552,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"pub fn into_key_value(Self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179844,"byte_end":179933,"line_start":2549,"line_end":2549,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":179938,"byte_end":179982,"line_start":2550,"line_end":2550,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180023,"byte_end":180029,"line_start":2551,"line_end":2551,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180355,"byte_end":180361,"line_start":2561,"line_end":2561,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180227,"byte_end":180294,"line_start":2559,"line_end":2559,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180335,"byte_end":180341,"line_start":2560,"line_end":2560,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180573,"byte_end":180583,"line_start":2567,"line_end":2567,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"pub fn insert_key(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180445,"byte_end":180512,"line_start":2565,"line_end":2565,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180553,"byte_end":180559,"line_start":2566,"line_end":2566,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180777,"byte_end":180783,"line_start":2573,"line_end":2573,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180663,"byte_end":180716,"line_start":2571,"line_end":2571,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180757,"byte_end":180763,"line_start":2572,"line_end":2572,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180956,"byte_end":180968,"line_start":2579,"line_end":2579,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180838,"byte_end":180895,"line_start":2577,"line_end":2577,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":180936,"byte_end":180942,"line_start":2578,"line_end":2578,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181281,"byte_end":181299,"line_start":2587,"line_end":2587,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> RawEntryMut where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.\n","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181046,"byte_end":181116,"line_start":2583,"line_end":2583,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181121,"byte_end":181182,"line_start":2584,"line_end":2584,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181187,"byte_end":181220,"line_start":2585,"line_end":2585,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181261,"byte_end":181267,"line_start":2586,"line_end":2586,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182186,"byte_end":182192,"line_start":2614,"line_end":2614,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"pub fn insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182019,"byte_end":182078,"line_start":2611,"line_end":2611,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182083,"byte_end":182125,"line_start":2612,"line_end":2612,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182166,"byte_end":182172,"line_start":2613,"line_end":2613,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182640,"byte_end":182661,"line_start":2627,"line_end":2627,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"pub fn insert_hashed_nocheck(Self, u64, K, V) -> (&'a mut K, &'a mut V) where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182434,"byte_end":182493,"line_start":2623,"line_end":2623,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182498,"byte_end":182540,"line_start":2624,"line_end":2624,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182581,"byte_end":182587,"line_start":2625,"line_end":2625,"column_start":41,"column_end":47}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182594,"byte_end":182628,"line_start":2626,"line_end":2626,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":183107,"byte_end":183125,"line_start":2642,"line_end":2642,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"pub fn insert_with_hasher<H>(Self, u64, K, V, H) -> (&'a mut K, &'a mut V)\nwhere H: Fn(&K) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":182986,"byte_end":183046,"line_start":2640,"line_end":2640,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":183087,"byte_end":183093,"line_start":2641,"line_end":2641,"column_start":41,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185650,"byte_end":185658,"line_start":2725,"line_end":2725,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185623,"byte_end":185645,"line_start":2724,"line_end":2724,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185720,"byte_end":185726,"line_start":2728,"line_end":2728,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185696,"byte_end":185715,"line_start":2727,"line_end":2727,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1117},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185554,"byte_end":185559,"line_start":2720,"line_end":2720,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K, V, S, A = Global> where A: Allocator + Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1126}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185298,"byte_end":185378,"line_start":2714,"line_end":2714,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185379,"byte_end":185382,"line_start":2715,"line_end":2715,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185383,"byte_end":185455,"line_start":2716,"line_end":2716,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185456,"byte_end":185459,"line_start":2717,"line_end":2717,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185460,"byte_end":185496,"line_start":2718,"line_end":2718,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185497,"byte_end":185544,"line_start":2719,"line_end":2719,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1135},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186240,"byte_end":186253,"line_start":2744,"line_end":2744,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186106,"byte_end":186155,"line_start":2740,"line_end":2740,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186156,"byte_end":186193,"line_start":2741,"line_end":2741,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186194,"byte_end":186197,"line_start":2742,"line_end":2742,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186198,"byte_end":186228,"line_start":2743,"line_end":2743,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187130,"byte_end":187141,"line_start":2781,"line_end":2781,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186999,"byte_end":187045,"line_start":2777,"line_end":2777,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187046,"byte_end":187083,"line_start":2778,"line_end":2778,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187084,"byte_end":187087,"line_start":2779,"line_end":2779,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187088,"byte_end":187118,"line_start":2780,"line_end":2780,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187859,"byte_end":187867,"line_start":2804,"line_end":2804,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::EntryRef::Occupied","value":"EntryRef::Occupied(OccupiedEntryRef)","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187832,"byte_end":187854,"line_start":2803,"line_end":2803,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187939,"byte_end":187945,"line_start":2807,"line_end":2807,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::EntryRef::Vacant","value":"EntryRef::Vacant(VacantEntryRef)","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187915,"byte_end":187934,"line_start":2806,"line_end":2806,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1176},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187745,"byte_end":187753,"line_start":2799,"line_end":2799,"column_start":10,"column_end":18},"name":"EntryRef","qualname":"::map::EntryRef","value":"pub enum EntryRef<'a, 'b, K, Q: ?Sized, V, S, A = Global> where A: Allocator +\n         Clone {\n    Occupied(OccupiedEntryRef),\n    Vacant(VacantEntryRef),\n}","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1187}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187477,"byte_end":187557,"line_start":2793,"line_end":2793,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187558,"byte_end":187561,"line_start":2794,"line_end":2794,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry_ref`] method on [`HashMap`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187562,"byte_end":187638,"line_start":2795,"line_end":2795,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187639,"byte_end":187642,"line_start":2796,"line_end":2796,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187643,"byte_end":187679,"line_start":2797,"line_end":2797,"column_start":1,"column_end":37}},{"value":"/ [`entry_ref`]: struct.HashMap.html#method.entry_ref","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187680,"byte_end":187735,"line_start":2798,"line_end":2798,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189087,"byte_end":189103,"line_start":2851,"line_end":2851,"column_start":12,"column_end":28},"name":"OccupiedEntryRef","qualname":"::map::OccupiedEntryRef","value":"OccupiedEntryRef {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`EntryRef`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188944,"byte_end":188993,"line_start":2847,"line_end":2847,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`EntryRef`] enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188994,"byte_end":189034,"line_start":2848,"line_end":2848,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189035,"byte_end":189038,"line_start":2849,"line_end":2849,"column_start":1,"column_end":4}},{"value":"/ [`EntryRef`]: enum.EntryRef.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189039,"byte_end":189075,"line_start":2850,"line_end":2850,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190149,"byte_end":190163,"line_start":2892,"line_end":2892,"column_start":12,"column_end":26},"name":"VacantEntryRef","qualname":"::map::VacantEntryRef","value":"VacantEntryRef {  }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`EntryRef`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190009,"byte_end":190055,"line_start":2888,"line_end":2888,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`EntryRef`] enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190056,"byte_end":190096,"line_start":2889,"line_end":2889,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190097,"byte_end":190100,"line_start":2890,"line_end":2890,"column_start":1,"column_end":4}},{"value":"/ [`EntryRef`]: enum.EntryRef.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190101,"byte_end":190137,"line_start":2891,"line_end":2891,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1270},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190748,"byte_end":190761,"line_start":2909,"line_end":2909,"column_start":12,"column_end":25},"name":"OccupiedError","qualname":"::map::OccupiedError","value":"OccupiedError { entry, value }","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"decl_id":null,"docs":" The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.","sig":null,"attributes":[{"value":"/ The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190572,"byte_end":190662,"line_start":2906,"line_end":2906,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190663,"byte_end":190666,"line_start":2907,"line_end":2907,"column_start":1,"column_end":4}},{"value":"/ Contains the occupied entry, and the value that was not inserted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190667,"byte_end":190736,"line_start":2908,"line_end":2908,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1276},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190872,"byte_end":190877,"line_start":2911,"line_end":2911,"column_start":9,"column_end":14},"name":"entry","qualname":"::map::OccupiedError::entry","value":"map::OccupiedEntry<'a, K, V, S, A>","parent":{"krate":0,"index":1270},"children":[],"decl_id":null,"docs":" The entry in the map that was already occupied.\n","sig":null,"attributes":[{"value":"/ The entry in the map that was already occupied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190812,"byte_end":190863,"line_start":2910,"line_end":2910,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1277},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":191000,"byte_end":191005,"line_start":2913,"line_end":2913,"column_start":9,"column_end":14},"name":"value","qualname":"::map::OccupiedError::value","value":"V","parent":{"krate":0,"index":1270},"children":[],"decl_id":null,"docs":" The value which was not inserted, because the entry was already occupied.\n","sig":null,"attributes":[{"value":"/ The value which was not inserted, because the entry was already occupied.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190914,"byte_end":190991,"line_start":2912,"line_end":2912,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199378,"byte_end":199384,"line_start":3207,"line_end":3207,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self, V) -> OccupiedEntry where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198986,"byte_end":199048,"line_start":3194,"line_end":3194,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199053,"byte_end":199056,"line_start":3195,"line_end":3195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199061,"byte_end":199075,"line_start":3196,"line_end":3196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199080,"byte_end":199083,"line_start":3197,"line_end":3197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199088,"byte_end":199095,"line_start":3198,"line_end":3198,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199100,"byte_end":199127,"line_start":3199,"line_end":3199,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199132,"byte_end":199135,"line_start":3200,"line_end":3200,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199140,"byte_end":199193,"line_start":3201,"line_end":3201,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199198,"byte_end":199249,"line_start":3202,"line_end":3202,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199254,"byte_end":199257,"line_start":3203,"line_end":3203,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199262,"byte_end":199305,"line_start":3204,"line_end":3204,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199310,"byte_end":199317,"line_start":3205,"line_end":3205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199358,"byte_end":199364,"line_start":3206,"line_end":3206,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200263,"byte_end":200272,"line_start":3238,"line_end":3238,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199713,"byte_end":199795,"line_start":3221,"line_end":3221,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199800,"byte_end":199850,"line_start":3222,"line_end":3222,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199855,"byte_end":199858,"line_start":3223,"line_end":3223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199863,"byte_end":199877,"line_start":3224,"line_end":3224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199882,"byte_end":199885,"line_start":3225,"line_end":3225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199890,"byte_end":199897,"line_start":3226,"line_end":3226,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199902,"byte_end":199929,"line_start":3227,"line_end":3227,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199934,"byte_end":199937,"line_start":3228,"line_end":3228,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":199942,"byte_end":199995,"line_start":3229,"line_end":3229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200000,"byte_end":200003,"line_start":3230,"line_end":3230,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200008,"byte_end":200048,"line_start":3231,"line_end":3231,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200053,"byte_end":200089,"line_start":3232,"line_end":3232,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200094,"byte_end":200097,"line_start":3233,"line_end":3233,"column_start":5,"column_end":8}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200102,"byte_end":200149,"line_start":3234,"line_end":3234,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200154,"byte_end":200190,"line_start":3235,"line_end":3235,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200195,"byte_end":200202,"line_start":3236,"line_end":3236,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200243,"byte_end":200249,"line_start":3237,"line_end":3237,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201062,"byte_end":201076,"line_start":3265,"line_end":3265,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200518,"byte_end":200611,"line_start":3249,"line_end":3249,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200616,"byte_end":200678,"line_start":3250,"line_end":3250,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200683,"byte_end":200686,"line_start":3251,"line_end":3251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200691,"byte_end":200705,"line_start":3252,"line_end":3252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200710,"byte_end":200713,"line_start":3253,"line_end":3253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200718,"byte_end":200725,"line_start":3254,"line_end":3254,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200730,"byte_end":200757,"line_start":3255,"line_end":3255,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200762,"byte_end":200765,"line_start":3256,"line_end":3256,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200770,"byte_end":200826,"line_start":3257,"line_end":3257,"column_start":5,"column_end":61}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200831,"byte_end":200862,"line_start":3258,"line_end":3258,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200867,"byte_end":200870,"line_start":3259,"line_end":3259,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200875,"byte_end":200923,"line_start":3260,"line_end":3260,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200928,"byte_end":200931,"line_start":3261,"line_end":3261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200936,"byte_end":200989,"line_start":3262,"line_end":3262,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":200994,"byte_end":201001,"line_start":3263,"line_end":3263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201042,"byte_end":201048,"line_start":3264,"line_end":3264,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202143,"byte_end":202161,"line_start":3295,"line_end":3295,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&K) -> V>(Self, F) -> &'a mut V where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function.\n This method allows for generating key-derived values for insertion by providing the default\n function a reference to the key that was moved during the `.entry(key)` method call.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201342,"byte_end":201437,"line_start":3276,"line_end":3276,"column_start":5,"column_end":100}},{"value":"/ This method allows for generating key-derived values for insertion by providing the default","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201442,"byte_end":201537,"line_start":3277,"line_end":3277,"column_start":5,"column_end":100}},{"value":"/ function a reference to the key that was moved during the `.entry(key)` method call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201542,"byte_end":201630,"line_start":3278,"line_end":3278,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201635,"byte_end":201638,"line_start":3279,"line_end":3279,"column_start":5,"column_end":8}},{"value":"/ The reference to the moved key is provided so that cloning or copying the key is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201643,"byte_end":201727,"line_start":3280,"line_end":3280,"column_start":5,"column_end":89}},{"value":"/ unnecessary, unlike with `.or_insert_with(|| ... )`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201732,"byte_end":201788,"line_start":3281,"line_end":3281,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201793,"byte_end":201796,"line_start":3282,"line_end":3282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201801,"byte_end":201815,"line_start":3283,"line_end":3283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201820,"byte_end":201823,"line_start":3284,"line_end":3284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201828,"byte_end":201835,"line_start":3285,"line_end":3285,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201840,"byte_end":201867,"line_start":3286,"line_end":3286,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201872,"byte_end":201875,"line_start":3287,"line_end":3287,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201880,"byte_end":201935,"line_start":3288,"line_end":3288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201940,"byte_end":201943,"line_start":3289,"line_end":3289,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":201948,"byte_end":202021,"line_start":3290,"line_end":3290,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202026,"byte_end":202029,"line_start":3291,"line_end":3291,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202034,"byte_end":202070,"line_start":3292,"line_end":3292,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202075,"byte_end":202082,"line_start":3293,"line_end":3293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202123,"byte_end":202129,"line_start":3294,"line_end":3294,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202832,"byte_end":202835,"line_start":3320,"line_end":3320,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202506,"byte_end":202550,"line_start":3309,"line_end":3309,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202555,"byte_end":202558,"line_start":3310,"line_end":3310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202563,"byte_end":202577,"line_start":3311,"line_end":3311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202582,"byte_end":202585,"line_start":3312,"line_end":3312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202590,"byte_end":202597,"line_start":3313,"line_end":3313,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202602,"byte_end":202629,"line_start":3314,"line_end":3314,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202634,"byte_end":202637,"line_start":3315,"line_end":3315,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202642,"byte_end":202695,"line_start":3316,"line_end":3316,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202700,"byte_end":202759,"line_start":3317,"line_end":3317,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202764,"byte_end":202771,"line_start":3318,"line_end":3318,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":202812,"byte_end":202818,"line_start":3319,"line_end":3319,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203624,"byte_end":203634,"line_start":3348,"line_end":3348,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203002,"byte_end":203070,"line_start":3327,"line_end":3327,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203075,"byte_end":203110,"line_start":3328,"line_end":3328,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203115,"byte_end":203118,"line_start":3329,"line_end":3329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203123,"byte_end":203137,"line_start":3330,"line_end":3330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203142,"byte_end":203145,"line_start":3331,"line_end":3331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203150,"byte_end":203157,"line_start":3332,"line_end":3332,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203162,"byte_end":203189,"line_start":3333,"line_end":3333,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203194,"byte_end":203197,"line_start":3334,"line_end":3334,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203202,"byte_end":203255,"line_start":3335,"line_end":3335,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203260,"byte_end":203263,"line_start":3336,"line_end":3336,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203268,"byte_end":203294,"line_start":3337,"line_end":3337,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203299,"byte_end":203334,"line_start":3338,"line_end":3338,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203339,"byte_end":203361,"line_start":3339,"line_end":3339,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203366,"byte_end":203403,"line_start":3340,"line_end":3340,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203408,"byte_end":203411,"line_start":3341,"line_end":3341,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203416,"byte_end":203442,"line_start":3342,"line_end":3342,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203447,"byte_end":203482,"line_start":3343,"line_end":3343,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203487,"byte_end":203509,"line_start":3344,"line_end":3344,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203514,"byte_end":203551,"line_start":3345,"line_end":3345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203556,"byte_end":203563,"line_start":3346,"line_end":3346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203604,"byte_end":203610,"line_start":3347,"line_end":3347,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205554,"byte_end":205576,"line_start":3416,"line_end":3416,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":203934,"byte_end":204004,"line_start":3361,"line_end":3361,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204009,"byte_end":204078,"line_start":3362,"line_end":3362,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204083,"byte_end":204116,"line_start":3363,"line_end":3363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204121,"byte_end":204124,"line_start":3364,"line_end":3364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204129,"byte_end":204143,"line_start":3365,"line_end":3365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204148,"byte_end":204151,"line_start":3366,"line_end":3366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204156,"byte_end":204163,"line_start":3367,"line_end":3367,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204168,"byte_end":204195,"line_start":3368,"line_end":3368,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204200,"byte_end":204235,"line_start":3369,"line_end":3369,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204240,"byte_end":204243,"line_start":3370,"line_end":3370,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204248,"byte_end":204301,"line_start":3371,"line_end":3371,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204306,"byte_end":204309,"line_start":3372,"line_end":3372,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204314,"byte_end":204333,"line_start":3373,"line_end":3373,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204338,"byte_end":204365,"line_start":3374,"line_end":3374,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204370,"byte_end":204421,"line_start":3375,"line_end":3375,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204426,"byte_end":204429,"line_start":3376,"line_end":3376,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204434,"byte_end":204451,"line_start":3377,"line_end":3377,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204456,"byte_end":204485,"line_start":3378,"line_end":3378,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204490,"byte_end":204536,"line_start":3379,"line_end":3379,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204541,"byte_end":204550,"line_start":3380,"line_end":3380,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204555,"byte_end":204594,"line_start":3381,"line_end":3381,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204599,"byte_end":204604,"line_start":3382,"line_end":3382,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204609,"byte_end":204612,"line_start":3383,"line_end":3383,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204617,"byte_end":204649,"line_start":3384,"line_end":3384,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204654,"byte_end":204657,"line_start":3385,"line_end":3385,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204662,"byte_end":204681,"line_start":3386,"line_end":3386,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204686,"byte_end":204713,"line_start":3387,"line_end":3387,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204718,"byte_end":204758,"line_start":3388,"line_end":3388,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204763,"byte_end":204803,"line_start":3389,"line_end":3389,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204808,"byte_end":204838,"line_start":3390,"line_end":3390,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204843,"byte_end":204866,"line_start":3391,"line_end":3391,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204871,"byte_end":204882,"line_start":3392,"line_end":3392,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204887,"byte_end":204890,"line_start":3393,"line_end":3393,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204895,"byte_end":204912,"line_start":3394,"line_end":3394,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204917,"byte_end":204948,"line_start":3395,"line_end":3395,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":204953,"byte_end":204999,"line_start":3396,"line_end":3396,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205004,"byte_end":205041,"line_start":3397,"line_end":3397,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205046,"byte_end":205055,"line_start":3398,"line_end":3398,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205060,"byte_end":205097,"line_start":3399,"line_end":3399,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205102,"byte_end":205107,"line_start":3400,"line_end":3400,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205112,"byte_end":205115,"line_start":3401,"line_end":3401,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205120,"byte_end":205157,"line_start":3402,"line_end":3402,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205162,"byte_end":205165,"line_start":3403,"line_end":3403,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205170,"byte_end":205189,"line_start":3404,"line_end":3404,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205194,"byte_end":205221,"line_start":3405,"line_end":3405,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205226,"byte_end":205273,"line_start":3406,"line_end":3406,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205278,"byte_end":205281,"line_start":3407,"line_end":3407,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205286,"byte_end":205303,"line_start":3408,"line_end":3408,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205308,"byte_end":205370,"line_start":3409,"line_end":3409,"column_start":5,"column_end":67}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205375,"byte_end":205414,"line_start":3410,"line_end":3410,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205419,"byte_end":205424,"line_start":3411,"line_end":3411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205429,"byte_end":205432,"line_start":3412,"line_end":3412,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205437,"byte_end":205481,"line_start":3413,"line_end":3413,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205486,"byte_end":205493,"line_start":3414,"line_end":3414,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205534,"byte_end":205540,"line_start":3415,"line_end":3415,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206343,"byte_end":206353,"line_start":3442,"line_end":3442,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205877,"byte_end":205953,"line_start":3428,"line_end":3428,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205958,"byte_end":206020,"line_start":3429,"line_end":3429,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206025,"byte_end":206028,"line_start":3430,"line_end":3430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206033,"byte_end":206047,"line_start":3431,"line_end":3431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206052,"byte_end":206055,"line_start":3432,"line_end":3432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206060,"byte_end":206067,"line_start":3433,"line_end":3433,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206072,"byte_end":206099,"line_start":3434,"line_end":3434,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206104,"byte_end":206107,"line_start":3435,"line_end":3435,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206112,"byte_end":206173,"line_start":3436,"line_end":3436,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206178,"byte_end":206218,"line_start":3437,"line_end":3437,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206223,"byte_end":206226,"line_start":3438,"line_end":3438,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206231,"byte_end":206270,"line_start":3439,"line_end":3439,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206275,"byte_end":206282,"line_start":3440,"line_end":3440,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206323,"byte_end":206329,"line_start":3441,"line_end":3441,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207045,"byte_end":207048,"line_start":3467,"line_end":3467,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206672,"byte_end":206717,"line_start":3455,"line_end":3455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206722,"byte_end":206725,"line_start":3456,"line_end":3456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206730,"byte_end":206744,"line_start":3457,"line_end":3457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206749,"byte_end":206752,"line_start":3458,"line_end":3458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206757,"byte_end":206764,"line_start":3459,"line_end":3459,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206769,"byte_end":206796,"line_start":3460,"line_end":3460,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206801,"byte_end":206804,"line_start":3461,"line_end":3461,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206809,"byte_end":206862,"line_start":3462,"line_end":3462,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206867,"byte_end":206908,"line_start":3463,"line_end":3463,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206913,"byte_end":206972,"line_start":3464,"line_end":3464,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206977,"byte_end":206984,"line_start":3465,"line_end":3465,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207025,"byte_end":207031,"line_start":3466,"line_end":3466,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207701,"byte_end":207713,"line_start":3490,"line_end":3490,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207116,"byte_end":207173,"line_start":3471,"line_end":3471,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207178,"byte_end":207181,"line_start":3472,"line_end":3472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207186,"byte_end":207200,"line_start":3473,"line_end":3473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207205,"byte_end":207208,"line_start":3474,"line_end":3474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207213,"byte_end":207220,"line_start":3475,"line_end":3475,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207225,"byte_end":207252,"line_start":3476,"line_end":3476,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207257,"byte_end":207292,"line_start":3477,"line_end":3477,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207297,"byte_end":207300,"line_start":3478,"line_end":3478,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207305,"byte_end":207358,"line_start":3479,"line_end":3479,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207363,"byte_end":207404,"line_start":3480,"line_end":3480,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207409,"byte_end":207412,"line_start":3481,"line_end":3481,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207417,"byte_end":207473,"line_start":3482,"line_end":3482,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207478,"byte_end":207522,"line_start":3483,"line_end":3483,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207527,"byte_end":207552,"line_start":3484,"line_end":3484,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207557,"byte_end":207562,"line_start":3485,"line_end":3485,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207567,"byte_end":207570,"line_start":3486,"line_end":3486,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207575,"byte_end":207628,"line_start":3487,"line_end":3487,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207633,"byte_end":207640,"line_start":3488,"line_end":3488,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207681,"byte_end":207687,"line_start":3489,"line_end":3489,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208265,"byte_end":208268,"line_start":3510,"line_end":3510,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207797,"byte_end":207844,"line_start":3494,"line_end":3494,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207849,"byte_end":207852,"line_start":3495,"line_end":3495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207857,"byte_end":207871,"line_start":3496,"line_end":3496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207876,"byte_end":207879,"line_start":3497,"line_end":3497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207884,"byte_end":207891,"line_start":3498,"line_end":3498,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207896,"byte_end":207923,"line_start":3499,"line_end":3499,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207928,"byte_end":207963,"line_start":3500,"line_end":3500,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207968,"byte_end":207971,"line_start":3501,"line_end":3501,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":207976,"byte_end":208029,"line_start":3502,"line_end":3502,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208034,"byte_end":208075,"line_start":3503,"line_end":3503,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208080,"byte_end":208083,"line_start":3504,"line_end":3504,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208088,"byte_end":208144,"line_start":3505,"line_end":3505,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208149,"byte_end":208182,"line_start":3506,"line_end":3506,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208187,"byte_end":208192,"line_start":3507,"line_end":3507,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208197,"byte_end":208204,"line_start":3508,"line_end":3508,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208245,"byte_end":208251,"line_start":3509,"line_end":3509,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209228,"byte_end":209235,"line_start":3542,"line_end":3542,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208336,"byte_end":208391,"line_start":3514,"line_end":3514,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208396,"byte_end":208399,"line_start":3515,"line_end":3515,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208404,"byte_end":208476,"line_start":3516,"line_end":3516,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208481,"byte_end":208536,"line_start":3517,"line_end":3517,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208541,"byte_end":208544,"line_start":3518,"line_end":3518,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208549,"byte_end":208583,"line_start":3519,"line_end":3519,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208588,"byte_end":208591,"line_start":3520,"line_end":3520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208596,"byte_end":208610,"line_start":3521,"line_end":3521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208615,"byte_end":208618,"line_start":3522,"line_end":3522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208623,"byte_end":208630,"line_start":3523,"line_end":3523,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208635,"byte_end":208662,"line_start":3524,"line_end":3524,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208667,"byte_end":208702,"line_start":3525,"line_end":3525,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208707,"byte_end":208710,"line_start":3526,"line_end":3526,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208715,"byte_end":208768,"line_start":3527,"line_end":3527,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208773,"byte_end":208814,"line_start":3528,"line_end":3528,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208819,"byte_end":208822,"line_start":3529,"line_end":3529,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208827,"byte_end":208864,"line_start":3530,"line_end":3530,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208869,"byte_end":208929,"line_start":3531,"line_end":3531,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208934,"byte_end":208961,"line_start":3532,"line_end":3532,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":208966,"byte_end":208999,"line_start":3533,"line_end":3533,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209004,"byte_end":209007,"line_start":3534,"line_end":3534,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209012,"byte_end":209064,"line_start":3535,"line_end":3535,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209069,"byte_end":209095,"line_start":3536,"line_end":3536,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209100,"byte_end":209105,"line_start":3537,"line_end":3537,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209110,"byte_end":209113,"line_start":3538,"line_end":3538,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209118,"byte_end":209155,"line_start":3539,"line_end":3539,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209160,"byte_end":209167,"line_start":3540,"line_end":3540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209208,"byte_end":209214,"line_start":3541,"line_end":3541,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210087,"byte_end":210095,"line_start":3570,"line_end":3570,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209315,"byte_end":209396,"line_start":3546,"line_end":3546,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209401,"byte_end":209445,"line_start":3547,"line_end":3547,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209450,"byte_end":209453,"line_start":3548,"line_end":3548,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209458,"byte_end":209534,"line_start":3549,"line_end":3549,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209539,"byte_end":209542,"line_start":3550,"line_end":3550,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209547,"byte_end":209579,"line_start":3551,"line_end":3551,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209584,"byte_end":209587,"line_start":3552,"line_end":3552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209592,"byte_end":209606,"line_start":3553,"line_end":3553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209611,"byte_end":209614,"line_start":3554,"line_end":3554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209619,"byte_end":209626,"line_start":3555,"line_end":3555,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209631,"byte_end":209658,"line_start":3556,"line_end":3556,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209663,"byte_end":209698,"line_start":3557,"line_end":3557,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209703,"byte_end":209706,"line_start":3558,"line_end":3558,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209711,"byte_end":209764,"line_start":3559,"line_end":3559,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209769,"byte_end":209810,"line_start":3560,"line_end":3560,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209815,"byte_end":209818,"line_start":3561,"line_end":3561,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209823,"byte_end":209860,"line_start":3562,"line_end":3562,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209865,"byte_end":209921,"line_start":3563,"line_end":3563,"column_start":5,"column_end":61}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209926,"byte_end":209954,"line_start":3564,"line_end":3564,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209959,"byte_end":209964,"line_start":3565,"line_end":3565,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209969,"byte_end":209972,"line_start":3566,"line_end":3566,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":209977,"byte_end":210014,"line_start":3567,"line_end":3567,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210019,"byte_end":210026,"line_start":3568,"line_end":3568,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210067,"byte_end":210073,"line_start":3569,"line_end":3569,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210719,"byte_end":210725,"line_start":3592,"line_end":3592,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210173,"byte_end":210240,"line_start":3574,"line_end":3574,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210245,"byte_end":210248,"line_start":3575,"line_end":3575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210253,"byte_end":210267,"line_start":3576,"line_end":3576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210272,"byte_end":210275,"line_start":3577,"line_end":3577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210280,"byte_end":210287,"line_start":3578,"line_end":3578,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210292,"byte_end":210319,"line_start":3579,"line_end":3579,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210324,"byte_end":210359,"line_start":3580,"line_end":3580,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210364,"byte_end":210367,"line_start":3581,"line_end":3581,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210372,"byte_end":210425,"line_start":3582,"line_end":3582,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210430,"byte_end":210471,"line_start":3583,"line_end":3583,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210476,"byte_end":210479,"line_start":3584,"line_end":3584,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210484,"byte_end":210544,"line_start":3585,"line_end":3585,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210549,"byte_end":210586,"line_start":3586,"line_end":3586,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210591,"byte_end":210596,"line_start":3587,"line_end":3587,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210601,"byte_end":210604,"line_start":3588,"line_end":3588,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210609,"byte_end":210646,"line_start":3589,"line_end":3589,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210651,"byte_end":210658,"line_start":3590,"line_end":3590,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210699,"byte_end":210705,"line_start":3591,"line_end":3591,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211407,"byte_end":211413,"line_start":3616,"line_end":3616,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210865,"byte_end":210918,"line_start":3598,"line_end":3598,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210923,"byte_end":210926,"line_start":3599,"line_end":3599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210931,"byte_end":210945,"line_start":3600,"line_end":3600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210950,"byte_end":210953,"line_start":3601,"line_end":3601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210958,"byte_end":210965,"line_start":3602,"line_end":3602,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":210970,"byte_end":210997,"line_start":3603,"line_end":3603,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211002,"byte_end":211037,"line_start":3604,"line_end":3604,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211042,"byte_end":211045,"line_start":3605,"line_end":3605,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211050,"byte_end":211103,"line_start":3606,"line_end":3606,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211108,"byte_end":211149,"line_start":3607,"line_end":3607,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211154,"byte_end":211157,"line_start":3608,"line_end":3608,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211162,"byte_end":211218,"line_start":3609,"line_end":3609,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211223,"byte_end":211258,"line_start":3610,"line_end":3610,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211263,"byte_end":211268,"line_start":3611,"line_end":3611,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211273,"byte_end":211276,"line_start":3612,"line_end":3612,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211281,"byte_end":211334,"line_start":3613,"line_end":3613,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211339,"byte_end":211346,"line_start":3614,"line_end":3614,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211387,"byte_end":211393,"line_start":3615,"line_end":3615,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212346,"byte_end":212359,"line_start":3645,"line_end":3645,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211468,"byte_end":211560,"line_start":3620,"line_end":3620,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211565,"byte_end":211603,"line_start":3621,"line_end":3621,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211608,"byte_end":211611,"line_start":3622,"line_end":3622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211616,"byte_end":211628,"line_start":3623,"line_end":3623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211633,"byte_end":211636,"line_start":3624,"line_end":3624,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211641,"byte_end":211716,"line_start":3625,"line_end":3625,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211721,"byte_end":211724,"line_start":3626,"line_end":3626,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211729,"byte_end":211743,"line_start":3627,"line_end":3627,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211748,"byte_end":211751,"line_start":3628,"line_end":3628,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211756,"byte_end":211763,"line_start":3629,"line_end":3629,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211768,"byte_end":211814,"line_start":3630,"line_end":3630,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211819,"byte_end":211839,"line_start":3631,"line_end":3631,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211844,"byte_end":211847,"line_start":3632,"line_end":3632,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211852,"byte_end":211911,"line_start":3633,"line_end":3633,"column_start":5,"column_end":64}},{"value":"/ map.insert(Rc::new(\"Stringthing\".to_string()), 15);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211916,"byte_end":211971,"line_start":3634,"line_end":3634,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211976,"byte_end":211979,"line_start":3635,"line_end":3635,"column_start":5,"column_end":8}},{"value":"/ let my_key = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":211984,"byte_end":212036,"line_start":3636,"line_end":3636,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212041,"byte_end":212044,"line_start":3637,"line_end":3637,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(entry) = map.entry(my_key) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212049,"byte_end":212104,"line_start":3638,"line_end":3638,"column_start":5,"column_end":60}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212109,"byte_end":212172,"line_start":3639,"line_end":3639,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212177,"byte_end":212255,"line_start":3640,"line_end":3640,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212260,"byte_end":212265,"line_start":3641,"line_end":3641,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212270,"byte_end":212273,"line_start":3642,"line_end":3642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212278,"byte_end":212285,"line_start":3643,"line_end":3643,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212326,"byte_end":212332,"line_start":3644,"line_end":3644,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213633,"byte_end":213644,"line_start":3683,"line_end":3683,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"pub fn replace_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212609,"byte_end":212685,"line_start":3654,"line_end":3654,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212690,"byte_end":212693,"line_start":3655,"line_end":3655,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212698,"byte_end":212710,"line_start":3656,"line_end":3656,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212715,"byte_end":212718,"line_start":3657,"line_end":3657,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212723,"byte_end":212798,"line_start":3658,"line_end":3658,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212803,"byte_end":212806,"line_start":3659,"line_end":3659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212811,"byte_end":212825,"line_start":3660,"line_end":3660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212830,"byte_end":212833,"line_start":3661,"line_end":3661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212838,"byte_end":212845,"line_start":3662,"line_end":3662,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212850,"byte_end":212896,"line_start":3663,"line_end":3663,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212901,"byte_end":212921,"line_start":3664,"line_end":3664,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212926,"byte_end":212929,"line_start":3665,"line_end":3665,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212934,"byte_end":212993,"line_start":3666,"line_end":3666,"column_start":5,"column_end":64}},{"value":"/ let mut known_strings: Vec<Rc<String>> = Vec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":212998,"byte_end":213054,"line_start":3667,"line_end":3667,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213059,"byte_end":213062,"line_start":3668,"line_end":3668,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213067,"byte_end":213117,"line_start":3669,"line_end":3669,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213122,"byte_end":213125,"line_start":3670,"line_end":3670,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213130,"byte_end":213175,"line_start":3671,"line_end":3671,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213180,"byte_end":213183,"line_start":3672,"line_end":3672,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, u32>, known_strings: &[Rc<String>] ) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213188,"byte_end":213278,"line_start":3673,"line_end":3673,"column_start":5,"column_end":95}},{"value":"/     for s in known_strings {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213283,"byte_end":213315,"line_start":3674,"line_end":3674,"column_start":5,"column_end":37}},{"value":"/         if let Entry::Occupied(entry) = map.entry(s.clone()) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213320,"byte_end":213386,"line_start":3675,"line_end":3675,"column_start":5,"column_end":71}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213391,"byte_end":213477,"line_start":3676,"line_end":3676,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213482,"byte_end":213518,"line_start":3677,"line_end":3677,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213523,"byte_end":213536,"line_start":3678,"line_end":3678,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213541,"byte_end":213550,"line_start":3679,"line_end":3679,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213555,"byte_end":213560,"line_start":3680,"line_end":3680,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213565,"byte_end":213572,"line_start":3681,"line_end":3681,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213613,"byte_end":213619,"line_start":3682,"line_end":3682,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215288,"byte_end":215306,"line_start":3737,"line_end":3737,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> Entry where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213774,"byte_end":213844,"line_start":3688,"line_end":3688,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213849,"byte_end":213910,"line_start":3689,"line_end":3689,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213915,"byte_end":213948,"line_start":3690,"line_end":3690,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213953,"byte_end":213956,"line_start":3691,"line_end":3691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213961,"byte_end":213975,"line_start":3692,"line_end":3692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213980,"byte_end":213983,"line_start":3693,"line_end":3693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":213988,"byte_end":213995,"line_start":3694,"line_end":3694,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214000,"byte_end":214027,"line_start":3695,"line_end":3695,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214032,"byte_end":214067,"line_start":3696,"line_end":3696,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214072,"byte_end":214075,"line_start":3697,"line_end":3697,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214080,"byte_end":214133,"line_start":3698,"line_end":3698,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214138,"byte_end":214170,"line_start":3699,"line_end":3699,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214175,"byte_end":214178,"line_start":3700,"line_end":3700,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214183,"byte_end":214229,"line_start":3701,"line_end":3701,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214234,"byte_end":214265,"line_start":3702,"line_end":3702,"column_start":5,"column_end":36}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214270,"byte_end":214311,"line_start":3703,"line_end":3703,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214316,"byte_end":214360,"line_start":3704,"line_end":3704,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214365,"byte_end":214399,"line_start":3705,"line_end":3705,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214404,"byte_end":214431,"line_start":3706,"line_end":3706,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214436,"byte_end":214450,"line_start":3707,"line_end":3707,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214455,"byte_end":214464,"line_start":3708,"line_end":3708,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214469,"byte_end":214506,"line_start":3709,"line_end":3709,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214511,"byte_end":214517,"line_start":3710,"line_end":3710,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214522,"byte_end":214525,"line_start":3711,"line_end":3711,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214530,"byte_end":214547,"line_start":3712,"line_end":3712,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214552,"byte_end":214583,"line_start":3713,"line_end":3713,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214588,"byte_end":214634,"line_start":3714,"line_end":3714,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214639,"byte_end":214676,"line_start":3715,"line_end":3715,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214681,"byte_end":214690,"line_start":3716,"line_end":3716,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214695,"byte_end":214732,"line_start":3717,"line_end":3717,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214737,"byte_end":214742,"line_start":3718,"line_end":3718,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214747,"byte_end":214750,"line_start":3719,"line_end":3719,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214755,"byte_end":214792,"line_start":3720,"line_end":3720,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214797,"byte_end":214800,"line_start":3721,"line_end":3721,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214805,"byte_end":214851,"line_start":3722,"line_end":3722,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214856,"byte_end":214922,"line_start":3723,"line_end":3723,"column_start":5,"column_end":71}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214927,"byte_end":214964,"line_start":3724,"line_end":3724,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214969,"byte_end":214975,"line_start":3725,"line_end":3725,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214980,"byte_end":214983,"line_start":3726,"line_end":3726,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":214988,"byte_end":215005,"line_start":3727,"line_end":3727,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215010,"byte_end":215039,"line_start":3728,"line_end":3728,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215044,"byte_end":215090,"line_start":3729,"line_end":3729,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215095,"byte_end":215104,"line_start":3730,"line_end":3730,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215109,"byte_end":215148,"line_start":3731,"line_end":3731,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215153,"byte_end":215158,"line_start":3732,"line_end":3732,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215163,"byte_end":215166,"line_start":3733,"line_end":3733,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215171,"byte_end":215215,"line_start":3734,"line_end":3734,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215220,"byte_end":215227,"line_start":3735,"line_end":3735,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":215268,"byte_end":215274,"line_start":3736,"line_end":3736,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216597,"byte_end":216600,"line_start":3781,"line_end":3781,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216207,"byte_end":216280,"line_start":3769,"line_end":3769,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216285,"byte_end":216315,"line_start":3770,"line_end":3770,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216320,"byte_end":216323,"line_start":3771,"line_end":3771,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216328,"byte_end":216342,"line_start":3772,"line_end":3772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216347,"byte_end":216350,"line_start":3773,"line_end":3773,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216355,"byte_end":216362,"line_start":3774,"line_end":3774,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216367,"byte_end":216394,"line_start":3775,"line_end":3775,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216399,"byte_end":216402,"line_start":3776,"line_end":3776,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216407,"byte_end":216460,"line_start":3777,"line_end":3777,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216465,"byte_end":216524,"line_start":3778,"line_end":3778,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216529,"byte_end":216536,"line_start":3779,"line_end":3779,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216577,"byte_end":216583,"line_start":3780,"line_end":3780,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217036,"byte_end":217044,"line_start":3800,"line_end":3800,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216645,"byte_end":216675,"line_start":3785,"line_end":3785,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216680,"byte_end":216683,"line_start":3786,"line_end":3786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216688,"byte_end":216702,"line_start":3787,"line_end":3787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216707,"byte_end":216710,"line_start":3788,"line_end":3788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216715,"byte_end":216722,"line_start":3789,"line_end":3789,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216727,"byte_end":216754,"line_start":3790,"line_end":3790,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216759,"byte_end":216794,"line_start":3791,"line_end":3791,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216799,"byte_end":216802,"line_start":3792,"line_end":3792,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216807,"byte_end":216860,"line_start":3793,"line_end":3793,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216865,"byte_end":216868,"line_start":3794,"line_end":3794,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216873,"byte_end":216927,"line_start":3795,"line_end":3795,"column_start":5,"column_end":59}},{"value":"/     v.into_key();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216932,"byte_end":216953,"line_start":3796,"line_end":3796,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216958,"byte_end":216963,"line_start":3797,"line_end":3797,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216968,"byte_end":216975,"line_start":3798,"line_end":3798,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217016,"byte_end":217022,"line_start":3799,"line_end":3799,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217595,"byte_end":217601,"line_start":3821,"line_end":3821,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217086,"byte_end":217145,"line_start":3804,"line_end":3804,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217150,"byte_end":217192,"line_start":3805,"line_end":3805,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217197,"byte_end":217200,"line_start":3806,"line_end":3806,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217205,"byte_end":217219,"line_start":3807,"line_end":3807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217224,"byte_end":217227,"line_start":3808,"line_end":3808,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217232,"byte_end":217239,"line_start":3809,"line_end":3809,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217244,"byte_end":217271,"line_start":3810,"line_end":3810,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217276,"byte_end":217311,"line_start":3811,"line_end":3811,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217316,"byte_end":217319,"line_start":3812,"line_end":3812,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217324,"byte_end":217377,"line_start":3813,"line_end":3813,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217382,"byte_end":217385,"line_start":3814,"line_end":3814,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217390,"byte_end":217444,"line_start":3815,"line_end":3815,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217449,"byte_end":217470,"line_start":3816,"line_end":3816,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217475,"byte_end":217480,"line_start":3817,"line_end":3817,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217485,"byte_end":217522,"line_start":3818,"line_end":3818,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217527,"byte_end":217534,"line_start":3819,"line_end":3819,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":217575,"byte_end":217581,"line_start":3820,"line_end":3820,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218915,"byte_end":218921,"line_start":3869,"line_end":3869,"column_start":12,"column_end":18},"name":"insert","qualname":"<EntryRef>::insert","value":"pub fn insert(Self, V) -> OccupiedEntryRef where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntryRef.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntryRef.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218515,"byte_end":218580,"line_start":3856,"line_end":3856,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218585,"byte_end":218588,"line_start":3857,"line_end":3857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218593,"byte_end":218607,"line_start":3858,"line_end":3858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218612,"byte_end":218615,"line_start":3859,"line_end":3859,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218620,"byte_end":218627,"line_start":3860,"line_end":3860,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218632,"byte_end":218659,"line_start":3861,"line_end":3861,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218664,"byte_end":218667,"line_start":3862,"line_end":3862,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218672,"byte_end":218727,"line_start":3863,"line_end":3863,"column_start":5,"column_end":60}},{"value":"/ let entry = map.entry_ref(\"horseyland\").insert(37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218732,"byte_end":218787,"line_start":3864,"line_end":3864,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218792,"byte_end":218795,"line_start":3865,"line_end":3865,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), \"horseyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218800,"byte_end":218842,"line_start":3866,"line_end":3866,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218847,"byte_end":218854,"line_start":3867,"line_end":3867,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218895,"byte_end":218901,"line_start":3868,"line_end":3868,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219840,"byte_end":219849,"line_start":3900,"line_end":3900,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<EntryRef>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219280,"byte_end":219362,"line_start":3883,"line_end":3883,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219367,"byte_end":219417,"line_start":3884,"line_end":3884,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219422,"byte_end":219425,"line_start":3885,"line_end":3885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219430,"byte_end":219444,"line_start":3886,"line_end":3886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219449,"byte_end":219452,"line_start":3887,"line_end":3887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219457,"byte_end":219464,"line_start":3888,"line_end":3888,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219469,"byte_end":219496,"line_start":3889,"line_end":3889,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219501,"byte_end":219504,"line_start":3890,"line_end":3890,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219509,"byte_end":219564,"line_start":3891,"line_end":3891,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219569,"byte_end":219572,"line_start":3892,"line_end":3892,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219577,"byte_end":219621,"line_start":3893,"line_end":3893,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219626,"byte_end":219662,"line_start":3894,"line_end":3894,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219667,"byte_end":219670,"line_start":3895,"line_end":3895,"column_start":5,"column_end":8}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219675,"byte_end":219726,"line_start":3896,"line_end":3896,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219731,"byte_end":219767,"line_start":3897,"line_end":3897,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219772,"byte_end":219779,"line_start":3898,"line_end":3898,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":219820,"byte_end":219826,"line_start":3899,"line_end":3899,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220665,"byte_end":220679,"line_start":3927,"line_end":3927,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<EntryRef>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash +\nFrom<&'b Q>, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220115,"byte_end":220208,"line_start":3911,"line_end":3911,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220213,"byte_end":220275,"line_start":3912,"line_end":3912,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220280,"byte_end":220283,"line_start":3913,"line_end":3913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220288,"byte_end":220302,"line_start":3914,"line_end":3914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220307,"byte_end":220310,"line_start":3915,"line_end":3915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220315,"byte_end":220322,"line_start":3916,"line_end":3916,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220327,"byte_end":220354,"line_start":3917,"line_end":3917,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220359,"byte_end":220362,"line_start":3918,"line_end":3918,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, String> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220367,"byte_end":220425,"line_start":3919,"line_end":3919,"column_start":5,"column_end":63}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220430,"byte_end":220461,"line_start":3920,"line_end":3920,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220466,"byte_end":220469,"line_start":3921,"line_end":3921,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220474,"byte_end":220526,"line_start":3922,"line_end":3922,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220531,"byte_end":220534,"line_start":3923,"line_end":3923,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220539,"byte_end":220592,"line_start":3924,"line_end":3924,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220597,"byte_end":220604,"line_start":3925,"line_end":3925,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220645,"byte_end":220651,"line_start":3926,"line_end":3926,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221776,"byte_end":221794,"line_start":3957,"line_end":3957,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<EntryRef>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&Q) -> V>(Self, F) -> &'a mut V where\nK: Hash + Borrow<Q> + From<&'b Q>, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function.\n This method allows for generating key-derived values for insertion by providing the default\n function a reference to the key that was moved during the `.entry_ref(key)` method call.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":220965,"byte_end":221060,"line_start":3938,"line_end":3938,"column_start":5,"column_end":100}},{"value":"/ This method allows for generating key-derived values for insertion by providing the default","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221065,"byte_end":221160,"line_start":3939,"line_end":3939,"column_start":5,"column_end":100}},{"value":"/ function a reference to the key that was moved during the `.entry_ref(key)` method call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221165,"byte_end":221257,"line_start":3940,"line_end":3940,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221262,"byte_end":221265,"line_start":3941,"line_end":3941,"column_start":5,"column_end":8}},{"value":"/ The reference to the moved key is provided so that cloning or copying the key is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221270,"byte_end":221354,"line_start":3942,"line_end":3942,"column_start":5,"column_end":89}},{"value":"/ unnecessary, unlike with `.or_insert_with(|| ... )`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221359,"byte_end":221415,"line_start":3943,"line_end":3943,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221420,"byte_end":221423,"line_start":3944,"line_end":3944,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221428,"byte_end":221442,"line_start":3945,"line_end":3945,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221447,"byte_end":221450,"line_start":3946,"line_end":3946,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221455,"byte_end":221462,"line_start":3947,"line_end":3947,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221467,"byte_end":221494,"line_start":3948,"line_end":3948,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221499,"byte_end":221502,"line_start":3949,"line_end":3949,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, usize> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221507,"byte_end":221564,"line_start":3950,"line_end":3950,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221569,"byte_end":221572,"line_start":3951,"line_end":3951,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221577,"byte_end":221654,"line_start":3952,"line_end":3952,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221659,"byte_end":221662,"line_start":3953,"line_end":3953,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221667,"byte_end":221703,"line_start":3954,"line_end":3954,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221708,"byte_end":221715,"line_start":3955,"line_end":3955,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":221756,"byte_end":221762,"line_start":3956,"line_end":3956,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222509,"byte_end":222512,"line_start":3982,"line_end":3982,"column_start":12,"column_end":15},"name":"key","qualname":"<EntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222178,"byte_end":222222,"line_start":3971,"line_end":3971,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222227,"byte_end":222230,"line_start":3972,"line_end":3972,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222235,"byte_end":222249,"line_start":3973,"line_end":3973,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222254,"byte_end":222257,"line_start":3974,"line_end":3974,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222262,"byte_end":222269,"line_start":3975,"line_end":3975,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222274,"byte_end":222301,"line_start":3976,"line_end":3976,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222306,"byte_end":222309,"line_start":3977,"line_end":3977,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222314,"byte_end":222369,"line_start":3978,"line_end":3978,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(map.entry_ref(\"poneyland\").key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222374,"byte_end":222436,"line_start":3979,"line_end":3979,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222441,"byte_end":222448,"line_start":3980,"line_end":3980,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222489,"byte_end":222495,"line_start":3981,"line_end":3981,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223353,"byte_end":223363,"line_start":4013,"line_end":4013,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<EntryRef>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222721,"byte_end":222789,"line_start":3992,"line_end":3992,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222794,"byte_end":222829,"line_start":3993,"line_end":3993,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222834,"byte_end":222837,"line_start":3994,"line_end":3994,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222842,"byte_end":222856,"line_start":3995,"line_end":3995,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222861,"byte_end":222864,"line_start":3996,"line_end":3996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222869,"byte_end":222876,"line_start":3997,"line_end":3997,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222881,"byte_end":222908,"line_start":3998,"line_end":3998,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222913,"byte_end":222916,"line_start":3999,"line_end":3999,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222921,"byte_end":222976,"line_start":4000,"line_end":4000,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222981,"byte_end":222984,"line_start":4001,"line_end":4001,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":222989,"byte_end":223019,"line_start":4002,"line_end":4002,"column_start":5,"column_end":35}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223024,"byte_end":223059,"line_start":4003,"line_end":4003,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223064,"byte_end":223086,"line_start":4004,"line_end":4004,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223091,"byte_end":223128,"line_start":4005,"line_end":4005,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223133,"byte_end":223136,"line_start":4006,"line_end":4006,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223141,"byte_end":223171,"line_start":4007,"line_end":4007,"column_start":5,"column_end":35}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223176,"byte_end":223211,"line_start":4008,"line_end":4008,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223216,"byte_end":223238,"line_start":4009,"line_end":4009,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223243,"byte_end":223280,"line_start":4010,"line_end":4010,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223285,"byte_end":223292,"line_start":4011,"line_end":4011,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223333,"byte_end":223339,"line_start":4012,"line_end":4012,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225338,"byte_end":225360,"line_start":4081,"line_end":4081,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<EntryRef>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&Q, V) ->\nOption<V>, K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223675,"byte_end":223745,"line_start":4026,"line_end":4026,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223750,"byte_end":223819,"line_start":4027,"line_end":4027,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223824,"byte_end":223857,"line_start":4028,"line_end":4028,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223862,"byte_end":223865,"line_start":4029,"line_end":4029,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223870,"byte_end":223884,"line_start":4030,"line_end":4030,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223889,"byte_end":223892,"line_start":4031,"line_end":4031,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223897,"byte_end":223904,"line_start":4032,"line_end":4032,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223909,"byte_end":223936,"line_start":4033,"line_end":4033,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223941,"byte_end":223979,"line_start":4034,"line_end":4034,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223984,"byte_end":223987,"line_start":4035,"line_end":4035,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":223992,"byte_end":224047,"line_start":4036,"line_end":4036,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224052,"byte_end":224055,"line_start":4037,"line_end":4037,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224060,"byte_end":224079,"line_start":4038,"line_end":4038,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224084,"byte_end":224115,"line_start":4039,"line_end":4039,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224120,"byte_end":224171,"line_start":4040,"line_end":4040,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224176,"byte_end":224179,"line_start":4041,"line_end":4041,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224184,"byte_end":224201,"line_start":4042,"line_end":4042,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224206,"byte_end":224238,"line_start":4043,"line_end":4043,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224243,"byte_end":224288,"line_start":4044,"line_end":4044,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224293,"byte_end":224302,"line_start":4045,"line_end":4045,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224307,"byte_end":224349,"line_start":4046,"line_end":4046,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224354,"byte_end":224359,"line_start":4047,"line_end":4047,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224364,"byte_end":224367,"line_start":4048,"line_end":4048,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\".to_string(), 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224372,"byte_end":224416,"line_start":4049,"line_end":4049,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224421,"byte_end":224424,"line_start":4050,"line_end":4050,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224429,"byte_end":224448,"line_start":4051,"line_end":4051,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224453,"byte_end":224484,"line_start":4052,"line_end":4052,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224489,"byte_end":224529,"line_start":4053,"line_end":4053,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224534,"byte_end":224573,"line_start":4054,"line_end":4054,"column_start":5,"column_end":44}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224578,"byte_end":224608,"line_start":4055,"line_end":4055,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224613,"byte_end":224636,"line_start":4056,"line_end":4056,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224641,"byte_end":224652,"line_start":4057,"line_end":4057,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224657,"byte_end":224660,"line_start":4058,"line_end":4058,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224665,"byte_end":224682,"line_start":4059,"line_end":4059,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224687,"byte_end":224721,"line_start":4060,"line_end":4060,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224726,"byte_end":224771,"line_start":4061,"line_end":4061,"column_start":5,"column_end":50}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224776,"byte_end":224813,"line_start":4062,"line_end":4062,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224818,"byte_end":224827,"line_start":4063,"line_end":4063,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224832,"byte_end":224872,"line_start":4064,"line_end":4064,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224877,"byte_end":224882,"line_start":4065,"line_end":4065,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224887,"byte_end":224890,"line_start":4066,"line_end":4066,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224895,"byte_end":224932,"line_start":4067,"line_end":4067,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224937,"byte_end":224940,"line_start":4068,"line_end":4068,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224945,"byte_end":224964,"line_start":4069,"line_end":4069,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":224969,"byte_end":225000,"line_start":4070,"line_end":4070,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225005,"byte_end":225052,"line_start":4071,"line_end":4071,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225057,"byte_end":225060,"line_start":4072,"line_end":4072,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225065,"byte_end":225082,"line_start":4073,"line_end":4073,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => assert_eq!(e.key(), \"poneyland\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225087,"byte_end":225151,"line_start":4074,"line_end":4074,"column_start":5,"column_end":69}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225156,"byte_end":225198,"line_start":4075,"line_end":4075,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225203,"byte_end":225208,"line_start":4076,"line_end":4076,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225213,"byte_end":225216,"line_start":4077,"line_end":4077,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225221,"byte_end":225265,"line_start":4078,"line_end":4078,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225270,"byte_end":225277,"line_start":4079,"line_end":4079,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225318,"byte_end":225324,"line_start":4080,"line_end":4080,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226180,"byte_end":226190,"line_start":4108,"line_end":4108,"column_start":12,"column_end":22},"name":"or_default","qualname":"<EntryRef>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225714,"byte_end":225790,"line_start":4094,"line_end":4094,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225795,"byte_end":225857,"line_start":4095,"line_end":4095,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225862,"byte_end":225865,"line_start":4096,"line_end":4096,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225870,"byte_end":225884,"line_start":4097,"line_end":4097,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225889,"byte_end":225892,"line_start":4098,"line_end":4098,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225897,"byte_end":225904,"line_start":4099,"line_end":4099,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225909,"byte_end":225936,"line_start":4100,"line_end":4100,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225941,"byte_end":225944,"line_start":4101,"line_end":4101,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225949,"byte_end":226010,"line_start":4102,"line_end":4102,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226015,"byte_end":226055,"line_start":4103,"line_end":4103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226060,"byte_end":226063,"line_start":4104,"line_end":4104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226068,"byte_end":226107,"line_start":4105,"line_end":4105,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226112,"byte_end":226119,"line_start":4106,"line_end":4106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226160,"byte_end":226166,"line_start":4107,"line_end":4107,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226936,"byte_end":226939,"line_start":4133,"line_end":4133,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226554,"byte_end":226599,"line_start":4121,"line_end":4121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226604,"byte_end":226607,"line_start":4122,"line_end":4122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226612,"byte_end":226626,"line_start":4123,"line_end":4123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226631,"byte_end":226634,"line_start":4124,"line_end":4124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226639,"byte_end":226646,"line_start":4125,"line_end":4125,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226651,"byte_end":226678,"line_start":4126,"line_end":4126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226683,"byte_end":226686,"line_start":4127,"line_end":4127,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226691,"byte_end":226746,"line_start":4128,"line_end":4128,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226751,"byte_end":226796,"line_start":4129,"line_end":4129,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(map.entry_ref(\"poneyland\").key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226801,"byte_end":226863,"line_start":4130,"line_end":4130,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226868,"byte_end":226875,"line_start":4131,"line_end":4131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226916,"byte_end":226922,"line_start":4132,"line_end":4132,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227653,"byte_end":227665,"line_start":4159,"line_end":4159,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntryRef>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227052,"byte_end":227109,"line_start":4140,"line_end":4140,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227114,"byte_end":227117,"line_start":4141,"line_end":4141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227122,"byte_end":227136,"line_start":4142,"line_end":4142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227141,"byte_end":227144,"line_start":4143,"line_end":4143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227149,"byte_end":227156,"line_start":4144,"line_end":4144,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227161,"byte_end":227188,"line_start":4145,"line_end":4145,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227193,"byte_end":227231,"line_start":4146,"line_end":4146,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227236,"byte_end":227239,"line_start":4147,"line_end":4147,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227244,"byte_end":227299,"line_start":4148,"line_end":4148,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227304,"byte_end":227349,"line_start":4149,"line_end":4149,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227354,"byte_end":227357,"line_start":4150,"line_end":4150,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227362,"byte_end":227425,"line_start":4151,"line_end":4151,"column_start":5,"column_end":68}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227430,"byte_end":227474,"line_start":4152,"line_end":4152,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227479,"byte_end":227504,"line_start":4153,"line_end":4153,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227509,"byte_end":227514,"line_start":4154,"line_end":4154,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227519,"byte_end":227522,"line_start":4155,"line_end":4155,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227527,"byte_end":227580,"line_start":4156,"line_end":4156,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227585,"byte_end":227592,"line_start":4157,"line_end":4157,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227633,"byte_end":227639,"line_start":4158,"line_end":4158,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228233,"byte_end":228236,"line_start":4179,"line_end":4179,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntryRef>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227749,"byte_end":227796,"line_start":4163,"line_end":4163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227801,"byte_end":227804,"line_start":4164,"line_end":4164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227809,"byte_end":227823,"line_start":4165,"line_end":4165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227828,"byte_end":227831,"line_start":4166,"line_end":4166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227836,"byte_end":227843,"line_start":4167,"line_end":4167,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227848,"byte_end":227875,"line_start":4168,"line_end":4168,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227880,"byte_end":227918,"line_start":4169,"line_end":4169,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227923,"byte_end":227926,"line_start":4170,"line_end":4170,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227931,"byte_end":227986,"line_start":4171,"line_end":4171,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":227991,"byte_end":228036,"line_start":4172,"line_end":4172,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228041,"byte_end":228044,"line_start":4173,"line_end":4173,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228049,"byte_end":228112,"line_start":4174,"line_end":4174,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228117,"byte_end":228150,"line_start":4175,"line_end":4175,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228155,"byte_end":228160,"line_start":4176,"line_end":4176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228165,"byte_end":228172,"line_start":4177,"line_end":4177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228213,"byte_end":228219,"line_start":4178,"line_end":4178,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229218,"byte_end":229225,"line_start":4211,"line_end":4211,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntryRef>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228304,"byte_end":228359,"line_start":4183,"line_end":4183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228364,"byte_end":228367,"line_start":4184,"line_end":4184,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntryRef` which may outlive the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228372,"byte_end":228447,"line_start":4185,"line_end":4185,"column_start":5,"column_end":80}},{"value":"/ destruction of the `EntryRef` value, see [`into_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228452,"byte_end":228510,"line_start":4186,"line_end":4186,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228515,"byte_end":228518,"line_start":4187,"line_end":4187,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228523,"byte_end":228557,"line_start":4188,"line_end":4188,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228562,"byte_end":228565,"line_start":4189,"line_end":4189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228570,"byte_end":228584,"line_start":4190,"line_end":4190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228589,"byte_end":228592,"line_start":4191,"line_end":4191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228597,"byte_end":228604,"line_start":4192,"line_end":4192,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228609,"byte_end":228636,"line_start":4193,"line_end":4193,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228641,"byte_end":228679,"line_start":4194,"line_end":4194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228684,"byte_end":228687,"line_start":4195,"line_end":4195,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228692,"byte_end":228747,"line_start":4196,"line_end":4196,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228752,"byte_end":228797,"line_start":4197,"line_end":4197,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228802,"byte_end":228805,"line_start":4198,"line_end":4198,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228810,"byte_end":228847,"line_start":4199,"line_end":4199,"column_start":5,"column_end":42}},{"value":"/ if let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228852,"byte_end":228919,"line_start":4200,"line_end":4200,"column_start":5,"column_end":72}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228924,"byte_end":228951,"line_start":4201,"line_end":4201,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228956,"byte_end":228989,"line_start":4202,"line_end":4202,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":228994,"byte_end":228997,"line_start":4203,"line_end":4203,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229002,"byte_end":229054,"line_start":4204,"line_end":4204,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229059,"byte_end":229085,"line_start":4205,"line_end":4205,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229090,"byte_end":229095,"line_start":4206,"line_end":4206,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229100,"byte_end":229103,"line_start":4207,"line_end":4207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229108,"byte_end":229145,"line_start":4208,"line_end":4208,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229150,"byte_end":229157,"line_start":4209,"line_end":4209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229198,"byte_end":229204,"line_start":4210,"line_end":4210,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230099,"byte_end":230107,"line_start":4239,"line_end":4239,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntryRef>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntryRef into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntryRef into a mutable reference to the value in the entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229305,"byte_end":229389,"line_start":4215,"line_end":4215,"column_start":5,"column_end":89}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229394,"byte_end":229438,"line_start":4216,"line_end":4216,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229443,"byte_end":229446,"line_start":4217,"line_end":4217,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntryRef`, see [`get_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229451,"byte_end":229530,"line_start":4218,"line_end":4218,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229535,"byte_end":229538,"line_start":4219,"line_end":4219,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229543,"byte_end":229575,"line_start":4220,"line_end":4220,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229580,"byte_end":229583,"line_start":4221,"line_end":4221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229588,"byte_end":229602,"line_start":4222,"line_end":4222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229607,"byte_end":229610,"line_start":4223,"line_end":4223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229615,"byte_end":229622,"line_start":4224,"line_end":4224,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229627,"byte_end":229654,"line_start":4225,"line_end":4225,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229659,"byte_end":229697,"line_start":4226,"line_end":4226,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229702,"byte_end":229705,"line_start":4227,"line_end":4227,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229710,"byte_end":229765,"line_start":4228,"line_end":4228,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229770,"byte_end":229815,"line_start":4229,"line_end":4229,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229820,"byte_end":229823,"line_start":4230,"line_end":4230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229828,"byte_end":229865,"line_start":4231,"line_end":4231,"column_start":5,"column_end":42}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229870,"byte_end":229933,"line_start":4232,"line_end":4232,"column_start":5,"column_end":68}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229938,"byte_end":229966,"line_start":4233,"line_end":4233,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229971,"byte_end":229976,"line_start":4234,"line_end":4234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229981,"byte_end":229984,"line_start":4235,"line_end":4235,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":229989,"byte_end":230026,"line_start":4236,"line_end":4236,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230031,"byte_end":230038,"line_start":4237,"line_end":4237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230079,"byte_end":230085,"line_start":4238,"line_end":4238,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230747,"byte_end":230753,"line_start":4261,"line_end":4261,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntryRef>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230185,"byte_end":230252,"line_start":4243,"line_end":4243,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230257,"byte_end":230260,"line_start":4244,"line_end":4244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230265,"byte_end":230279,"line_start":4245,"line_end":4245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230284,"byte_end":230287,"line_start":4246,"line_end":4246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230292,"byte_end":230299,"line_start":4247,"line_end":4247,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230304,"byte_end":230331,"line_start":4248,"line_end":4248,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230336,"byte_end":230374,"line_start":4249,"line_end":4249,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230379,"byte_end":230382,"line_start":4250,"line_end":4250,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230387,"byte_end":230442,"line_start":4251,"line_end":4251,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230447,"byte_end":230492,"line_start":4252,"line_end":4252,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230497,"byte_end":230500,"line_start":4253,"line_end":4253,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230505,"byte_end":230572,"line_start":4254,"line_end":4254,"column_start":5,"column_end":72}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230577,"byte_end":230614,"line_start":4255,"line_end":4255,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230619,"byte_end":230624,"line_start":4256,"line_end":4256,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230629,"byte_end":230632,"line_start":4257,"line_end":4257,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230637,"byte_end":230674,"line_start":4258,"line_end":4258,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230679,"byte_end":230686,"line_start":4259,"line_end":4259,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230727,"byte_end":230733,"line_start":4260,"line_end":4260,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231451,"byte_end":231457,"line_start":4285,"line_end":4285,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntryRef>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230893,"byte_end":230946,"line_start":4267,"line_end":4267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230951,"byte_end":230954,"line_start":4268,"line_end":4268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230959,"byte_end":230973,"line_start":4269,"line_end":4269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230978,"byte_end":230981,"line_start":4270,"line_end":4270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230986,"byte_end":230993,"line_start":4271,"line_end":4271,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":230998,"byte_end":231025,"line_start":4272,"line_end":4272,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231030,"byte_end":231068,"line_start":4273,"line_end":4273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231073,"byte_end":231076,"line_start":4274,"line_end":4274,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231081,"byte_end":231136,"line_start":4275,"line_end":4275,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231141,"byte_end":231186,"line_start":4276,"line_end":4276,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231191,"byte_end":231194,"line_start":4277,"line_end":4277,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231199,"byte_end":231262,"line_start":4278,"line_end":4278,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231267,"byte_end":231302,"line_start":4279,"line_end":4279,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231307,"byte_end":231312,"line_start":4280,"line_end":4280,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231317,"byte_end":231320,"line_start":4281,"line_end":4281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231325,"byte_end":231378,"line_start":4282,"line_end":4282,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231383,"byte_end":231390,"line_start":4283,"line_end":4283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231431,"byte_end":231437,"line_start":4284,"line_end":4284,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232328,"byte_end":232341,"line_start":4312,"line_end":4312,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntryRef>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V) where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231512,"byte_end":231604,"line_start":4289,"line_end":4289,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231609,"byte_end":231647,"line_start":4290,"line_end":4290,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231652,"byte_end":231655,"line_start":4291,"line_end":4291,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231660,"byte_end":231672,"line_start":4292,"line_end":4292,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231677,"byte_end":231680,"line_start":4293,"line_end":4293,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`EntryRef::insert`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231685,"byte_end":231763,"line_start":4294,"line_end":4294,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231768,"byte_end":231771,"line_start":4295,"line_end":4295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231776,"byte_end":231790,"line_start":4296,"line_end":4296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231795,"byte_end":231798,"line_start":4297,"line_end":4297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231803,"byte_end":231810,"line_start":4298,"line_end":4298,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231815,"byte_end":231864,"line_start":4299,"line_end":4299,"column_start":5,"column_end":54}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231869,"byte_end":231889,"line_start":4300,"line_end":4300,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231894,"byte_end":231897,"line_start":4301,"line_end":4301,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<str>, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231902,"byte_end":231958,"line_start":4302,"line_end":4302,"column_start":5,"column_end":61}},{"value":"/ map.insert(Rc::from(\"Stringthing\"), 15);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":231963,"byte_end":232007,"line_start":4303,"line_end":4303,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232012,"byte_end":232015,"line_start":4304,"line_end":4304,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(entry) = map.entry_ref(\"Stringthing\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232020,"byte_end":232089,"line_start":4305,"line_end":4305,"column_start":5,"column_end":74}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232094,"byte_end":232157,"line_start":4306,"line_end":4306,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<str>, u32) = entry.replace_entry(16);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232162,"byte_end":232237,"line_start":4307,"line_end":4307,"column_start":5,"column_end":80}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232242,"byte_end":232247,"line_start":4308,"line_end":4308,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232252,"byte_end":232255,"line_start":4309,"line_end":4309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232260,"byte_end":232267,"line_start":4310,"line_end":4310,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232308,"byte_end":232314,"line_start":4311,"line_end":4311,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233665,"byte_end":233676,"line_start":4353,"line_end":4353,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntryRef>::replace_key","value":"pub fn replace_key(Self) -> K where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232642,"byte_end":232718,"line_start":4324,"line_end":4324,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232723,"byte_end":232726,"line_start":4325,"line_end":4325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232731,"byte_end":232743,"line_start":4326,"line_end":4326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232748,"byte_end":232751,"line_start":4327,"line_end":4327,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232756,"byte_end":232831,"line_start":4328,"line_end":4328,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232836,"byte_end":232839,"line_start":4329,"line_end":4329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232844,"byte_end":232858,"line_start":4330,"line_end":4330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232863,"byte_end":232866,"line_start":4331,"line_end":4331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232871,"byte_end":232878,"line_start":4332,"line_end":4332,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232883,"byte_end":232932,"line_start":4333,"line_end":4333,"column_start":5,"column_end":54}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232937,"byte_end":232957,"line_start":4334,"line_end":4334,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232962,"byte_end":232965,"line_start":4335,"line_end":4335,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<str>, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":232970,"byte_end":233026,"line_start":4336,"line_end":4336,"column_start":5,"column_end":61}},{"value":"/ let mut known_strings: Vec<Rc<str>> = Vec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233031,"byte_end":233084,"line_start":4337,"line_end":4337,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233089,"byte_end":233092,"line_start":4338,"line_end":4338,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233097,"byte_end":233147,"line_start":4339,"line_end":4339,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233152,"byte_end":233155,"line_start":4340,"line_end":4340,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233160,"byte_end":233205,"line_start":4341,"line_end":4341,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233210,"byte_end":233213,"line_start":4342,"line_end":4342,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<str>, u32>, known_strings: &[Rc<str>] ) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233218,"byte_end":233302,"line_start":4343,"line_end":4343,"column_start":5,"column_end":89}},{"value":"/     for s in known_strings {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233307,"byte_end":233339,"line_start":4344,"line_end":4344,"column_start":5,"column_end":37}},{"value":"/         if let EntryRef::Occupied(entry) = map.entry_ref(s.as_ref()) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233344,"byte_end":233418,"line_start":4345,"line_end":4345,"column_start":5,"column_end":79}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233423,"byte_end":233509,"line_start":4346,"line_end":4346,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233514,"byte_end":233550,"line_start":4347,"line_end":4347,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233555,"byte_end":233568,"line_start":4348,"line_end":4348,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233573,"byte_end":233582,"line_start":4349,"line_end":4349,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233587,"byte_end":233592,"line_start":4350,"line_end":4350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233597,"byte_end":233604,"line_start":4351,"line_end":4351,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233645,"byte_end":233651,"line_start":4352,"line_end":4352,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235417,"byte_end":235435,"line_start":4410,"line_end":4410,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntryRef>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> EntryRef where F: FnOnce(&Q, V) ->\nOption<V>, K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233857,"byte_end":233927,"line_start":4361,"line_end":4361,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233932,"byte_end":233993,"line_start":4362,"line_end":4362,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":233998,"byte_end":234031,"line_start":4363,"line_end":4363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234036,"byte_end":234039,"line_start":4364,"line_end":4364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234044,"byte_end":234058,"line_start":4365,"line_end":4365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234063,"byte_end":234066,"line_start":4366,"line_end":4366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234071,"byte_end":234078,"line_start":4367,"line_end":4367,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234083,"byte_end":234110,"line_start":4368,"line_end":4368,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234115,"byte_end":234153,"line_start":4369,"line_end":4369,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234158,"byte_end":234161,"line_start":4370,"line_end":4370,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234166,"byte_end":234221,"line_start":4371,"line_end":4371,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"poneyland\".to_string(), 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234226,"byte_end":234270,"line_start":4372,"line_end":4372,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234275,"byte_end":234278,"line_start":4373,"line_end":4373,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234283,"byte_end":234333,"line_start":4374,"line_end":4374,"column_start":5,"column_end":55}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234338,"byte_end":234372,"line_start":4375,"line_end":4375,"column_start":5,"column_end":39}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234377,"byte_end":234418,"line_start":4376,"line_end":4376,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234423,"byte_end":234466,"line_start":4377,"line_end":4377,"column_start":5,"column_end":48}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234471,"byte_end":234505,"line_start":4378,"line_end":4378,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234510,"byte_end":234537,"line_start":4379,"line_end":4379,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234542,"byte_end":234556,"line_start":4380,"line_end":4380,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234561,"byte_end":234570,"line_start":4381,"line_end":4381,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234575,"byte_end":234615,"line_start":4382,"line_end":4382,"column_start":5,"column_end":45}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234620,"byte_end":234626,"line_start":4383,"line_end":4383,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234631,"byte_end":234634,"line_start":4384,"line_end":4384,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234639,"byte_end":234656,"line_start":4385,"line_end":4385,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234661,"byte_end":234695,"line_start":4386,"line_end":4386,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234700,"byte_end":234745,"line_start":4387,"line_end":4387,"column_start":5,"column_end":50}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234750,"byte_end":234787,"line_start":4388,"line_end":4388,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234792,"byte_end":234801,"line_start":4389,"line_end":4389,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234806,"byte_end":234846,"line_start":4390,"line_end":4390,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234851,"byte_end":234856,"line_start":4391,"line_end":4391,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234861,"byte_end":234864,"line_start":4392,"line_end":4392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234869,"byte_end":234906,"line_start":4393,"line_end":4393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234911,"byte_end":234914,"line_start":4394,"line_end":4394,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry_ref(\"poneyland\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234919,"byte_end":234969,"line_start":4395,"line_end":4395,"column_start":5,"column_end":55}},{"value":"/     EntryRef::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":234974,"byte_end":235043,"line_start":4396,"line_end":4396,"column_start":5,"column_end":74}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235048,"byte_end":235088,"line_start":4397,"line_end":4397,"column_start":5,"column_end":45}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235093,"byte_end":235099,"line_start":4398,"line_end":4398,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235104,"byte_end":235107,"line_start":4399,"line_end":4399,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235112,"byte_end":235129,"line_start":4400,"line_end":4400,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235134,"byte_end":235166,"line_start":4401,"line_end":4401,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235171,"byte_end":235216,"line_start":4402,"line_end":4402,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235221,"byte_end":235230,"line_start":4403,"line_end":4403,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235235,"byte_end":235277,"line_start":4404,"line_end":4404,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235282,"byte_end":235287,"line_start":4405,"line_end":4405,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235292,"byte_end":235295,"line_start":4406,"line_end":4406,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235300,"byte_end":235344,"line_start":4407,"line_end":4407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235349,"byte_end":235356,"line_start":4408,"line_end":4408,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":235397,"byte_end":235403,"line_start":4409,"line_end":4409,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236854,"byte_end":236857,"line_start":4456,"line_end":4456,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntryRef`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236427,"byte_end":236500,"line_start":4443,"line_end":4443,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntryRef`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236505,"byte_end":236538,"line_start":4444,"line_end":4444,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236543,"byte_end":236546,"line_start":4445,"line_end":4445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236551,"byte_end":236565,"line_start":4446,"line_end":4446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236570,"byte_end":236573,"line_start":4447,"line_end":4447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236578,"byte_end":236585,"line_start":4448,"line_end":4448,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236590,"byte_end":236617,"line_start":4449,"line_end":4449,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236622,"byte_end":236625,"line_start":4450,"line_end":4450,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236630,"byte_end":236685,"line_start":4451,"line_end":4451,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236690,"byte_end":236722,"line_start":4452,"line_end":4452,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.entry_ref(key).key(), \"poneyland\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236727,"byte_end":236781,"line_start":4453,"line_end":4453,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236786,"byte_end":236793,"line_start":4454,"line_end":4454,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236834,"byte_end":236840,"line_start":4455,"line_end":4455,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237378,"byte_end":237386,"line_start":4479,"line_end":4479,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntryRef>::into_key","value":"pub fn into_key(Self) -> K where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236946,"byte_end":236976,"line_start":4463,"line_end":4463,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236981,"byte_end":236984,"line_start":4464,"line_end":4464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236989,"byte_end":237003,"line_start":4465,"line_end":4465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237008,"byte_end":237011,"line_start":4466,"line_end":4466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237016,"byte_end":237023,"line_start":4467,"line_end":4467,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237028,"byte_end":237055,"line_start":4468,"line_end":4468,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237060,"byte_end":237098,"line_start":4469,"line_end":4469,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237103,"byte_end":237106,"line_start":4470,"line_end":4470,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237111,"byte_end":237166,"line_start":4471,"line_end":4471,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237171,"byte_end":237203,"line_start":4472,"line_end":4472,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237208,"byte_end":237211,"line_start":4473,"line_end":4473,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Vacant(v) = map.entry_ref(key) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237216,"byte_end":237269,"line_start":4474,"line_end":4474,"column_start":5,"column_end":58}},{"value":"/     v.into_key();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237274,"byte_end":237295,"line_start":4475,"line_end":4475,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237300,"byte_end":237305,"line_start":4476,"line_end":4476,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237310,"byte_end":237317,"line_start":4477,"line_end":4477,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237358,"byte_end":237364,"line_start":4478,"line_end":4478,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":238032,"byte_end":238038,"line_start":4504,"line_end":4504,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntryRef>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntryRef's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntryRef's key,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237479,"byte_end":237541,"line_start":4486,"line_end":4486,"column_start":5,"column_end":67}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237546,"byte_end":237588,"line_start":4487,"line_end":4487,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237593,"byte_end":237596,"line_start":4488,"line_end":4488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237601,"byte_end":237615,"line_start":4489,"line_end":4489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237620,"byte_end":237623,"line_start":4490,"line_end":4490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237628,"byte_end":237635,"line_start":4491,"line_end":4491,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237640,"byte_end":237667,"line_start":4492,"line_end":4492,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237672,"byte_end":237710,"line_start":4493,"line_end":4493,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237715,"byte_end":237718,"line_start":4494,"line_end":4494,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237723,"byte_end":237778,"line_start":4495,"line_end":4495,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237783,"byte_end":237815,"line_start":4496,"line_end":4496,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237820,"byte_end":237823,"line_start":4497,"line_end":4497,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Vacant(o) = map.entry_ref(key) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237828,"byte_end":237881,"line_start":4498,"line_end":4498,"column_start":5,"column_end":58}},{"value":"/     o.insert(37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237886,"byte_end":237907,"line_start":4499,"line_end":4499,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237912,"byte_end":237917,"line_start":4500,"line_end":4500,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237922,"byte_end":237959,"line_start":4501,"line_end":4501,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":237964,"byte_end":237971,"line_start":4502,"line_end":4502,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":238012,"byte_end":238018,"line_start":4503,"line_end":4503,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297093,"byte_end":297100,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1711}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":293721,"byte_end":293787,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":293788,"byte_end":293791,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":293792,"byte_end":293864,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":293865,"byte_end":293945,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":293946,"byte_end":294022,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294023,"byte_end":294077,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294078,"byte_end":294081,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294082,"byte_end":294093,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294094,"byte_end":294130,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294131,"byte_end":294138,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294139,"byte_end":294142,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294143,"byte_end":294213,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294214,"byte_end":294217,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294218,"byte_end":294221,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294222,"byte_end":294295,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294296,"byte_end":294369,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294370,"byte_end":294445,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294446,"byte_end":294525,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294526,"byte_end":294542,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294543,"byte_end":294546,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294547,"byte_end":294626,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294627,"byte_end":294705,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294706,"byte_end":294786,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294787,"byte_end":294832,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294833,"byte_end":294836,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294837,"byte_end":294851,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294852,"byte_end":294855,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294856,"byte_end":294863,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294864,"byte_end":294891,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294892,"byte_end":294960,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":294961,"byte_end":295012,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295013,"byte_end":295048,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295049,"byte_end":295052,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295053,"byte_end":295075,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295076,"byte_end":295129,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295130,"byte_end":295184,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295185,"byte_end":295229,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295230,"byte_end":295279,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295280,"byte_end":295283,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295284,"byte_end":295316,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295317,"byte_end":295364,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295365,"byte_end":295437,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295438,"byte_end":295468,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295469,"byte_end":295474,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295475,"byte_end":295478,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295479,"byte_end":295500,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295501,"byte_end":295533,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295534,"byte_end":295537,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295538,"byte_end":295569,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295570,"byte_end":295594,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295595,"byte_end":295624,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295625,"byte_end":295630,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295631,"byte_end":295638,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295639,"byte_end":295642,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295643,"byte_end":295711,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`]. This will in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295712,"byte_end":295788,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295789,"byte_end":295821,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295822,"byte_end":295825,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295826,"byte_end":295833,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295834,"byte_end":295861,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295862,"byte_end":295903,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295904,"byte_end":295923,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295924,"byte_end":295945,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295946,"byte_end":295967,"line_start":83,"line_end":83,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295968,"byte_end":295973,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295974,"byte_end":295977,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":295978,"byte_end":296015,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296016,"byte_end":296019,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296020,"byte_end":296087,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296088,"byte_end":296155,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296156,"byte_end":296222,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296223,"byte_end":296291,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296292,"byte_end":296295,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296296,"byte_end":296351,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296352,"byte_end":296375,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296376,"byte_end":296404,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296405,"byte_end":296410,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296411,"byte_end":296418,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296419,"byte_end":296422,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296423,"byte_end":296500,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296501,"byte_end":296504,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296505,"byte_end":296512,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296513,"byte_end":296540,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296541,"byte_end":296544,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296545,"byte_end":296590,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296591,"byte_end":296655,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296656,"byte_end":296695,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296696,"byte_end":296703,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296704,"byte_end":296707,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296708,"byte_end":296773,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296774,"byte_end":296833,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296834,"byte_end":296898,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296899,"byte_end":296935,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":296936,"byte_end":297009,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297010,"byte_end":297081,"line_start":114,"line_end":114,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297918,"byte_end":297921,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297550,"byte_end":297581,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297586,"byte_end":297589,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297594,"byte_end":297686,"line_start":135,"line_end":135,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297691,"byte_end":297718,"line_start":136,"line_end":136,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297723,"byte_end":297726,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297731,"byte_end":297745,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297750,"byte_end":297753,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297758,"byte_end":297765,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297770,"byte_end":297797,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297802,"byte_end":297845,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297850,"byte_end":297857,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297898,"byte_end":297904,"line_start":144,"line_end":144,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298474,"byte_end":298487,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298003,"byte_end":298062,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298067,"byte_end":298070,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298075,"byte_end":298149,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298154,"byte_end":298223,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298228,"byte_end":298231,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298236,"byte_end":298250,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298255,"byte_end":298258,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298263,"byte_end":298270,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298275,"byte_end":298302,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298307,"byte_end":298362,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298367,"byte_end":298401,"line_start":161,"line_end":161,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298406,"byte_end":298413,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298454,"byte_end":298460,"line_start":163,"line_end":163,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299075,"byte_end":299081,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"new_in","qualname":"<HashSet<T, DefaultHashBuilder, A>>::new_in","value":"pub fn new_in(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298707,"byte_end":298738,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298743,"byte_end":298746,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298751,"byte_end":298843,"line_start":175,"line_end":175,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298848,"byte_end":298875,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298880,"byte_end":298883,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298888,"byte_end":298902,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298907,"byte_end":298910,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298915,"byte_end":298922,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298927,"byte_end":298954,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298959,"byte_end":299002,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299007,"byte_end":299014,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299055,"byte_end":299061,"line_start":184,"line_end":184,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299650,"byte_end":299666,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"with_capacity_in","qualname":"<HashSet<T, DefaultHashBuilder, A>>::with_capacity_in","value":"pub fn with_capacity_in(usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299179,"byte_end":299238,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299243,"byte_end":299246,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299251,"byte_end":299325,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299330,"byte_end":299399,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299404,"byte_end":299407,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299412,"byte_end":299426,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299431,"byte_end":299434,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299439,"byte_end":299446,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299451,"byte_end":299478,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299483,"byte_end":299538,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299543,"byte_end":299577,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299582,"byte_end":299589,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299630,"byte_end":299636,"line_start":203,"line_end":203,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300181,"byte_end":300189,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299855,"byte_end":299928,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299933,"byte_end":299936,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299941,"byte_end":299955,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299960,"byte_end":299963,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299968,"byte_end":299975,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299980,"byte_end":300007,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300012,"byte_end":300068,"line_start":218,"line_end":218,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300073,"byte_end":300108,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300113,"byte_end":300120,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300161,"byte_end":300167,"line_start":221,"line_end":221,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300714,"byte_end":300718,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S, A>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300247,"byte_end":300304,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300309,"byte_end":300350,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300355,"byte_end":300358,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300363,"byte_end":300377,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300382,"byte_end":300385,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300390,"byte_end":300397,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300402,"byte_end":300429,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300434,"byte_end":300467,"line_start":233,"line_end":233,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300472,"byte_end":300492,"line_start":234,"line_end":234,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300497,"byte_end":300517,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300522,"byte_end":300525,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300530,"byte_end":300570,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300575,"byte_end":300600,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300605,"byte_end":300631,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300636,"byte_end":300641,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300646,"byte_end":300653,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300694,"byte_end":300700,"line_start":242,"line_end":242,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301141,"byte_end":301144,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300814,"byte_end":300860,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300865,"byte_end":300868,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300873,"byte_end":300887,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300892,"byte_end":300895,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300900,"byte_end":300907,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300912,"byte_end":300939,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300944,"byte_end":300947,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300952,"byte_end":300983,"line_start":256,"line_end":256,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":300988,"byte_end":301015,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301020,"byte_end":301036,"line_start":258,"line_end":258,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301041,"byte_end":301068,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301073,"byte_end":301080,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301121,"byte_end":301127,"line_start":261,"line_end":261,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301528,"byte_end":301536,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301197,"byte_end":301248,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301253,"byte_end":301256,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301261,"byte_end":301275,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301280,"byte_end":301283,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301288,"byte_end":301295,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301300,"byte_end":301327,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301332,"byte_end":301335,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301340,"byte_end":301371,"line_start":273,"line_end":273,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301376,"byte_end":301402,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301407,"byte_end":301423,"line_start":275,"line_end":275,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301428,"byte_end":301455,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301460,"byte_end":301467,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301508,"byte_end":301514,"line_start":278,"line_end":278,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302084,"byte_end":302089,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S, A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301593,"byte_end":301651,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301656,"byte_end":301659,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301664,"byte_end":301678,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301683,"byte_end":301686,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301691,"byte_end":301698,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301703,"byte_end":301730,"line_start":288,"line_end":288,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301735,"byte_end":301738,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301743,"byte_end":301809,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301814,"byte_end":301843,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301848,"byte_end":301851,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301856,"byte_end":301898,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301903,"byte_end":301929,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301934,"byte_end":301960,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301965,"byte_end":301970,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301975,"byte_end":301978,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":301983,"byte_end":302011,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302016,"byte_end":302023,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302064,"byte_end":302070,"line_start":300,"line_end":300,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302623,"byte_end":302629,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S, A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302195,"byte_end":302252,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302257,"byte_end":302260,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302265,"byte_end":302343,"line_start":309,"line_end":309,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302348,"byte_end":302351,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302356,"byte_end":302370,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302375,"byte_end":302378,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302383,"byte_end":302390,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302395,"byte_end":302422,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302427,"byte_end":302430,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302435,"byte_end":302462,"line_start":316,"line_end":316,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302467,"byte_end":302528,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302533,"byte_end":302565,"line_start":318,"line_end":318,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302570,"byte_end":302599,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302604,"byte_end":302611,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303699,"byte_end":303711,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S, A>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, T, F, A> where\nF: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302749,"byte_end":302810,"line_start":328,"line_end":328,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302815,"byte_end":302866,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302871,"byte_end":302874,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ In other words, move all elements `e` such that `f(&e)` returns `true` out","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302879,"byte_end":302957,"line_start":331,"line_end":331,"column_start":5,"column_end":83}},{"value":"/ into another iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302962,"byte_end":302988,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":302993,"byte_end":302996,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303001,"byte_end":303084,"line_start":334,"line_end":334,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303089,"byte_end":303132,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303137,"byte_end":303140,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303145,"byte_end":303159,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303164,"byte_end":303167,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303172,"byte_end":303179,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303184,"byte_end":303211,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303216,"byte_end":303219,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303224,"byte_end":303273,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303278,"byte_end":303353,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303358,"byte_end":303361,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303366,"byte_end":303426,"line_start":345,"line_end":345,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303431,"byte_end":303486,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303491,"byte_end":303508,"line_start":347,"line_end":347,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303513,"byte_end":303529,"line_start":348,"line_end":348,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303534,"byte_end":303537,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303542,"byte_end":303582,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303587,"byte_end":303626,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303631,"byte_end":303638,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":303679,"byte_end":303685,"line_start":353,"line_end":353,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304324,"byte_end":304329,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304017,"byte_end":304057,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304062,"byte_end":304065,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304070,"byte_end":304084,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304089,"byte_end":304092,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304097,"byte_end":304104,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304109,"byte_end":304136,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304141,"byte_end":304144,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304149,"byte_end":304180,"line_start":374,"line_end":374,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304185,"byte_end":304201,"line_start":375,"line_end":375,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304206,"byte_end":304220,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304225,"byte_end":304251,"line_start":377,"line_end":377,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304256,"byte_end":304263,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304304,"byte_end":304310,"line_start":379,"line_end":379,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305435,"byte_end":305446,"line_start":413,"line_end":413,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S, Global>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304417,"byte_end":304489,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304494,"byte_end":304503,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304508,"byte_end":304511,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304516,"byte_end":304583,"line_start":389,"line_end":389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304588,"byte_end":304591,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304596,"byte_end":304653,"line_start":391,"line_end":391,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304658,"byte_end":304725,"line_start":392,"line_end":392,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304730,"byte_end":304793,"line_start":393,"line_end":393,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304798,"byte_end":304862,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304867,"byte_end":304870,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304875,"byte_end":304951,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304956,"byte_end":305020,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305025,"byte_end":305028,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305033,"byte_end":305036,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305041,"byte_end":305055,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305060,"byte_end":305063,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305068,"byte_end":305075,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305080,"byte_end":305107,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305112,"byte_end":305160,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305165,"byte_end":305168,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305173,"byte_end":305215,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305220,"byte_end":305262,"line_start":407,"line_end":407,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305267,"byte_end":305285,"line_start":408,"line_end":408,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305290,"byte_end":305297,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305302,"byte_end":305305,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305310,"byte_end":305368,"line_start":411,"line_end":411,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305409,"byte_end":305415,"line_start":412,"line_end":412,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306667,"byte_end":306691,"line_start":446,"line_end":446,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S, Global>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305551,"byte_end":305616,"line_start":419,"line_end":419,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305621,"byte_end":305651,"line_start":420,"line_end":420,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305656,"byte_end":305659,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305664,"byte_end":305738,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305743,"byte_end":305812,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305817,"byte_end":305820,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305825,"byte_end":305882,"line_start":425,"line_end":425,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305887,"byte_end":305954,"line_start":426,"line_end":426,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":305959,"byte_end":306022,"line_start":427,"line_end":427,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306027,"byte_end":306091,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306096,"byte_end":306099,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306104,"byte_end":306180,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306185,"byte_end":306249,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306254,"byte_end":306257,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306262,"byte_end":306276,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306281,"byte_end":306284,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306289,"byte_end":306296,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306301,"byte_end":306328,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306333,"byte_end":306381,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306386,"byte_end":306389,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306394,"byte_end":306436,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306441,"byte_end":306500,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306505,"byte_end":306523,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306528,"byte_end":306535,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306540,"byte_end":306543,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306548,"byte_end":306606,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306647,"byte_end":306653,"line_start":445,"line_end":445,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306981,"byte_end":306990,"line_start":459,"line_end":459,"column_start":12,"column_end":21},"name":"allocator","qualname":"<HashSet<T, S, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306903,"byte_end":306955,"line_start":457,"line_end":457,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306960,"byte_end":306969,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307821,"byte_end":307835,"line_start":484,"line_end":484,"column_start":12,"column_end":26},"name":"with_hasher_in","qualname":"<HashSet<T, S, A>>::with_hasher_in","value":"pub fn with_hasher_in(S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307046,"byte_end":307118,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307123,"byte_end":307132,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307137,"byte_end":307140,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307145,"byte_end":307212,"line_start":466,"line_end":466,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307217,"byte_end":307220,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307225,"byte_end":307282,"line_start":468,"line_end":468,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307287,"byte_end":307354,"line_start":469,"line_end":469,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307359,"byte_end":307422,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307427,"byte_end":307491,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307496,"byte_end":307499,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307504,"byte_end":307518,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307523,"byte_end":307526,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307531,"byte_end":307538,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307543,"byte_end":307570,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307575,"byte_end":307623,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307628,"byte_end":307631,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307636,"byte_end":307678,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307683,"byte_end":307725,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307730,"byte_end":307748,"line_start":481,"line_end":481,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307753,"byte_end":307760,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307801,"byte_end":307807,"line_start":483,"line_end":483,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308847,"byte_end":308874,"line_start":512,"line_end":512,"column_start":12,"column_end":39},"name":"with_capacity_and_hasher_in","qualname":"<HashSet<T, S, A>>::with_capacity_and_hasher_in","value":"pub fn with_capacity_and_hasher_in(usize, S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":307960,"byte_end":308025,"line_start":490,"line_end":490,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308030,"byte_end":308060,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308065,"byte_end":308068,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308073,"byte_end":308147,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308152,"byte_end":308221,"line_start":494,"line_end":494,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308226,"byte_end":308229,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308234,"byte_end":308291,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308296,"byte_end":308363,"line_start":497,"line_end":497,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308368,"byte_end":308431,"line_start":498,"line_end":498,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308436,"byte_end":308500,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308505,"byte_end":308508,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308513,"byte_end":308527,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308532,"byte_end":308535,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308540,"byte_end":308547,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308552,"byte_end":308579,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308584,"byte_end":308632,"line_start":505,"line_end":505,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308637,"byte_end":308640,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308645,"byte_end":308687,"line_start":507,"line_end":507,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308692,"byte_end":308751,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308756,"byte_end":308774,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308779,"byte_end":308786,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":308827,"byte_end":308833,"line_start":511,"line_end":511,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309566,"byte_end":309572,"line_start":533,"line_end":533,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S, A>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309039,"byte_end":309092,"line_start":518,"line_end":518,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309097,"byte_end":309100,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309105,"byte_end":309183,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309188,"byte_end":309191,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309196,"byte_end":309210,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309215,"byte_end":309218,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309223,"byte_end":309230,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309235,"byte_end":309262,"line_start":525,"line_end":525,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309267,"byte_end":309315,"line_start":526,"line_end":526,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309320,"byte_end":309323,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309328,"byte_end":309375,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309380,"byte_end":309437,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309442,"byte_end":309493,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309498,"byte_end":309505,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309546,"byte_end":309552,"line_start":532,"line_end":532,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310273,"byte_end":310280,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S, A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309730,"byte_end":309806,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309811,"byte_end":309879,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309884,"byte_end":309911,"line_start":546,"line_end":546,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309916,"byte_end":309919,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309924,"byte_end":309936,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309941,"byte_end":309944,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309949,"byte_end":310005,"line_start":550,"line_end":550,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310010,"byte_end":310013,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310018,"byte_end":310032,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310037,"byte_end":310040,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310045,"byte_end":310052,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310057,"byte_end":310084,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310089,"byte_end":310136,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310141,"byte_end":310161,"line_start":557,"line_end":557,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310166,"byte_end":310200,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310205,"byte_end":310212,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310253,"byte_end":310259,"line_start":560,"line_end":560,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310988,"byte_end":310999,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S, A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310362,"byte_end":310446,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310451,"byte_end":310530,"line_start":566,"line_end":566,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310535,"byte_end":310562,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310567,"byte_end":310570,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310575,"byte_end":310587,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310592,"byte_end":310595,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310600,"byte_end":310680,"line_start":571,"line_end":571,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310685,"byte_end":310701,"line_start":572,"line_end":572,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310706,"byte_end":310709,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310714,"byte_end":310728,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310733,"byte_end":310736,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310741,"byte_end":310748,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310753,"byte_end":310780,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310785,"byte_end":310832,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310837,"byte_end":310915,"line_start":579,"line_end":579,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310920,"byte_end":310927,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":310968,"byte_end":310974,"line_start":581,"line_end":581,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311696,"byte_end":311709,"line_start":603,"line_end":603,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S, A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311115,"byte_end":311184,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311189,"byte_end":311254,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311259,"byte_end":311332,"line_start":588,"line_end":588,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311337,"byte_end":311340,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311345,"byte_end":311359,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311364,"byte_end":311367,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311372,"byte_end":311379,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311384,"byte_end":311411,"line_start":593,"line_end":593,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311416,"byte_end":311419,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311424,"byte_end":311470,"line_start":595,"line_end":595,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311475,"byte_end":311493,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311498,"byte_end":311516,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311521,"byte_end":311556,"line_start":598,"line_end":598,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311561,"byte_end":311585,"line_start":599,"line_end":599,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311590,"byte_end":311623,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311628,"byte_end":311635,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311676,"byte_end":311682,"line_start":602,"line_end":602,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312526,"byte_end":312535,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S, A>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311768,"byte_end":311836,"line_start":607,"line_end":607,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311841,"byte_end":311919,"line_start":608,"line_end":608,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":311924,"byte_end":311997,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312002,"byte_end":312005,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312010,"byte_end":312073,"line_start":611,"line_end":611,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312078,"byte_end":312099,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312104,"byte_end":312107,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312112,"byte_end":312126,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312131,"byte_end":312134,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312139,"byte_end":312146,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312151,"byte_end":312178,"line_start":617,"line_end":617,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312183,"byte_end":312186,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312191,"byte_end":312237,"line_start":619,"line_end":619,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312242,"byte_end":312260,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312265,"byte_end":312283,"line_start":621,"line_end":621,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312288,"byte_end":312323,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312328,"byte_end":312350,"line_start":623,"line_end":623,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312355,"byte_end":312389,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312394,"byte_end":312415,"line_start":625,"line_end":625,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312420,"byte_end":312453,"line_start":626,"line_end":626,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312458,"byte_end":312465,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312506,"byte_end":312512,"line_start":628,"line_end":628,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313478,"byte_end":313488,"line_start":657,"line_end":657,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S, A>>::difference","value":"pub fn difference<'a>(&'a Self, &'a Self) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312623,"byte_end":312673,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312678,"byte_end":312737,"line_start":634,"line_end":634,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312742,"byte_end":312745,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312750,"byte_end":312764,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312769,"byte_end":312772,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312777,"byte_end":312784,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312789,"byte_end":312816,"line_start":639,"line_end":639,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312821,"byte_end":312881,"line_start":640,"line_end":640,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312886,"byte_end":312949,"line_start":641,"line_end":641,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312954,"byte_end":312957,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312962,"byte_end":312992,"line_start":643,"line_end":643,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":312997,"byte_end":313028,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313033,"byte_end":313070,"line_start":645,"line_end":645,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313075,"byte_end":313080,"line_start":646,"line_end":646,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313085,"byte_end":313088,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313093,"byte_end":313147,"line_start":648,"line_end":648,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313152,"byte_end":313195,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313200,"byte_end":313203,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313208,"byte_end":313253,"line_start":651,"line_end":651,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313258,"byte_end":313298,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313303,"byte_end":313357,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313362,"byte_end":313405,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313410,"byte_end":313417,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313458,"byte_end":313464,"line_start":656,"line_end":656,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314440,"byte_end":314460,"line_start":686,"line_end":686,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S, A>>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a Self) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313641,"byte_end":313701,"line_start":664,"line_end":664,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313706,"byte_end":313776,"line_start":665,"line_end":665,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313781,"byte_end":313784,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313789,"byte_end":313803,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313808,"byte_end":313811,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313816,"byte_end":313823,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313828,"byte_end":313855,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313860,"byte_end":313920,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313925,"byte_end":313988,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":313993,"byte_end":313996,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314001,"byte_end":314038,"line_start":674,"line_end":674,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314043,"byte_end":314084,"line_start":675,"line_end":675,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314089,"byte_end":314115,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314120,"byte_end":314125,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314130,"byte_end":314133,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314138,"byte_end":314203,"line_start":679,"line_end":679,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314208,"byte_end":314273,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314278,"byte_end":314281,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314286,"byte_end":314315,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314320,"byte_end":314367,"line_start":683,"line_end":683,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314372,"byte_end":314379,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314420,"byte_end":314426,"line_start":685,"line_end":685,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315317,"byte_end":315329,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S, A>>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a Self) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314653,"byte_end":314705,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314710,"byte_end":314767,"line_start":693,"line_end":693,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314772,"byte_end":314775,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314780,"byte_end":314794,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314799,"byte_end":314802,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314807,"byte_end":314814,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314819,"byte_end":314846,"line_start":698,"line_end":698,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314851,"byte_end":314911,"line_start":699,"line_end":699,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314916,"byte_end":314979,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314984,"byte_end":314987,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":314992,"byte_end":315029,"line_start":702,"line_end":702,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315034,"byte_end":315067,"line_start":703,"line_end":703,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315072,"byte_end":315098,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315103,"byte_end":315108,"line_start":705,"line_end":705,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315113,"byte_end":315116,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315121,"byte_end":315185,"line_start":707,"line_end":707,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315190,"byte_end":315244,"line_start":708,"line_end":708,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315249,"byte_end":315256,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315297,"byte_end":315303,"line_start":710,"line_end":710,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316290,"byte_end":316295,"line_start":742,"line_end":742,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S, A>>::union","value":"pub fn union<'a>(&'a Self, &'a Self) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315640,"byte_end":315685,"line_start":723,"line_end":723,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315690,"byte_end":315756,"line_start":724,"line_end":724,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315761,"byte_end":315764,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315769,"byte_end":315783,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315788,"byte_end":315791,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315796,"byte_end":315803,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315808,"byte_end":315835,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315840,"byte_end":315900,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315905,"byte_end":315968,"line_start":731,"line_end":731,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315973,"byte_end":315976,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":315981,"byte_end":316024,"line_start":733,"line_end":733,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316029,"byte_end":316055,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316060,"byte_end":316086,"line_start":735,"line_end":735,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316091,"byte_end":316096,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316101,"byte_end":316104,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316109,"byte_end":316159,"line_start":738,"line_end":738,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316164,"byte_end":316217,"line_start":739,"line_end":739,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316222,"byte_end":316229,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316270,"byte_end":316276,"line_start":741,"line_end":741,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317453,"byte_end":317461,"line_start":774,"line_end":774,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S, A>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where T: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316773,"byte_end":316820,"line_start":755,"line_end":755,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316825,"byte_end":316828,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316833,"byte_end":316900,"line_start":757,"line_end":757,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316905,"byte_end":316972,"line_start":758,"line_end":758,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":316977,"byte_end":316996,"line_start":759,"line_end":759,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317001,"byte_end":317004,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317009,"byte_end":317023,"line_start":761,"line_end":761,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317028,"byte_end":317031,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317036,"byte_end":317043,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317048,"byte_end":317075,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317080,"byte_end":317083,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317088,"byte_end":317150,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317155,"byte_end":317194,"line_start":767,"line_end":767,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317199,"byte_end":317239,"line_start":768,"line_end":768,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317244,"byte_end":317251,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317256,"byte_end":317259,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317264,"byte_end":317323,"line_start":771,"line_end":771,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317328,"byte_end":317392,"line_start":772,"line_end":772,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317433,"byte_end":317439,"line_start":773,"line_end":773,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318323,"byte_end":318326,"line_start":801,"line_end":801,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S, A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317607,"byte_end":317697,"line_start":782,"line_end":782,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317702,"byte_end":317705,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317710,"byte_end":317777,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317782,"byte_end":317849,"line_start":785,"line_end":785,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317854,"byte_end":317873,"line_start":786,"line_end":786,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317878,"byte_end":317881,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317886,"byte_end":317900,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317905,"byte_end":317908,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317913,"byte_end":317920,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317925,"byte_end":317952,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317957,"byte_end":317960,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":317965,"byte_end":318027,"line_start":793,"line_end":793,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318032,"byte_end":318070,"line_start":794,"line_end":794,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318075,"byte_end":318109,"line_start":795,"line_end":795,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318114,"byte_end":318121,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318126,"byte_end":318129,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318134,"byte_end":318193,"line_start":798,"line_end":798,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318198,"byte_end":318262,"line_start":799,"line_end":799,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318303,"byte_end":318309,"line_start":800,"line_end":800,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319155,"byte_end":319168,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S, A>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318618,"byte_end":318687,"line_start":813,"line_end":813,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318692,"byte_end":318740,"line_start":814,"line_end":814,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318745,"byte_end":318748,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318753,"byte_end":318767,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318772,"byte_end":318775,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318780,"byte_end":318787,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318792,"byte_end":318819,"line_start":819,"line_end":819,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318824,"byte_end":318827,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318832,"byte_end":318898,"line_start":821,"line_end":821,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318903,"byte_end":318932,"line_start":822,"line_end":822,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318937,"byte_end":318978,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":318983,"byte_end":319028,"line_start":824,"line_end":824,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319033,"byte_end":319082,"line_start":825,"line_end":825,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319087,"byte_end":319094,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319135,"byte_end":319141,"line_start":827,"line_end":827,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320159,"byte_end":320178,"line_start":857,"line_end":857,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S, A>>::get_or_insert_owned","value":"pub fn get_or_insert_owned<Q: ?Sized>(&mut Self, &Q) -> &T where T: Borrow<Q>,\nQ: Hash + Eq + ToOwned<Owned = T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319523,"byte_end":319595,"line_start":838,"line_end":838,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319600,"byte_end":319662,"line_start":839,"line_end":839,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319667,"byte_end":319670,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319675,"byte_end":319689,"line_start":841,"line_end":841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319694,"byte_end":319697,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319702,"byte_end":319709,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319714,"byte_end":319741,"line_start":844,"line_end":844,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319746,"byte_end":319749,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319754,"byte_end":319812,"line_start":846,"line_end":846,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319817,"byte_end":319870,"line_start":847,"line_end":847,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319875,"byte_end":319878,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319883,"byte_end":319912,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319917,"byte_end":319958,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":319963,"byte_end":320012,"line_start":851,"line_end":851,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320017,"byte_end":320048,"line_start":852,"line_end":852,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320053,"byte_end":320058,"line_start":853,"line_end":853,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320063,"byte_end":320121,"line_start":854,"line_end":854,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320126,"byte_end":320133,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320138,"byte_end":320147,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321335,"byte_end":321353,"line_start":890,"line_end":890,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S, A>>::get_or_insert_with","value":"pub fn get_or_insert_with<Q: ?Sized, F>(&mut Self, &Q, F) -> &T where\nT: Borrow<Q>, Q: Hash + Eq, F: FnOnce(&Q) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320644,"byte_end":320718,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320723,"byte_end":320789,"line_start":872,"line_end":872,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320794,"byte_end":320797,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320802,"byte_end":320816,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320821,"byte_end":320824,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320829,"byte_end":320836,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320841,"byte_end":320868,"line_start":877,"line_end":877,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320873,"byte_end":320876,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320881,"byte_end":320939,"line_start":879,"line_end":879,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":320944,"byte_end":320997,"line_start":880,"line_end":880,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321002,"byte_end":321005,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321010,"byte_end":321039,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321044,"byte_end":321085,"line_start":883,"line_end":883,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321090,"byte_end":321153,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321158,"byte_end":321189,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321194,"byte_end":321199,"line_start":886,"line_end":886,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321204,"byte_end":321262,"line_start":887,"line_end":887,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321267,"byte_end":321274,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321315,"byte_end":321321,"line_start":889,"line_end":889,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322359,"byte_end":322370,"line_start":922,"line_end":922,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S, A>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321827,"byte_end":321895,"line_start":905,"line_end":905,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321900,"byte_end":321961,"line_start":906,"line_end":906,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321966,"byte_end":321969,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321974,"byte_end":321988,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":321993,"byte_end":321996,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322001,"byte_end":322008,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322013,"byte_end":322040,"line_start":911,"line_end":911,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322045,"byte_end":322048,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322053,"byte_end":322113,"line_start":913,"line_end":913,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322118,"byte_end":322149,"line_start":914,"line_end":914,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322154,"byte_end":322157,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322162,"byte_end":322202,"line_start":916,"line_end":916,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322207,"byte_end":322223,"line_start":917,"line_end":917,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322228,"byte_end":322268,"line_start":918,"line_end":918,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322273,"byte_end":322289,"line_start":919,"line_end":919,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322294,"byte_end":322335,"line_start":920,"line_end":920,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322340,"byte_end":322347,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322992,"byte_end":323001,"line_start":943,"line_end":943,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S, A>>::is_subset","value":"pub fn is_subset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322461,"byte_end":322514,"line_start":926,"line_end":926,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322519,"byte_end":322580,"line_start":927,"line_end":927,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322585,"byte_end":322588,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322593,"byte_end":322607,"line_start":929,"line_end":929,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322612,"byte_end":322615,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322620,"byte_end":322627,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322632,"byte_end":322659,"line_start":932,"line_end":932,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322664,"byte_end":322667,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322672,"byte_end":322734,"line_start":934,"line_end":934,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322739,"byte_end":322772,"line_start":935,"line_end":935,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322777,"byte_end":322780,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322785,"byte_end":322827,"line_start":937,"line_end":937,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322832,"byte_end":322850,"line_start":938,"line_end":938,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322855,"byte_end":322897,"line_start":939,"line_end":939,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322902,"byte_end":322920,"line_start":940,"line_end":940,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322925,"byte_end":322968,"line_start":941,"line_end":941,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":322973,"byte_end":322980,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323745,"byte_end":323756,"line_start":968,"line_end":968,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S, A>>::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323120,"byte_end":323175,"line_start":947,"line_end":947,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323180,"byte_end":323241,"line_start":948,"line_end":948,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323246,"byte_end":323249,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323254,"byte_end":323268,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323273,"byte_end":323276,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323281,"byte_end":323288,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323293,"byte_end":323320,"line_start":953,"line_end":953,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323325,"byte_end":323328,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323333,"byte_end":323392,"line_start":955,"line_end":955,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323397,"byte_end":323430,"line_start":956,"line_end":956,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323435,"byte_end":323438,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323443,"byte_end":323488,"line_start":958,"line_end":958,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323493,"byte_end":323496,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323501,"byte_end":323519,"line_start":960,"line_end":960,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323524,"byte_end":323542,"line_start":961,"line_end":961,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323547,"byte_end":323592,"line_start":962,"line_end":962,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323597,"byte_end":323600,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323605,"byte_end":323623,"line_start":964,"line_end":964,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323628,"byte_end":323672,"line_start":965,"line_end":965,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323677,"byte_end":323684,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323725,"byte_end":323731,"line_start":967,"line_end":967,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324337,"byte_end":324343,"line_start":990,"line_end":990,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S, A>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323829,"byte_end":323857,"line_start":972,"line_end":972,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323862,"byte_end":323865,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323870,"byte_end":323937,"line_start":974,"line_end":974,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323942,"byte_end":323945,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":323950,"byte_end":324014,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324019,"byte_end":324022,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324027,"byte_end":324041,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324046,"byte_end":324049,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324054,"byte_end":324061,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324066,"byte_end":324093,"line_start":981,"line_end":981,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324098,"byte_end":324101,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324106,"byte_end":324139,"line_start":983,"line_end":983,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324144,"byte_end":324147,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324152,"byte_end":324188,"line_start":985,"line_end":985,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324193,"byte_end":324230,"line_start":986,"line_end":986,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324235,"byte_end":324264,"line_start":987,"line_end":987,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324269,"byte_end":324276,"line_start":988,"line_end":988,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324317,"byte_end":324323,"line_start":989,"line_end":989,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325383,"byte_end":325406,"line_start":1014,"line_end":1014,"column_start":12,"column_end":35},"name":"insert_unique_unchecked","qualname":"<HashSet<T, S, A>>::insert_unique_unchecked","value":"pub fn insert_unique_unchecked(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Insert a value the set without checking if the value already exists in the set.","sig":null,"attributes":[{"value":"/ Insert a value the set without checking if the value already exists in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324431,"byte_end":324514,"line_start":994,"line_end":994,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324519,"byte_end":324522,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the value just inserted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324527,"byte_end":324578,"line_start":996,"line_end":996,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324583,"byte_end":324586,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ This operation is safe if a value does not exist in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324591,"byte_end":324655,"line_start":998,"line_end":998,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324660,"byte_end":324663,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ However, if a value exists in the set already, the behavior is unspecified:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324668,"byte_end":324747,"line_start":1000,"line_end":1000,"column_start":5,"column_end":84}},{"value":"/ this operation may panic, loop forever, or any following operation with the set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324752,"byte_end":324835,"line_start":1001,"line_end":1001,"column_start":5,"column_end":88}},{"value":"/ may panic, loop forever or return arbitrary result.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324840,"byte_end":324895,"line_start":1002,"line_end":1002,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324900,"byte_end":324903,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ That said, this operation (and following operations) are guaranteed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324908,"byte_end":324982,"line_start":1004,"line_end":1004,"column_start":5,"column_end":79}},{"value":"/ not violate memory safety.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":324987,"byte_end":325017,"line_start":1005,"line_end":1005,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325022,"byte_end":325025,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ This operation is faster than regular insert, because it does not perform","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325030,"byte_end":325107,"line_start":1007,"line_end":1007,"column_start":5,"column_end":82}},{"value":"/ lookup before insertion.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325112,"byte_end":325140,"line_start":1008,"line_end":1008,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325145,"byte_end":325148,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This operation is useful during initial population of the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325153,"byte_end":325219,"line_start":1010,"line_end":1010,"column_start":5,"column_end":71}},{"value":"/ For example, when constructing a set from another set, we know","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325224,"byte_end":325290,"line_start":1011,"line_end":1011,"column_start":5,"column_end":71}},{"value":"/ that values are unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325295,"byte_end":325322,"line_start":1012,"line_end":1012,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325363,"byte_end":325369,"line_start":1013,"line_end":1013,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326048,"byte_end":326055,"line_start":1034,"line_end":1034,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S, A>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325501,"byte_end":325594,"line_start":1018,"line_end":1018,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325599,"byte_end":325635,"line_start":1019,"line_end":1019,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325640,"byte_end":325643,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325648,"byte_end":325662,"line_start":1021,"line_end":1021,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325667,"byte_end":325670,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325675,"byte_end":325682,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325687,"byte_end":325714,"line_start":1024,"line_end":1024,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325719,"byte_end":325722,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325727,"byte_end":325760,"line_start":1026,"line_end":1026,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325765,"byte_end":325799,"line_start":1027,"line_end":1027,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325804,"byte_end":325807,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325812,"byte_end":325868,"line_start":1029,"line_end":1029,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325873,"byte_end":325913,"line_start":1030,"line_end":1030,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325918,"byte_end":325975,"line_start":1031,"line_end":1031,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":325980,"byte_end":325987,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326028,"byte_end":326034,"line_start":1033,"line_end":1033,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327063,"byte_end":327069,"line_start":1066,"line_end":1066,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S, A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326341,"byte_end":326404,"line_start":1044,"line_end":1044,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326409,"byte_end":326432,"line_start":1045,"line_end":1045,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326437,"byte_end":326440,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326445,"byte_end":326512,"line_start":1047,"line_end":1047,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326517,"byte_end":326584,"line_start":1048,"line_end":1048,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326589,"byte_end":326608,"line_start":1049,"line_end":1049,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326613,"byte_end":326616,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326621,"byte_end":326635,"line_start":1051,"line_end":1051,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326640,"byte_end":326643,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326648,"byte_end":326655,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326660,"byte_end":326687,"line_start":1054,"line_end":1054,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326692,"byte_end":326695,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326700,"byte_end":326733,"line_start":1056,"line_end":1056,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326738,"byte_end":326741,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326746,"byte_end":326764,"line_start":1058,"line_end":1058,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326769,"byte_end":326806,"line_start":1059,"line_end":1059,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326811,"byte_end":326849,"line_start":1060,"line_end":1060,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326854,"byte_end":326861,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326866,"byte_end":326869,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326874,"byte_end":326933,"line_start":1063,"line_end":1063,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":326938,"byte_end":327002,"line_start":1064,"line_end":1064,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327043,"byte_end":327049,"line_start":1065,"line_end":1065,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327939,"byte_end":327943,"line_start":1093,"line_end":1093,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S, A>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where T: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327223,"byte_end":327308,"line_start":1074,"line_end":1074,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327313,"byte_end":327316,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327321,"byte_end":327388,"line_start":1076,"line_end":1076,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327393,"byte_end":327460,"line_start":1077,"line_end":1077,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327465,"byte_end":327484,"line_start":1078,"line_end":1078,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327489,"byte_end":327492,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327497,"byte_end":327511,"line_start":1080,"line_end":1080,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327516,"byte_end":327519,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327524,"byte_end":327531,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327536,"byte_end":327563,"line_start":1083,"line_end":1083,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327568,"byte_end":327571,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327576,"byte_end":327642,"line_start":1085,"line_end":1085,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327647,"byte_end":327685,"line_start":1086,"line_end":1086,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327690,"byte_end":327725,"line_start":1087,"line_end":1087,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327730,"byte_end":327737,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327742,"byte_end":327745,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327750,"byte_end":327809,"line_start":1090,"line_end":1090,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327814,"byte_end":327878,"line_start":1091,"line_end":1091,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":327919,"byte_end":327925,"line_start":1092,"line_end":1092,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1869},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335086,"byte_end":335090,"line_start":1382,"line_end":1382,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1872}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":334833,"byte_end":334879,"line_start":1375,"line_end":1375,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":334880,"byte_end":334883,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":334884,"byte_end":334951,"line_start":1377,"line_end":1377,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":334952,"byte_end":334987,"line_start":1378,"line_end":1378,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":334988,"byte_end":334991,"line_start":1379,"line_end":1379,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":334992,"byte_end":335028,"line_start":1380,"line_end":1380,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335029,"byte_end":335074,"line_start":1381,"line_end":1381,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1873},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335444,"byte_end":335452,"line_start":1393,"line_end":1393,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1876}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335130,"byte_end":335183,"line_start":1386,"line_end":1386,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335184,"byte_end":335187,"line_start":1387,"line_end":1387,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335188,"byte_end":335259,"line_start":1388,"line_end":1388,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335260,"byte_end":335335,"line_start":1389,"line_end":1389,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335336,"byte_end":335339,"line_start":1390,"line_end":1390,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335340,"byte_end":335376,"line_start":1391,"line_end":1391,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335377,"byte_end":335432,"line_start":1392,"line_end":1392,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1877},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335791,"byte_end":335796,"line_start":1404,"line_end":1404,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1881}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335527,"byte_end":335581,"line_start":1397,"line_end":1397,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335582,"byte_end":335585,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335586,"byte_end":335654,"line_start":1399,"line_end":1399,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335655,"byte_end":335690,"line_start":1400,"line_end":1400,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335691,"byte_end":335694,"line_start":1401,"line_end":1401,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335695,"byte_end":335731,"line_start":1402,"line_end":1402,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335732,"byte_end":335779,"line_start":1403,"line_end":1403,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336197,"byte_end":336208,"line_start":1415,"line_end":1415,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335876,"byte_end":335966,"line_start":1408,"line_end":1408,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335967,"byte_end":335970,"line_start":1409,"line_end":1409,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`]. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":335971,"byte_end":336054,"line_start":1410,"line_end":1410,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336055,"byte_end":336082,"line_start":1411,"line_end":1411,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336083,"byte_end":336086,"line_start":1412,"line_end":1412,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashSet.html#method.drain_filter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336087,"byte_end":336148,"line_start":1413,"line_end":1413,"column_start":1,"column_end":62}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336149,"byte_end":336185,"line_start":1414,"line_end":1414,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1889},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336644,"byte_end":336656,"line_start":1430,"line_end":1430,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336340,"byte_end":336413,"line_start":1423,"line_end":1423,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336414,"byte_end":336417,"line_start":1424,"line_end":1424,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336418,"byte_end":336493,"line_start":1425,"line_end":1425,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336494,"byte_end":336529,"line_start":1426,"line_end":1426,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336530,"byte_end":336533,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336534,"byte_end":336570,"line_start":1428,"line_end":1428,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336571,"byte_end":336632,"line_start":1429,"line_end":1429,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1896},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337110,"byte_end":337120,"line_start":1444,"line_end":1444,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336814,"byte_end":336885,"line_start":1437,"line_end":1437,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336886,"byte_end":336889,"line_start":1438,"line_end":1438,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336890,"byte_end":336963,"line_start":1439,"line_end":1439,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":336964,"byte_end":336999,"line_start":1440,"line_end":1440,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337000,"byte_end":337003,"line_start":1441,"line_end":1441,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337004,"byte_end":337040,"line_start":1442,"line_end":1442,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337041,"byte_end":337098,"line_start":1443,"line_end":1443,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337614,"byte_end":337633,"line_start":1458,"line_end":1458,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1908}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337278,"byte_end":337359,"line_start":1451,"line_end":1451,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337360,"byte_end":337363,"line_start":1452,"line_end":1452,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337364,"byte_end":337434,"line_start":1453,"line_end":1453,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337435,"byte_end":337483,"line_start":1454,"line_end":1454,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337484,"byte_end":337487,"line_start":1455,"line_end":1455,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337488,"byte_end":337524,"line_start":1456,"line_end":1456,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337525,"byte_end":337602,"line_start":1457,"line_end":1457,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1909},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":338023,"byte_end":338028,"line_start":1469,"line_end":1469,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1914}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337747,"byte_end":337813,"line_start":1462,"line_end":1462,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337814,"byte_end":337817,"line_start":1463,"line_end":1463,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337818,"byte_end":337886,"line_start":1464,"line_end":1464,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337887,"byte_end":337922,"line_start":1465,"line_end":1465,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337923,"byte_end":337926,"line_start":1466,"line_end":1466,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337927,"byte_end":337963,"line_start":1467,"line_end":1467,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":337964,"byte_end":338011,"line_start":1468,"line_end":1468,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":2118},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":2187,"byte_end":2195,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2119}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":2202,"byte_end":2268,"line_start":84,"line_end":84,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2120},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":2742,"byte_end":2750,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2121}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":2757,"byte_end":2823,"line_start":101,"line_end":101,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3502,"byte_end":3518,"line_start":123,"line_end":123,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":2199},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3386,"byte_end":3459,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3464,"byte_end":3497,"line_start":122,"line_end":122,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3572,"byte_end":3582,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":2199},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[{"value":"/ The memory allocator returned an error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3525,"byte_end":3567,"line_start":125,"line_end":125,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3364,"byte_end":3379,"line_start":120,"line_end":120,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"pub enum TryReserveError {\n    CapacityOverflow,\n    AllocError {\n        layout: alloc::alloc::Layout,\n    },\n}","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2202}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[{"value":"/ The error type for `try_reserve` methods.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/lib.rs","byte_start":3270,"byte_end":3315,"line_start":118,"line_end":118,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/sse2.rs","byte_start":10920854,"byte_end":10920859,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94582,"byte_end":94588,"line_start":44,"line_end":44,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94922,"byte_end":94928,"line_start":54,"line_end":54,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/bitmask.rs","byte_start":96304,"byte_end":96311,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/bitmask.rs","byte_start":98925,"byte_end":98932,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/bitmask.rs","byte_start":99219,"byte_end":99230,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":8756,"byte_end":8767,"line_start":90,"line_end":90,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":11461,"byte_end":11469,"line_start":169,"line_end":169,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":13962,"byte_end":13973,"line_start":237,"line_end":237,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":15878,"byte_end":15884,"line_start":289,"line_end":289,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":15910,"byte_end":15916,"line_start":291,"line_end":291,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":16014,"byte_end":16020,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":18812,"byte_end":18820,"line_start":393,"line_end":393,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":19906,"byte_end":19914,"line_start":421,"line_end":421,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":248},{"krate":0,"index":253},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42425,"byte_end":42433,"line_start":1034,"line_end":1034,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42522,"byte_end":42530,"line_start":1040,"line_end":1040,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42582,"byte_end":42595,"line_start":1047,"line_end":1047,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42981,"byte_end":42994,"line_start":1061,"line_end":1061,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":63633,"byte_end":63641,"line_start":1605,"line_end":1605,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":66279,"byte_end":66287,"line_start":1674,"line_end":1674,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":67185,"byte_end":67193,"line_start":1699,"line_end":1699,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":70741,"byte_end":70749,"line_start":1788,"line_end":1788,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":71274,"byte_end":71282,"line_start":1808,"line_end":1808,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":71587,"byte_end":71595,"line_start":1820,"line_end":1820,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":72446,"byte_end":72458,"line_start":1851,"line_end":1851,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75281,"byte_end":75293,"line_start":1920,"line_end":1920,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75324,"byte_end":75336,"line_start":1921,"line_end":1921,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75362,"byte_end":75374,"line_start":1923,"line_end":1923,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75664,"byte_end":75676,"line_start":1935,"line_end":1935,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":77108,"byte_end":77120,"line_start":1973,"line_end":1973,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":78015,"byte_end":78022,"line_start":1992,"line_end":1992,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":84149,"byte_end":84156,"line_start":2118,"line_end":2118,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":84364,"byte_end":84371,"line_start":2128,"line_end":2128,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85021,"byte_end":85028,"line_start":2151,"line_end":2151,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85061,"byte_end":85068,"line_start":2152,"line_end":2152,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85337,"byte_end":85348,"line_start":2162,"line_end":2162,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85526,"byte_end":85537,"line_start":2169,"line_end":2169,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85626,"byte_end":85637,"line_start":2175,"line_end":2175,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":86208,"byte_end":86219,"line_start":2198,"line_end":2198,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":86619,"byte_end":86630,"line_start":2213,"line_end":2213,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":86960,"byte_end":86971,"line_start":2227,"line_end":2227,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87029,"byte_end":87040,"line_start":2228,"line_end":2228,"column_start":49,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87645,"byte_end":87653,"line_start":2245,"line_end":2245,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87834,"byte_end":87842,"line_start":2252,"line_end":2252,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87934,"byte_end":87942,"line_start":2258,"line_end":2258,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":88029,"byte_end":88037,"line_start":2265,"line_end":2265,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":88642,"byte_end":88650,"line_start":2284,"line_end":2284,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":89033,"byte_end":89041,"line_start":2301,"line_end":2301,"column_start":53,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":89103,"byte_end":89111,"line_start":2302,"line_end":2302,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":89907,"byte_end":89918,"line_start":2329,"line_end":2329,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":90234,"byte_end":90250,"line_start":2339,"line_end":2339,"column_start":32,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":90866,"byte_end":90877,"line_start":2360,"line_end":2360,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":91195,"byte_end":91211,"line_start":2373,"line_end":2373,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106535,"byte_end":106542,"line_start":193,"line_end":193,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109229,"byte_end":109236,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110329,"byte_end":110336,"line_start":327,"line_end":327,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111206,"byte_end":111213,"line_start":347,"line_end":347,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113721,"byte_end":113728,"line_start":416,"line_end":416,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126017,"byte_end":126024,"line_start":849,"line_end":849,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":670},{"krate":0,"index":677},{"krate":0,"index":684},{"krate":0,"index":691},{"krate":0,"index":697},{"krate":0,"index":703},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151739,"byte_end":151746,"line_start":1643,"line_end":1643,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154691,"byte_end":154698,"line_start":1701,"line_end":1701,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155051,"byte_end":155058,"line_start":1718,"line_end":1718,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155184,"byte_end":155191,"line_start":1727,"line_end":1727,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155419,"byte_end":155426,"line_start":1738,"line_end":1738,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155798,"byte_end":155805,"line_start":1750,"line_end":1750,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156410,"byte_end":156417,"line_start":1772,"line_end":1772,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157246,"byte_end":157250,"line_start":1804,"line_end":1804,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157488,"byte_end":157492,"line_start":1814,"line_end":1814,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158270,"byte_end":158277,"line_start":1836,"line_end":1836,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158303,"byte_end":158310,"line_start":1838,"line_end":1838,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159030,"byte_end":159038,"line_start":1860,"line_end":1860,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159722,"byte_end":159730,"line_start":1882,"line_end":1882,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160023,"byte_end":160031,"line_start":1895,"line_end":1895,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160171,"byte_end":160179,"line_start":1902,"line_end":1902,"column_start":52,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160255,"byte_end":160263,"line_start":1904,"line_end":1904,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160859,"byte_end":160869,"line_start":1923,"line_end":1923,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161162,"byte_end":161172,"line_start":1936,"line_end":1936,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161312,"byte_end":161322,"line_start":1943,"line_end":1943,"column_start":52,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161398,"byte_end":161408,"line_start":1945,"line_end":1945,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161968,"byte_end":161972,"line_start":1965,"line_end":1965,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162170,"byte_end":162174,"line_start":1974,"line_end":1974,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162698,"byte_end":162704,"line_start":1992,"line_end":1992,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162904,"byte_end":162910,"line_start":2001,"line_end":2001,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163436,"byte_end":163441,"line_start":2018,"line_end":2018,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164232,"byte_end":164243,"line_start":2044,"line_end":2044,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164666,"byte_end":164682,"line_start":2061,"line_end":2061,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164836,"byte_end":164847,"line_start":2068,"line_end":2068,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":165247,"byte_end":165258,"line_start":2086,"line_end":2086,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":165552,"byte_end":165568,"line_start":2094,"line_end":2094,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167764,"byte_end":167783,"line_start":2160,"line_end":2160,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167915,"byte_end":167934,"line_start":2168,"line_end":2168,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168683,"byte_end":168701,"line_start":2195,"line_end":2195,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169515,"byte_end":169533,"line_start":2221,"line_end":2221,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":170574,"byte_end":170589,"line_start":2251,"line_end":2251,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172026,"byte_end":172037,"line_start":2298,"line_end":2298,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177910,"byte_end":177929,"line_start":2492,"line_end":2492,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181979,"byte_end":181996,"line_start":2610,"line_end":2610,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184042,"byte_end":184060,"line_start":2678,"line_end":2678,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184262,"byte_end":184273,"line_start":2684,"line_end":2684,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184632,"byte_end":184651,"line_start":2693,"line_end":2693,"column_start":61,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184934,"byte_end":184951,"line_start":2702,"line_end":2702,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185141,"byte_end":185156,"line_start":2708,"line_end":2708,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185820,"byte_end":185825,"line_start":2731,"line_end":2731,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186437,"byte_end":186450,"line_start":2751,"line_end":2751,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186582,"byte_end":186595,"line_start":2759,"line_end":2759,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186755,"byte_end":186768,"line_start":2768,"line_end":2768,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187311,"byte_end":187322,"line_start":2787,"line_end":2787,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188076,"byte_end":188084,"line_start":2811,"line_end":2811,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188479,"byte_end":188487,"line_start":2826,"line_end":2826,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188754,"byte_end":188762,"line_start":2838,"line_end":2838,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189330,"byte_end":189346,"line_start":2858,"line_end":2858,"column_start":45,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189518,"byte_end":189534,"line_start":2867,"line_end":2867,"column_start":45,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189750,"byte_end":189766,"line_start":2878,"line_end":2878,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190392,"byte_end":190406,"line_start":2899,"line_end":2899,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":191073,"byte_end":191086,"line_start":2916,"line_end":2916,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":191453,"byte_end":191466,"line_start":2927,"line_end":2927,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":192377,"byte_end":192384,"line_start":2960,"line_end":2960,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193172,"byte_end":193176,"line_start":2989,"line_end":2989,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193747,"byte_end":193751,"line_start":3008,"line_end":3008,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193905,"byte_end":193909,"line_start":3015,"line_end":3015,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193952,"byte_end":193959,"line_start":3017,"line_end":3017,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194542,"byte_end":194549,"line_start":3036,"line_end":3036,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194702,"byte_end":194709,"line_start":3042,"line_end":3042,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194750,"byte_end":194757,"line_start":3044,"line_end":3044,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194985,"byte_end":194993,"line_start":3054,"line_end":3054,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195349,"byte_end":195357,"line_start":3066,"line_end":3066,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195531,"byte_end":195539,"line_start":3072,"line_end":3072,"column_start":52,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195615,"byte_end":195623,"line_start":3074,"line_end":3074,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195788,"byte_end":195792,"line_start":3080,"line_end":3080,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196264,"byte_end":196268,"line_start":3096,"line_end":3096,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196421,"byte_end":196425,"line_start":3102,"line_end":3102,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196468,"byte_end":196474,"line_start":3104,"line_end":3104,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196946,"byte_end":196952,"line_start":3120,"line_end":3120,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197105,"byte_end":197111,"line_start":3126,"line_end":3126,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197154,"byte_end":197163,"line_start":3128,"line_end":3128,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197643,"byte_end":197652,"line_start":3144,"line_end":3144,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197805,"byte_end":197814,"line_start":3150,"line_end":3150,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197855,"byte_end":197864,"line_start":3152,"line_end":3152,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198102,"byte_end":198107,"line_start":3162,"line_end":3162,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198467,"byte_end":198472,"line_start":3174,"line_end":3174,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198650,"byte_end":198655,"line_start":3180,"line_end":3180,"column_start":52,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198702,"byte_end":198707,"line_start":3182,"line_end":3182,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198958,"byte_end":198963,"line_start":3193,"line_end":3193,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205849,"byte_end":205854,"line_start":3427,"line_end":3427,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206636,"byte_end":206649,"line_start":3454,"line_end":3454,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216173,"byte_end":216184,"line_start":3768,"line_end":3768,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218477,"byte_end":218485,"line_start":3855,"line_end":3855,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225676,"byte_end":225684,"line_start":4093,"line_end":4093,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226508,"byte_end":226524,"line_start":4120,"line_end":4120,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236383,"byte_end":236397,"line_start":4442,"line_end":4442,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":238968,"byte_end":238975,"line_start":4538,"line_end":4538,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":239619,"byte_end":239626,"line_start":4558,"line_end":4558,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":241105,"byte_end":241112,"line_start":4604,"line_end":4604,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/scopeguard.rs","byte_start":292652,"byte_end":292662,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/scopeguard.rs","byte_start":292815,"byte_end":292825,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/scopeguard.rs","byte_start":292969,"byte_end":292979,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297263,"byte_end":297270,"line_start":119,"line_end":119,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297513,"byte_end":297520,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298667,"byte_end":298674,"line_start":172,"line_end":172,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299832,"byte_end":299839,"line_start":211,"line_end":211,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304389,"byte_end":304396,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306848,"byte_end":306855,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309637,"byte_end":309644,"line_start":538,"line_end":538,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328263,"byte_end":328270,"line_start":1106,"line_end":1106,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328550,"byte_end":328557,"line_start":1121,"line_end":1121,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328671,"byte_end":328678,"line_start":1129,"line_end":1129,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328910,"byte_end":328917,"line_start":1139,"line_end":1139,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":329074,"byte_end":329081,"line_start":1148,"line_end":1148,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":329568,"byte_end":329575,"line_start":1164,"line_end":1164,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":329993,"byte_end":330000,"line_start":1183,"line_end":1183,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":330598,"byte_end":330605,"line_start":1207,"line_end":1207,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":331202,"byte_end":331209,"line_start":1231,"line_end":1231,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":338432,"byte_end":338439,"line_start":1483,"line_end":1483,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339323,"byte_end":339327,"line_start":1515,"line_end":1515,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339511,"byte_end":339515,"line_start":1523,"line_end":1523,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339844,"byte_end":339848,"line_start":1535,"line_end":1535,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339994,"byte_end":339998,"line_start":1541,"line_end":1541,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340045,"byte_end":340049,"line_start":1543,"line_end":1543,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340228,"byte_end":340236,"line_start":1549,"line_end":1549,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340713,"byte_end":340721,"line_start":1565,"line_end":1565,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340888,"byte_end":340896,"line_start":1571,"line_end":1571,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340964,"byte_end":340972,"line_start":1573,"line_end":1573,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341211,"byte_end":341216,"line_start":1580,"line_end":1580,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341697,"byte_end":341702,"line_start":1596,"line_end":1596,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341873,"byte_end":341878,"line_start":1602,"line_end":1602,"column_start":49,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341950,"byte_end":341955,"line_start":1604,"line_end":1604,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":342201,"byte_end":342212,"line_start":1611,"line_end":1611,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":342548,"byte_end":342559,"line_start":1625,"line_end":1625,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343001,"byte_end":343012,"line_start":1644,"line_end":1644,"column_start":52,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343105,"byte_end":343117,"line_start":1649,"line_end":1649,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343342,"byte_end":343354,"line_start":1659,"line_end":1659,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343924,"byte_end":343936,"line_start":1684,"line_end":1684,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":344193,"byte_end":344205,"line_start":1695,"line_end":1695,"column_start":33,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":344337,"byte_end":344347,"line_start":1703,"line_end":1703,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":344570,"byte_end":344580,"line_start":1713,"line_end":1713,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345154,"byte_end":345164,"line_start":1738,"line_end":1738,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345282,"byte_end":345292,"line_start":1746,"line_end":1746,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345560,"byte_end":345579,"line_start":1757,"line_end":1757,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345791,"byte_end":345810,"line_start":1766,"line_end":1766,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346214,"byte_end":346233,"line_start":1784,"line_end":1784,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346351,"byte_end":346370,"line_start":1792,"line_end":1792,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346638,"byte_end":346643,"line_start":1803,"line_end":1803,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346842,"byte_end":346847,"line_start":1812,"line_end":1812,"column_start":33,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346965,"byte_end":346970,"line_start":1820,"line_end":1820,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":347226,"byte_end":347231,"line_start":1831,"line_end":1831,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/sse2.rs","byte_start":10920854,"byte_end":10920859,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94582,"byte_end":94588,"line_start":44,"line_end":44,"column_start":31,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2172},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/alloc.rs","byte_start":94922,"byte_end":94928,"line_start":54,"line_end":54,"column_start":22,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2172},"to":{"krate":1,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/bitmask.rs","byte_start":96304,"byte_end":96311,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/bitmask.rs","byte_start":98925,"byte_end":98932,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2177},"to":{"krate":1,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/bitmask.rs","byte_start":99219,"byte_end":99230,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":8756,"byte_end":8767,"line_start":90,"line_end":90,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":11461,"byte_end":11469,"line_start":169,"line_end":169,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":13962,"byte_end":13973,"line_start":237,"line_end":237,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":15878,"byte_end":15884,"line_start":289,"line_end":289,"column_start":25,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":159},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":15910,"byte_end":15916,"line_start":291,"line_end":291,"column_start":19,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":159},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":16014,"byte_end":16020,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":18812,"byte_end":18820,"line_start":393,"line_end":393,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":19906,"byte_end":19914,"line_start":421,"line_end":421,"column_start":31,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42425,"byte_end":42433,"line_start":1034,"line_end":1034,"column_start":47,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42522,"byte_end":42530,"line_start":1040,"line_end":1040,"column_start":47,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42582,"byte_end":42595,"line_start":1047,"line_end":1047,"column_start":9,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":42981,"byte_end":42994,"line_start":1061,"line_end":1061,"column_start":28,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":63633,"byte_end":63641,"line_start":1605,"line_end":1605,"column_start":48,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":66279,"byte_end":66287,"line_start":1674,"line_end":1674,"column_start":56,"column_end":64},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":180},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":67185,"byte_end":67193,"line_start":1699,"line_end":1699,"column_start":38,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":70741,"byte_end":70749,"line_start":1788,"line_end":1788,"column_start":53,"column_end":61},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":71274,"byte_end":71282,"line_start":1808,"line_end":1808,"column_start":40,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":71587,"byte_end":71595,"line_start":1820,"line_end":1820,"column_start":48,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":72446,"byte_end":72458,"line_start":1851,"line_end":1851,"column_start":9,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75281,"byte_end":75293,"line_start":1920,"line_end":1920,"column_start":25,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75324,"byte_end":75336,"line_start":1921,"line_end":1921,"column_start":25,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75362,"byte_end":75374,"line_start":1923,"line_end":1923,"column_start":19,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":75664,"byte_end":75676,"line_start":1935,"line_end":1935,"column_start":22,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":77108,"byte_end":77120,"line_start":1973,"line_end":1973,"column_start":27,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":78015,"byte_end":78022,"line_start":1992,"line_end":1992,"column_start":9,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":84149,"byte_end":84156,"line_start":2118,"line_end":2118,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":84364,"byte_end":84371,"line_start":2128,"line_end":2128,"column_start":22,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85021,"byte_end":85028,"line_start":2151,"line_end":2151,"column_start":31,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85061,"byte_end":85068,"line_start":2152,"line_end":2152,"column_start":27,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85337,"byte_end":85348,"line_start":2162,"line_end":2162,"column_start":31,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85526,"byte_end":85537,"line_start":2169,"line_end":2169,"column_start":47,"column_end":58},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":85626,"byte_end":85637,"line_start":2175,"line_end":2175,"column_start":47,"column_end":58},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":86208,"byte_end":86219,"line_start":2198,"line_end":2198,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":86619,"byte_end":86630,"line_start":2213,"line_end":2213,"column_start":44,"column_end":55},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":86960,"byte_end":86971,"line_start":2227,"line_end":2227,"column_start":53,"column_end":64},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87029,"byte_end":87040,"line_start":2228,"line_end":2228,"column_start":49,"column_end":60},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":388},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87645,"byte_end":87653,"line_start":2245,"line_end":2245,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87834,"byte_end":87842,"line_start":2252,"line_end":2252,"column_start":46,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":421},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":87934,"byte_end":87942,"line_start":2258,"line_end":2258,"column_start":46,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":421},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":88029,"byte_end":88037,"line_start":2265,"line_end":2265,"column_start":40,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":421},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":88642,"byte_end":88650,"line_start":2284,"line_end":2284,"column_start":44,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":421},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":89033,"byte_end":89041,"line_start":2301,"line_end":2301,"column_start":53,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":421},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":89103,"byte_end":89111,"line_start":2302,"line_end":2302,"column_start":49,"column_end":57},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":421},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":89907,"byte_end":89918,"line_start":2329,"line_end":2329,"column_start":35,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":90234,"byte_end":90250,"line_start":2339,"line_end":2339,"column_start":32,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":90866,"byte_end":90877,"line_start":2360,"line_end":2360,"column_start":48,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":455},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/raw/mod.rs","byte_start":91195,"byte_end":91211,"line_start":2373,"line_end":2373,"column_start":45,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":106535,"byte_end":106542,"line_start":193,"line_end":193,"column_start":68,"column_end":75},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":109229,"byte_end":109236,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":110329,"byte_end":110336,"line_start":327,"line_end":327,"column_start":34,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":111206,"byte_end":111213,"line_start":347,"line_end":347,"column_start":15,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":113721,"byte_end":113728,"line_start":416,"line_end":416,"column_start":37,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":126017,"byte_end":126024,"line_start":849,"line_end":849,"column_start":18,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":151739,"byte_end":151746,"line_start":1643,"line_end":1643,"column_start":37,"column_end":44},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":154691,"byte_end":154698,"line_start":1701,"line_end":1701,"column_start":32,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155051,"byte_end":155058,"line_start":1718,"line_end":1718,"column_start":25,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155184,"byte_end":155191,"line_start":1727,"line_end":1727,"column_start":28,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155419,"byte_end":155426,"line_start":1738,"line_end":1738,"column_start":30,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":155798,"byte_end":155805,"line_start":1750,"line_end":1750,"column_start":43,"column_end":50},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":156410,"byte_end":156417,"line_start":1772,"line_end":1772,"column_start":53,"column_end":60},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157246,"byte_end":157250,"line_start":1804,"line_end":1804,"column_start":22,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":764},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":157488,"byte_end":157492,"line_start":1814,"line_end":1814,"column_start":41,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":764},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158270,"byte_end":158277,"line_start":1836,"line_end":1836,"column_start":40,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":158303,"byte_end":158310,"line_start":1838,"line_end":1838,"column_start":12,"column_end":19},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159030,"byte_end":159038,"line_start":1860,"line_end":1860,"column_start":34,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":159722,"byte_end":159730,"line_start":1882,"line_end":1882,"column_start":47,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160023,"byte_end":160031,"line_start":1895,"line_end":1895,"column_start":56,"column_end":64},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160171,"byte_end":160179,"line_start":1902,"line_end":1902,"column_start":52,"column_end":60},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160255,"byte_end":160263,"line_start":1904,"line_end":1904,"column_start":63,"column_end":71},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":160859,"byte_end":160869,"line_start":1923,"line_end":1923,"column_start":47,"column_end":57},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161162,"byte_end":161172,"line_start":1936,"line_end":1936,"column_start":56,"column_end":66},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161312,"byte_end":161322,"line_start":1943,"line_end":1943,"column_start":52,"column_end":62},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161398,"byte_end":161408,"line_start":1945,"line_end":1945,"column_start":63,"column_end":73},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":829},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":161968,"byte_end":161972,"line_start":1965,"line_end":1965,"column_start":22,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":857},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162170,"byte_end":162174,"line_start":1974,"line_end":1974,"column_start":34,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":857},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162698,"byte_end":162704,"line_start":1992,"line_end":1992,"column_start":22,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":162904,"byte_end":162910,"line_start":2001,"line_end":2001,"column_start":34,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":163436,"byte_end":163441,"line_start":2018,"line_end":2018,"column_start":34,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164232,"byte_end":164243,"line_start":2044,"line_end":2044,"column_start":31,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":894},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164666,"byte_end":164682,"line_start":2061,"line_end":2061,"column_start":28,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":909},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":164836,"byte_end":164847,"line_start":2068,"line_end":2068,"column_start":31,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":894},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":165247,"byte_end":165258,"line_start":2086,"line_end":2086,"column_start":33,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":894},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":165552,"byte_end":165568,"line_start":2094,"line_end":2094,"column_start":34,"column_end":50},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167764,"byte_end":167783,"line_start":2160,"line_end":2160,"column_start":34,"column_end":53},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":167915,"byte_end":167934,"line_start":2168,"line_end":2168,"column_start":34,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":168683,"byte_end":168701,"line_start":2195,"line_end":2195,"column_start":41,"column_end":59},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":169515,"byte_end":169533,"line_start":2221,"line_end":2221,"column_start":41,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":170574,"byte_end":170589,"line_start":2251,"line_end":2251,"column_start":41,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":172026,"byte_end":172037,"line_start":2298,"line_end":2298,"column_start":41,"column_end":52},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":177910,"byte_end":177929,"line_start":2492,"line_end":2492,"column_start":41,"column_end":60},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":181979,"byte_end":181996,"line_start":2610,"line_end":2610,"column_start":41,"column_end":58},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184042,"byte_end":184060,"line_start":2678,"line_end":2678,"column_start":47,"column_end":65},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184262,"byte_end":184273,"line_start":2684,"line_end":2684,"column_start":61,"column_end":72},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":954},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184632,"byte_end":184651,"line_start":2693,"line_end":2693,"column_start":61,"column_end":80},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":184934,"byte_end":184951,"line_start":2702,"line_end":2702,"column_start":47,"column_end":64},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":985},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185141,"byte_end":185156,"line_start":2708,"line_end":2708,"column_start":47,"column_end":62},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":993},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":185820,"byte_end":185825,"line_start":2731,"line_end":2731,"column_start":61,"column_end":66},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1117},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186437,"byte_end":186450,"line_start":2751,"line_end":2751,"column_start":34,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1135},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186582,"byte_end":186595,"line_start":2759,"line_end":2759,"column_start":34,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1135},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":186755,"byte_end":186768,"line_start":2768,"line_end":2768,"column_start":61,"column_end":74},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1135},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":187311,"byte_end":187322,"line_start":2787,"line_end":2787,"column_start":54,"column_end":65},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188076,"byte_end":188084,"line_start":2811,"line_end":2811,"column_start":9,"column_end":17},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188479,"byte_end":188487,"line_start":2826,"line_end":2826,"column_start":24,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":188754,"byte_end":188762,"line_start":2838,"line_end":2838,"column_start":48,"column_end":56},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1197},"to":{"krate":1,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189330,"byte_end":189346,"line_start":2858,"line_end":2858,"column_start":45,"column_end":61},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1217},"to":{"krate":1,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189518,"byte_end":189534,"line_start":2867,"line_end":2867,"column_start":45,"column_end":61},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1217},"to":{"krate":1,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":189750,"byte_end":189766,"line_start":2878,"line_end":2878,"column_start":9,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1217},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":190392,"byte_end":190406,"line_start":2899,"line_end":2899,"column_start":9,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1252},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":191073,"byte_end":191086,"line_start":2916,"line_end":2916,"column_start":61,"column_end":74},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1270},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":191453,"byte_end":191466,"line_start":2927,"line_end":2927,"column_start":9,"column_end":22},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1270},"to":{"krate":1,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":192377,"byte_end":192384,"line_start":2960,"line_end":2960,"column_start":54,"column_end":61},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193172,"byte_end":193176,"line_start":2989,"line_end":2989,"column_start":29,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":764},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193747,"byte_end":193751,"line_start":3008,"line_end":3008,"column_start":34,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":764},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193905,"byte_end":193909,"line_start":3015,"line_end":3015,"column_start":30,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":764},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":193952,"byte_end":193959,"line_start":3017,"line_end":3017,"column_start":29,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194542,"byte_end":194549,"line_start":3036,"line_end":3036,"column_start":34,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194702,"byte_end":194709,"line_start":3042,"line_end":3042,"column_start":30,"column_end":37},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194750,"byte_end":194757,"line_start":3044,"line_end":3044,"column_start":27,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":194985,"byte_end":194993,"line_start":3054,"line_end":3054,"column_start":47,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195349,"byte_end":195357,"line_start":3066,"line_end":3066,"column_start":56,"column_end":64},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195531,"byte_end":195539,"line_start":3072,"line_end":3072,"column_start":52,"column_end":60},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195615,"byte_end":195623,"line_start":3074,"line_end":3074,"column_start":63,"column_end":71},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":195788,"byte_end":195792,"line_start":3080,"line_end":3080,"column_start":29,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":857},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196264,"byte_end":196268,"line_start":3096,"line_end":3096,"column_start":34,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":857},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196421,"byte_end":196425,"line_start":3102,"line_end":3102,"column_start":30,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":857},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196468,"byte_end":196474,"line_start":3104,"line_end":3104,"column_start":29,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":196946,"byte_end":196952,"line_start":3120,"line_end":3120,"column_start":34,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197105,"byte_end":197111,"line_start":3126,"line_end":3126,"column_start":30,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":870},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197154,"byte_end":197163,"line_start":3128,"line_end":3128,"column_start":29,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":942},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197643,"byte_end":197652,"line_start":3144,"line_end":3144,"column_start":34,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":942},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197805,"byte_end":197814,"line_start":3150,"line_end":3150,"column_start":30,"column_end":39},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":942},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":197855,"byte_end":197864,"line_start":3152,"line_end":3152,"column_start":27,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":942},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198102,"byte_end":198107,"line_start":3162,"line_end":3162,"column_start":51,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":883},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198467,"byte_end":198472,"line_start":3174,"line_end":3174,"column_start":56,"column_end":61},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":883},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198650,"byte_end":198655,"line_start":3180,"line_end":3180,"column_start":52,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":883},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198702,"byte_end":198707,"line_start":3182,"line_end":3182,"column_start":30,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":883},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":198958,"byte_end":198963,"line_start":3193,"line_end":3193,"column_start":41,"column_end":46},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":205849,"byte_end":205854,"line_start":3427,"line_end":3427,"column_start":50,"column_end":55},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":206636,"byte_end":206649,"line_start":3454,"line_end":3454,"column_start":41,"column_end":54},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":216173,"byte_end":216184,"line_start":3768,"line_end":3768,"column_start":41,"column_end":52},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":218477,"byte_end":218485,"line_start":3855,"line_end":3855,"column_start":56,"column_end":64},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":225676,"byte_end":225684,"line_start":4093,"line_end":4093,"column_start":65,"column_end":73},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":226508,"byte_end":226524,"line_start":4120,"line_end":4120,"column_start":56,"column_end":72},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":236383,"byte_end":236397,"line_start":4442,"line_end":4442,"column_start":56,"column_end":70},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":238968,"byte_end":238975,"line_start":4538,"line_end":4538,"column_start":43,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7627}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":239619,"byte_end":239626,"line_start":4558,"line_end":4558,"column_start":37,"column_end":44},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7640}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/map.rs","byte_start":241105,"byte_end":241112,"line_start":4604,"line_end":4604,"column_start":49,"column_end":56},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7640}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/scopeguard.rs","byte_start":292652,"byte_end":292662,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/scopeguard.rs","byte_start":292815,"byte_end":292825,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/scopeguard.rs","byte_start":292969,"byte_end":292979,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297263,"byte_end":297270,"line_start":119,"line_end":119,"column_start":58,"column_end":65},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":297513,"byte_end":297520,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":298667,"byte_end":298674,"line_start":172,"line_end":172,"column_start":42,"column_end":49},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":299832,"byte_end":299839,"line_start":211,"line_end":211,"column_start":34,"column_end":41},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":304389,"byte_end":304396,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":306848,"byte_end":306855,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":309637,"byte_end":309644,"line_start":538,"line_end":538,"column_start":15,"column_end":22},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328263,"byte_end":328270,"line_start":1106,"line_end":1106,"column_start":29,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328550,"byte_end":328557,"line_start":1121,"line_end":1121,"column_start":22,"column_end":29},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328671,"byte_end":328678,"line_start":1129,"line_end":1129,"column_start":30,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":328910,"byte_end":328917,"line_start":1139,"line_end":1139,"column_start":46,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":329074,"byte_end":329081,"line_start":1148,"line_end":1148,"column_start":35,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":7627}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":329568,"byte_end":329575,"line_start":1164,"line_end":1164,"column_start":45,"column_end":52},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":329993,"byte_end":330000,"line_start":1183,"line_end":1183,"column_start":29,"column_end":36},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":7640}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":330598,"byte_end":330605,"line_start":1207,"line_end":1207,"column_start":37,"column_end":44},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":7640}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":331202,"byte_end":331209,"line_start":1231,"line_end":1231,"column_start":27,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":338432,"byte_end":338439,"line_start":1483,"line_end":1483,"column_start":51,"column_end":58},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1707},"to":{"krate":1,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339323,"byte_end":339327,"line_start":1515,"line_end":1515,"column_start":19,"column_end":23},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1869},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339511,"byte_end":339515,"line_start":1523,"line_end":1523,"column_start":26,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1869},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339844,"byte_end":339848,"line_start":1535,"line_end":1535,"column_start":35,"column_end":39},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1869},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":339994,"byte_end":339998,"line_start":1541,"line_end":1541,"column_start":27,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1869},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340045,"byte_end":340049,"line_start":1543,"line_end":1543,"column_start":36,"column_end":40},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1869},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340228,"byte_end":340236,"line_start":1549,"line_end":1549,"column_start":44,"column_end":52},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1873},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340713,"byte_end":340721,"line_start":1565,"line_end":1565,"column_start":53,"column_end":61},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1873},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340888,"byte_end":340896,"line_start":1571,"line_end":1571,"column_start":49,"column_end":57},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1873},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":340964,"byte_end":340972,"line_start":1573,"line_end":1573,"column_start":58,"column_end":66},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1873},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341211,"byte_end":341216,"line_start":1580,"line_end":1580,"column_start":44,"column_end":49},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1877},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341697,"byte_end":341702,"line_start":1596,"line_end":1596,"column_start":53,"column_end":58},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1877},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341873,"byte_end":341878,"line_start":1602,"line_end":1602,"column_start":49,"column_end":54},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1877},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":341950,"byte_end":341955,"line_start":1604,"line_end":1604,"column_start":58,"column_end":63},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1877},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":342201,"byte_end":342212,"line_start":1611,"line_end":1611,"column_start":47,"column_end":58},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1882},"to":{"krate":1,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":342548,"byte_end":342559,"line_start":1625,"line_end":1625,"column_start":47,"column_end":58},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1882},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343001,"byte_end":343012,"line_start":1644,"line_end":1644,"column_start":52,"column_end":63},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1882},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343105,"byte_end":343117,"line_start":1649,"line_end":1649,"column_start":44,"column_end":56},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1889},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343342,"byte_end":343354,"line_start":1659,"line_end":1659,"column_start":32,"column_end":44},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1889},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":343924,"byte_end":343936,"line_start":1684,"line_end":1684,"column_start":30,"column_end":42},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1889},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":344193,"byte_end":344205,"line_start":1695,"line_end":1695,"column_start":33,"column_end":45},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1889},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":344337,"byte_end":344347,"line_start":1703,"line_end":1703,"column_start":44,"column_end":54},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":344570,"byte_end":344580,"line_start":1713,"line_end":1713,"column_start":32,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345154,"byte_end":345164,"line_start":1738,"line_end":1738,"column_start":33,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345282,"byte_end":345292,"line_start":1746,"line_end":1746,"column_start":30,"column_end":40},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345560,"byte_end":345579,"line_start":1757,"line_end":1757,"column_start":44,"column_end":63},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1903},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":345791,"byte_end":345810,"line_start":1766,"line_end":1766,"column_start":32,"column_end":51},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1903},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346214,"byte_end":346233,"line_start":1784,"line_end":1784,"column_start":33,"column_end":52},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1903},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346351,"byte_end":346370,"line_start":1792,"line_end":1792,"column_start":30,"column_end":49},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1903},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346638,"byte_end":346643,"line_start":1803,"line_end":1803,"column_start":44,"column_end":49},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1909},"to":{"krate":1,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346842,"byte_end":346847,"line_start":1812,"line_end":1812,"column_start":33,"column_end":38},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1909},"to":{"krate":1,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":346965,"byte_end":346970,"line_start":1820,"line_end":1820,"column_start":30,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1909},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.0/src/set.rs","byte_start":347226,"byte_end":347231,"line_start":1831,"line_end":1831,"column_start":32,"column_end":37},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1909},"to":{"krate":1,"index":7820}}]}