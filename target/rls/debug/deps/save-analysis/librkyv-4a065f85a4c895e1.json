{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rkyv","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bytecheck\"","--cfg","feature=\"default\"","--cfg","feature=\"hashbrown\"","--cfg","feature=\"rend\"","--cfg","feature=\"size_32\"","--cfg","feature=\"std\"","-C","metadata=4a065f85a4c895e1","-C","extra-filename=-4a065f85a4c895e1","--out-dir","/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","--extern","bytecheck=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libbytecheck-28554eed9357be48.rmeta","--extern","hashbrown=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libhashbrown-72cdb9ec2f7bb184.rmeta","--extern","ptr_meta=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libptr_meta-54e29cfff5dc4c84.rmeta","--extern","rend=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/librend-30056c032c4dfa3c.rmeta","--extern","rkyv_derive=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/librkyv_derive-e412973c75f257a3.so","--extern","seahash=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libseahash-8f3df5afb13535f7.rmeta","--cap-lints","allow","--cfg","has_atomics_64","--cfg","has_atomics","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/librkyv-4a065f85a4c895e1.rmeta"},"prelude":{"crate_id":{"name":"rkyv","disambiguator":[739988600376457258,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","num":20,"id":{"name":"ptr_meta","disambiguator":[4119994185425868634,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","num":21,"id":{"name":"ptr_meta_derive","disambiguator":[8940973172399185450,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","num":22,"id":{"name":"seahash","disambiguator":[2210998738040360748,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","num":23,"id":{"name":"hashbrown","disambiguator":[8074797147926892348,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","num":24,"id":{"name":"ahash","disambiguator":[10278159724966603971,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","num":25,"id":{"name":"once_cell","disambiguator":[4545148886036118984,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","num":26,"id":{"name":"getrandom","disambiguator":[4404432128622822102,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","num":27,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","num":28,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":29,"id":{"name":"rend","disambiguator":[6716709505362425074,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","num":30,"id":{"name":"rkyv_derive","disambiguator":[252768144151345682,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":0,"byte_end":31485,"line_start":1,"line_end":746,"column_start":1,"column_end":72}},"imports":[{"kind":"Use","ref_id":{"krate":22,"index":92},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":72998,"byte_end":73007,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"alias_span":null,"name":"HashBuilder","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43993,"byte_end":44009,"line_start":13,"line_end":13,"column_start":26,"column_end":42},"alias_span":null,"name":"ArchivedBTreeMap","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":44037,"byte_end":44054,"line_start":14,"line_end":14,"column_start":27,"column_end":44},"alias_span":null,"name":"ArchivedHashIndex","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":44080,"byte_end":44095,"line_start":15,"line_end":15,"column_start":25,"column_end":40},"alias_span":null,"name":"ArchivedHashMap","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":44121,"byte_end":44136,"line_start":16,"line_end":16,"column_start":25,"column_end":40},"alias_span":null,"name":"ArchivedHashSet","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":44237,"byte_end":44253,"line_start":18,"line_end":18,"column_start":26,"column_end":42},"alias_span":null,"name":"ArchivedIndexMap","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":44280,"byte_end":44296,"line_start":19,"line_end":19,"column_start":26,"column_end":42},"alias_span":null,"name":"ArchivedIndexSet","value":"","parent":{"krate":0,"index":124}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/mod.rs","byte_start":119845,"byte_end":119846,"line_start":8,"line_end":8,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"SharedDeserializeMap","parent":{"krate":0,"index":1234}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":300828,"byte_end":300829,"line_start":19,"line_end":19,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"SharedSerializeMap, AllocScratch, AlignedSerializer, HeapScratch","parent":{"krate":0,"index":3819}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":300866,"byte_end":300867,"line_start":21,"line_end":21,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"BufferSerializer, BufferScratch, FallbackScratch","parent":{"krate":0,"index":3819}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":300927,"byte_end":300928,"line_start":24,"line_end":24,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3819}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":351180,"byte_end":351181,"line_start":31,"line_end":31,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"AlignedVec","parent":{"krate":0,"index":4418}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":351225,"byte_end":351226,"line_start":33,"line_end":33,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"ScratchVec","parent":{"krate":0,"index":4418}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396294,"byte_end":396295,"line_start":17,"line_end":17,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"RawArchivedVec","parent":{"krate":0,"index":4758}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413620,"byte_end":413621,"line_start":15,"line_end":15,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":5023}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413666,"byte_end":413667,"line_start":17,"line_end":17,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":5023}},{"kind":"Use","ref_id":{"krate":29,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7883,"byte_end":7887,"line_start":171,"line_end":171,"column_start":9,"column_end":13},"alias_span":null,"name":"rend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7960,"byte_end":7967,"line_start":175,"line_end":175,"column_start":23,"column_end":30},"alias_span":null,"name":"Archive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7969,"byte_end":7980,"line_start":175,"line_end":175,"column_start":32,"column_end":43},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":628},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7982,"byte_end":7991,"line_start":175,"line_end":175,"column_start":45,"column_end":54},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8008,"byte_end":8009,"line_start":176,"line_end":176,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"ScratchVec, AlignedVec, AlignedBytes","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":0,"byte_end":31485,"line_start":1,"line_end":746,"column_start":1,"column_end":72},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":10},{"krate":0,"index":124},{"krate":0,"index":1233},{"krate":0,"index":1301},{"krate":0,"index":1388},{"krate":0,"index":3096},{"krate":0,"index":3121},{"krate":0,"index":3285},{"krate":0,"index":3357},{"krate":0,"index":3454},{"krate":0,"index":3616},{"krate":0,"index":3718},{"krate":0,"index":3818},{"krate":0,"index":4254},{"krate":0,"index":4395},{"krate":0,"index":4418},{"krate":0,"index":4758},{"krate":0,"index":5023},{"krate":0,"index":5900},{"krate":0,"index":5903},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5913},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":8414},{"krate":0,"index":8416},{"krate":0,"index":5922},{"krate":0,"index":5924},{"krate":0,"index":5926},{"krate":0,"index":5930},{"krate":0,"index":5933},{"krate":0,"index":5937},{"krate":0,"index":5942},{"krate":0,"index":5945},{"krate":0,"index":5949},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5960},{"krate":0,"index":5962},{"krate":0,"index":5964},{"krate":0,"index":5966}],"decl_id":null,"docs":" # rkyv","sig":null,"attributes":[{"value":"/ # rkyv","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ rkyv (*archive*) is a zero-copy deserialization framework for Rust.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15,"byte_end":86,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":87,"byte_end":90,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It's similar to other zero-copy deserialization frameworks such as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":91,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ [Cap'n Proto](https://capnproto.org) and [FlatBuffers](https://google.github.io/flatbuffers).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":162,"byte_end":259,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ However, while the former have external schemas and heavily restricted data types, rkyv allows","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":260,"byte_end":358,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ all serialized types to be defined in code and can serialize a wide variety of types that the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":359,"byte_end":456,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ others cannot. Additionally, rkyv is designed to have little to no overhead, and in most cases","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":457,"byte_end":555,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ will perform exactly the same as native types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":556,"byte_end":606,"line_start":10,"line_end":10,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":607,"byte_end":610,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Design","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":611,"byte_end":624,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":625,"byte_end":628,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Like [serde](https://serde.rs), rkyv uses Rust's powerful trait system to serialize data without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":629,"byte_end":729,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ the need for reflection. Despite having a wide array of features, you also only pay for what you","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":730,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":101}},{"value":"/ use. If your data checks out, the serialization process can be as simple as a `memcpy`! Like","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":831,"byte_end":927,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ serde, this allows rkyv to perform at speeds similar to handwritten serializers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":928,"byte_end":1012,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1013,"byte_end":1016,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Unlike serde, rkyv produces data that is guaranteed deserialization free. If you wrote your data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1017,"byte_end":1117,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/ to disk, you can just `mmap` your file into memory, cast a pointer, and your data is ready to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1118,"byte_end":1215,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ use. This makes it ideal for high-performance and IO-bound applications.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1216,"byte_end":1292,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1293,"byte_end":1296,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Limited data mutation is supported through `Pin` APIs, and archived values can be truly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1297,"byte_end":1388,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ deserialized with [`Deserialize`] if full mutation capabilities are needed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1389,"byte_end":1468,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1469,"byte_end":1472,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [The book](https://rkyv.org) has more details on the design and capabilities of rkyv.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1473,"byte_end":1562,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1563,"byte_end":1566,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Type support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1567,"byte_end":1586,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1587,"byte_end":1590,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ rkyv has a hashmap implementation that is built for zero-copy deserialization, so you can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1591,"byte_end":1684,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ serialize your hashmaps with abandon. The implementation performs perfect hashing with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1685,"byte_end":1779,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ compress, hash and displace algorithm to use as little memory as possible while still performing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1780,"byte_end":1880,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ fast lookups.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1881,"byte_end":1898,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1899,"byte_end":1902,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It also comes with a B+ tree implementation that is built for maximum performance by splitting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":1903,"byte_end":2001,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ data into easily-pageable 4KB segments. This makes it perfect for building immutable databases","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2002,"byte_end":2100,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and structures for bulk data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2101,"byte_end":2134,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2135,"byte_end":2138,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ rkyv also has support for contextual serialization, deserialization, and validation. It can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2139,"byte_end":2234,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ properly serialize and deserialize shared pointers like `Rc` and `Arc`, and can be extended to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2235,"byte_end":2333,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ support custom contextual types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2334,"byte_end":2370,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2371,"byte_end":2374,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Finally, rkyv makes it possible to serialize trait objects and use them *as trait objects*","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2375,"byte_end":2469,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ without deserialization. See the `archive_dyn` crate for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2470,"byte_end":2544,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Tradeoffs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2549,"byte_end":2565,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2566,"byte_end":2569,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ While rkyv is a great format for final data, it lacks a full schema system and isn't well","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2570,"byte_end":2663,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ equipped for data migration and schema upgrades. If your use case requires these capabilities,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2664,"byte_end":2762,"line_start":49,"line_end":49,"column_start":1,"column_end":99}},{"value":"/ you may need additional libraries the build these features on top of rkyv. You can use other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2763,"byte_end":2859,"line_start":50,"line_end":50,"column_start":1,"column_end":97}},{"value":"/ serialization frameworks like serde with the same types as rkyv conflict-free.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2860,"byte_end":2942,"line_start":51,"line_end":51,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2943,"byte_end":2946,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2947,"byte_end":2962,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2963,"byte_end":2966,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `alloc`: Enables types that require the `alloc` crate. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":2967,"byte_end":3047,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ - `arbitrary_enum_discriminant`: Enables the `arbitrary_enum_discriminant` feature for stable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3048,"byte_end":3145,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/   multibyte enum discriminants using `archive_le` and `archive_be`. Requires nightly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3146,"byte_end":3235,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"/ - `archive_be`: Forces archives into a big-endian format. This guarantees cross-endian","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3236,"byte_end":3326,"line_start":58,"line_end":58,"column_start":1,"column_end":91}},{"value":"/   compatibility optimized for big-endian architectures.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3327,"byte_end":3386,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/ - `archive_le`: Forces archives into a little-endian format. This guarantees cross-endian","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3387,"byte_end":3480,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/   compatibility optimized for little-endian architectures.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3481,"byte_end":3543,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/ - `copy`: Enables copy optimizations for packed copyable data types. Requires nightly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3544,"byte_end":3634,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"/ - `copy_unsafe`: Automatically opts all potentially copyable types into copy optimization. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3635,"byte_end":3734,"line_start":63,"line_end":63,"column_start":1,"column_end":100}},{"value":"/   broadly improves performance but may cause uninitialized bytes to be copied to the output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3735,"byte_end":3831,"line_start":64,"line_end":64,"column_start":1,"column_end":97}},{"value":"/   Requires nightly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3832,"byte_end":3855,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ - `size_16`: Archives integral `*size` types as 16-bit integers. This is intended to be used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3856,"byte_end":3952,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/   only for small archives and may not handle large, more general data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":3953,"byte_end":4027,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ - `size_32`: Archives integral `*size` types as 32-bit integers. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4028,"byte_end":4116,"line_start":68,"line_end":68,"column_start":1,"column_end":89}},{"value":"/ - `size_64`: Archives integral `*size` types as 64-bit integers. This is intended to be used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4117,"byte_end":4213,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/   only for very large archives and may cause unnecessary data bloat.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4214,"byte_end":4286,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/ - `std`: Enables standard library support. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4287,"byte_end":4353,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/ - `strict`: Guarantees that types will have the same representations across platforms and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4354,"byte_end":4447,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/   compilations. This is already the case in practice, but this feature provides a guarantee","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4448,"byte_end":4543,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/   along with C type compatibility.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4544,"byte_end":4582,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4583,"byte_end":4586,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/   *Note*: Enabling `strict` will disable [`Archive`] implementations for tuples, as tuples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4587,"byte_end":4681,"line_start":76,"line_end":76,"column_start":1,"column_end":95}},{"value":"/   do not have a C type layout. Making a generic `Tuple<T1, T2>` and deriving [`Archive`] for it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4682,"byte_end":4781,"line_start":77,"line_end":77,"column_start":1,"column_end":100}},{"value":"/   should provide similar functionality.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4782,"byte_end":4825,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/ - `validation`: Enables validation support through `bytecheck`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4826,"byte_end":4893,"line_start":79,"line_end":79,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4894,"byte_end":4897,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ## Crate support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4898,"byte_end":4918,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4919,"byte_end":4922,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Some common crates need to be supported by rkyv before an official integration has been made.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":4923,"byte_end":5020,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/ Support is provided by rkyv for these crates, but in the future crates should depend on rkyv and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5021,"byte_end":5121,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"/ provide their own implementations. The crates that already have support provided by rkyv should","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5122,"byte_end":5221,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ work toward integrating the implementations into themselves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5222,"byte_end":5286,"line_start":86,"line_end":86,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5287,"byte_end":5290,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Crates supported by rkyv:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5291,"byte_end":5320,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5321,"byte_end":5324,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - [`indexmap`](https://docs.rs/indexmap)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5325,"byte_end":5369,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"/ - [`rend`](https://docs.rs/rend) *Enabled automatically when using endian-specific archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5370,"byte_end":5464,"line_start":91,"line_end":91,"column_start":1,"column_end":95}},{"value":"/   features.*","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5465,"byte_end":5481,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ - [`tinyvec`](https://docs.rs/tinyvec)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5482,"byte_end":5524,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/ - [`uuid`](https://docs.rs/uuid)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5525,"byte_end":5561,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5562,"byte_end":5565,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Support for each of these crates can be enabled with a feature of the same name. Additionally,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5566,"byte_end":5664,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/ the following external crate features are available:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5665,"byte_end":5721,"line_start":97,"line_end":97,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5722,"byte_end":5725,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ - `tinyvec_alloc`: Supports types behind the `alloc` feature in `tinyvec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5726,"byte_end":5804,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ - `uuid_std`: Enables the `std` feature in `uuid`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5805,"byte_end":5859,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5860,"byte_end":5863,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5864,"byte_end":5879,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5880,"byte_end":5883,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - See [`Archive`] for examples of how to use rkyv through the derive macro and manual","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5884,"byte_end":5973,"line_start":104,"line_end":104,"column_start":1,"column_end":90}},{"value":"/   implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5974,"byte_end":5995,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/ - For more details on the derive macro and its capabilities, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":5996,"byte_end":6064,"line_start":106,"line_end":106,"column_start":1,"column_end":69}},{"value":"/   [`Archive`](macro@Archive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":6065,"byte_end":6098,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ - Fully worked examples using rkyv are available in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":6099,"byte_end":6158,"line_start":108,"line_end":108,"column_start":1,"column_end":60}},{"value":"/   [`examples` directory](https://github.com/rkyv/rkyv/tree/master/examples) of the source repo.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":6159,"byte_end":6258,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"deny(rustdoc :: broken_intra_doc_links, missing_docs, rustdoc ::\n       missing_crate_level_docs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":6260,"byte_end":6364,"line_start":111,"line_end":115,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/macros.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7259,"byte_end":7271,"line_start":141,"line_end":141,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boxed","qualname":"::boxed","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":70},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" An archived version of `Box`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Box`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":36816,"byte_end":36849,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37186,"byte_end":37197,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"ArchivedBox","qualname":"::boxed::ArchivedBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived [`Box`].","sig":null,"attributes":[{"value":"/ An archived [`Box`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37056,"byte_end":37080,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37081,"byte_end":37084,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a thin wrapper around a [`RelPtr`] to the archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37085,"byte_end":37153,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37154,"byte_end":37174,"line_start":12,"line_end":12,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37377,"byte_end":37380,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedBox<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value of this archived box.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value of this archived box.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37293,"byte_end":37351,"line_start":16,"line_end":16,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37356,"byte_end":37365,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37542,"byte_end":37553,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ArchivedBox<T>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the value of this archived box\n","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the value of this archived box","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37444,"byte_end":37516,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37521,"byte_end":37530,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37933,"byte_end":37949,"line_start":35,"line_end":35,"column_start":19,"column_end":35},"name":"resolve_from_ref","qualname":"<ArchivedBox<T>>::resolve_from_ref","value":"pub unsafe fn resolve_from_ref<U: ArchiveUnsized<Archived = T> +\n                               ?Sized>(&U, usize,\n                                       BoxResolver<U::MetadataResolver>,\n                                       *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived box from the given value and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived box from the given value and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37674,"byte_end":37739,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37744,"byte_end":37747,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37752,"byte_end":37764,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37769,"byte_end":37772,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37777,"byte_end":37837,"line_start":32,"line_end":32,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37842,"byte_end":37900,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37905,"byte_end":37914,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38349,"byte_end":38367,"line_start":47,"line_end":47,"column_start":12,"column_end":30},"name":"serialize_from_ref","qualname":"<ArchivedBox<T>>::serialize_from_ref","value":"pub fn serialize_from_ref<U, S>(&U, &mut S)\n-> Result<BoxResolver<U::MetadataResolver>, S::Error> where\nU: SerializeUnsized<S, Archived = T> + ?Sized, S: Fallible + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived box from the given value and serializer.\n","sig":null,"attributes":[{"value":"/ Serializes an archived box from the given value and serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38256,"byte_end":38323,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38328,"byte_end":38337,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38795,"byte_end":38802,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"is_null","qualname":"<ArchivedBox<T>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38774,"byte_end":38783,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39374,"byte_end":39399,"line_start":78,"line_end":78,"column_start":19,"column_end":44},"name":"serialize_copy_from_slice","qualname":"<ArchivedBox<[T]>>::serialize_copy_from_slice","value":"pub unsafe fn serialize_copy_from_slice<U, S>(&[U], &mut S)\n-> Result<BoxResolver<MetadataResolver<[U]>>, S::Error> where U: Serialize<S,\nArchived = T>, S: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Box` from a given slice by directly copying bytes.","sig":null,"attributes":[{"value":"/ Serializes an archived `Box` from a given slice by directly copying bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38885,"byte_end":38963,"line_start":69,"line_end":69,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38968,"byte_end":38971,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38976,"byte_end":38988,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38993,"byte_end":38996,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The type being serialized must be copy-safe. Copy-safe types must be trivially copyable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39001,"byte_end":39092,"line_start":73,"line_end":73,"column_start":5,"column_end":96}},{"value":"/ (have the same archived and unarchived representations) and contain no padding bytes. In","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39097,"byte_end":39189,"line_start":74,"line_end":74,"column_start":5,"column_end":97}},{"value":"/ situations where copying uninitialized bytes the output is acceptable, this function may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39194,"byte_end":39289,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ used with types that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39294,"byte_end":39341,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39346,"byte_end":39355,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40082,"byte_end":40094,"line_start":106,"line_end":106,"column_start":19,"column_end":31},"name":"emplace_null","qualname":"<ArchivedBox<T>>::emplace_null","value":"pub unsafe fn emplace_null(usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40054,"byte_end":40063,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":42248,"byte_end":42259,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"BoxResolver","qualname":"::boxed::BoxResolver","value":"BoxResolver {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":" The resolver for `Box`.\n","sig":null,"attributes":[{"value":"/ The resolver for `Box`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":42209,"byte_end":42236,"line_start":192,"line_end":192,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":435},{"krate":0,"index":492},{"krate":0,"index":569},{"krate":0,"index":838},{"krate":0,"index":903},{"krate":0,"index":1102},{"krate":0,"index":1187},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230}],"decl_id":null,"docs":" Archived versions of standard library containers.\n","sig":null,"attributes":[{"value":"/ Archived versions of standard library containers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43692,"byte_end":43745,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":231},{"krate":0,"index":241},{"krate":0,"index":255},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":285},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":353},{"krate":0,"index":358},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":419},{"krate":0,"index":427},{"krate":0,"index":431}],"decl_id":null,"docs":" [`Archive`](crate::Archive) implementation for B-tree maps.\n","sig":null,"attributes":[{"value":"/ [`Archive`](crate::Archive) implementation for B-tree maps.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":44318,"byte_end":44381,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49103,"byte_end":49119,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"ArchivedBTreeMap","qualname":"::collections::btree_map::ArchivedBTreeMap","value":"ArchivedBTreeMap {  }","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" An archived [`BTreeMap`](std::collections::BTreeMap).\n","sig":null,"attributes":[{"value":"/ An archived [`BTreeMap`](std::collections::BTreeMap).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":48993,"byte_end":49050,"line_start":186,"line_end":186,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49279,"byte_end":49295,"line_start":195,"line_end":195,"column_start":12,"column_end":28},"name":"BTreeMapResolver","qualname":"::collections::btree_map::BTreeMapResolver","value":"BTreeMapResolver {  }","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" The resolver for an [`ArchivedBTreeMap`].\n","sig":null,"attributes":[{"value":"/ The resolver for an [`ArchivedBTreeMap`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49222,"byte_end":49267,"line_start":194,"line_end":194,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":263},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49433,"byte_end":49458,"line_start":202,"line_end":202,"column_start":11,"column_end":36},"name":"MIN_ENTRIES_PER_LEAF_NODE","qualname":"::collections::btree_map::MIN_ENTRIES_PER_LEAF_NODE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of entries to place in a leaf node.","sig":null,"attributes":[{"value":"/ The minimum number of entries to place in a leaf node.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49322,"byte_end":49380,"line_start":199,"line_end":199,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49381,"byte_end":49384,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ This value must be greater than 0","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49385,"byte_end":49422,"line_start":201,"line_end":201,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":264},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49585,"byte_end":49611,"line_start":207,"line_end":207,"column_start":11,"column_end":37},"name":"MIN_ENTRIES_PER_INNER_NODE","qualname":"::collections::btree_map::MIN_ENTRIES_PER_INNER_NODE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of entries to place in an inner node.","sig":null,"attributes":[{"value":"/ The minimum number of entries to place in an inner node.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49472,"byte_end":49532,"line_start":204,"line_end":204,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49533,"byte_end":49536,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ This value must be greater than 1","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49537,"byte_end":49574,"line_start":206,"line_end":206,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":50858,"byte_end":50870,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedBTreeMap<K, V>>::contains_key","value":"pub fn contains_key<Q: Ord + ?Sized>(&Self, &Q) -> bool where K: Borrow<Q> +\nOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":50602,"byte_end":50671,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":50676,"byte_end":50679,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":50684,"byte_end":50776,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ form _must_ match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":50781,"byte_end":50832,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":50837,"byte_end":50846,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51258,"byte_end":51261,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedBTreeMap<K, V>>::get","value":"pub fn get<Q: Ord + ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q> + Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51009,"byte_end":51071,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51076,"byte_end":51079,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map’s key type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51084,"byte_end":51178,"line_start":253,"line_end":253,"column_start":5,"column_end":97}},{"value":"/ form must match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51183,"byte_end":51232,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51237,"byte_end":51246,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51659,"byte_end":51672,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ArchivedBTreeMap<K, V>>::get_key_value","value":"pub fn get_key_value<Q: Ord + ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q> + Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51412,"byte_end":51477,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51482,"byte_end":51485,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map’s key type, but the ordering on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51490,"byte_end":51584,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ borrowed form must match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":51589,"byte_end":51647,"line_start":266,"line_end":266,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53392,"byte_end":53400,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedBTreeMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53315,"byte_end":53366,"line_start":310,"line_end":310,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53371,"byte_end":53380,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53543,"byte_end":53547,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedBTreeMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map, sorted by key.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map, sorted by key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53453,"byte_end":53517,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53522,"byte_end":53531,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53762,"byte_end":53766,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"keys","qualname":"<ArchivedBTreeMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map, in sorted order.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map, in sorted order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53673,"byte_end":53736,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53741,"byte_end":53750,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53977,"byte_end":53980,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedBTreeMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in the archived B-tree map.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in the archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53892,"byte_end":53951,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":53956,"byte_end":53965,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54143,"byte_end":54149,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"values","qualname":"<ArchivedBTreeMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map, in order by key.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map, in order by key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54052,"byte_end":54117,"line_start":338,"line_end":338,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54122,"byte_end":54131,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54588,"byte_end":54604,"line_start":354,"line_end":354,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedBTreeMap<K, V>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, BTreeMapResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves a B-tree map from its length.","sig":null,"attributes":[{"value":"/ Resolves a B-tree map from its length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54279,"byte_end":54321,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54326,"byte_end":54329,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54334,"byte_end":54346,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54351,"byte_end":54354,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54359,"byte_end":54422,"line_start":350,"line_end":350,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54427,"byte_end":54487,"line_start":351,"line_end":351,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a B-tree map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54492,"byte_end":54555,"line_start":352,"line_end":352,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":54560,"byte_end":54569,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55390,"byte_end":55417,"line_start":382,"line_end":382,"column_start":23,"column_end":50},"name":"serialize_from_reverse_iter","qualname":"<ArchivedBTreeMap<K, V>>::serialize_from_reverse_iter","value":"pub unsafe fn serialize_from_reverse_iter<'a, UK, UV, S, I>(I, &mut S)\n-> Result<BTreeMapResolver, S::Error> where UK: 'a + Serialize<S, Archived =\nK>, UV: 'a + Serialize<S, Archived = V>, S: Serializer + ?Sized,\nI: ExactSizeIterator<Item = (&'a UK, &'a UV)>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an ordered iterator of key-value pairs as a B-tree map.","sig":null,"attributes":[{"value":"/ Serializes an ordered iterator of key-value pairs as a B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55123,"byte_end":55193,"line_start":376,"line_end":376,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55202,"byte_end":55205,"line_start":377,"line_end":377,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55214,"byte_end":55226,"line_start":378,"line_end":378,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55235,"byte_end":55238,"line_start":379,"line_end":379,"column_start":9,"column_end":12}},{"value":"/ - Keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55247,"byte_end":55297,"line_start":380,"line_end":380,"column_start":9,"column_end":59}},{"value":"/ - Keys must be in reverse sorted order from last to first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55306,"byte_end":55367,"line_start":381,"line_end":381,"column_start":9,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66678,"byte_end":66682,"line_start":675,"line_end":675,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" An iterator over the key-value pairs of an archived B-tree map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key-value pairs of an archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66599,"byte_end":66666,"line_start":674,"line_end":674,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67181,"byte_end":67185,"line_start":697,"line_end":697,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::btree_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":" An iterator over the keys of an archived B-tree map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of an archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67113,"byte_end":67169,"line_start":696,"line_end":696,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67693,"byte_end":67699,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::btree_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":418}],"decl_id":null,"docs":" An iterator over the values of an archived B-tree map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of an archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67623,"byte_end":67681,"line_start":718,"line_end":718,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":5968},{"krate":0,"index":5972},{"krate":0,"index":5974},{"krate":0,"index":5977},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5986},{"krate":0,"index":5990},{"krate":0,"index":453},{"krate":0,"index":464},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":489}],"decl_id":null,"docs":" [`Archive`](crate::Archive) implementation for B-tree sets.\n","sig":null,"attributes":[{"value":"/ [`Archive`](crate::Archive) implementation for B-tree sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":68881,"byte_end":68944,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5968},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69315,"byte_end":69331,"line_start":11,"line_end":11,"column_start":12,"column_end":28},"name":"ArchivedBTreeSet","qualname":"::collections::btree_set::ArchivedBTreeSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived `BTreeSet`. This is a wrapper around a B-tree map with the same key and a value of\n `()`.\n","sig":null,"attributes":[{"value":"/ An archived `BTreeSet`. This is a wrapper around a B-tree map with the same key and a value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69059,"byte_end":69157,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/ `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69158,"byte_end":69167,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69283,"byte_end":69303,"line_start":10,"line_end":10,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69652,"byte_end":69664,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedBTreeSet<K>>::contains_key","value":"pub fn contains_key<Q: Ord + ?Sized>(&Self, &Q) -> bool where K: Borrow<Q> +\nOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value for the specified key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69396,"byte_end":69465,"line_start":14,"line_end":14,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69470,"byte_end":69473,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the set's key type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69478,"byte_end":69570,"line_start":16,"line_end":16,"column_start":5,"column_end":97}},{"value":"/ form _must_ match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69575,"byte_end":69626,"line_start":17,"line_end":17,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69631,"byte_end":69640,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70077,"byte_end":70080,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedBTreeSet<K>>::get","value":"pub fn get<Q: Ord + ?Sized>(&Self, &Q) -> Option<&K> where K: Borrow<Q> + Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value int he set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value int he set, if any, that is equal to the given value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69794,"byte_end":69884,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69889,"byte_end":69892,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69897,"byte_end":69993,"line_start":28,"line_end":28,"column_start":5,"column_end":101}},{"value":"/ form _must_ match the ordering on the value type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69998,"byte_end":70051,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70056,"byte_end":70065,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70318,"byte_end":70326,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedBTreeSet<K>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70241,"byte_end":70292,"line_start":38,"line_end":38,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70297,"byte_end":70306,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70470,"byte_end":70474,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedBTreeSet<K>>::iter","value":"pub fn iter(&Self) -> Keys<, K, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the set, in sorted order.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the set, in sorted order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70381,"byte_end":70444,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70449,"byte_end":70458,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70617,"byte_end":70620,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedBTreeSet<K>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in the archived B-tree set.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in the archived B-tree set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70532,"byte_end":70591,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70596,"byte_end":70605,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70980,"byte_end":70996,"line_start":64,"line_end":64,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedBTreeSet<K>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, BTreeSetResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves a B-tree set from its length.","sig":null,"attributes":[{"value":"/ Resolves a B-tree set from its length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70671,"byte_end":70713,"line_start":56,"line_end":56,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70718,"byte_end":70721,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70726,"byte_end":70738,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70743,"byte_end":70746,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70751,"byte_end":70814,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70819,"byte_end":70879,"line_start":61,"line_end":61,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a B-tree set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70884,"byte_end":70947,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":70952,"byte_end":70961,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71629,"byte_end":71656,"line_start":86,"line_end":86,"column_start":23,"column_end":50},"name":"serialize_from_reverse_iter","qualname":"<ArchivedBTreeSet<K>>::serialize_from_reverse_iter","value":"pub unsafe fn serialize_from_reverse_iter<'a, UK, S, I>(I, &mut S)\n-> Result<BTreeSetResolver, S::Error> where UK: 'a + Serialize<S, Archived =\nK>, S: Serializer + ?Sized, I: ExactSizeIterator<Item = &'a UK>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an ordered iterator of key-value pairs as a B-tree map.","sig":null,"attributes":[{"value":"/ Serializes an ordered iterator of key-value pairs as a B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71362,"byte_end":71432,"line_start":80,"line_end":80,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71441,"byte_end":71444,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71453,"byte_end":71465,"line_start":82,"line_end":82,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71474,"byte_end":71477,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"/ - Keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71486,"byte_end":71536,"line_start":84,"line_end":84,"column_start":9,"column_end":59}},{"value":"/ - Keys must be in reverse sorted order from last to first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71545,"byte_end":71606,"line_start":85,"line_end":85,"column_start":9,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":72522,"byte_end":72538,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"BTreeSetResolver","qualname":"::collections::btree_set::BTreeSetResolver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resolver for archived B-tree sets.\n","sig":null,"attributes":[{"value":"/ The resolver for archived B-tree sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":72468,"byte_end":72510,"line_start":117,"line_end":117,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_index","qualname":"::collections::hash_index","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":533},{"krate":0,"index":565},{"krate":0,"index":567}],"decl_id":null,"docs":" A helper type that archives index data for hashed collections using\n [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).\n","sig":null,"attributes":[{"value":"/ A helper type that archives index data for hashed collections using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":72677,"byte_end":72748,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":72749,"byte_end":72829,"line_start":2,"line_end":2,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73157,"byte_end":73174,"line_start":19,"line_end":19,"column_start":12,"column_end":29},"name":"ArchivedHashIndex","qualname":"::collections::hash_index::ArchivedHashIndex","value":"ArchivedHashIndex {  }","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"decl_id":null,"docs":" An archived hash index.\n","sig":null,"attributes":[{"value":"/ An archived hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73077,"byte_end":73104,"line_start":17,"line_end":17,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73351,"byte_end":73354,"line_start":27,"line_end":27,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedHashIndex>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the hash index.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73272,"byte_end":73319,"line_start":25,"line_end":25,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73324,"byte_end":73333,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73804,"byte_end":73810,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedHashIndex>::hasher","value":"pub fn hasher(&Self) -> HashBuilder","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this hash index. The hasher for all archived hash indexes is the same\n for reproducibility.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this hash index. The hasher for all archived hash indexes is the same","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73656,"byte_end":73749,"line_start":41,"line_end":41,"column_start":5,"column_end":98}},{"value":"/ for reproducibility.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73754,"byte_end":73778,"line_start":42,"line_end":42,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73783,"byte_end":73792,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":74389,"byte_end":74394,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"index","qualname":"<ArchivedHashIndex>::index","value":"pub fn index<K: Hash + ?Sized>(&Self, &K) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index where a key may be located in the hash index.","sig":null,"attributes":[{"value":"/ Returns the index where a key may be located in the hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":74143,"byte_end":74210,"line_start":58,"line_end":58,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":74215,"byte_end":74218,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The hash index does not have access to the keys used to build it, so the key at the returned","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":74223,"byte_end":74319,"line_start":60,"line_end":60,"column_start":5,"column_end":101}},{"value":"/ index must be checked for equality.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":74324,"byte_end":74363,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":74368,"byte_end":74377,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75120,"byte_end":75128,"line_start":84,"line_end":84,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedHashIndex>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no items in the hash index.\n","sig":null,"attributes":[{"value":"/ Returns whether there are no items in the hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75031,"byte_end":75088,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75093,"byte_end":75102,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75529,"byte_end":75545,"line_start":96,"line_end":96,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedHashIndex>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, HashIndexResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived hash index from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived hash index from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75181,"byte_end":75252,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75257,"byte_end":75260,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75265,"byte_end":75277,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75282,"byte_end":75285,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements in the hash index","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75290,"byte_end":75350,"line_start":92,"line_end":92,"column_start":5,"column_end":65}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75355,"byte_end":75415,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of building and serializing a hash index","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75420,"byte_end":75496,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":75501,"byte_end":75510,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76484,"byte_end":76503,"line_start":131,"line_end":131,"column_start":23,"column_end":42},"name":"build_and_serialize","qualname":"<ArchivedHashIndex>::build_and_serialize","value":"pub unsafe fn build_and_serialize<'a, K, V, S,\n                                  I>(I, &mut S,\n                                     &mut ScratchVec<MaybeUninit<(&'a K,\n                                                                  &'a V)>>)\n-> Result<HashIndexResolver, S::Error> where K: 'a + Hash, V: 'a,\nS: Serializer + ScratchSpace + ?Sized, I: ExactSizeIterator<Item =\n(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Builds and serializes a hash index from an iterator of key-value pairs.","sig":null,"attributes":[{"value":"/ Builds and serializes a hash index from an iterator of key-value pairs.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76165,"byte_end":76240,"line_start":124,"line_end":124,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76249,"byte_end":76252,"line_start":125,"line_end":125,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76261,"byte_end":76273,"line_start":126,"line_end":126,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76282,"byte_end":76285,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ - The keys returned by the iterator must be unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76294,"byte_end":76349,"line_start":128,"line_end":128,"column_start":9,"column_end":64}},{"value":"/ - `entries` must have a capacity of `iter.len()` entries.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76358,"byte_end":76419,"line_start":129,"line_end":129,"column_start":9,"column_end":70}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76428,"byte_end":76461,"line_start":130,"line_end":130,"column_start":9,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":80965,"byte_end":80982,"line_start":249,"line_end":249,"column_start":12,"column_end":29},"name":"HashIndexResolver","qualname":"::collections::hash_index::HashIndexResolver","value":"HashIndexResolver {  }","parent":null,"children":[{"krate":0,"index":568}],"decl_id":null,"docs":" The resolver for an archived hash index.\n","sig":null,"attributes":[{"value":"/ The resolver for an archived hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":80909,"byte_end":80953,"line_start":248,"line_end":248,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":569},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":623},{"krate":0,"index":656},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":682},{"krate":0,"index":688},{"krate":0,"index":695},{"krate":0,"index":700},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":745},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":764},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":783},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":802},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":821},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835}],"decl_id":null,"docs":" Archived hash map implementation.","sig":null,"attributes":[{"value":"/ Archived hash map implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":81264,"byte_end":81301,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":81302,"byte_end":81305,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ During archiving, hashmaps are built into minimal perfect hashmaps using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":81306,"byte_end":81382,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":81383,"byte_end":81463,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":81942,"byte_end":81957,"line_start":27,"line_end":27,"column_start":12,"column_end":27},"name":"ArchivedHashMap","qualname":"::collections::hash_map::ArchivedHashMap","value":"ArchivedHashMap {  }","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"decl_id":null,"docs":" An archived `HashMap`.\n","sig":null,"attributes":[{"value":"/ An archived `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":81863,"byte_end":81889,"line_start":25,"line_end":25,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82149,"byte_end":82152,"line_start":35,"line_end":35,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedHashMap<K, V>>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82072,"byte_end":82117,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82122,"byte_end":82131,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82348,"byte_end":82354,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedHashMap<K, V>>::hasher","value":"pub fn hasher(&Self) -> seahash::SeaHasher","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this hashmap. The hasher for all archived hashmaps is the same for\n reproducibility.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this hashmap. The hasher for all archived hashmaps is the same for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82207,"byte_end":82297,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/ reproducibility.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82302,"byte_end":82322,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82327,"byte_end":82336,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83117,"byte_end":83130,"line_start":74,"line_end":74,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ArchivedHashMap<K, V>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Finds the key-value entry for a key.\n","sig":null,"attributes":[{"value":"/ Finds the key-value entry for a key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83051,"byte_end":83091,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83096,"byte_end":83105,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83465,"byte_end":83482,"line_start":87,"line_end":87,"column_start":12,"column_end":29},"name":"get_key_value_pin","qualname":"<ArchivedHashMap<K, V>>::get_key_value_pin","value":"pub fn get_key_value_pin<Q: ?Sized>(Pin<&mut Self>, &Q)\n-> Option<(&K, Pin<&mut V>)> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Finds the mutable key-value entry for a key.\n","sig":null,"attributes":[{"value":"/ Finds the mutable key-value entry for a key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83391,"byte_end":83439,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83444,"byte_end":83453,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83967,"byte_end":83979,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedHashMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a key is present in the hash map.\n","sig":null,"attributes":[{"value":"/ Returns whether a key is present in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83888,"byte_end":83941,"line_start":101,"line_end":101,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":83946,"byte_end":83955,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84190,"byte_end":84193,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedHashMap<K, V>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Gets the value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84115,"byte_end":84164,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84169,"byte_end":84178,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84470,"byte_end":84477,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ArchivedHashMap<K, V>>::get_pin","value":"pub fn get_pin<Q: ?Sized>(Pin<&mut Self>, &Q) -> Option<Pin<&mut V>> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the mutable value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84387,"byte_end":84444,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84449,"byte_end":84458,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84913,"byte_end":84921,"line_start":139,"line_end":139,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedHashMap<K, V>>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84830,"byte_end":84881,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":84886,"byte_end":84895,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85437,"byte_end":85441,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedHashMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the key-value entries in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the key-value entries in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85347,"byte_end":85411,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85416,"byte_end":85425,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85635,"byte_end":85643,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"iter_pin","qualname":"<ArchivedHashMap<K, V>>::iter_pin","value":"pub fn iter_pin(Pin<&mut Self>) -> IterPin<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the mutable key-value entries in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the mutable key-value entries in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85537,"byte_end":85609,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85614,"byte_end":85623,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85841,"byte_end":85845,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"keys","qualname":"<ArchivedHashMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85764,"byte_end":85815,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85820,"byte_end":85829,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86020,"byte_end":86026,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"values","qualname":"<ArchivedHashMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85941,"byte_end":85994,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":85999,"byte_end":86008,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86213,"byte_end":86223,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"values_pin","qualname":"<ArchivedHashMap<K, V>>::values_pin","value":"pub fn values_pin(Pin<&mut Self>) -> ValuesPin<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the mutable values in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the mutable values in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86126,"byte_end":86187,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86192,"byte_end":86201,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86682,"byte_end":86698,"line_start":204,"line_end":204,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedHashMap<K, V>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, HashMapResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived hash map from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived hash map from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86348,"byte_end":86417,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86422,"byte_end":86425,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86430,"byte_end":86442,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86447,"byte_end":86450,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86455,"byte_end":86518,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86523,"byte_end":86583,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86588,"byte_end":86649,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":86654,"byte_end":86663,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87340,"byte_end":87359,"line_start":226,"line_end":226,"column_start":23,"column_end":42},"name":"serialize_from_iter","qualname":"<ArchivedHashMap<K, V>>::serialize_from_iter","value":"pub unsafe fn serialize_from_iter<'a, KU, VU, S, I>(I, &mut S)\n-> Result<HashMapResolver, S::Error> where KU: 'a + Serialize<S, Archived =\nK> + Hash + Eq, VU: 'a + Serialize<S, Archived = V>, S: Serializer +\nScratchSpace + ?Sized, I: ExactSizeIterator<Item = (&'a KU, &'a VU)>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of key-value pairs as a hash map.","sig":null,"attributes":[{"value":"/ Serializes an iterator of key-value pairs as a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87150,"byte_end":87210,"line_start":221,"line_end":221,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87219,"byte_end":87222,"line_start":222,"line_end":222,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87231,"byte_end":87243,"line_start":223,"line_end":223,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87252,"byte_end":87255,"line_start":224,"line_end":224,"column_start":9,"column_end":12}},{"value":"/ The keys returned by the iterator must be unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87264,"byte_end":87317,"line_start":225,"line_end":225,"column_start":9,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91882,"byte_end":91886,"line_start":390,"line_end":390,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":744}],"decl_id":null,"docs":" An iterator over the key-value pairs of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key-value pairs of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91794,"byte_end":91849,"line_start":388,"line_end":388,"column_start":1,"column_end":56}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91850,"byte_end":91870,"line_start":389,"line_end":389,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92498,"byte_end":92505,"line_start":416,"line_end":416,"column_start":12,"column_end":19},"name":"IterPin","qualname":"::collections::hash_map::IterPin","value":"IterPin {  }","parent":null,"children":[{"krate":0,"index":763}],"decl_id":null,"docs":" An iterator over the mutable key-value pairs of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the mutable key-value pairs of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92402,"byte_end":92465,"line_start":414,"line_end":414,"column_start":1,"column_end":64}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92466,"byte_end":92486,"line_start":415,"line_end":415,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93147,"byte_end":93151,"line_start":442,"line_end":442,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::hash_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":782}],"decl_id":null,"docs":" An iterator over the keys of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93070,"byte_end":93114,"line_start":440,"line_end":440,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93115,"byte_end":93135,"line_start":441,"line_end":441,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93722,"byte_end":93728,"line_start":468,"line_end":468,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::hash_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":" An iterator over the values of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93643,"byte_end":93689,"line_start":466,"line_end":466,"column_start":1,"column_end":47}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93690,"byte_end":93710,"line_start":467,"line_end":467,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":816},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94315,"byte_end":94324,"line_start":494,"line_end":494,"column_start":12,"column_end":21},"name":"ValuesPin","qualname":"::collections::hash_map::ValuesPin","value":"ValuesPin {  }","parent":null,"children":[{"krate":0,"index":820}],"decl_id":null,"docs":" An iterator over the mutable values of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the mutable values of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94228,"byte_end":94282,"line_start":492,"line_end":492,"column_start":1,"column_end":55}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94283,"byte_end":94303,"line_start":493,"line_end":493,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94925,"byte_end":94940,"line_start":519,"line_end":519,"column_start":12,"column_end":27},"name":"HashMapResolver","qualname":"::collections::hash_map::HashMapResolver","value":"HashMapResolver {  }","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" The resolver for archived hash maps.\n","sig":null,"attributes":[{"value":"/ The resolver for archived hash maps.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94873,"byte_end":94913,"line_start":518,"line_end":518,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":838},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":874},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901}],"decl_id":null,"docs":" Archived hash set implementation.","sig":null,"attributes":[{"value":"/ Archived hash set implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":95531,"byte_end":95568,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":95569,"byte_end":95572,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ During archiving, hashsets are built into minimal perfect hashsets using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":95573,"byte_end":95649,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":95650,"byte_end":95730,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96153,"byte_end":96168,"line_start":18,"line_end":18,"column_start":12,"column_end":27},"name":"ArchivedHashSet","qualname":"::collections::hash_set::ArchivedHashSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived `HashSet`. This is a wrapper around a hash map with the same key and a value of\n `()`.\n","sig":null,"attributes":[{"value":"/ An archived `HashSet`. This is a wrapper around a hash map with the same key and a value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":95948,"byte_end":96043,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96044,"byte_end":96053,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96121,"byte_end":96141,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96308,"byte_end":96311,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedHashSet<K>>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the hash set.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96231,"byte_end":96276,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96281,"byte_end":96290,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96452,"byte_end":96455,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedHashSet<K>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&K> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Gets the key corresponding to the given key in the hash set.\n","sig":null,"attributes":[{"value":"/ Gets the key corresponding to the given key in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96362,"byte_end":96426,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96431,"byte_end":96440,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96693,"byte_end":96701,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedHashSet<K>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the given key is in the hash set.\n","sig":null,"attributes":[{"value":"/ Returns whether the given key is in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96614,"byte_end":96667,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96672,"byte_end":96681,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96941,"byte_end":96947,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedHashSet<K>>::hasher","value":"pub fn hasher(&Self) -> seahash::SeaHasher","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for the underlying hash map.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for the underlying hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96837,"byte_end":96885,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96890,"byte_end":96915,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96920,"byte_end":96929,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97101,"byte_end":97109,"line_start":56,"line_end":56,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedHashSet<K>>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no items in the hash set.\n","sig":null,"attributes":[{"value":"/ Returns whether there are no items in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97014,"byte_end":97069,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97074,"byte_end":97083,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97252,"byte_end":97256,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedHashSet<K>>::iter","value":"pub fn iter(&Self) -> Keys<, K, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the underlying hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the underlying hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97164,"byte_end":97226,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97231,"byte_end":97240,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97650,"byte_end":97666,"line_start":74,"line_end":74,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedHashSet<K>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, HashSetResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived hash set from the given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived hash set from the given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97314,"byte_end":97385,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97390,"byte_end":97393,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97398,"byte_end":97410,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97415,"byte_end":97418,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97423,"byte_end":97486,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97491,"byte_end":97551,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97556,"byte_end":97617,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97622,"byte_end":97631,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98105,"byte_end":98124,"line_start":91,"line_end":91,"column_start":19,"column_end":38},"name":"serialize_from_iter","qualname":"<ArchivedHashSet<K>>::serialize_from_iter","value":"pub unsafe fn serialize_from_iter<'a, KU, S, I>(I, &mut S)\n-> Result<HashSetResolver, S::Error> where KU: 'a + Serialize<S, Archived =\nK> + Hash + Eq, S: Serializer + ScratchSpace + ?Sized,\nI: ExactSizeIterator<Item = &'a KU>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of keys as a hash set.","sig":null,"attributes":[{"value":"/ Serializes an iterator of keys as a hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97902,"byte_end":97951,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97956,"byte_end":97959,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97964,"byte_end":97976,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97981,"byte_end":97984,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The keys returned by the iterator must be unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":97989,"byte_end":98042,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98047,"byte_end":98072,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98077,"byte_end":98086,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98772,"byte_end":98787,"line_start":114,"line_end":114,"column_start":12,"column_end":27},"name":"HashSetResolver","qualname":"::collections::hash_set::HashSetResolver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resolver for archived hash sets.\n","sig":null,"attributes":[{"value":"/ The resolver for archived hash sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98720,"byte_end":98760,"line_start":113,"line_end":113,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"index_map","qualname":"::collections::index_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":950},{"krate":0,"index":982},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1022},{"krate":0,"index":1027},{"krate":0,"index":1034},{"krate":0,"index":1038},{"krate":0,"index":1042},{"krate":0,"index":1047},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1065},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1084},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098}],"decl_id":null,"docs":" Archived index map implementation.","sig":null,"attributes":[{"value":"/ Archived index map implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99123,"byte_end":99161,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99162,"byte_end":99165,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ During archiving, hashmaps are built into minimal perfect hashmaps using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99166,"byte_end":99242,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99243,"byte_end":99323,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99714,"byte_end":99730,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"name":"ArchivedIndexMap","qualname":"::collections::index_map::ArchivedIndexMap","value":"ArchivedIndexMap {  }","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"decl_id":null,"docs":" An archived `IndexMap`.\n","sig":null,"attributes":[{"value":"/ An archived `IndexMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99634,"byte_end":99661,"line_start":18,"line_end":18,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":100662,"byte_end":100674,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedIndexMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a key is present in the hash map.\n","sig":null,"attributes":[{"value":"/ Returns whether a key is present in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":100583,"byte_end":100636,"line_start":54,"line_end":54,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":100641,"byte_end":100650,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":100873,"byte_end":100878,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"first","qualname":"<ArchivedIndexMap<K, V>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first key-value pair.\n","sig":null,"attributes":[{"value":"/ Returns the first key-value pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":100810,"byte_end":100847,"line_start":64,"line_end":64,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":100852,"byte_end":100861,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101163,"byte_end":101166,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedIndexMap<K, V>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Gets the value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101088,"byte_end":101137,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101142,"byte_end":101151,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101451,"byte_end":101459,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"get_full","qualname":"<ArchivedIndexMap<K, V>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the index, key, and value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the index, key, and value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101360,"byte_end":101425,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101430,"byte_end":101439,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101791,"byte_end":101800,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"get_index","qualname":"<ArchivedIndexMap<K, V>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Gets a key-value pair by index.\n","sig":null,"attributes":[{"value":"/ Gets a key-value pair by index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101730,"byte_end":101765,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":101770,"byte_end":101779,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102109,"byte_end":102121,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<ArchivedIndexMap<K, V>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the index of a key if it exists in the map.\n","sig":null,"attributes":[{"value":"/ Gets the index of a key if it exists in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102031,"byte_end":102083,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102088,"byte_end":102097,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102344,"byte_end":102357,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ArchivedIndexMap<K, V>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the key-value pair associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the key-value pair associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102260,"byte_end":102318,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102323,"byte_end":102332,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102679,"byte_end":102685,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedIndexMap<K, V>>::hasher","value":"pub fn hasher(&Self) -> HashBuilder","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this index map.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102614,"byte_end":102653,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102658,"byte_end":102667,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102832,"byte_end":102840,"line_start":141,"line_end":141,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedIndexMap<K, V>>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102749,"byte_end":102800,"line_start":139,"line_end":139,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":102805,"byte_end":102814,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103113,"byte_end":103117,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedIndexMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the key-value pairs of the map in order\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the key-value pairs of the map in order","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103019,"byte_end":103087,"line_start":150,"line_end":150,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103092,"byte_end":103101,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103296,"byte_end":103300,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"keys","qualname":"<ArchivedIndexMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys of the map in order\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys of the map in order","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103213,"byte_end":103270,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103275,"byte_end":103284,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103458,"byte_end":103462,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"last","qualname":"<ArchivedIndexMap<K, V>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last key-value pair.\n","sig":null,"attributes":[{"value":"/ Returns the last key-value pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103396,"byte_end":103432,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103437,"byte_end":103446,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103763,"byte_end":103766,"line_start":179,"line_end":179,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedIndexMap<K, V>>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the index map.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103685,"byte_end":103731,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103736,"byte_end":103745,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103907,"byte_end":103913,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"values","qualname":"<ArchivedIndexMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values of the map in order.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the values of the map in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103821,"byte_end":103881,"line_start":183,"line_end":183,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":103886,"byte_end":103895,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104334,"byte_end":104350,"line_start":198,"line_end":198,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedIndexMap<K, V>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, IndexMapResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived index map from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived index map from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104013,"byte_end":104083,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104088,"byte_end":104091,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104096,"byte_end":104108,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104113,"byte_end":104116,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104121,"byte_end":104184,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104189,"byte_end":104249,"line_start":196,"line_end":196,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104254,"byte_end":104315,"line_start":197,"line_end":197,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":105282,"byte_end":105307,"line_start":229,"line_end":229,"column_start":23,"column_end":48},"name":"serialize_from_iter_index","qualname":"<ArchivedIndexMap<K, V>>::serialize_from_iter_index","value":"pub unsafe fn serialize_from_iter_index<'a, UK, UV, I, F, S>(I, F, &mut S)\n-> Result<IndexMapResolver, S::Error> where UK: 'a + Serialize<S, Archived =\nK> + Hash + Eq, UV: 'a + Serialize<S, Archived = V>, I: Clone +\nExactSizeIterator<Item = (&'a UK, &'a UV)>, F: Fn(&UK) -> usize,\nS: Serializer + ScratchSpace + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of key-value pairs as an index map.","sig":null,"attributes":[{"value":"/ Serializes an iterator of key-value pairs as an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104997,"byte_end":105059,"line_start":223,"line_end":223,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":105068,"byte_end":105071,"line_start":224,"line_end":224,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":105080,"byte_end":105092,"line_start":225,"line_end":225,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":105101,"byte_end":105104,"line_start":226,"line_end":226,"column_start":9,"column_end":12}},{"value":"/ - The keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":105113,"byte_end":105167,"line_start":227,"line_end":227,"column_start":9,"column_end":63}},{"value":"/ - The index function must return the index of the given key within the iterator","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":105176,"byte_end":105259,"line_start":228,"line_end":228,"column_start":9,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108699,"byte_end":108703,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::index_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1046}],"decl_id":null,"docs":" An iterator over the key-value pairs of an index map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key-value pairs of an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108609,"byte_end":108666,"line_start":338,"line_end":338,"column_start":1,"column_end":58}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108667,"byte_end":108687,"line_start":339,"line_end":339,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109205,"byte_end":109209,"line_start":363,"line_end":363,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::index_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":1064}],"decl_id":null,"docs":" An iterator over the keys of an index map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109126,"byte_end":109172,"line_start":361,"line_end":361,"column_start":1,"column_end":47}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109173,"byte_end":109193,"line_start":362,"line_end":362,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109720,"byte_end":109726,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::index_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":1083}],"decl_id":null,"docs":" An iterator over the values of an index map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109639,"byte_end":109687,"line_start":384,"line_end":384,"column_start":1,"column_end":49}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109688,"byte_end":109708,"line_start":385,"line_end":385,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":110237,"byte_end":110253,"line_start":410,"line_end":410,"column_start":12,"column_end":28},"name":"IndexMapResolver","qualname":"::collections::index_map::IndexMapResolver","value":"IndexMapResolver {  }","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":" The resolver for an `IndexMap`.\n","sig":null,"attributes":[{"value":"/ The resolver for an `IndexMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":110190,"byte_end":110225,"line_start":409,"line_end":409,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1102},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"index_set","qualname":"::collections::index_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1157},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184}],"decl_id":null,"docs":" Archived index set implementation.","sig":null,"attributes":[{"value":"/ Archived index set implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":110759,"byte_end":110797,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":110798,"byte_end":110801,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ During archiving, index sets are built into minimal perfect index sets using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":110802,"byte_end":110882,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":110883,"byte_end":110963,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111291,"byte_end":111307,"line_start":18,"line_end":18,"column_start":12,"column_end":28},"name":"ArchivedIndexSet","qualname":"::collections::index_set::ArchivedIndexSet","value":"ArchivedIndexSet {  }","parent":null,"children":[{"krate":0,"index":1133}],"decl_id":null,"docs":" An archived `IndexSet`.\n","sig":null,"attributes":[{"value":"/ An archived `IndexSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111164,"byte_end":111191,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111259,"byte_end":111279,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111465,"byte_end":111473,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedIndexSet<K>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a key is present in the hash set.\n","sig":null,"attributes":[{"value":"/ Returns whether a key is present in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111386,"byte_end":111439,"line_start":23,"line_end":23,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111444,"byte_end":111453,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111665,"byte_end":111670,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"first","qualname":"<ArchivedIndexSet<K>>::first","value":"pub fn first(&Self) -> Option<&K>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first key.\n","sig":null,"attributes":[{"value":"/ Returns the first key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111613,"byte_end":111639,"line_start":33,"line_end":33,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111644,"byte_end":111653,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111822,"byte_end":111825,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedIndexSet<K>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&K> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns the value stored in the set, if any.\n","sig":null,"attributes":[{"value":"/ Returns the value stored in the set, if any.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111748,"byte_end":111796,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111801,"byte_end":111810,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112075,"byte_end":112083,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"get_full","qualname":"<ArchivedIndexSet<K>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the item index and value stored in the set, if any.\n","sig":null,"attributes":[{"value":"/ Returns the item index and value stored in the set, if any.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111986,"byte_end":112049,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112054,"byte_end":112063,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112308,"byte_end":112317,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"get_index","qualname":"<ArchivedIndexSet<K>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&K>","parent":null,"children":[],"decl_id":null,"docs":" Gets a key by index.\n","sig":null,"attributes":[{"value":"/ Gets a key by index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112258,"byte_end":112282,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112287,"byte_end":112296,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112499,"byte_end":112511,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<ArchivedIndexSet<K>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a key if it exists in the set.\n","sig":null,"attributes":[{"value":"/ Returns the index of a key if it exists in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112418,"byte_end":112473,"line_start":65,"line_end":65,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112478,"byte_end":112487,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112729,"byte_end":112735,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedIndexSet<K>>::hasher","value":"pub fn hasher(&Self) -> HashBuilder","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this index set.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this index set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112664,"byte_end":112703,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112708,"byte_end":112717,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112878,"byte_end":112886,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedIndexSet<K>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the index set contains no values.\n","sig":null,"attributes":[{"value":"/ Returns whether the index set contains no values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112799,"byte_end":112852,"line_start":81,"line_end":81,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112857,"byte_end":112866,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113035,"byte_end":113039,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedIndexSet<K>>::iter","value":"pub fn iter(&Self) -> Keys<, K, ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys of the index set in order.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys of the index set in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":112945,"byte_end":113009,"line_start":87,"line_end":87,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113014,"byte_end":113023,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113152,"byte_end":113156,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"last","qualname":"<ArchivedIndexSet<K>>::last","value":"pub fn last(&Self) -> Option<&K>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last key.\n","sig":null,"attributes":[{"value":"/ Returns the last key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113101,"byte_end":113126,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113131,"byte_end":113140,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113311,"byte_end":113314,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedIndexSet<K>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the index set.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the index set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113233,"byte_end":113285,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113290,"byte_end":113299,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113704,"byte_end":113720,"line_start":113,"line_end":113,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedIndexSet<K>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, IndexSetResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived index map from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived index map from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113369,"byte_end":113439,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113444,"byte_end":113447,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113452,"byte_end":113464,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113469,"byte_end":113472,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113477,"byte_end":113540,"line_start":109,"line_end":109,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113545,"byte_end":113605,"line_start":110,"line_end":110,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113610,"byte_end":113671,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":113676,"byte_end":113685,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114421,"byte_end":114446,"line_start":139,"line_end":139,"column_start":23,"column_end":48},"name":"serialize_from_iter_index","qualname":"<ArchivedIndexSet<K>>::serialize_from_iter_index","value":"pub unsafe fn serialize_from_iter_index<'a, UK, I, F, S>(I, F, &mut S)\n-> Result<IndexSetResolver, S::Error> where UK: 'a + Hash + Eq + Serialize<S,\nArchived = K>, I: Clone + ExactSizeIterator<Item = &'a UK>, F: Fn(&UK) ->\nusize, S: ScratchSpace + Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of keys as an index set.","sig":null,"attributes":[{"value":"/ Serializes an iterator of keys as an index set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114129,"byte_end":114180,"line_start":132,"line_end":132,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114189,"byte_end":114192,"line_start":133,"line_end":133,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114201,"byte_end":114213,"line_start":134,"line_end":134,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114222,"byte_end":114225,"line_start":135,"line_end":135,"column_start":9,"column_end":12}},{"value":"/ - The keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114234,"byte_end":114288,"line_start":136,"line_end":136,"column_start":9,"column_end":63}},{"value":"/ - The index function must return the index of the given key within the iterator","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114297,"byte_end":114380,"line_start":137,"line_end":137,"column_start":9,"column_end":92}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114389,"byte_end":114398,"line_start":138,"line_end":138,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":115433,"byte_end":115449,"line_start":174,"line_end":174,"column_start":12,"column_end":28},"name":"IndexSetResolver","qualname":"::collections::index_set::IndexSetResolver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resolver for `IndexSet`.\n","sig":null,"attributes":[{"value":"/ The resolver for `IndexSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":115389,"byte_end":115421,"line_start":173,"line_end":173,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::collections::util","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":5993},{"krate":0,"index":5998},{"krate":0,"index":6002},{"krate":0,"index":6005},{"krate":0,"index":1198},{"krate":0,"index":1204},{"krate":0,"index":1209}],"decl_id":null,"docs":" Utilities for archived collections.\n","sig":null,"attributes":[{"value":"/ Utilities for archived collections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":115644,"byte_end":115683,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5993},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":115977,"byte_end":115982,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Entry","qualname":"::collections::util::Entry","value":"Entry { key, value }","parent":null,"children":[{"krate":0,"index":5996},{"krate":0,"index":5997}],"decl_id":null,"docs":" A simple key-value pair.","sig":null,"attributes":[{"value":"/ A simple key-value pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":115781,"byte_end":115809,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":115810,"byte_end":115813,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is typically used by associative containers that store keys and values together.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":115814,"byte_end":115903,"line_start":10,"line_end":10,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":5996},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116028,"byte_end":116031,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"key","qualname":"::collections::util::Entry::key","value":"K","parent":{"krate":0,"index":5993},"children":[],"decl_id":null,"docs":" The key of the pair.\n","sig":null,"attributes":[{"value":"/ The key of the pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":115995,"byte_end":116019,"line_start":14,"line_end":14,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5997},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116075,"byte_end":116080,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"value","qualname":"::collections::util::Entry::value","value":"V","parent":{"krate":0,"index":5993},"children":[],"decl_id":null,"docs":" The value of the pair.\n","sig":null,"attributes":[{"value":"/ The value of the pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116040,"byte_end":116066,"line_start":16,"line_end":16,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1233},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1293}],"decl_id":null,"docs":" Deserialization traits, deserializers, and adapters.\n","sig":null,"attributes":[{"value":"/ Deserialization traits, deserializers, and adapters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117190,"byte_end":117246,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1234},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deserializers","qualname":"::de::deserializers","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/mod.rs","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1277}],"decl_id":null,"docs":" Deserializers that can be used standalone and provide basic capabilities.\n","sig":null,"attributes":[{"value":"/ Deserializers that can be used standalone and provide basic capabilities.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/mod.rs","byte_start":119666,"byte_end":119743,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6010},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120364,"byte_end":120386,"line_start":19,"line_end":19,"column_start":5,"column_end":27},"name":"DuplicateSharedPointer","qualname":"::de::deserializers::alloc::SharedDeserializeMapError::DuplicateSharedPointer","value":"SharedDeserializeMapError::DuplicateSharedPointer(*const u8)","parent":{"krate":0,"index":6009},"children":[],"decl_id":null,"docs":" A shared pointer was added multiple times\n","sig":null,"attributes":[{"value":"/ A shared pointer was added multiple times","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120314,"byte_end":120359,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":6009},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120282,"byte_end":120307,"line_start":17,"line_end":17,"column_start":10,"column_end":35},"name":"SharedDeserializeMapError","qualname":"::de::deserializers::alloc::SharedDeserializeMapError","value":"pub enum SharedDeserializeMapError { DuplicateSharedPointer(*const u8), }","parent":null,"children":[{"krate":0,"index":6010}],"decl_id":null,"docs":" An error that can occur while deserializing shared pointers.\n","sig":null,"attributes":[{"value":"/ An error that can occur while deserializing shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120191,"byte_end":120255,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1262},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121265,"byte_end":121285,"line_start":46,"line_end":46,"column_start":12,"column_end":32},"name":"SharedDeserializeMap","qualname":"::de::deserializers::alloc::SharedDeserializeMap","value":"SharedDeserializeMap {  }","parent":null,"children":[{"krate":0,"index":1263}],"decl_id":null,"docs":" An adapter that adds shared deserialization support to a deserializer.\n","sig":null,"attributes":[{"value":"/ An adapter that adds shared deserialization support to a deserializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121179,"byte_end":121253,"line_start":45,"line_end":45,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121488,"byte_end":121491,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedDeserializeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given deserializer and adds shared memory support.\n","sig":null,"attributes":[{"value":"/ Wraps the given deserializer and adds shared memory support.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121398,"byte_end":121462,"line_start":51,"line_end":51,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121467,"byte_end":121476,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1291},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117567,"byte_end":117580,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"SharedPointer","qualname":"::de::SharedPointer","value":"SharedPointer","parent":null,"children":[{"krate":0,"index":1292}],"decl_id":null,"docs":" A deserializable shared pointer type.\n","sig":null,"attributes":[{"value":"/ A deserializable shared pointer type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117489,"byte_end":117530,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117531,"byte_end":117556,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117648,"byte_end":117660,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"data_address","qualname":"::de::SharedPointer::data_address","value":"pub fn data_address(&Self) -> *const ()","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" Returns the data address for this shared pointer.\n","sig":null,"attributes":[{"value":"/ Returns the data address for this shared pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117587,"byte_end":117640,"line_start":15,"line_end":15,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1293},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117839,"byte_end":117864,"line_start":23,"line_end":23,"column_start":11,"column_end":36},"name":"SharedDeserializeRegistry","qualname":"::de::SharedDeserializeRegistry","value":"SharedDeserializeRegistry: Fallible","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A registry that tracks deserialized shared memory.","sig":null,"attributes":[{"value":"/ A registry that tracks deserialized shared memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117685,"byte_end":117739,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117740,"byte_end":117743,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This trait is required to deserialize shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117744,"byte_end":117802,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117803,"byte_end":117828,"line_start":22,"line_end":22,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117959,"byte_end":117973,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"get_shared_ptr","qualname":"::de::SharedDeserializeRegistry::get_shared_ptr","value":"pub fn get_shared_ptr(&mut Self, *const u8) -> Option<&dyn SharedPointer>","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" Gets the data pointer of a previously-deserialized shared pointer.\n","sig":null,"attributes":[{"value":"/ Gets the data pointer of a previously-deserialized shared pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117881,"byte_end":117951,"line_start":24,"line_end":24,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":118120,"byte_end":118134,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"add_shared_ptr","qualname":"::de::SharedDeserializeRegistry::add_shared_ptr","value":"pub fn add_shared_ptr(&mut Self, *const u8, Box<dyn SharedPointer>)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" Adds the data address of a deserialized shared pointer to the registry.\n","sig":null,"attributes":[{"value":"/ Adds the data address of a deserialized shared pointer to the registry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":118037,"byte_end":118112,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":118472,"byte_end":118490,"line_start":37,"line_end":37,"column_start":8,"column_end":26},"name":"deserialize_shared","qualname":"::de::SharedDeserializeRegistry::deserialize_shared","value":"pub fn deserialize_shared<T, P, F, A>(&mut Self, &T::Archived, F, A)\n-> Result<*const T, Self::Error> where T: ArchiveUnsized + ?Sized,\nP: SharedPointer + 'static, F: FnOnce(*mut T) -> P, A: FnMut(Layout) ->\n*mut u8, T::Archived: DeserializeUnsized<T, Self>","parent":{"krate":0,"index":1293},"children":[],"decl_id":null,"docs":" Checks whether the given reference has been deserialized and either uses the existing shared\n pointer to it, or deserializes it and converts it to a shared pointer with `to_shared`.\n","sig":null,"attributes":[{"value":"/ Checks whether the given reference has been deserialized and either uses the existing shared","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":118258,"byte_end":118354,"line_start":34,"line_end":34,"column_start":5,"column_end":101}},{"value":"/ pointer to it, or deserializes it and converts it to a shared pointer with `to_shared`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":118359,"byte_end":118450,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":118455,"byte_end":118464,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1301},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffi","qualname":"::ffi","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385}],"decl_id":null,"docs":" Archived versions of FFI types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7564,"byte_end":7587,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ Archived versions of FFI types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":122876,"byte_end":122911,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1347},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123263,"byte_end":123278,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"ArchivedCString","qualname":"::ffi::ArchivedCString","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived [`CString`](std::ffi::CString).","sig":null,"attributes":[{"value":"/ An archived [`CString`](std::ffi::CString).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123129,"byte_end":123176,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123177,"byte_end":123180,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Uses a [`RelPtr`] to a `CStr` under the hood.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123181,"byte_end":123230,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123231,"byte_end":123251,"line_start":15,"line_end":15,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123672,"byte_end":123680,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ArchivedCString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this CString as a slice of bytes.","sig":null,"attributes":[{"value":"/ Returns the contents of this CString as a slice of bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123322,"byte_end":123383,"line_start":19,"line_end":19,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123388,"byte_end":123391,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ The returned slice does **not** contain the trailing nul terminator, and it is guaranteed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123396,"byte_end":123492,"line_start":21,"line_end":21,"column_start":5,"column_end":101}},{"value":"/ not have any interior nul bytes. If you need the nul terminator, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123497,"byte_end":123569,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ [`as_bytes_with_nul`][ArchivedCString::as_bytes_with_nul()] instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123574,"byte_end":123646,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123651,"byte_end":123660,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123907,"byte_end":123924,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"as_bytes_with_nul","qualname":"<ArchivedCString>::as_bytes_with_nul","value":"pub fn as_bytes_with_nul(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`as_bytes`][ArchivedCString::as_bytes()] except that the returned slice\n includes the trailing nul terminator.\n","sig":null,"attributes":[{"value":"/ Equivalent to [`as_bytes`][ArchivedCString::as_bytes()] except that the returned slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123745,"byte_end":123835,"line_start":29,"line_end":29,"column_start":5,"column_end":95}},{"value":"/ includes the trailing nul terminator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123840,"byte_end":123881,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123886,"byte_end":123895,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124081,"byte_end":124089,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"as_c_str","qualname":"<ArchivedCString>::as_c_str","value":"pub fn as_c_str(&Self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":" Extracts a `CStr` slice containing the entire string.\n","sig":null,"attributes":[{"value":"/ Extracts a `CStr` slice containing the entire string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123998,"byte_end":124055,"line_start":36,"line_end":36,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124060,"byte_end":124069,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124254,"byte_end":124267,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"pin_mut_c_str","qualname":"<ArchivedCString>::pin_mut_c_str","value":"pub fn pin_mut_c_str(Pin<&mut Self>) -> Pin<&mut CStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a pinned mutable `CStr` slice containing the entire string.\n","sig":null,"attributes":[{"value":"/ Extracts a pinned mutable `CStr` slice containing the entire string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124156,"byte_end":124228,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124233,"byte_end":124242,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124661,"byte_end":124679,"line_start":55,"line_end":55,"column_start":19,"column_end":37},"name":"resolve_from_c_str","qualname":"<ArchivedCString>::resolve_from_c_str","value":"pub unsafe fn resolve_from_c_str(&CStr, usize, CStringResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived C string from the given C string and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived C string from the given C string and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124391,"byte_end":124464,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124469,"byte_end":124472,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124477,"byte_end":124489,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124494,"byte_end":124497,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124502,"byte_end":124562,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a C string","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124567,"byte_end":124628,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":124633,"byte_end":124642,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125110,"byte_end":125130,"line_start":69,"line_end":69,"column_start":12,"column_end":32},"name":"serialize_from_c_str","qualname":"<ArchivedCString>::serialize_from_c_str","value":"pub fn serialize_from_c_str<S: Serializer + ?Sized>(&CStr, &mut S)\n-> Result<CStringResolver, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a C string.\n","sig":null,"attributes":[{"value":"/ Serializes a C string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125058,"byte_end":125084,"line_start":67,"line_end":67,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125089,"byte_end":125098,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":127149,"byte_end":127164,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"CStringResolver","qualname":"::ffi::CStringResolver","value":"CStringResolver {  }","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387}],"decl_id":null,"docs":" The resolver for `CString`.\n","sig":null,"attributes":[{"value":"/ The resolver for `CString`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":127106,"byte_end":127137,"line_start":162,"line_end":162,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1636},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":135813,"byte_end":135821,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"RcFlavor","qualname":"::impls::alloc::rc::RcFlavor","value":"","parent":null,"children":[],"decl_id":null,"docs":" The flavor type for `Rc`.\n","sig":null,"attributes":[{"value":"/ The flavor type for `Rc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":135772,"byte_end":135801,"line_start":16,"line_end":16,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1675},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139104,"byte_end":139113,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"ArcFlavor","qualname":"::impls::alloc::rc::ArcFlavor","value":"","parent":null,"children":[],"decl_id":null,"docs":" The flavor type for `Arc`.\n","sig":null,"attributes":[{"value":"/ The flavor type for `Arc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139062,"byte_end":139092,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":200823,"byte_end":200830,"line_start":19,"line_end":19,"column_start":18,"column_end":25},"name":"as_ipv4","qualname":"<ArchivedIpv4Addr>::as_ipv4","value":"pub const fn as_ipv4(&Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Ipv4Addr`](std::net::Ipv4Addr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns an [`Ipv4Addr`](std::net::Ipv4Addr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":200723,"byte_end":200791,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":200796,"byte_end":200805,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201168,"byte_end":201180,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"name":"is_broadcast","qualname":"<ArchivedIpv4Addr>::is_broadcast","value":"pub const fn is_broadcast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a broadcast address (255.255.255.255).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a broadcast address (255.255.255.255).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":200965,"byte_end":201033,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201038,"byte_end":201041,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_broadcast()`](std::net::Ipv4Addr::is_broadcast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201046,"byte_end":201136,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201141,"byte_end":201150,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201468,"byte_end":201484,"line_start":36,"line_end":36,"column_start":18,"column_end":34},"name":"is_documentation","qualname":"<ArchivedIpv4Addr>::is_documentation","value":"pub const fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this address is in a range designated for documentation.","sig":null,"attributes":[{"value":"/ Returns `true` if this address is in a range designated for documentation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201247,"byte_end":201325,"line_start":32,"line_end":32,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201330,"byte_end":201333,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_documentation()`](std::net::Ipv4Addr::is_documentation()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201338,"byte_end":201436,"line_start":34,"line_end":34,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201441,"byte_end":201450,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201757,"byte_end":201770,"line_start":44,"line_end":44,"column_start":18,"column_end":31},"name":"is_link_local","qualname":"<ArchivedIpv4Addr>::is_link_local","value":"pub const fn is_link_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is link-local (169.254.0.0/16).","sig":null,"attributes":[{"value":"/ Returns `true` if the address is link-local (169.254.0.0/16).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201555,"byte_end":201620,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201625,"byte_end":201628,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_link_local()`](std::net::Ipv4Addr::is_link_local()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201633,"byte_end":201725,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201730,"byte_end":201739,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202034,"byte_end":202045,"line_start":52,"line_end":52,"column_start":18,"column_end":29},"name":"is_loopback","qualname":"<ArchivedIpv4Addr>::is_loopback","value":"pub const fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a loopback address (127.0.0.0/8).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a loopback address (127.0.0.0/8).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201838,"byte_end":201901,"line_start":48,"line_end":48,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201906,"byte_end":201909,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_loopback()`](std::net::Ipv4Addr::is_loopback()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":201914,"byte_end":202002,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202007,"byte_end":202016,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202310,"byte_end":202322,"line_start":60,"line_end":60,"column_start":18,"column_end":30},"name":"is_multicast","qualname":"<ArchivedIpv4Addr>::is_multicast","value":"pub const fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a multicast address (224.0.0.0/4).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a multicast address (224.0.0.0/4).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202111,"byte_end":202175,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202180,"byte_end":202183,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_multicast()`](std::net::Ipv4Addr::is_multicast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202188,"byte_end":202278,"line_start":58,"line_end":58,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202283,"byte_end":202292,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202568,"byte_end":202578,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"name":"is_private","qualname":"<ArchivedIpv4Addr>::is_private","value":"pub const fn is_private(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a private address.","sig":null,"attributes":[{"value":"/ Returns `true` if this is a private address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202389,"byte_end":202437,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202442,"byte_end":202445,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_private()`](std::net::Ipv4Addr::is_private()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202450,"byte_end":202536,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202541,"byte_end":202550,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202849,"byte_end":202863,"line_start":76,"line_end":76,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<ArchivedIpv4Addr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` for the special 'unspecified' address (0.0.0.0).","sig":null,"attributes":[{"value":"/ Returns `true` for the special 'unspecified' address (0.0.0.0).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202643,"byte_end":202710,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202715,"byte_end":202718,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_unspecified()`](std::net::Ipv4Addr::is_unspecified()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202723,"byte_end":202817,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202822,"byte_end":202831,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203216,"byte_end":203234,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"to_ipv6_compatible","qualname":"<ArchivedIpv4Addr>::to_ipv6_compatible","value":"pub const fn to_ipv6_compatible(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an IPv4-compatible [`IPv6` address](std::net::Ipv6Addr).","sig":null,"attributes":[{"value":"/ Converts this address to an IPv4-compatible [`IPv6` address](std::net::Ipv6Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":202932,"byte_end":203017,"line_start":80,"line_end":80,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203022,"byte_end":203025,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::to_ipv6_compatible()`](std::net::Ipv4Addr::to_ipv6_compatible()) for more","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203030,"byte_end":203123,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203128,"byte_end":203140,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203145,"byte_end":203154,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203159,"byte_end":203198,"line_start":85,"line_end":85,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203575,"byte_end":203589,"line_start":95,"line_end":95,"column_start":18,"column_end":32},"name":"to_ipv6_mapped","qualname":"<ArchivedIpv4Addr>::to_ipv6_mapped","value":"pub const fn to_ipv6_mapped(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an IPv4-mapped [`IPv6` address](std::net::Ipv6Addr).","sig":null,"attributes":[{"value":"/ Converts this address to an IPv4-mapped [`IPv6` address](std::net::Ipv6Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203311,"byte_end":203392,"line_start":90,"line_end":90,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203397,"byte_end":203400,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::to_ipv6_mapped()`](std::net::Ipv4Addr::to_ipv6_mapped()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203405,"byte_end":203499,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203504,"byte_end":203513,"line_start":93,"line_end":93,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203518,"byte_end":203557,"line_start":94,"line_end":94,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205077,"byte_end":205084,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"name":"as_ipv6","qualname":"<ArchivedIpv6Addr>::as_ipv6","value":"pub const fn as_ipv6(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Ipv6Addr`](std::net::Ipv6Addr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns an [`Ipv6Addr`](std::net::Ipv6Addr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204977,"byte_end":205045,"line_start":155,"line_end":155,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205050,"byte_end":205059,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205578,"byte_end":205589,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"name":"is_loopback","qualname":"<ArchivedIpv6Addr>::is_loopback","value":"pub const fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a loopback address (::1).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a loopback address (::1).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205390,"byte_end":205445,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205450,"byte_end":205453,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv6Addr::is_loopback()`](std::net::Ipv6Addr::is_loopback()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205458,"byte_end":205546,"line_start":173,"line_end":173,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205551,"byte_end":205560,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205851,"byte_end":205863,"line_start":183,"line_end":183,"column_start":18,"column_end":30},"name":"is_multicast","qualname":"<ArchivedIpv6Addr>::is_multicast","value":"pub const fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a multicast address (ff00::/8).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a multicast address (ff00::/8).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205655,"byte_end":205716,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205721,"byte_end":205724,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv6Addr::is_multicast()`](std::net::Ipv6Addr::is_multicast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205729,"byte_end":205819,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205824,"byte_end":205833,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206131,"byte_end":206145,"line_start":191,"line_end":191,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<ArchivedIpv6Addr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` for the special 'unspecified' address (::).","sig":null,"attributes":[{"value":"/ Returns `true` for the special 'unspecified' address (::).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205930,"byte_end":205992,"line_start":187,"line_end":187,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":205997,"byte_end":206000,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv6Addr::is_unspecified()`](std::net::Ipv6Addr::is_unspecified()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206005,"byte_end":206099,"line_start":189,"line_end":189,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206104,"byte_end":206113,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206318,"byte_end":206324,"line_start":197,"line_end":197,"column_start":18,"column_end":24},"name":"octets","qualname":"<ArchivedIpv6Addr>::octets","value":"pub const fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the sixteen eight-bit integers the IPv6 address consists of.\n","sig":null,"attributes":[{"value":"/ Returns the sixteen eight-bit integers the IPv6 address consists of.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206214,"byte_end":206286,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206291,"byte_end":206300,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206653,"byte_end":206660,"line_start":206,"line_end":206,"column_start":18,"column_end":25},"name":"to_ipv4","qualname":"<ArchivedIpv6Addr>::to_ipv4","value":"pub const fn to_ipv4(&Self) -> Option<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an [`IPv4` address](std::net::Ipv4Addr). Returns\n [`None`](std::option::Option::None) if this address is neither IPv4-compatible or\n IPv4-mapped.\n","sig":null,"attributes":[{"value":"/ Converts this address to an [`IPv4` address](std::net::Ipv4Addr). Returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206389,"byte_end":206466,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/ [`None`](std::option::Option::None) if this address is neither IPv4-compatible or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206471,"byte_end":206556,"line_start":202,"line_end":202,"column_start":5,"column_end":90}},{"value":"/ IPv4-mapped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206561,"byte_end":206577,"line_start":203,"line_end":203,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206582,"byte_end":206591,"line_start":204,"line_end":204,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206596,"byte_end":206635,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208142,"byte_end":208151,"line_start":268,"line_end":268,"column_start":18,"column_end":27},"name":"as_ipaddr","qualname":"<ArchivedIpAddr>::as_ipaddr","value":"pub const fn as_ipaddr(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`IpAddr`](std::net::IpAddr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns an [`IpAddr`](std::net::IpAddr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208046,"byte_end":208110,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208115,"byte_end":208124,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208527,"byte_end":208538,"line_start":279,"line_end":279,"column_start":18,"column_end":29},"name":"is_loopback","qualname":"<ArchivedIpAddr>::is_loopback","value":"pub const fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a loopback address.","sig":null,"attributes":[{"value":"/ Returns `true` if this is a loopback address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208349,"byte_end":208398,"line_start":275,"line_end":275,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208403,"byte_end":208406,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ See [`IpAddr::is_loopback()`](std::net::IpAddr::is_loopback()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208411,"byte_end":208495,"line_start":277,"line_end":277,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208500,"byte_end":208509,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208891,"byte_end":208903,"line_start":290,"line_end":290,"column_start":18,"column_end":30},"name":"is_multicast","qualname":"<ArchivedIpAddr>::is_multicast","value":"pub const fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a multicast address.","sig":null,"attributes":[{"value":"/ Returns `true` if this is a multicast address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208710,"byte_end":208760,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208765,"byte_end":208768,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ See [`IpAddr::is_multicast()`](std::net::IpAddr::is_multicast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208773,"byte_end":208859,"line_start":288,"line_end":288,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208864,"byte_end":208873,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209269,"byte_end":209283,"line_start":301,"line_end":301,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<ArchivedIpAddr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` for the special 'unspecified' address.","sig":null,"attributes":[{"value":"/ Returns `true` for the special 'unspecified' address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209077,"byte_end":209134,"line_start":297,"line_end":297,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209139,"byte_end":209142,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See [`IpAddr::is_unspecified()`](std::net::IpAddr::is_unspecified()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209147,"byte_end":209237,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209242,"byte_end":209251,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212773,"byte_end":212790,"line_start":419,"line_end":419,"column_start":12,"column_end":29},"name":"as_socket_addr_v4","qualname":"<ArchivedSocketAddrV4>::as_socket_addr_v4","value":"pub fn as_socket_addr_v4(&Self) -> SocketAddrV4","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SocketAddrV4`](std::net::SocketAddrV4) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns a [`SocketAddrV4`](std::net::SocketAddrV4) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212672,"byte_end":212747,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212752,"byte_end":212761,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214839,"byte_end":214856,"line_start":493,"line_end":493,"column_start":12,"column_end":29},"name":"as_socket_addr_v6","qualname":"<ArchivedSocketAddrV6>::as_socket_addr_v6","value":"pub fn as_socket_addr_v6(&Self) -> SocketAddrV6","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SocketAddrV6`](std::net::SocketAddrV6) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns a [`SocketAddrV6`](std::net::SocketAddrV6) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214738,"byte_end":214813,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214818,"byte_end":214827,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217283,"byte_end":217297,"line_start":581,"line_end":581,"column_start":12,"column_end":26},"name":"as_socket_addr","qualname":"<ArchivedSocketAddr>::as_socket_addr","value":"pub fn as_socket_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SocketAddr`](std::net::SocketAddr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns a [`SocketAddr`](std::net::SocketAddr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217186,"byte_end":217257,"line_start":579,"line_end":579,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217262,"byte_end":217271,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217624,"byte_end":217626,"line_start":590,"line_end":590,"column_start":12,"column_end":14},"name":"ip","qualname":"<ArchivedSocketAddr>::ip","value":"pub fn ip(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217535,"byte_end":217598,"line_start":588,"line_end":588,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217603,"byte_end":217612,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3096},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","parent":null,"children":[{"krate":0,"index":3097},{"krate":0,"index":7255},{"krate":0,"index":7258},{"krate":0,"index":7261},{"krate":0,"index":7262},{"krate":0,"index":7264},{"krate":0,"index":7266},{"krate":0,"index":7267},{"krate":0,"index":7270},{"krate":0,"index":7273},{"krate":0,"index":7275},{"krate":0,"index":7276},{"krate":0,"index":7279},{"krate":0,"index":3100},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":7287},{"krate":0,"index":7288},{"krate":0,"index":7290},{"krate":0,"index":7292},{"krate":0,"index":7293},{"krate":0,"index":7296},{"krate":0,"index":7299},{"krate":0,"index":7301},{"krate":0,"index":7302},{"krate":0,"index":7305},{"krate":0,"index":3103},{"krate":0,"index":7307},{"krate":0,"index":7314},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7320},{"krate":0,"index":7322},{"krate":0,"index":7325},{"krate":0,"index":7327},{"krate":0,"index":7328},{"krate":0,"index":7331},{"krate":0,"index":3106},{"krate":0,"index":7333},{"krate":0,"index":7336},{"krate":0,"index":7338},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7346},{"krate":0,"index":7349},{"krate":0,"index":7351},{"krate":0,"index":7352},{"krate":0,"index":7355},{"krate":0,"index":3109},{"krate":0,"index":7357},{"krate":0,"index":7362},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7367},{"krate":0,"index":7369},{"krate":0,"index":7370},{"krate":0,"index":7372},{"krate":0,"index":7375},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7381},{"krate":0,"index":3112},{"krate":0,"index":7383},{"krate":0,"index":7390},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7398},{"krate":0,"index":7401},{"krate":0,"index":7403},{"krate":0,"index":7404},{"krate":0,"index":7407},{"krate":0,"index":3117}],"decl_id":null,"docs":" Archived versions of network types.\n","sig":null,"attributes":[{"value":"/ Archived versions of network types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":229963,"byte_end":230002,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230252,"byte_end":230268,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"ArchivedIpv4Addr","qualname":"::net::ArchivedIpv4Addr","value":"ArchivedIpv4Addr {  }","parent":null,"children":[{"krate":0,"index":7256}],"decl_id":null,"docs":" An archived [`Ipv4Addr`](std::net::Ipv4Addr).\n","sig":null,"attributes":[{"value":"/ An archived [`Ipv4Addr`](std::net::Ipv4Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230026,"byte_end":230075,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230220,"byte_end":230240,"line_start":8,"line_end":8,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230431,"byte_end":230437,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"name":"octets","qualname":"<ArchivedIpv4Addr>::octets","value":"pub const fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the four eight-bit integers that make up this address.\n","sig":null,"attributes":[{"value":"/ Returns the four eight-bit integers that make up this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230333,"byte_end":230399,"line_start":14,"line_end":14,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230404,"byte_end":230413,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7281},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230713,"byte_end":230729,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"ArchivedIpv6Addr","qualname":"::net::ArchivedIpv6Addr","value":"ArchivedIpv6Addr {  }","parent":null,"children":[{"krate":0,"index":7282}],"decl_id":null,"docs":" An archived [`Ipv6Addr`](std::net::Ipv6Addr).\n","sig":null,"attributes":[{"value":"/ An archived [`Ipv6Addr`](std::net::Ipv6Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230487,"byte_end":230536,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230681,"byte_end":230701,"line_start":24,"line_end":24,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230891,"byte_end":230899,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"name":"segments","qualname":"<ArchivedIpv6Addr>::segments","value":"pub const fn segments(&Self) -> [u16; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the eight 16-bit segments that make up this address.\n","sig":null,"attributes":[{"value":"/ Returns the eight 16-bit segments that make up this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230795,"byte_end":230859,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230864,"byte_end":230873,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7308},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231732,"byte_end":231734,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"V4","qualname":"::net::ArchivedIpAddr::V4","value":"ArchivedIpAddr::V4(ArchivedIpv4Addr)","parent":{"krate":0,"index":7307},"children":[],"decl_id":null,"docs":" An IPv4 address.\n","sig":null,"attributes":[{"value":"/ An IPv4 address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231707,"byte_end":231727,"line_start":51,"line_end":51,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7311},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231783,"byte_end":231785,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"V6","qualname":"::net::ArchivedIpAddr::V6","value":"ArchivedIpAddr::V6(ArchivedIpv6Addr)","parent":{"krate":0,"index":7307},"children":[],"decl_id":null,"docs":" An IPv6 address.\n","sig":null,"attributes":[{"value":"/ An IPv6 address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231758,"byte_end":231778,"line_start":53,"line_end":53,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":7307},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231686,"byte_end":231700,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"ArchivedIpAddr","qualname":"::net::ArchivedIpAddr","value":"pub enum ArchivedIpAddr { V4(ArchivedIpv4Addr), V6(ArchivedIpv6Addr), }","parent":null,"children":[{"krate":0,"index":7308},{"krate":0,"index":7311}],"decl_id":null,"docs":" An archived [`IpAddr`](std::net::IpAddr).\n","sig":null,"attributes":[{"value":"/ An archived [`IpAddr`](std::net::IpAddr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231484,"byte_end":231529,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231665,"byte_end":231676,"line_start":49,"line_end":49,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231977,"byte_end":231984,"line_start":61,"line_end":61,"column_start":18,"column_end":25},"name":"is_ipv4","qualname":"<ArchivedIpAddr>::is_ipv4","value":"pub const fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this address is an [`IPv4` address](std::net::IpAddr::V4), and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this address is an [`IPv4` address](std::net::IpAddr::V4), and `false`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231834,"byte_end":231926,"line_start":58,"line_end":58,"column_start":5,"column_end":97}},{"value":"/ otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231931,"byte_end":231945,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231950,"byte_end":231959,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232202,"byte_end":232209,"line_start":68,"line_end":68,"column_start":18,"column_end":25},"name":"is_ipv6","qualname":"<ArchivedIpAddr>::is_ipv6","value":"pub const fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this address is an [`IPv6` address](std::net::IpAddr::V6), and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this address is an [`IPv6` address](std::net::IpAddr::V6), and `false`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232059,"byte_end":232151,"line_start":65,"line_end":65,"column_start":5,"column_end":97}},{"value":"/ otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232156,"byte_end":232170,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232175,"byte_end":232184,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7333},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232536,"byte_end":232556,"line_start":77,"line_end":77,"column_start":12,"column_end":32},"name":"ArchivedSocketAddrV4","qualname":"::net::ArchivedSocketAddrV4","value":"ArchivedSocketAddrV4 {  }","parent":null,"children":[{"krate":0,"index":7334},{"krate":0,"index":7335}],"decl_id":null,"docs":" An archived [`SocketAddrV4`](std::net::SocketAddrV4).\n","sig":null,"attributes":[{"value":"/ An archived [`SocketAddrV4`](std::net::SocketAddrV4).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232282,"byte_end":232339,"line_start":73,"line_end":73,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232762,"byte_end":232764,"line_start":85,"line_end":85,"column_start":18,"column_end":20},"name":"ip","qualname":"<ArchivedSocketAddrV4>::ip","value":"pub const fn ip(&Self) -> &ArchivedIpv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232667,"byte_end":232730,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232735,"byte_end":232744,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232919,"byte_end":232923,"line_start":91,"line_end":91,"column_start":18,"column_end":22},"name":"port","qualname":"<ArchivedSocketAddrV4>::port","value":"pub const fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232823,"byte_end":232887,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232892,"byte_end":232901,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7357},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233237,"byte_end":233257,"line_start":100,"line_end":100,"column_start":12,"column_end":32},"name":"ArchivedSocketAddrV6","qualname":"::net::ArchivedSocketAddrV6","value":"ArchivedSocketAddrV6 {  }","parent":null,"children":[{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7360},{"krate":0,"index":7361}],"decl_id":null,"docs":" An archived [`SocketAddrV6`](std::net::SocketAddrV6).\n","sig":null,"attributes":[{"value":"/ An archived [`SocketAddrV6`](std::net::SocketAddrV6).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232983,"byte_end":233040,"line_start":96,"line_end":96,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233645,"byte_end":233653,"line_start":112,"line_end":112,"column_start":18,"column_end":26},"name":"flowinfo","qualname":"<ArchivedSocketAddrV6>::flowinfo","value":"pub const fn flowinfo(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the flow information associated with this address.","sig":null,"attributes":[{"value":"/ Returns the flow information associated with this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233448,"byte_end":233510,"line_start":108,"line_end":108,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233515,"byte_end":233518,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ See [`SocketAddrV6::flowinfo()`](std::net::SocketAddrV6::flowinfo()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233523,"byte_end":233613,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233618,"byte_end":233627,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233814,"byte_end":233816,"line_start":118,"line_end":118,"column_start":18,"column_end":20},"name":"ip","qualname":"<ArchivedSocketAddrV6>::ip","value":"pub const fn ip(&Self) -> &ArchivedIpv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233719,"byte_end":233782,"line_start":116,"line_end":116,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233787,"byte_end":233796,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233971,"byte_end":233975,"line_start":124,"line_end":124,"column_start":18,"column_end":22},"name":"port","qualname":"<ArchivedSocketAddrV6>::port","value":"pub const fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233875,"byte_end":233939,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233944,"byte_end":233953,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234226,"byte_end":234234,"line_start":132,"line_end":132,"column_start":18,"column_end":26},"name":"scope_id","qualname":"<ArchivedSocketAddrV6>::scope_id","value":"pub const fn scope_id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scope ID associated with this address.","sig":null,"attributes":[{"value":"/ Returns the scope ID associated with this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234037,"byte_end":234091,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234096,"byte_end":234099,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ See [`SocketAddrV6::scope_id()`](std::net::SocketAddrV6::scope_id()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234104,"byte_end":234194,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234199,"byte_end":234208,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7384},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234565,"byte_end":234567,"line_start":143,"line_end":143,"column_start":5,"column_end":7},"name":"V4","qualname":"::net::ArchivedSocketAddr::V4","value":"ArchivedSocketAddr::V4(ArchivedSocketAddrV4)","parent":{"krate":0,"index":7383},"children":[],"decl_id":null,"docs":" An IPv4 socket address.\n","sig":null,"attributes":[{"value":"/ An IPv4 socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234533,"byte_end":234560,"line_start":142,"line_end":142,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7387},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234627,"byte_end":234629,"line_start":145,"line_end":145,"column_start":5,"column_end":7},"name":"V6","qualname":"::net::ArchivedSocketAddr::V6","value":"ArchivedSocketAddr::V6(ArchivedSocketAddrV6)","parent":{"krate":0,"index":7383},"children":[],"decl_id":null,"docs":" An IPv6 socket address.\n","sig":null,"attributes":[{"value":"/ An IPv6 socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234595,"byte_end":234622,"line_start":144,"line_end":144,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":7383},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234508,"byte_end":234526,"line_start":141,"line_end":141,"column_start":10,"column_end":28},"name":"ArchivedSocketAddr","qualname":"::net::ArchivedSocketAddr","value":"pub enum ArchivedSocketAddr {\n    V4(ArchivedSocketAddrV4),\n    V6(ArchivedSocketAddrV6),\n}","parent":null,"children":[{"krate":0,"index":7384},{"krate":0,"index":7387}],"decl_id":null,"docs":" An archived [`SocketAddr`](std::net::SocketAddr).\n","sig":null,"attributes":[{"value":"/ An archived [`SocketAddr`](std::net::SocketAddr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234298,"byte_end":234351,"line_start":137,"line_end":137,"column_start":1,"column_end":54}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234487,"byte_end":234498,"line_start":140,"line_end":140,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234776,"byte_end":234780,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"port","qualname":"<ArchivedSocketAddr>::port","value":"pub fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234686,"byte_end":234750,"line_start":149,"line_end":149,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234755,"byte_end":234764,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235141,"byte_end":235148,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<ArchivedSocketAddr>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an\n [`IPv4` address](std::net::IpAddr::V4), and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234953,"byte_end":235044,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ [`IPv4` address](std::net::IpAddr::V4), and `false` otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235049,"byte_end":235115,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235120,"byte_end":235129,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235415,"byte_end":235422,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<ArchivedSocketAddr>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an\n [`IPv6` address](std::net::IpAddr::V6), and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235227,"byte_end":235318,"line_start":165,"line_end":165,"column_start":5,"column_end":96}},{"value":"/ [`IPv6` address](std::net::IpAddr::V6), and `false` otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235323,"byte_end":235389,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":235394,"byte_end":235403,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3121},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"niche","qualname":"::niche","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/mod.rs","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3230}],"decl_id":null,"docs":" Manually niched type replacements.\n","sig":null,"attributes":[{"value":"/ Manually niched type replacements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/mod.rs","byte_start":235670,"byte_end":235708,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":3122},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option_box","qualname":"::niche::option_box","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3137},{"krate":0,"index":3140},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3163},{"krate":0,"index":3166},{"krate":0,"index":3169},{"krate":0,"index":3172},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3192},{"krate":0,"index":3199},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3223}],"decl_id":null,"docs":" A niched archived `Option<Box<T>>` that uses less space.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/mod.rs","byte_start":235710,"byte_end":235735,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/ A niched archived `Option<Box<T>>` that uses less space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":235786,"byte_end":235846,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3175},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236269,"byte_end":236286,"line_start":20,"line_end":20,"column_start":12,"column_end":29},"name":"ArchivedOptionBox","qualname":"::niche::option_box::ArchivedOptionBox","value":"ArchivedOptionBox {  }","parent":null,"children":[{"krate":0,"index":3177}],"decl_id":null,"docs":" A niched archived `Option<Box<T>>`.","sig":null,"attributes":[{"value":"/ A niched archived `Option<Box<T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236121,"byte_end":236160,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236161,"byte_end":236164,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It uses less space by storing the `None` variant as a null pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236165,"byte_end":236236,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236237,"byte_end":236257,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236488,"byte_end":236495,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"is_none","qualname":"<ArchivedOptionBox<T>>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option box is a `None` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option box is a `None` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236407,"byte_end":236462,"line_start":25,"line_end":25,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236467,"byte_end":236476,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236637,"byte_end":236644,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"is_some","qualname":"<ArchivedOptionBox<T>>::is_some","value":"pub fn is_some(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option box is a `Some` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option box is a `Some` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236556,"byte_end":236611,"line_start":31,"line_end":31,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236616,"byte_end":236625,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236776,"byte_end":236782,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<ArchivedOptionBox<T>>::as_ref","value":"pub fn as_ref(&Self) -> Option<&ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&ArchivedBox<T>>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&ArchivedBox<T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236705,"byte_end":236750,"line_start":37,"line_end":37,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236755,"byte_end":236764,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237013,"byte_end":237019,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<ArchivedOptionBox<T>>::as_mut","value":"pub fn as_mut(&mut Self) -> Option<&mut ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&mut ArchivedBox<T>>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&mut ArchivedBox<T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236938,"byte_end":236987,"line_start":47,"line_end":47,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236992,"byte_end":237001,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237294,"byte_end":237304,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"as_pin_ref","qualname":"<ArchivedOptionBox<T>>::as_pin_ref","value":"pub fn as_pin_ref(Pin<&Self>) -> Option<Pin<&ArchivedBox<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&ArchivedOptionBox<T>>` to `Option<Pin<&ArchivedBox<T>>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&ArchivedOptionBox<T>>` to `Option<Pin<&ArchivedBox<T>>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237187,"byte_end":237268,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237273,"byte_end":237282,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237558,"byte_end":237568,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"as_pin_mut","qualname":"<ArchivedOptionBox<T>>::as_pin_mut","value":"pub fn as_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut ArchivedBox<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut ArchivedBox<T>>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut ArchivedBox<T>>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237446,"byte_end":237532,"line_start":63,"line_end":63,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237537,"byte_end":237546,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237866,"byte_end":237870,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedOptionBox<T>>::iter","value":"pub fn iter(&Self) -> Iter<, ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237782,"byte_end":237840,"line_start":73,"line_end":73,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237845,"byte_end":237854,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238069,"byte_end":238077,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArchivedOptionBox<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":237978,"byte_end":238043,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238048,"byte_end":238057,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238410,"byte_end":238418,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"as_deref","qualname":"<ArchivedOptionBox<T>>::as_deref","value":"pub fn as_deref(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&ArchivedOptionBox<T>` to `Option<&T>`.","sig":null,"attributes":[{"value":"/ Converts from `&ArchivedOptionBox<T>` to `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238195,"byte_end":238253,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238258,"byte_end":238261,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Leaves the original `ArchivedOptionBox` in-place, creating a new one with a reference to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238266,"byte_end":238362,"line_start":91,"line_end":91,"column_start":5,"column_end":101}},{"value":"/ original one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238367,"byte_end":238384,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238389,"byte_end":238398,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238859,"byte_end":238878,"line_start":110,"line_end":110,"column_start":19,"column_end":38},"name":"resolve_from_option","qualname":"<ArchivedOptionBox<T>>::resolve_from_option","value":"pub unsafe fn resolve_from_option<U: ArchiveUnsized<Archived = T> +\n                                  ?Sized>(Option<&U>, usize,\n                                          OptionBoxResolver<U::MetadataResolver>,\n                                          *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.","sig":null,"attributes":[{"value":"/ Resolves an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238595,"byte_end":238665,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238670,"byte_end":238673,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238678,"byte_end":238690,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238695,"byte_end":238698,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238703,"byte_end":238763,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `field`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238768,"byte_end":238826,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238831,"byte_end":238840,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":239606,"byte_end":239627,"line_start":132,"line_end":132,"column_start":12,"column_end":33},"name":"serialize_from_option","qualname":"<ArchivedOptionBox<T>>::serialize_from_option","value":"pub fn serialize_from_option<U, S>(Option<&U>, &mut S)\n-> Result<OptionBoxResolver<U::MetadataResolver>, S::Error> where\nU: SerializeUnsized<S, Archived = T> + ?Sized, S: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.\n","sig":null,"attributes":[{"value":"/ Serializes an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":239508,"byte_end":239580,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":239585,"byte_end":239594,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3217},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241557,"byte_end":241561,"line_start":198,"line_end":198,"column_start":10,"column_end":14},"name":"Iter","qualname":"::niche::option_box::Iter","value":"crate::option::Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a reference to the `Some` variant of an `ArchivedOptionBox`.","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Some` variant of an `ArchivedOptionBox`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241293,"byte_end":241374,"line_start":193,"line_end":193,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241375,"byte_end":241378,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOptionBox` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241379,"byte_end":241469,"line_start":195,"line_end":195,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241470,"byte_end":241473,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOptionBox::iter`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241474,"byte_end":241547,"line_start":197,"line_end":197,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":3220},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241876,"byte_end":241883,"line_start":205,"line_end":205,"column_start":10,"column_end":17},"name":"IterMut","qualname":"::niche::option_box::IterMut","value":"crate::option::IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a mutable reference to the `Some` variant of an `ArchivedOptionBox`.","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Some` variant of an `ArchivedOptionBox`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241600,"byte_end":241689,"line_start":200,"line_end":200,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241690,"byte_end":241693,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOptionBox` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241694,"byte_end":241784,"line_start":202,"line_end":202,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241785,"byte_end":241788,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOptionBox::iter_mut`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241789,"byte_end":241866,"line_start":204,"line_end":204,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3225},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":242048,"byte_end":242052,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"None","qualname":"::niche::option_box::OptionBoxResolver::None","value":"OptionBoxResolver::None","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":" The `ArchivedOptionBox` was `None`\n","sig":null,"attributes":[{"value":"/ The `ArchivedOptionBox` was `None`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":242005,"byte_end":242043,"line_start":209,"line_end":209,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":242101,"byte_end":242105,"line_start":212,"line_end":212,"column_start":5,"column_end":9},"name":"Some","qualname":"::niche::option_box::OptionBoxResolver::Some","value":"OptionBoxResolver::Some(BoxResolver<T>)","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":" The resolver for the `ArchivedBox`\n","sig":null,"attributes":[{"value":"/ The resolver for the `ArchivedBox`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":242058,"byte_end":242096,"line_start":211,"line_end":211,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3223},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241978,"byte_end":241995,"line_start":208,"line_end":208,"column_start":10,"column_end":27},"name":"OptionBoxResolver","qualname":"::niche::option_box::OptionBoxResolver","value":"pub enum OptionBoxResolver<T> { None, Some(BoxResolver<T>), }","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3227}],"decl_id":null,"docs":" The resolver for [`ArchivedOptionBox`].\n","sig":null,"attributes":[{"value":"/ The resolver for [`ArchivedOptionBox`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241925,"byte_end":241968,"line_start":207,"line_end":207,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3230},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option_nonzero","qualname":"::niche::option_nonzero","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3275},{"krate":0,"index":3278},{"krate":0,"index":7409},{"krate":0,"index":7411},{"krate":0,"index":7427},{"krate":0,"index":7429},{"krate":0,"index":7430},{"krate":0,"index":7433},{"krate":0,"index":7435},{"krate":0,"index":7437},{"krate":0,"index":7439},{"krate":0,"index":7441},{"krate":0,"index":7457},{"krate":0,"index":7459},{"krate":0,"index":7460},{"krate":0,"index":7463},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7469},{"krate":0,"index":7471},{"krate":0,"index":7487},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7493},{"krate":0,"index":7495},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":7501},{"krate":0,"index":7517},{"krate":0,"index":7519},{"krate":0,"index":7520},{"krate":0,"index":7523},{"krate":0,"index":7525},{"krate":0,"index":7527},{"krate":0,"index":7529},{"krate":0,"index":7531},{"krate":0,"index":7547},{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7553},{"krate":0,"index":7555},{"krate":0,"index":7557},{"krate":0,"index":7559},{"krate":0,"index":7561},{"krate":0,"index":7577},{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":7583},{"krate":0,"index":7585},{"krate":0,"index":7587},{"krate":0,"index":7589},{"krate":0,"index":7591},{"krate":0,"index":7607},{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7613},{"krate":0,"index":7615},{"krate":0,"index":7617},{"krate":0,"index":7619},{"krate":0,"index":7621},{"krate":0,"index":7637},{"krate":0,"index":7639},{"krate":0,"index":7640},{"krate":0,"index":7643},{"krate":0,"index":7645},{"krate":0,"index":7647},{"krate":0,"index":7649},{"krate":0,"index":7651},{"krate":0,"index":7667},{"krate":0,"index":7669},{"krate":0,"index":7670},{"krate":0,"index":7673},{"krate":0,"index":7675},{"krate":0,"index":7677},{"krate":0,"index":7679},{"krate":0,"index":7681},{"krate":0,"index":7697},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7703},{"krate":0,"index":7705},{"krate":0,"index":7707},{"krate":0,"index":3279},{"krate":0,"index":3282}],"decl_id":null,"docs":" Niched archived `Option<NonZero>` integers that use less space.\n","sig":null,"attributes":[{"value":"/ Niched archived `Option<NonZero>` integers that use less space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242339,"byte_end":242406,"line_start":1,"line_end":1,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7409},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248455,"byte_end":248478,"line_start":172,"line_end":172,"column_start":31,"column_end":54},"name":"ArchivedOptionNonZeroI8","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroI8","value":"ArchivedOptionNonZeroI8 {  }","parent":null,"children":[{"krate":0,"index":7410}],"decl_id":null,"docs":"A niched archived `Option<NonZeroI8>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7439},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248526,"byte_end":248550,"line_start":173,"line_end":173,"column_start":31,"column_end":55},"name":"ArchivedOptionNonZeroI16","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroI16","value":"ArchivedOptionNonZeroI16 {  }","parent":null,"children":[{"krate":0,"index":7440}],"decl_id":null,"docs":"A niched archived `Option<NonZeroI16>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248600,"byte_end":248624,"line_start":174,"line_end":174,"column_start":31,"column_end":55},"name":"ArchivedOptionNonZeroI32","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroI32","value":"ArchivedOptionNonZeroI32 {  }","parent":null,"children":[{"krate":0,"index":7470}],"decl_id":null,"docs":"A niched archived `Option<NonZeroI32>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248674,"byte_end":248698,"line_start":175,"line_end":175,"column_start":31,"column_end":55},"name":"ArchivedOptionNonZeroI64","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroI64","value":"ArchivedOptionNonZeroI64 {  }","parent":null,"children":[{"krate":0,"index":7500}],"decl_id":null,"docs":"A niched archived `Option<NonZeroI64>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7529},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248748,"byte_end":248773,"line_start":176,"line_end":176,"column_start":31,"column_end":56},"name":"ArchivedOptionNonZeroI128","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroI128","value":"ArchivedOptionNonZeroI128 {  }","parent":null,"children":[{"krate":0,"index":7530}],"decl_id":null,"docs":"A niched archived `Option<NonZeroI128>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7559},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248826,"byte_end":248849,"line_start":178,"line_end":178,"column_start":31,"column_end":54},"name":"ArchivedOptionNonZeroU8","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroU8","value":"ArchivedOptionNonZeroU8 {  }","parent":null,"children":[{"krate":0,"index":7560}],"decl_id":null,"docs":"A niched archived `Option<NonZeroU8>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7589},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248897,"byte_end":248921,"line_start":179,"line_end":179,"column_start":31,"column_end":55},"name":"ArchivedOptionNonZeroU16","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroU16","value":"ArchivedOptionNonZeroU16 {  }","parent":null,"children":[{"krate":0,"index":7590}],"decl_id":null,"docs":"A niched archived `Option<NonZeroU16>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7619},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":248971,"byte_end":248995,"line_start":180,"line_end":180,"column_start":31,"column_end":55},"name":"ArchivedOptionNonZeroU32","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroU32","value":"ArchivedOptionNonZeroU32 {  }","parent":null,"children":[{"krate":0,"index":7620}],"decl_id":null,"docs":"A niched archived `Option<NonZeroU32>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7649},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249045,"byte_end":249069,"line_start":181,"line_end":181,"column_start":31,"column_end":55},"name":"ArchivedOptionNonZeroU64","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroU64","value":"ArchivedOptionNonZeroU64 {  }","parent":null,"children":[{"krate":0,"index":7650}],"decl_id":null,"docs":"A niched archived `Option<NonZeroU64>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7679},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249119,"byte_end":249144,"line_start":182,"line_end":182,"column_start":31,"column_end":56},"name":"ArchivedOptionNonZeroU128","qualname":"::niche::option_nonzero::ArchivedOptionNonZeroU128","value":"ArchivedOptionNonZeroU128 {  }","parent":null,"children":[{"krate":0,"index":7680}],"decl_id":null,"docs":"A niched archived `Option<NonZeroU128>`\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":242800,"byte_end":242820,"line_start":16,"line_end":16,"column_start":9,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3279},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249381,"byte_end":249385,"line_start":188,"line_end":188,"column_start":10,"column_end":14},"name":"Iter","qualname":"::niche::option_nonzero::Iter","value":"crate::option::Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a reference to the `Some` variant of an `ArchivedOptionNonZero` integer.","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Some` variant of an `ArchivedOptionNonZero` integer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249167,"byte_end":249260,"line_start":184,"line_end":184,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249261,"byte_end":249264,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOptionNonZero` integer is a `Some`, otherwise","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249265,"byte_end":249361,"line_start":186,"line_end":186,"column_start":1,"column_end":97}},{"value":"/ none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249362,"byte_end":249371,"line_start":187,"line_end":187,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":3282},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249650,"byte_end":249657,"line_start":195,"line_end":195,"column_start":10,"column_end":17},"name":"IterMut","qualname":"::niche::option_nonzero::IterMut","value":"crate::option::IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator over a mutable reference to the `Some` variant of an `ArchivedOptionNonZero`\n integer.","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Some` variant of an `ArchivedOptionNonZero`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249424,"byte_end":249516,"line_start":190,"line_end":190,"column_start":1,"column_end":93}},{"value":"/ integer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249517,"byte_end":249529,"line_start":191,"line_end":191,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249530,"byte_end":249533,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOptionNonZero` integer is a `Some`, otherwise","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249534,"byte_end":249630,"line_start":193,"line_end":193,"column_start":1,"column_end":97}},{"value":"/ none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_nonzero.rs","byte_start":249631,"byte_end":249640,"line_start":194,"line_end":194,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":3285},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":7709},{"krate":0,"index":7713},{"krate":0,"index":7716},{"krate":0,"index":7719},{"krate":0,"index":7721},{"krate":0,"index":7725},{"krate":0,"index":7727},{"krate":0,"index":7730},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3308},{"krate":0,"index":7734},{"krate":0,"index":7738},{"krate":0,"index":7741},{"krate":0,"index":7744},{"krate":0,"index":7746},{"krate":0,"index":7750},{"krate":0,"index":7752},{"krate":0,"index":7755},{"krate":0,"index":3312},{"krate":0,"index":3315},{"krate":0,"index":3320},{"krate":0,"index":7759},{"krate":0,"index":7762},{"krate":0,"index":7765},{"krate":0,"index":7768},{"krate":0,"index":7770},{"krate":0,"index":7774},{"krate":0,"index":7776},{"krate":0,"index":7779},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3331},{"krate":0,"index":7783},{"krate":0,"index":7786},{"krate":0,"index":7789},{"krate":0,"index":7792},{"krate":0,"index":7794},{"krate":0,"index":7798},{"krate":0,"index":7800},{"krate":0,"index":7803},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3342},{"krate":0,"index":7807},{"krate":0,"index":7810},{"krate":0,"index":7813},{"krate":0,"index":7816},{"krate":0,"index":7818},{"krate":0,"index":7822},{"krate":0,"index":7824},{"krate":0,"index":7827},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3353}],"decl_id":null,"docs":" Archived versions of `ops` types.\n","sig":null,"attributes":[{"value":"/ Archived versions of `ops` types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":249699,"byte_end":249736,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7709},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250012,"byte_end":250025,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"ArchivedRange","qualname":"::ops::ArchivedRange","value":"ArchivedRange { start, end }","parent":null,"children":[{"krate":0,"index":7711},{"krate":0,"index":7712}],"decl_id":null,"docs":" An archived [`Range`](::core::ops::Range).\n","sig":null,"attributes":[{"value":"/ An archived [`Range`](::core::ops::Range).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":249799,"byte_end":249845,"line_start":8,"line_end":8,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":7711},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250089,"byte_end":250094,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"start","qualname":"::ops::ArchivedRange::start","value":"T","parent":{"krate":0,"index":7709},"children":[],"decl_id":null,"docs":" The lower bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The lower bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250035,"byte_end":250080,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7712},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250157,"byte_end":250160,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRange::end","value":"T","parent":{"krate":0,"index":7709},"children":[],"decl_id":null,"docs":" The upper bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250103,"byte_end":250148,"line_start":15,"line_end":15,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250524,"byte_end":250532,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRange<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>,\nU: PartialOrd<T> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250443,"byte_end":250498,"line_start":29,"line_end":29,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250503,"byte_end":250512,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250780,"byte_end":250788,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedRange<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the range contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range contains no items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250704,"byte_end":250754,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250759,"byte_end":250768,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7734},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251501,"byte_end":251523,"line_start":67,"line_end":67,"column_start":12,"column_end":34},"name":"ArchivedRangeInclusive","qualname":"::ops::ArchivedRangeInclusive","value":"ArchivedRangeInclusive { start, end }","parent":null,"children":[{"krate":0,"index":7736},{"krate":0,"index":7737}],"decl_id":null,"docs":" An archived [`RangeInclusive`](::core::ops::RangeInclusive).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeInclusive`](::core::ops::RangeInclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251270,"byte_end":251334,"line_start":63,"line_end":63,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":7736},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251587,"byte_end":251592,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"start","qualname":"::ops::ArchivedRangeInclusive::start","value":"T","parent":{"krate":0,"index":7734},"children":[],"decl_id":null,"docs":" The lower bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The lower bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251533,"byte_end":251578,"line_start":68,"line_end":68,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7737},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251655,"byte_end":251658,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRangeInclusive::end","value":"T","parent":{"krate":0,"index":7734},"children":[],"decl_id":null,"docs":" The upper bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251601,"byte_end":251646,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252055,"byte_end":252063,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeInclusive<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>,\nU: PartialOrd<T> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251974,"byte_end":252029,"line_start":85,"line_end":85,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252034,"byte_end":252043,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252311,"byte_end":252319,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedRangeInclusive<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the range contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range contains no items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252235,"byte_end":252285,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252290,"byte_end":252299,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7759},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253012,"byte_end":253029,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"ArchivedRangeFrom","qualname":"::ops::ArchivedRangeFrom","value":"ArchivedRangeFrom { start }","parent":null,"children":[{"krate":0,"index":7761}],"decl_id":null,"docs":" An archived [`RangeFrom`](::core::ops::RangeFrom).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeFrom`](::core::ops::RangeFrom).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252791,"byte_end":252845,"line_start":117,"line_end":117,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":7761},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253093,"byte_end":253098,"line_start":123,"line_end":123,"column_start":9,"column_end":14},"name":"start","qualname":"::ops::ArchivedRangeFrom::start","value":"T","parent":{"krate":0,"index":7759},"children":[],"decl_id":null,"docs":" The lower bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The lower bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253039,"byte_end":253084,"line_start":122,"line_end":122,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253442,"byte_end":253450,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeFrom<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>, U: ?Sized +\nPartialOrd<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253361,"byte_end":253416,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253421,"byte_end":253430,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7783},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254073,"byte_end":254088,"line_start":162,"line_end":162,"column_start":12,"column_end":27},"name":"ArchivedRangeTo","qualname":"::ops::ArchivedRangeTo","value":"ArchivedRangeTo { end }","parent":null,"children":[{"krate":0,"index":7785}],"decl_id":null,"docs":" An archived [`RangeTo`](::core::ops::RangeTo).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeTo`](::core::ops::RangeTo).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253856,"byte_end":253906,"line_start":158,"line_end":158,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7785},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254152,"byte_end":254155,"line_start":164,"line_end":164,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRangeTo::end","value":"T","parent":{"krate":0,"index":7783},"children":[],"decl_id":null,"docs":" The upper bound of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (exclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254098,"byte_end":254143,"line_start":163,"line_end":163,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254493,"byte_end":254501,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeTo<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>, U: ?Sized +\nPartialOrd<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254412,"byte_end":254467,"line_start":176,"line_end":176,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254472,"byte_end":254481,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7807},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255138,"byte_end":255162,"line_start":203,"line_end":203,"column_start":12,"column_end":36},"name":"ArchivedRangeToInclusive","qualname":"::ops::ArchivedRangeToInclusive","value":"ArchivedRangeToInclusive { end }","parent":null,"children":[{"krate":0,"index":7809}],"decl_id":null,"docs":" An archived [`RangeToInclusive`](::core::ops::RangeToInclusive).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeToInclusive`](::core::ops::RangeToInclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254903,"byte_end":254971,"line_start":199,"line_end":199,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7809},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255226,"byte_end":255229,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRangeToInclusive::end","value":"T","parent":{"krate":0,"index":7807},"children":[],"decl_id":null,"docs":" The upper bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255172,"byte_end":255217,"line_start":204,"line_end":204,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255586,"byte_end":255594,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeToInclusive<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>, U: ?Sized +\nPartialOrd<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255505,"byte_end":255560,"line_start":217,"line_end":217,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255565,"byte_end":255574,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3357},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":7831},{"krate":0,"index":7838},{"krate":0,"index":3381},{"krate":0,"index":3397},{"krate":0,"index":3401},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3420},{"krate":0,"index":3424},{"krate":0,"index":3428},{"krate":0,"index":3432},{"krate":0,"index":3437},{"krate":0,"index":3441},{"krate":0,"index":3445},{"krate":0,"index":3450}],"decl_id":null,"docs":" An archived version of `Option`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Option`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256243,"byte_end":256279,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7833},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256687,"byte_end":256691,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"None","qualname":"::option::ArchivedOption::None","value":"ArchivedOption::None","parent":{"krate":0,"index":7831},"children":[],"decl_id":null,"docs":" No value\n","sig":null,"attributes":[{"value":"/ No value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256670,"byte_end":256682,"line_start":19,"line_end":19,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256720,"byte_end":256724,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Some","qualname":"::option::ArchivedOption::Some","value":"ArchivedOption::Some(T)","parent":{"krate":0,"index":7831},"children":[],"decl_id":null,"docs":" Some value `T`\n","sig":null,"attributes":[{"value":"/ Some value `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256697,"byte_end":256715,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":7831},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256646,"byte_end":256660,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"ArchivedOption","qualname":"::option::ArchivedOption","value":"pub enum ArchivedOption<T> { None, Some(T), }","parent":null,"children":[{"krate":0,"index":7833},{"krate":0,"index":7835}],"decl_id":null,"docs":" An archived [`Option`].","sig":null,"attributes":[{"value":"/ An archived [`Option`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256394,"byte_end":256421,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256422,"byte_end":256425,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It functions identically to [`Option`] but has a different internal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256426,"byte_end":256497,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ representation to allow for archiving.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256498,"byte_end":256540,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256625,"byte_end":256636,"line_start":17,"line_end":17,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256841,"byte_end":256848,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_none","qualname":"<ArchivedOption<T>>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option is a `None` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option is a `None` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256764,"byte_end":256815,"line_start":26,"line_end":26,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256820,"byte_end":256829,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257073,"byte_end":257080,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"is_some","qualname":"<ArchivedOption<T>>::is_some","value":"pub fn is_some(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option is a `Some` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option is a `Some` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256996,"byte_end":257047,"line_start":35,"line_end":35,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257052,"byte_end":257061,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257292,"byte_end":257298,"line_start":46,"line_end":46,"column_start":18,"column_end":24},"name":"as_ref","qualname":"<ArchivedOption<T>>::as_ref","value":"pub const fn as_ref(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&T>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257228,"byte_end":257260,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257265,"byte_end":257274,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257524,"byte_end":257530,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<ArchivedOption<T>>::as_mut","value":"pub fn as_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&mut T>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&mut T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257462,"byte_end":257498,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257503,"byte_end":257512,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257793,"byte_end":257803,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"as_pin_ref","qualname":"<ArchivedOption<T>>::as_pin_ref","value":"pub fn as_pin_ref(Pin<&Self>) -> Option<Pin<&T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&ArchivedOption<T>>` to `Option<Pin<&T>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&ArchivedOption<T>>` to `Option<Pin<&T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257702,"byte_end":257767,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257772,"byte_end":257781,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258031,"byte_end":258041,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"as_pin_mut","qualname":"<ArchivedOption<T>>::as_pin_mut","value":"pub fn as_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut T>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":257932,"byte_end":258005,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258010,"byte_end":258019,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258332,"byte_end":258336,"line_start":80,"line_end":80,"column_start":18,"column_end":22},"name":"iter","qualname":"<ArchivedOption<T>>::iter","value":"pub const fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258242,"byte_end":258300,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258305,"byte_end":258314,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258522,"byte_end":258530,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArchivedOption<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258431,"byte_end":258496,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258501,"byte_end":258510,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258774,"byte_end":258787,"line_start":97,"line_end":97,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<ArchivedOption<T>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts `v` into the option if it is `None`, then returns a mutable\n reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Inserts `v` into the option if it is `None`, then returns a mutable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258635,"byte_end":258706,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ reference to the contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258711,"byte_end":258748,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258753,"byte_end":258762,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259032,"byte_end":259050,"line_start":104,"line_end":104,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<ArchivedOption<T>>::get_or_insert_with","value":"pub fn get_or_insert_with<F: FnOnce() -> T>(&mut Self, F) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the option if it is `None`, then\n returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the option if it is `None`, then","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258871,"byte_end":258946,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ returns a mutable reference to the contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":258951,"byte_end":259006,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259011,"byte_end":259020,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259598,"byte_end":259606,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"as_deref","qualname":"<ArchivedOption<T>>::as_deref","value":"pub fn as_deref(&Self) -> Option<&<T as Deref>::Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&ArchivedOption<T>` to `Option<&T::Target>`.","sig":null,"attributes":[{"value":"/ Converts from `&ArchivedOption<T>` to `Option<&T::Target>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259333,"byte_end":259396,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259401,"byte_end":259404,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Leaves the original `ArchivedOption` in-place, creating a new one with a reference to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259409,"byte_end":259502,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ original one, additionally coercing the contents via `Deref`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259507,"byte_end":259572,"line_start":118,"line_end":118,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259577,"byte_end":259586,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260000,"byte_end":260012,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"as_deref_mut","qualname":"<ArchivedOption<T>>::as_deref_mut","value":"pub fn as_deref_mut(&mut Self) -> Option<&mut <T as Deref>::Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut ArchivedOption<T>` to `Option<&mut T::Target>`.","sig":null,"attributes":[{"value":"/ Converts from `&mut ArchivedOption<T>` to `Option<&mut T::Target>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259741,"byte_end":259812,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259817,"byte_end":259820,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Leaves the original `ArchivedOption` in-place, creating a new `Option` with a mutable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259825,"byte_end":259914,"line_start":128,"line_end":128,"column_start":5,"column_end":94}},{"value":"/ reference to the inner type's `Deref::Target` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259919,"byte_end":259974,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259979,"byte_end":259988,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3428},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261661,"byte_end":261665,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3431}],"decl_id":null,"docs":" An iterator over a reference to the `Some` variant of an `ArchivedOption`.","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Some` variant of an `ArchivedOption`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261404,"byte_end":261482,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261483,"byte_end":261486,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOption` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261487,"byte_end":261574,"line_start":190,"line_end":190,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261575,"byte_end":261578,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOption::iter`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261579,"byte_end":261649,"line_start":192,"line_end":192,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3441},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262329,"byte_end":262336,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3444}],"decl_id":null,"docs":" An iterator over a mutable reference to the `Some` variant of an `ArchivedOption`.","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Some` variant of an `ArchivedOption`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262060,"byte_end":262146,"line_start":213,"line_end":213,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262147,"byte_end":262150,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOption` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262151,"byte_end":262238,"line_start":215,"line_end":215,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262239,"byte_end":262242,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOption::iter_mut`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262243,"byte_end":262317,"line_start":217,"line_end":217,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3454},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rc","qualname":"::rc","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3475},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3482},{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3497},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3509},{"krate":0,"index":3520},{"krate":0,"index":3524},{"krate":0,"index":3528},{"krate":0,"index":3532},{"krate":0,"index":3537},{"krate":0,"index":3541},{"krate":0,"index":3544},{"krate":0,"index":3549},{"krate":0,"index":3553},{"krate":0,"index":3559},{"krate":0,"index":3565},{"krate":0,"index":3569},{"krate":0,"index":3573},{"krate":0,"index":3581},{"krate":0,"index":3591},{"krate":0,"index":3595},{"krate":0,"index":3602},{"krate":0,"index":3607},{"krate":0,"index":3610}],"decl_id":null,"docs":" Archived versions of shared pointers.\n","sig":null,"attributes":[{"value":"/ Archived versions of shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":262981,"byte_end":263022,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3503},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263652,"byte_end":263662,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ArchivedRc","qualname":"::rc::ArchivedRc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived `Rc`.","sig":null,"attributes":[{"value":"/ An archived `Rc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263313,"byte_end":263334,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263335,"byte_end":263338,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This is a thin wrapper around a [`RelPtr`] to the archived type paired with a \"flavor\" type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263339,"byte_end":263435,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ Because there may be many varieties of shared pointers and they may not be used together, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263436,"byte_end":263533,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ flavor helps check that memory is not being shared incorrectly during validation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263534,"byte_end":263619,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263620,"byte_end":263640,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263847,"byte_end":263850,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedRc<T, F>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `ArchivedRc`.\n","sig":null,"attributes":[{"value":"/ Gets the value of the `ArchivedRc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263782,"byte_end":263821,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263826,"byte_end":263835,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264167,"byte_end":264188,"line_start":34,"line_end":34,"column_start":19,"column_end":40},"name":"get_pin_mut_unchecked","qualname":"<ArchivedRc<T, F>>::get_pin_mut_unchecked","value":"pub unsafe fn get_pin_mut_unchecked(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the pinned mutable value of this `ArchivedRc`.","sig":null,"attributes":[{"value":"/ Gets the pinned mutable value of this `ArchivedRc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263914,"byte_end":263969,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263974,"byte_end":263977,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263982,"byte_end":263994,"line_start":29,"line_end":29,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263999,"byte_end":264002,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Any other `ArchivedRc` pointers to the same value must not be dereferenced for the duration","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264007,"byte_end":264102,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ of the returned borrow.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264107,"byte_end":264134,"line_start":32,"line_end":32,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264139,"byte_end":264148,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264545,"byte_end":264561,"line_start":45,"line_end":45,"column_start":19,"column_end":35},"name":"resolve_from_ref","qualname":"<ArchivedRc<T, F>>::resolve_from_ref","value":"pub unsafe fn resolve_from_ref<U: ArchiveUnsized<Archived = T> +\n                               ?Sized>(&U, usize,\n                                       RcResolver<MetadataResolver<U>>,\n                                       *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Rc` from a given reference.","sig":null,"attributes":[{"value":"/ Resolves an archived `Rc` from a given reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264298,"byte_end":264351,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264356,"byte_end":264359,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264364,"byte_end":264376,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264381,"byte_end":264384,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264389,"byte_end":264449,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264454,"byte_end":264512,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264517,"byte_end":264526,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264948,"byte_end":264966,"line_start":57,"line_end":57,"column_start":12,"column_end":30},"name":"serialize_from_ref","qualname":"<ArchivedRc<T, F>>::serialize_from_ref","value":"pub fn serialize_from_ref<U: SerializeUnsized<S> + ?Sized, S: Serializer +\n                          SharedSerializeRegistry + ?Sized>(&U, &mut S)\n-> Result<RcResolver<MetadataResolver<U>>, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Rc` from a given reference.\n","sig":null,"attributes":[{"value":"/ Serializes an archived `Rc` from a given reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264867,"byte_end":264922,"line_start":55,"line_end":55,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":264927,"byte_end":264936,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3569},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267350,"byte_end":267360,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"RcResolver","qualname":"::rc::RcResolver","value":"RcResolver {  }","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572}],"decl_id":null,"docs":" The resolver for `Rc`.\n","sig":null,"attributes":[{"value":"/ The resolver for `Rc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267312,"byte_end":267338,"line_start":148,"line_end":148,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267601,"byte_end":267605,"line_start":160,"line_end":160,"column_start":5,"column_end":9},"name":"None","qualname":"::rc::ArchivedRcWeak::None","value":"ArchivedRcWeak::None","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":" A null weak pointer\n","sig":null,"attributes":[{"value":"/ A null weak pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267573,"byte_end":267596,"line_start":159,"line_end":159,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267657,"byte_end":267661,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Some","qualname":"::rc::ArchivedRcWeak::Some","value":"ArchivedRcWeak::Some(ArchivedRc<T, F>)","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":" A weak pointer to some shared pointer\n","sig":null,"attributes":[{"value":"/ A weak pointer to some shared pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267611,"byte_end":267652,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3573},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267521,"byte_end":267535,"line_start":158,"line_end":158,"column_start":10,"column_end":24},"name":"ArchivedRcWeak","qualname":"::rc::ArchivedRcWeak","value":"pub enum ArchivedRcWeak<T: ArchivePointee + ?Sized, F> {\n    None,\n    Some(ArchivedRc<T, F>),\n}","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3578}],"decl_id":null,"docs":" An archived `rc::Weak`.","sig":null,"attributes":[{"value":"/ An archived `rc::Weak`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267411,"byte_end":267438,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267439,"byte_end":267442,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This is essentially just an optional [`ArchivedRc`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267443,"byte_end":267499,"line_start":156,"line_end":156,"column_start":1,"column_end":57}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267500,"byte_end":267511,"line_start":157,"line_end":157,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267904,"byte_end":267911,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<ArchivedRcWeak<T, F>>::upgrade","value":"pub fn upgrade(&Self) -> Option<&ArchivedRc<T, F>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the weak pointer to an `ArchivedArc`.","sig":null,"attributes":[{"value":"/ Attempts to upgrade the weak pointer to an `ArchivedArc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267747,"byte_end":267808,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267813,"byte_end":267816,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if a null weak pointer was serialized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267821,"byte_end":267878,"line_start":168,"line_end":168,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267883,"byte_end":267892,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268162,"byte_end":268177,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"upgrade_pin_mut","qualname":"<ArchivedRcWeak<T, F>>::upgrade_pin_mut","value":"pub fn upgrade_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut ArchivedRc<T, F>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade a pinned mutable weak pointer.\n","sig":null,"attributes":[{"value":"/ Attempts to upgrade a pinned mutable weak pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268082,"byte_end":268136,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268141,"byte_end":268150,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268713,"byte_end":268729,"line_start":195,"line_end":195,"column_start":19,"column_end":35},"name":"resolve_from_ref","qualname":"<ArchivedRcWeak<T, F>>::resolve_from_ref","value":"pub unsafe fn resolve_from_ref<U: ArchiveUnsized<Archived = T> +\n                               ?Sized>(Option<&U>, usize,\n                                       RcWeakResolver<MetadataResolver<U>>,\n                                       *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Weak` from a given optional reference.","sig":null,"attributes":[{"value":"/ Resolves an archived `Weak` from a given optional reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268455,"byte_end":268519,"line_start":188,"line_end":188,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268524,"byte_end":268527,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268532,"byte_end":268544,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268549,"byte_end":268552,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268557,"byte_end":268617,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268622,"byte_end":268680,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":268685,"byte_end":268694,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":269588,"byte_end":269606,"line_start":218,"line_end":218,"column_start":12,"column_end":30},"name":"serialize_from_ref","qualname":"<ArchivedRcWeak<T, F>>::serialize_from_ref","value":"pub fn serialize_from_ref<U, S>(Option<&U>, &mut S)\n-> Result<RcWeakResolver<MetadataResolver<U>>, S::Error> where\nU: SerializeUnsized<S, Archived = T> + ?Sized, S: Serializer +\nSharedSerializeRegistry + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Weak` from a given optional reference.\n","sig":null,"attributes":[{"value":"/ Serializes an archived `Weak` from a given optional reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":269496,"byte_end":269562,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":269567,"byte_end":269576,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3597},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270336,"byte_end":270340,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::rc::RcWeakResolver::None","value":"RcWeakResolver::None","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":" The weak pointer was null\n","sig":null,"attributes":[{"value":"/ The weak pointer was null","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270302,"byte_end":270331,"line_start":241,"line_end":241,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270398,"byte_end":270402,"line_start":244,"line_end":244,"column_start":5,"column_end":9},"name":"Some","qualname":"::rc::RcWeakResolver::Some","value":"RcWeakResolver::Some(RcResolver<T>)","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":" The weak pointer was to some shared pointer\n","sig":null,"attributes":[{"value":"/ The weak pointer was to some shared pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270346,"byte_end":270393,"line_start":243,"line_end":243,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3595},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270278,"byte_end":270292,"line_start":240,"line_end":240,"column_start":10,"column_end":24},"name":"RcWeakResolver","qualname":"::rc::RcWeakResolver","value":"pub enum RcWeakResolver<T> { None, Some(RcResolver<T>), }","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":3599}],"decl_id":null,"docs":" The resolver for `rc::Weak`.\n","sig":null,"attributes":[{"value":"/ The resolver for `rc::Weak`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270236,"byte_end":270268,"line_start":239,"line_end":239,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3616},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rel_ptr","qualname":"::rel_ptr","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":7841},{"krate":0,"index":7846},{"krate":0,"index":7848},{"krate":0,"index":7849},{"krate":0,"index":7851},{"krate":0,"index":7852},{"krate":0,"index":7854},{"krate":0,"index":7855},{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":7857},{"krate":0,"index":7861},{"krate":0,"index":7866},{"krate":0,"index":7871},{"krate":0,"index":7876},{"krate":0,"index":7880},{"krate":0,"index":7885},{"krate":0,"index":7890},{"krate":0,"index":7895},{"krate":0,"index":7898},{"krate":0,"index":3652},{"krate":0,"index":3656},{"krate":0,"index":3666},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3686},{"krate":0,"index":3691},{"krate":0,"index":3696},{"krate":0,"index":3710},{"krate":0,"index":3714}],"decl_id":null,"docs":" Relative pointer implementations and options.\n","sig":null,"attributes":[{"value":"/ Relative pointer implementations and options.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":270953,"byte_end":271002,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7842},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271424,"byte_end":271437,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"IsizeOverflow","qualname":"::rel_ptr::OffsetError::IsizeOverflow","value":"OffsetError::IsizeOverflow","parent":{"krate":0,"index":7841},"children":[],"decl_id":null,"docs":" The offset overflowed the range of `isize`\n","sig":null,"attributes":[{"value":"/ The offset overflowed the range of `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271373,"byte_end":271419,"line_start":17,"line_end":17,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7844},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271517,"byte_end":271536,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"ExceedsStorageRange","qualname":"::rel_ptr::OffsetError::ExceedsStorageRange","value":"OffsetError::ExceedsStorageRange","parent":{"krate":0,"index":7841},"children":[],"decl_id":null,"docs":" The offset is too far for the offset type of the relative pointer\n","sig":null,"attributes":[{"value":"/ The offset is too far for the offset type of the relative pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271443,"byte_end":271512,"line_start":19,"line_end":19,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":7841},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271355,"byte_end":271366,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"OffsetError","qualname":"::rel_ptr::OffsetError","value":"pub enum OffsetError { IsizeOverflow, ExceedsStorageRange, }","parent":null,"children":[{"krate":0,"index":7842},{"krate":0,"index":7844}],"decl_id":null,"docs":" An error where the distance between two positions cannot be represented by the offset type.\n","sig":null,"attributes":[{"value":"/ An error where the distance between two positions cannot be represented by the offset type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271205,"byte_end":271300,"line_start":14,"line_end":14,"column_start":1,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":3647},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272903,"byte_end":272916,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"signed_offset","qualname":"::rel_ptr::signed_offset","value":"pub fn signed_offset(usize, usize) -> Result<isize, OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the offset between two positions as an `isize`.","sig":null,"attributes":[{"value":"/ Calculates the offset between two positions as an `isize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272020,"byte_end":272082,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272083,"byte_end":272086,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This function exists solely to get the distance between two `usizes` as an `isize` with a full","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272087,"byte_end":272185,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ range of values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272186,"byte_end":272206,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272207,"byte_end":272210,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272211,"byte_end":272225,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272226,"byte_end":272229,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272230,"byte_end":272237,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use rkyv::rel_ptr::{signed_offset, OffsetError};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272238,"byte_end":272290,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272291,"byte_end":272294,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(signed_offset(0, 1), Ok(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272295,"byte_end":272338,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(signed_offset(1, 0), Ok(-1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272339,"byte_end":272383,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(signed_offset(0, isize::MAX as usize), Ok(isize::MAX));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272384,"byte_end":272454,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(signed_offset(isize::MAX as usize, 0), Ok(-isize::MAX));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272455,"byte_end":272526,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(signed_offset(0, isize::MAX as usize + 1), Err(OffsetError::IsizeOverflow));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272527,"byte_end":272618,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(signed_offset(isize::MAX as usize + 1, 0), Ok(isize::MIN));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272619,"byte_end":272693,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(signed_offset(0, isize::MAX as usize + 2), Err(OffsetError::IsizeOverflow));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272694,"byte_end":272785,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(signed_offset(isize::MAX as usize + 2, 0), Err(OffsetError::IsizeOverflow));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272786,"byte_end":272877,"line_start":55,"line_end":55,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272878,"byte_end":272885,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272886,"byte_end":272895,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":3648},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273295,"byte_end":273301,"line_start":70,"line_end":70,"column_start":11,"column_end":17},"name":"Offset","qualname":"::rel_ptr::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":3649},{"krate":0,"index":3650}],"decl_id":null,"docs":" A offset that can be used with [`RawRelPtr`].\n","sig":null,"attributes":[{"value":"/ A offset that can be used with [`RawRelPtr`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273235,"byte_end":273284,"line_start":69,"line_end":69,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273393,"byte_end":273400,"line_start":72,"line_end":72,"column_start":8,"column_end":15},"name":"between","qualname":"::rel_ptr::Offset::between","value":"pub fn between(usize, usize) -> Result<Self, OffsetError>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Creates a new offset between a `from` position and a `to` position.\n","sig":null,"attributes":[{"value":"/ Creates a new offset between a `from` position and a `to` position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273314,"byte_end":273385,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273502,"byte_end":273510,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::rel_ptr::Offset::to_isize","value":"pub fn to_isize(&Self) -> isize","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":" Gets the offset as an `isize`.\n","sig":null,"attributes":[{"value":"/ Gets the offset as an `isize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273460,"byte_end":273494,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7896},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275865,"byte_end":275876,"line_start":138,"line_end":138,"column_start":5,"column_end":16},"name":"OffsetError","qualname":"::rel_ptr::RelPtrError::OffsetError","value":"RelPtrError::OffsetError","parent":{"krate":0,"index":7895},"children":[],"decl_id":null,"docs":" The given `from` and `to` positions for the relative pointer failed to form a valid offset.","sig":null,"attributes":[{"value":"/ The given `from` and `to` positions for the relative pointer failed to form a valid offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275645,"byte_end":275740,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275745,"byte_end":275748,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This is probably because the distance between them could not be represented by the offset","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275753,"byte_end":275846,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/ type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275851,"byte_end":275860,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":7895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275627,"byte_end":275638,"line_start":133,"line_end":133,"column_start":10,"column_end":21},"name":"RelPtrError","qualname":"::rel_ptr::RelPtrError","value":"pub enum RelPtrError { OffsetError, }","parent":null,"children":[{"krate":0,"index":7896}],"decl_id":null,"docs":" Errors that can occur while creating raw relative pointers.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while creating raw relative pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275537,"byte_end":275600,"line_start":131,"line_end":131,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3652},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276697,"byte_end":276706,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"RawRelPtr","qualname":"::rel_ptr::RawRelPtr","value":"RawRelPtr {  }","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3655}],"decl_id":null,"docs":" An untyped pointer which resolves relative to its position in memory.","sig":null,"attributes":[{"value":"/ An untyped pointer which resolves relative to its position in memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275881,"byte_end":275954,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275955,"byte_end":275958,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This is the most fundamental building block in rkyv. It allows the construction and use of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":275959,"byte_end":276053,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ pointers that can be safely relocated as long as the source and target are moved together. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276054,"byte_end":276153,"line_start":144,"line_end":144,"column_start":1,"column_end":100}},{"value":"/ is what allows memory to be moved from disk into memory and accessed without decoding.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276154,"byte_end":276244,"line_start":145,"line_end":145,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276245,"byte_end":276248,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Regular pointers are *absolute*, meaning that the pointee can be moved without invalidating the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276249,"byte_end":276348,"line_start":147,"line_end":147,"column_start":1,"column_end":100}},{"value":"/ pointer. However, the target cannot be moved or the pointer is invalidated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276349,"byte_end":276428,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276429,"byte_end":276432,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Relative pointers are *relative*, meaning that the pointee can be moved with the target without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276433,"byte_end":276532,"line_start":150,"line_end":150,"column_start":1,"column_end":100}},{"value":"/ invalidating the pointer. However, if either the pointee or the target move independently, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276533,"byte_end":276631,"line_start":151,"line_end":151,"column_start":1,"column_end":99}},{"value":"/ pointer will be invalidated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276632,"byte_end":276664,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276665,"byte_end":276685,"line_start":153,"line_end":153,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277058,"byte_end":277069,"line_start":167,"line_end":167,"column_start":19,"column_end":30},"name":"try_emplace","qualname":"<RawRelPtr<O>>::try_emplace","value":"pub unsafe fn try_emplace(usize, usize, *mut Self) -> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new `RawRelPtr` in-place between the given `from` and `to` positions.","sig":null,"attributes":[{"value":"/ Attempts to create a new `RawRelPtr` in-place between the given `from` and `to` positions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276794,"byte_end":276888,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276893,"byte_end":276896,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276901,"byte_end":276913,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276918,"byte_end":276921,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ - `out` must be located at position `from`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276926,"byte_end":276972,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/ - `to` must be a position within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276977,"byte_end":277025,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277030,"byte_end":277039,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277630,"byte_end":277637,"line_start":182,"line_end":182,"column_start":19,"column_end":26},"name":"emplace","qualname":"<RawRelPtr<O>>::emplace","value":"pub unsafe fn emplace(usize, usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RawRelPtr` in-place between the given `from` and `to` positions.","sig":null,"attributes":[{"value":"/ Creates a new `RawRelPtr` in-place between the given `from` and `to` positions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277265,"byte_end":277348,"line_start":173,"line_end":173,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277353,"byte_end":277356,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277361,"byte_end":277373,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277378,"byte_end":277381,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - `out` must be located at position `from`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277386,"byte_end":277432,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/ - `to` must be a position within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277437,"byte_end":277485,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ - The offset between `from` and `to` must fit in an `isize` and not exceed the offset","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277490,"byte_end":277579,"line_start":179,"line_end":179,"column_start":5,"column_end":94}},{"value":"/   storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277584,"byte_end":277597,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277602,"byte_end":277611,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277819,"byte_end":277823,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"base","qualname":"<RawRelPtr<O>>::base","value":"pub fn base(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277742,"byte_end":277793,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277798,"byte_end":277807,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277985,"byte_end":277993,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"base_mut","qualname":"<RawRelPtr<O>>::base_mut","value":"pub fn base_mut(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the mutable base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277900,"byte_end":277959,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":277964,"byte_end":277973,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278154,"byte_end":278160,"line_start":200,"line_end":200,"column_start":12,"column_end":18},"name":"offset","qualname":"<RawRelPtr<O>>::offset","value":"pub fn offset(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Gets the offset of the relative pointer from its base.\n","sig":null,"attributes":[{"value":"/ Gets the offset of the relative pointer from its base.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278070,"byte_end":278128,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278133,"byte_end":278142,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278304,"byte_end":278311,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"is_null","qualname":"<RawRelPtr<O>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the offset of the relative pointer is 0.\n","sig":null,"attributes":[{"value":"/ Gets whether the offset of the relative pointer is 0.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278221,"byte_end":278278,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278283,"byte_end":278292,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278469,"byte_end":278475,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RawRelPtr<O>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Calculates the memory address being pointed to by this relative pointer.\n","sig":null,"attributes":[{"value":"/ Calculates the memory address being pointed to by this relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278367,"byte_end":278443,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278448,"byte_end":278457,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278705,"byte_end":278715,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<RawRelPtr<O>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ()","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the memory address being pointed to\n by this relative pointer.\n","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the memory address being pointed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278569,"byte_end":278645,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ by this relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278650,"byte_end":278679,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278684,"byte_end":278693,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3672},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279290,"byte_end":279301,"line_start":239,"line_end":239,"column_start":10,"column_end":21},"name":"RawRelPtrI8","qualname":"::rel_ptr::RawRelPtrI8","value":"RawRelPtr<Archived<i8>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i8` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i8` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279201,"byte_end":279280,"line_start":238,"line_end":238,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":3673},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279419,"byte_end":279431,"line_start":241,"line_end":241,"column_start":10,"column_end":22},"name":"RawRelPtrI16","qualname":"::rel_ptr::RawRelPtrI16","value":"RawRelPtr<Archived<i16>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i16` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i16` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279329,"byte_end":279409,"line_start":240,"line_end":240,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":3674},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279620,"byte_end":279632,"line_start":244,"line_end":244,"column_start":10,"column_end":22},"name":"RawRelPtrI32","qualname":"::rel_ptr::RawRelPtrI32","value":"RawRelPtr<Archived<i32>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i32` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i32` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279460,"byte_end":279540,"line_start":242,"line_end":242,"column_start":1,"column_end":81}},{"value":"cfg(any(target_pointer_width = \"32\", target_pointer_width = \"64\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279541,"byte_end":279610,"line_start":243,"line_end":243,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":3675},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279787,"byte_end":279799,"line_start":247,"line_end":247,"column_start":10,"column_end":22},"name":"RawRelPtrI64","qualname":"::rel_ptr::RawRelPtrI64","value":"RawRelPtr<Archived<i64>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i64` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i64` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279661,"byte_end":279741,"line_start":245,"line_end":245,"column_start":1,"column_end":81}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279742,"byte_end":279777,"line_start":246,"line_end":246,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3676},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279918,"byte_end":279929,"line_start":250,"line_end":250,"column_start":10,"column_end":21},"name":"RawRelPtrU8","qualname":"::rel_ptr::RawRelPtrU8","value":"RawRelPtr<Archived<u8>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u8` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u8` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279829,"byte_end":279908,"line_start":249,"line_end":249,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":3677},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280047,"byte_end":280059,"line_start":252,"line_end":252,"column_start":10,"column_end":22},"name":"RawRelPtrU16","qualname":"::rel_ptr::RawRelPtrU16","value":"RawRelPtr<Archived<u16>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u16` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u16` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279957,"byte_end":280037,"line_start":251,"line_end":251,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":3678},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280248,"byte_end":280260,"line_start":255,"line_end":255,"column_start":10,"column_end":22},"name":"RawRelPtrU32","qualname":"::rel_ptr::RawRelPtrU32","value":"RawRelPtr<Archived<u32>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u32` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u32` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280088,"byte_end":280168,"line_start":253,"line_end":253,"column_start":1,"column_end":81}},{"value":"cfg(any(target_pointer_width = \"32\", target_pointer_width = \"64\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280169,"byte_end":280238,"line_start":254,"line_end":254,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":3679},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280415,"byte_end":280427,"line_start":258,"line_end":258,"column_start":10,"column_end":22},"name":"RawRelPtrU64","qualname":"::rel_ptr::RawRelPtrU64","value":"RawRelPtr<Archived<u64>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u64` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u64` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280289,"byte_end":280369,"line_start":256,"line_end":256,"column_start":1,"column_end":81}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280370,"byte_end":280405,"line_start":257,"line_end":257,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3680},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280705,"byte_end":280711,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"RelPtr","qualname":"::rel_ptr::RelPtr","value":"RelPtr {  }","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685}],"decl_id":null,"docs":" A pointer which resolves to relative to its position in memory.","sig":null,"attributes":[{"value":"/ A pointer which resolves to relative to its position in memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280495,"byte_end":280562,"line_start":262,"line_end":262,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280563,"byte_end":280566,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This is a strongly-typed version of [`RawRelPtr`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280567,"byte_end":280621,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280622,"byte_end":280625,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ See [`Archive`](crate::Archive) for an example of creating one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280626,"byte_end":280693,"line_start":266,"line_end":266,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281135,"byte_end":281146,"line_start":281,"line_end":281,"column_start":19,"column_end":30},"name":"try_emplace","qualname":"<RelPtr<T, O>>::try_emplace","value":"pub unsafe fn try_emplace(usize, usize, *mut Self) -> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Attempts to create a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280878,"byte_end":280949,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280954,"byte_end":280957,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280962,"byte_end":280974,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280979,"byte_end":280982,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280987,"byte_end":281048,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281053,"byte_end":281102,"line_start":279,"line_end":279,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281107,"byte_end":281116,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281810,"byte_end":281817,"line_start":299,"line_end":299,"column_start":19,"column_end":26},"name":"emplace","qualname":"<RelPtr<T, O>>::emplace","value":"pub unsafe fn emplace(usize, usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Creates a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281387,"byte_end":281447,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281452,"byte_end":281455,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281460,"byte_end":281472,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281477,"byte_end":281480,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ - The offset between `from` and `to` does not fit in an `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281485,"byte_end":281552,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ - The offset between `from` and `to` exceeds the offset storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281557,"byte_end":281624,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281629,"byte_end":281632,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281637,"byte_end":281649,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281654,"byte_end":281657,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281662,"byte_end":281723,"line_start":296,"line_end":296,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281728,"byte_end":281777,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281782,"byte_end":281791,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282222,"byte_end":282238,"line_start":314,"line_end":314,"column_start":19,"column_end":35},"name":"try_emplace_null","qualname":"<RelPtr<T, O>>::try_emplace_null","value":"pub unsafe fn try_emplace_null(usize, *mut Self) -> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a null relative pointer with default metadata.","sig":null,"attributes":[{"value":"/ Attempts to create a null relative pointer with default metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282023,"byte_end":282092,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282097,"byte_end":282100,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282105,"byte_end":282117,"line_start":310,"line_end":310,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282122,"byte_end":282125,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ `pos` must be the position of `out` within the archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282130,"byte_end":282189,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282194,"byte_end":282203,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282837,"byte_end":282849,"line_start":333,"line_end":333,"column_start":19,"column_end":31},"name":"emplace_null","qualname":"<RelPtr<T, O>>::emplace_null","value":"pub unsafe fn emplace_null(usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a null relative pointer with default metadata.","sig":null,"attributes":[{"value":"/ Creates a null relative pointer with default metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282508,"byte_end":282566,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282571,"byte_end":282574,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282579,"byte_end":282591,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282596,"byte_end":282599,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ - An offset of `0` does not fit in an `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282604,"byte_end":282653,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ - An offset of `0` exceeds the offset storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282658,"byte_end":282707,"line_start":327,"line_end":327,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282712,"byte_end":282715,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282720,"byte_end":282732,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282737,"byte_end":282740,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ `pos` must be the position of `out` within the archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282745,"byte_end":282804,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282809,"byte_end":282818,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283400,"byte_end":283419,"line_start":348,"line_end":348,"column_start":19,"column_end":38},"name":"try_resolve_emplace","qualname":"<RelPtr<T, O>>::try_resolve_emplace","value":"pub unsafe fn try_resolve_emplace<U: ArchiveUnsized<Archived = T> +\n                                  ?Sized>(usize, usize, &U,\n                                          U::MetadataResolver, *mut Self)\n-> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Attempts to create a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283002,"byte_end":283073,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283078,"byte_end":283081,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283086,"byte_end":283098,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283103,"byte_end":283106,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283111,"byte_end":283172,"line_start":343,"line_end":343,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283177,"byte_end":283226,"line_start":344,"line_end":344,"column_start":5,"column_end":54}},{"value":"/ - `value` must be the value being serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283231,"byte_end":283279,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/ - `metadata_resolver` must be the result of serializing the metadata of `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283284,"byte_end":283367,"line_start":346,"line_end":346,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283372,"byte_end":283381,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284434,"byte_end":284449,"line_start":376,"line_end":376,"column_start":19,"column_end":34},"name":"resolve_emplace","qualname":"<RelPtr<T, O>>::resolve_emplace","value":"pub unsafe fn resolve_emplace<U: ArchiveUnsized<Archived = T> +\n                              ?Sized>(usize, usize, &U, U::MetadataResolver,\n                                      *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Creates a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283870,"byte_end":283930,"line_start":362,"line_end":362,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283935,"byte_end":283938,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283943,"byte_end":283955,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283960,"byte_end":283963,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ - The offset between `from` and `to` does not fit in an `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":283968,"byte_end":284035,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ - The offset between `from` and `to` exceeds the offset storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284040,"byte_end":284107,"line_start":367,"line_end":367,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284112,"byte_end":284115,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284120,"byte_end":284132,"line_start":369,"line_end":369,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284137,"byte_end":284140,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284145,"byte_end":284206,"line_start":371,"line_end":371,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284211,"byte_end":284260,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ - `value` must be the value being serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284265,"byte_end":284313,"line_start":373,"line_end":373,"column_start":5,"column_end":53}},{"value":"/ - `metadata_resolver` must be the result of serializing the metadata of `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284318,"byte_end":284401,"line_start":374,"line_end":374,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284406,"byte_end":284415,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284805,"byte_end":284809,"line_start":388,"line_end":388,"column_start":12,"column_end":16},"name":"base","qualname":"<RelPtr<T, O>>::base","value":"pub fn base(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284728,"byte_end":284779,"line_start":386,"line_end":386,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284784,"byte_end":284793,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284956,"byte_end":284964,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"base_mut","qualname":"<RelPtr<T, O>>::base_mut","value":"pub fn base_mut(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the mutable base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284871,"byte_end":284930,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":284935,"byte_end":284944,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285116,"byte_end":285122,"line_start":400,"line_end":400,"column_start":12,"column_end":18},"name":"offset","qualname":"<RelPtr<T, O>>::offset","value":"pub fn offset(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Gets the offset of the relative pointer from its base.\n","sig":null,"attributes":[{"value":"/ Gets the offset of the relative pointer from its base.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285032,"byte_end":285090,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285095,"byte_end":285104,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285265,"byte_end":285272,"line_start":406,"line_end":406,"column_start":12,"column_end":19},"name":"is_null","qualname":"<RelPtr<T, O>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the offset of the relative pointer is 0.\n","sig":null,"attributes":[{"value":"/ Gets whether the offset of the relative pointer is 0.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285182,"byte_end":285239,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285244,"byte_end":285253,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285404,"byte_end":285412,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"metadata","qualname":"<RelPtr<T, O>>::metadata","value":"pub fn metadata(&Self) -> &T::ArchivedMetadata","parent":null,"children":[],"decl_id":null,"docs":" Gets the metadata of the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the metadata of the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285332,"byte_end":285378,"line_start":410,"line_end":410,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285383,"byte_end":285392,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285582,"byte_end":285588,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RelPtr<T, O>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Calculates the memory address being pointed to by this relative pointer.\n","sig":null,"attributes":[{"value":"/ Calculates the memory address being pointed to by this relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285480,"byte_end":285556,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285561,"byte_end":285570,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285850,"byte_end":285860,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<RelPtr<T, O>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the memory address being pointed to by this relative\n pointer.\n","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the memory address being pointed to by this relative","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285714,"byte_end":285807,"line_start":422,"line_end":422,"column_start":5,"column_end":98}},{"value":"/ pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285812,"byte_end":285824,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":285829,"byte_end":285838,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3718},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3733},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":7900},{"krate":0,"index":7909},{"krate":0,"index":3743},{"krate":0,"index":3752},{"krate":0,"index":3756},{"krate":0,"index":3760},{"krate":0,"index":3764},{"krate":0,"index":3769},{"krate":0,"index":3773},{"krate":0,"index":3777},{"krate":0,"index":3782},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3794},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3806},{"krate":0,"index":3812}],"decl_id":null,"docs":" An archived version of `Result`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Result`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287011,"byte_end":287047,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287447,"byte_end":287449,"line_start":16,"line_end":16,"column_start":5,"column_end":7},"name":"Ok","qualname":"::result::ArchivedResult::Ok","value":"ArchivedResult::Ok(T)","parent":{"krate":0,"index":7900},"children":[],"decl_id":null,"docs":" Contains the success value\n","sig":null,"attributes":[{"value":"/ Contains the success value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287412,"byte_end":287442,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7906},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287491,"byte_end":287494,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Err","qualname":"::result::ArchivedResult::Err","value":"ArchivedResult::Err(E)","parent":{"krate":0,"index":7900},"children":[],"decl_id":null,"docs":" Contains the error value\n","sig":null,"attributes":[{"value":"/ Contains the error value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287458,"byte_end":287486,"line_start":17,"line_end":17,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":7900},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287385,"byte_end":287399,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"ArchivedResult","qualname":"::result::ArchivedResult","value":"pub enum ArchivedResult<T, E> { Ok(T), Err(E), }","parent":null,"children":[{"krate":0,"index":7903},{"krate":0,"index":7906}],"decl_id":null,"docs":" An archived [`Result`] that represents either success ([`Ok`](ArchivedResult::Ok)) or failure\n ([`Err`](ArchivedResult::Err)).\n","sig":null,"attributes":[{"value":"/ An archived [`Result`] that represents either success ([`Ok`](ArchivedResult::Ok)) or failure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287146,"byte_end":287243,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ ([`Err`](ArchivedResult::Err)).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287244,"byte_end":287279,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287364,"byte_end":287375,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287635,"byte_end":287640,"line_start":24,"line_end":24,"column_start":18,"column_end":23},"name":"is_ok","qualname":"<ArchivedResult<T, E>>::is_ok","value":"pub const fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the result is [`Ok`](ArchivedResult::Ok).\n","sig":null,"attributes":[{"value":"/ Returns `true` if the result is [`Ok`](ArchivedResult::Ok).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287540,"byte_end":287603,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287608,"byte_end":287617,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287812,"byte_end":287818,"line_start":30,"line_end":30,"column_start":18,"column_end":24},"name":"is_err","qualname":"<ArchivedResult<T, E>>::is_err","value":"pub const fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the result is [`Err`](ArchivedResult::Err).\n","sig":null,"attributes":[{"value":"/ Returns `true` if the result is [`Err`](ArchivedResult::Err).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287715,"byte_end":287780,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287785,"byte_end":287794,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288008,"byte_end":288014,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<ArchivedResult<T, E>>::as_ref","value":"pub fn as_ref(&Self) -> Result<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Result` containing the success and error values of this `ArchivedResult`.\n","sig":null,"attributes":[{"value":"/ Returns a `Result` containing the success and error values of this `ArchivedResult`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287894,"byte_end":287982,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287987,"byte_end":287996,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288286,"byte_end":288292,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<ArchivedResult<T, E>>::as_mut","value":"pub fn as_mut(&mut Self) -> Result<&mut T, &mut E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut ArchivedResult<T, E>` to `Result<&mut T, &mut E>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&mut ArchivedResult<T, E>` to `Result<&mut T, &mut E>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288186,"byte_end":288260,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288265,"byte_end":288274,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288661,"byte_end":288665,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedResult<T, E>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the possibly contained value.","sig":null,"attributes":[{"value":"/ Returns an iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288476,"byte_end":288534,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288539,"byte_end":288542,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The iterator yields one value if the result is `ArchivedResult::Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288547,"byte_end":288635,"line_start":54,"line_end":54,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288640,"byte_end":288649,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288957,"byte_end":288965,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArchivedResult<T, E>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the possibly contained value.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288765,"byte_end":288830,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288835,"byte_end":288838,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The iterator yields one value if the result is `ArchivedResult::Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288843,"byte_end":288931,"line_start":64,"line_end":64,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":288936,"byte_end":288945,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289349,"byte_end":289357,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"as_deref","qualname":"<ArchivedResult<T, E>>::as_deref","value":"pub fn as_deref(&Self) -> Result<&<T as Deref>::Target, &E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&ArchivedResult<T, E>` to `Result<&<T as Deref>::Target, &E>`.","sig":null,"attributes":[{"value":"/ Converts from `&ArchivedResult<T, E>` to `Result<&<T as Deref>::Target, &E>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289118,"byte_end":289199,"line_start":74,"line_end":74,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289204,"byte_end":289207,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Coerces the `Ok` variant of the original `ArchivedResult` via `Deref` and returns the new","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289212,"byte_end":289305,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ `Result`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289310,"byte_end":289323,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289328,"byte_end":289337,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289848,"byte_end":289860,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"as_deref_mut","qualname":"<ArchivedResult<T, E>>::as_deref_mut","value":"pub fn as_deref_mut(&mut Self) -> Result<&mut <T as Deref>::Target, &mut E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut ArchivedResult<T, E>` to `Result<&mut <T as Deref>::Target, &mut E>`.","sig":null,"attributes":[{"value":"/ Converts from `&mut ArchivedResult<T, E>` to `Result<&mut <T as Deref>::Target, &mut E>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289602,"byte_end":289695,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289700,"byte_end":289703,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Coerces the `Ok` variant of the original `ArchivedResult` via `DerefMut` and returns the new","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289708,"byte_end":289804,"line_start":90,"line_end":90,"column_start":5,"column_end":101}},{"value":"/ `Result`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289809,"byte_end":289822,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289827,"byte_end":289836,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3760},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290285,"byte_end":290289,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3763}],"decl_id":null,"docs":" An iterator over a reference to the `Ok` variant of an [`ArchivedResult`].","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Ok` variant of an [`ArchivedResult`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290073,"byte_end":290151,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290152,"byte_end":290155,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the result is `Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290156,"byte_end":290228,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290229,"byte_end":290232,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Created by [`ArchivedResult::iter`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290233,"byte_end":290273,"line_start":105,"line_end":105,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290897,"byte_end":290904,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3776}],"decl_id":null,"docs":" An iterator over a mutable reference to the `Ok` variant of an [`ArchivedResult`].","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Ok` variant of an [`ArchivedResult`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290673,"byte_end":290759,"line_start":126,"line_end":126,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290760,"byte_end":290763,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the result is `Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290764,"byte_end":290836,"line_start":128,"line_end":128,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290837,"byte_end":290840,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Created by [`ArchivedResult::iter_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290841,"byte_end":290885,"line_start":130,"line_end":130,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3818},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":3819},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4242},{"krate":0,"index":4245}],"decl_id":null,"docs":" Serialization traits, serializers, and adapters.\n","sig":null,"attributes":[{"value":"/ Serialization traits, serializers, and adapters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293139,"byte_end":293191,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":3819},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serializers","qualname":"::ser::serializers","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","parent":null,"children":[{"krate":0,"index":3820},{"krate":0,"index":3957},{"krate":0,"index":4064},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":8014},{"krate":0,"index":8027},{"krate":0,"index":4129},{"krate":0,"index":4134},{"krate":0,"index":8032},{"krate":0,"index":8039},{"krate":0,"index":4143},{"krate":0,"index":4150},{"krate":0,"index":4155},{"krate":0,"index":4160},{"krate":0,"index":4174},{"krate":0,"index":4180},{"krate":0,"index":4186},{"krate":0,"index":4189}],"decl_id":null,"docs":" Serializers that can be used standalone and provide basic capabilities.\n","sig":null,"attributes":[{"value":"/ Serializers that can be used standalone and provide basic capabilities.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":300367,"byte_end":300442,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7913},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308629,"byte_end":308646,"line_start":26,"line_end":26,"column_start":12,"column_end":29},"name":"AlignedSerializer","qualname":"::ser::serializers::alloc::AlignedSerializer","value":"AlignedSerializer {  }","parent":null,"children":[{"krate":0,"index":7915}],"decl_id":null,"docs":" A serializer made specifically to work with [`AlignedVec`](crate::util::AlignedVec).","sig":null,"attributes":[{"value":"/ A serializer made specifically to work with [`AlignedVec`](crate::util::AlignedVec).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308350,"byte_end":308438,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308439,"byte_end":308442,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This serializer makes it easier for the compiler to perform emplacement optimizations and may","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308443,"byte_end":308540,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ give better performance than a basic `WriteSerializer`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308541,"byte_end":308600,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308823,"byte_end":308826,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<AlignedSerializer<A>>::new","value":"pub fn new(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AlignedSerializer` by wrapping a `Borrow<AlignedVec>`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AlignedSerializer` by wrapping a `Borrow<AlignedVec>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308724,"byte_end":308797,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308802,"byte_end":308811,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308967,"byte_end":308977,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AlignedSerializer<A>>::into_inner","value":"pub fn into_inner(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Consumes the serializer and returns the underlying type.\n","sig":null,"attributes":[{"value":"/ Consumes the serializer and returns the underlying type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308881,"byte_end":308941,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308946,"byte_end":308955,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7919},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311011,"byte_end":311022,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"HeapScratch","qualname":"::ser::serializers::alloc::HeapScratch","value":"HeapScratch {  }","parent":null,"children":[{"krate":0,"index":7921}],"decl_id":null,"docs":" Fixed-size scratch space allocated on the heap.\n","sig":null,"attributes":[{"value":"/ Fixed-size scratch space allocated on the heap.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":310931,"byte_end":310982,"line_start":111,"line_end":111,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311183,"byte_end":311186,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<HeapScratch<N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new heap scratch space.\n","sig":null,"attributes":[{"value":"/ Creates a new heap scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311134,"byte_end":311171,"line_start":118,"line_end":118,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311727,"byte_end":311733,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"layout","qualname":"<HeapScratch<N>>::layout","value":"pub fn layout() -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Gets the memory layout of the heap-allocated space.\n","sig":null,"attributes":[{"value":"/ Gets the memory layout of the heap-allocated space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311660,"byte_end":311715,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":7927},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312609,"byte_end":312622,"line_start":168,"line_end":168,"column_start":5,"column_end":18},"name":"ExceededLimit","qualname":"::ser::serializers::alloc::AllocScratchError::ExceededLimit","value":"AllocScratchError::ExceededLimit { requested, remaining }","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" The amount of scratch space requested exceeded the maximum limit\n","sig":null,"attributes":[{"value":"/ The amount of scratch space requested exceeded the maximum limit","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312536,"byte_end":312604,"line_start":167,"line_end":167,"column_start":5,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":7930},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312843,"byte_end":312866,"line_start":175,"line_end":175,"column_start":5,"column_end":28},"name":"NotPoppedInReverseOrder","qualname":"::ser::serializers::alloc::AllocScratchError::NotPoppedInReverseOrder","value":"AllocScratchError::NotPoppedInReverseOrder { expected, expected_layout, actual, actual_layout }","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" Scratch space was not popped in reverse order.\n","sig":null,"attributes":[{"value":"/ Scratch space was not popped in reverse order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312788,"byte_end":312838,"line_start":174,"line_end":174,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7935},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313287,"byte_end":313305,"line_start":186,"line_end":186,"column_start":5,"column_end":23},"name":"NoAllocationsToPop","qualname":"::ser::serializers::alloc::AllocScratchError::NoAllocationsToPop","value":"AllocScratchError::NoAllocationsToPop","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" There are no allocations to pop\n","sig":null,"attributes":[{"value":"/ There are no allocations to pop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313247,"byte_end":313282,"line_start":185,"line_end":185,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":7926},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312512,"byte_end":312529,"line_start":166,"line_end":166,"column_start":10,"column_end":27},"name":"AllocScratchError","qualname":"::ser::serializers::alloc::AllocScratchError","value":"pub enum AllocScratchError {\n    ExceededLimit {\n        requested: usize,\n        remaining: usize,\n    },\n    NotPoppedInReverseOrder {\n        expected: *mut u8,\n        expected_layout: Layout,\n        actual: *mut u8,\n        actual_layout: Layout,\n    },\n    NoAllocationsToPop,\n}","parent":null,"children":[{"krate":0,"index":7927},{"krate":0,"index":7930},{"krate":0,"index":7935}],"decl_id":null,"docs":" Errors that can occur when allocating with the global allocator.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when allocating with the global allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312417,"byte_end":312485,"line_start":164,"line_end":164,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":7939},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315054,"byte_end":315066,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"AllocScratch","qualname":"::ser::serializers::alloc::AllocScratch","value":"AllocScratch {  }","parent":null,"children":[{"krate":0,"index":7940},{"krate":0,"index":7941}],"decl_id":null,"docs":" Scratch space that always uses the global allocator.","sig":null,"attributes":[{"value":"/ Scratch space that always uses the global allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":314814,"byte_end":314870,"line_start":229,"line_end":229,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":314871,"byte_end":314874,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ This allocator will panic if scratch is popped that it did not allocate. For this reason, it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":314875,"byte_end":314971,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/ should only ever be used as a fallback allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":314972,"byte_end":315025,"line_start":232,"line_end":232,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315601,"byte_end":315604,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"name":"new","qualname":"<AllocScratch>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scratch allocator with no allocation limit.\n","sig":null,"attributes":[{"value":"/ Creates a new scratch allocator with no allocation limit.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315528,"byte_end":315589,"line_start":248,"line_end":248,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315799,"byte_end":315809,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"with_limit","qualname":"<AllocScratch>::with_limit","value":"pub fn with_limit(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scratch allocator with the given allocation limit.\n","sig":null,"attributes":[{"value":"/ Creates a new scratch allocator with the given allocation limit.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315719,"byte_end":315787,"line_start":256,"line_end":256,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7945},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":317941,"byte_end":317963,"line_start":328,"line_end":328,"column_start":5,"column_end":27},"name":"DuplicateSharedPointer","qualname":"::ser::serializers::alloc::SharedSerializeMapError::DuplicateSharedPointer","value":"SharedSerializeMapError::DuplicateSharedPointer(*const u8)","parent":{"krate":0,"index":7944},"children":[],"decl_id":null,"docs":" A shared pointer was added multiple times\n","sig":null,"attributes":[{"value":"/ A shared pointer was added multiple times","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":317891,"byte_end":317936,"line_start":327,"line_end":327,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":7944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":317861,"byte_end":317884,"line_start":326,"line_end":326,"column_start":10,"column_end":33},"name":"SharedSerializeMapError","qualname":"::ser::serializers::alloc::SharedSerializeMapError","value":"pub enum SharedSerializeMapError { DuplicateSharedPointer(*const u8), }","parent":null,"children":[{"krate":0,"index":7945}],"decl_id":null,"docs":" An error that can occur while serializing shared pointers.\n","sig":null,"attributes":[{"value":"/ An error that can occur while serializing shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":317772,"byte_end":317834,"line_start":324,"line_end":324,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7950},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318843,"byte_end":318861,"line_start":356,"line_end":356,"column_start":12,"column_end":30},"name":"SharedSerializeMap","qualname":"::ser::serializers::alloc::SharedSerializeMap","value":"SharedSerializeMap {  }","parent":null,"children":[{"krate":0,"index":7951}],"decl_id":null,"docs":" An adapter that adds shared serialization support to a serializer.\n","sig":null,"attributes":[{"value":"/ An adapter that adds shared serialization support to a serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318744,"byte_end":318814,"line_start":354,"line_end":354,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319405,"byte_end":319408,"line_start":371,"line_end":371,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSerializeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared registry map.\n","sig":null,"attributes":[{"value":"/ Creates a new shared registry map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319341,"byte_end":319379,"line_start":369,"line_end":369,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319384,"byte_end":319393,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":7955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321029,"byte_end":321037,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::ser::serializers::core::BufferSerializerError::Overflow","value":"BufferSerializerError::Overflow { pos, bytes_needed, archive_len }","parent":{"krate":0,"index":7954},"children":[],"decl_id":null,"docs":" Writing has overflowed the internal buffer.\n","sig":null,"attributes":[{"value":"/ Writing has overflowed the internal buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":320977,"byte_end":321024,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":7954},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":320949,"byte_end":320970,"line_start":14,"line_end":14,"column_start":10,"column_end":31},"name":"BufferSerializerError","qualname":"::ser::serializers::core::BufferSerializerError","value":"pub enum BufferSerializerError {\n    Overflow {\n        pos: usize,\n        bytes_needed: usize,\n        archive_len: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":7955}],"decl_id":null,"docs":" The error type returned by an [`BufferSerializer`].\n","sig":null,"attributes":[{"value":"/ The error type returned by an [`BufferSerializer`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":320867,"byte_end":320922,"line_start":12,"line_end":12,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7961},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322885,"byte_end":322901,"line_start":85,"line_end":85,"column_start":12,"column_end":28},"name":"BufferSerializer","qualname":"::ser::serializers::core::BufferSerializer","value":"BufferSerializer {  }","parent":null,"children":[{"krate":0,"index":7963},{"krate":0,"index":7964}],"decl_id":null,"docs":" Wraps a byte buffer and equips it with [`Serializer`].","sig":null,"attributes":[{"value":"/ Wraps a byte buffer and equips it with [`Serializer`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321833,"byte_end":321891,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321892,"byte_end":321895,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Common uses include archiving in `#![no_std]` environments and archiving small objects without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321896,"byte_end":321994,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ allocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321995,"byte_end":322010,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322011,"byte_end":322014,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322015,"byte_end":322029,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322030,"byte_end":322037,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322038,"byte_end":322053,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     archived_value,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322054,"byte_end":322077,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     ser::{Serializer, serializers::BufferSerializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322078,"byte_end":322135,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/     AlignedBytes,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322136,"byte_end":322157,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     AlignedVec,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322158,"byte_end":322177,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322178,"byte_end":322194,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322195,"byte_end":322212,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322213,"byte_end":322231,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322232,"byte_end":322238,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322239,"byte_end":322242,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive, Serialize)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322243,"byte_end":322276,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ enum Event {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322277,"byte_end":322293,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/     Spawn,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322294,"byte_end":322308,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/     Speak(String),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322309,"byte_end":322331,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/     Die,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322332,"byte_end":322344,"line_start":70,"line_end":70,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322345,"byte_end":322350,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322351,"byte_end":322354,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = BufferSerializer::new(AlignedBytes([0u8; 256]));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322355,"byte_end":322428,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ let pos = serializer.serialize_value(&Event::Speak(\"Help me!\".to_string()))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322429,"byte_end":322508,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/     .expect(\"failed to archive event\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322509,"byte_end":322552,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322553,"byte_end":322591,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"/ let archived = unsafe { archived_value::<Event>(buf.as_ref(), pos) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322592,"byte_end":322665,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ if let Archived::<Event>::Speak(message) = archived {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322666,"byte_end":322723,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/     assert_eq!(message.as_str(), \"Help me!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322724,"byte_end":322773,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ } else {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322774,"byte_end":322786,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/     panic!(\"archived event was of the wrong type\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322787,"byte_end":322842,"line_start":81,"line_end":81,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322843,"byte_end":322848,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322849,"byte_end":322856,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323052,"byte_end":323055,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferSerializer<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new archive buffer from a byte buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new archive buffer from a byte buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322974,"byte_end":323026,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323031,"byte_end":323040,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323361,"byte_end":323369,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"with_pos","qualname":"<BufferSerializer<T>>::with_pos","value":"pub fn with_pos(T, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new archive buffer from a byte buffer. The buffer will start writing at the given\n position, but the buffer must contain all bytes (otherwise the alignments of types may not\n be correct).\n","sig":null,"attributes":[{"value":"/ Creates a new archive buffer from a byte buffer. The buffer will start writing at the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323120,"byte_end":323215,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ position, but the buffer must contain all bytes (otherwise the alignments of types may not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323220,"byte_end":323314,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ be correct).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323319,"byte_end":323335,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323340,"byte_end":323349,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323527,"byte_end":323537,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferSerializer<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the serializer and returns the underlying type.\n","sig":null,"attributes":[{"value":"/ Consumes the serializer and returns the underlying type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323441,"byte_end":323501,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323506,"byte_end":323515,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7969},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324899,"byte_end":324911,"line_start":159,"line_end":159,"column_start":5,"column_end":17},"name":"OutOfScratch","qualname":"::ser::serializers::core::FixedSizeScratchError::OutOfScratch","value":"FixedSizeScratchError::OutOfScratch(Layout)","parent":{"krate":0,"index":7968},"children":[],"decl_id":null,"docs":" The allocator ran out of scratch space.\n","sig":null,"attributes":[{"value":"/ The allocator ran out of scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324851,"byte_end":324894,"line_start":158,"line_end":158,"column_start":5,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":7972},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324980,"byte_end":325003,"line_start":161,"line_end":161,"column_start":5,"column_end":28},"name":"NotPoppedInReverseOrder","qualname":"::ser::serializers::core::FixedSizeScratchError::NotPoppedInReverseOrder","value":"FixedSizeScratchError::NotPoppedInReverseOrder { pos, next_pos, next_size }","parent":{"krate":0,"index":7968},"children":[],"decl_id":null,"docs":" Scratch space was not popped in reverse order.\n","sig":null,"attributes":[{"value":"/ Scratch space was not popped in reverse order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324925,"byte_end":324975,"line_start":160,"line_end":160,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7976},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":325346,"byte_end":325363,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"UnownedAllocation","qualname":"::ser::serializers::core::FixedSizeScratchError::UnownedAllocation","value":"FixedSizeScratchError::UnownedAllocation","parent":{"krate":0,"index":7968},"children":[],"decl_id":null,"docs":" The given allocation did not belong to the scratch allocator.\n","sig":null,"attributes":[{"value":"/ The given allocation did not belong to the scratch allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":325276,"byte_end":325341,"line_start":169,"line_end":169,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":7968},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324823,"byte_end":324844,"line_start":157,"line_end":157,"column_start":10,"column_end":31},"name":"FixedSizeScratchError","qualname":"::ser::serializers::core::FixedSizeScratchError","value":"pub enum FixedSizeScratchError {\n    OutOfScratch(Layout),\n    NotPoppedInReverseOrder {\n        pos: usize,\n        next_pos: usize,\n        next_size: usize,\n    },\n    UnownedAllocation,\n}","parent":null,"children":[{"krate":0,"index":7969},{"krate":0,"index":7972},{"krate":0,"index":7976}],"decl_id":null,"docs":" Errors that can occur when using a fixed-size allocator.","sig":null,"attributes":[{"value":"/ Errors that can occur when using a fixed-size allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324607,"byte_end":324667,"line_start":152,"line_end":152,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324668,"byte_end":324671,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Pairing a fixed-size allocator with a fallback allocator can help prevent running out of scratch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324672,"byte_end":324772,"line_start":154,"line_end":154,"column_start":1,"column_end":101}},{"value":"/ space unexpectedly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":324773,"byte_end":324796,"line_start":155,"line_end":155,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7980},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326293,"byte_end":326306,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"BufferScratch","qualname":"::ser::serializers::core::BufferScratch","value":"BufferScratch {  }","parent":null,"children":[{"krate":0,"index":7982},{"krate":0,"index":7983}],"decl_id":null,"docs":" Scratch space that allocates within a buffer.\n","sig":null,"attributes":[{"value":"/ Scratch space that allocates within a buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326215,"byte_end":326264,"line_start":199,"line_end":199,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326432,"byte_end":326435,"line_start":208,"line_end":208,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferScratch<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer scratch allocator.\n","sig":null,"attributes":[{"value":"/ Creates a new buffer scratch allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326377,"byte_end":326420,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326562,"byte_end":326567,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"clear","qualname":"<BufferScratch<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the scratch space to its initial state.\n","sig":null,"attributes":[{"value":"/ Resets the scratch space to its initial state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326500,"byte_end":326550,"line_start":212,"line_end":212,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326701,"byte_end":326711,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferScratch<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the buffer scratch allocator, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes the buffer scratch allocator, returning the underlying buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326614,"byte_end":326689,"line_start":217,"line_end":217,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":7987},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":328714,"byte_end":328729,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"FallbackScratch","qualname":"::ser::serializers::core::FallbackScratch","value":"FallbackScratch {  }","parent":null,"children":[{"krate":0,"index":7990},{"krate":0,"index":7991}],"decl_id":null,"docs":" Allocates scratch space with a main and backup scratch.\n","sig":null,"attributes":[{"value":"/ Allocates scratch space with a main and backup scratch.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":328626,"byte_end":328685,"line_start":280,"line_end":280,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":328882,"byte_end":328885,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"new","qualname":"<FallbackScratch<M, F>>::new","value":"pub fn new(M, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates fallback scratch from a main and backup scratch.\n","sig":null,"attributes":[{"value":"/ Creates fallback scratch from a main and backup scratch.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":328810,"byte_end":328870,"line_start":288,"line_end":288,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329896,"byte_end":329910,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"ScratchTracker","qualname":"::ser::serializers::core::ScratchTracker","value":"ScratchTracker {  }","parent":null,"children":[{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":8003}],"decl_id":null,"docs":" A passthrough scratch space allocator that tracks scratch space usage.\n","sig":null,"attributes":[{"value":"/ A passthrough scratch space allocator that tracks scratch space usage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329793,"byte_end":329867,"line_start":323,"line_end":323,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330184,"byte_end":330187,"line_start":336,"line_end":336,"column_start":12,"column_end":15},"name":"new","qualname":"<ScratchTracker<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scratch tracker from the given inner scratch space.\n","sig":null,"attributes":[{"value":"/ Creates a new scratch tracker from the given inner scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330103,"byte_end":330172,"line_start":335,"line_end":335,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330527,"byte_end":330546,"line_start":348,"line_end":348,"column_start":12,"column_end":31},"name":"max_bytes_allocated","qualname":"<ScratchTracker<T>>::max_bytes_allocated","value":"pub fn max_bytes_allocated(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that were concurrently allocated during serialization.\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that were concurrently allocated during serialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330421,"byte_end":330515,"line_start":347,"line_end":347,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330699,"byte_end":330714,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"name":"max_allocations","qualname":"<ScratchTracker<T>>::max_allocations","value":"pub fn max_allocations(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent allocations during serialization.\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent allocations during serialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330609,"byte_end":330687,"line_start":352,"line_end":352,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4051},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330867,"byte_end":330880,"line_start":358,"line_end":358,"column_start":12,"column_end":25},"name":"max_alignment","qualname":"<ScratchTracker<T>>::max_alignment","value":"pub fn max_alignment(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum alignment of scratch space requested during serialization.\n","sig":null,"attributes":[{"value":"/ Returns the maximum alignment of scratch space requested during serialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330773,"byte_end":330855,"line_start":357,"line_end":357,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331282,"byte_end":331297,"line_start":367,"line_end":367,"column_start":12,"column_end":27},"name":"min_buffer_size","qualname":"<ScratchTracker<T>>::min_buffer_size","value":"pub fn min_buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum buffer size required to serialize the same data.","sig":null,"attributes":[{"value":"/ Returns the minimum buffer size required to serialize the same data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330937,"byte_end":331009,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331014,"byte_end":331017,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This calculation takes into account packing efficiency for slab allocated scratch space. It","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331022,"byte_end":331117,"line_start":364,"line_end":364,"column_start":5,"column_end":100}},{"value":"/ is not exact, and has an error bound of `max_allocations * (max_alignment - 1)` bytes. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331122,"byte_end":331217,"line_start":365,"line_end":365,"column_start":5,"column_end":100}},{"value":"/ should be suitably small for most use cases.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331222,"byte_end":331270,"line_start":366,"line_end":366,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331482,"byte_end":331507,"line_start":372,"line_end":372,"column_start":12,"column_end":37},"name":"min_buffer_size_max_error","qualname":"<ScratchTracker<T>>::min_buffer_size_max_error","value":"pub fn min_buffer_size_max_error(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum error term for the minimum buffer size calculation.\n","sig":null,"attributes":[{"value":"/ Returns the maximum error term for the minimum buffer size calculation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331395,"byte_end":331470,"line_start":371,"line_end":371,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":8007},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333611,"byte_end":333626,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"WriteSerializer","qualname":"::ser::serializers::std::WriteSerializer","value":"WriteSerializer {  }","parent":null,"children":[{"krate":0,"index":8009},{"krate":0,"index":8010}],"decl_id":null,"docs":" Wraps a type that implements [`io::Write`](std::io::Write) and equips it with [`Serializer`].","sig":null,"attributes":[{"value":"/ Wraps a type that implements [`io::Write`](std::io::Write) and equips it with [`Serializer`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333089,"byte_end":333186,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333187,"byte_end":333190,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333191,"byte_end":333205,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333206,"byte_end":333213,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rkyv::ser::{serializers::WriteSerializer, Serializer};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333214,"byte_end":333276,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333277,"byte_end":333280,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = WriteSerializer::new(Vec::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333281,"byte_end":333339,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(serializer.pos(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333340,"byte_end":333376,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ serializer.write(&[0u8, 1u8, 2u8, 3u8]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333377,"byte_end":333421,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(serializer.pos(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333422,"byte_end":333458,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333459,"byte_end":333497,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(buf.len(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333498,"byte_end":333527,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(buf, vec![0u8, 1u8, 2u8, 3u8]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333528,"byte_end":333574,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333575,"byte_end":333582,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333789,"byte_end":333792,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteSerializer<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer from a writer.\n","sig":null,"attributes":[{"value":"/ Creates a new serializer from a writer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333720,"byte_end":333763,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333768,"byte_end":333777,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334009,"byte_end":334017,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"with_pos","qualname":"<WriteSerializer<W>>::with_pos","value":"pub fn with_pos(W, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer from a writer, and assumes that the underlying writer is currently\n at the given position.\n","sig":null,"attributes":[{"value":"/ Creates a new serializer from a writer, and assumes that the underlying writer is currently","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333857,"byte_end":333952,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333957,"byte_end":333983,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333988,"byte_end":333997,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334193,"byte_end":334203,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WriteSerializer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes the serializer and returns the internal writer used to create it.\n","sig":null,"attributes":[{"value":"/ Consumes the serializer and returns the internal writer used to create it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334089,"byte_end":334167,"line_start":38,"line_end":38,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334172,"byte_end":334181,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8018},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301075,"byte_end":301090,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"SerializerError","qualname":"::ser::serializers::CompositeSerializerError::SerializerError","value":"CompositeSerializerError::SerializerError(S)","parent":{"krate":0,"index":8014},"children":[],"decl_id":null,"docs":" An error occurred while serializing\n","sig":null,"attributes":[{"value":"/ An error occurred while serializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301031,"byte_end":301070,"line_start":29,"line_end":29,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8021},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301151,"byte_end":301168,"line_start":32,"line_end":32,"column_start":5,"column_end":22},"name":"ScratchSpaceError","qualname":"::ser::serializers::CompositeSerializerError::ScratchSpaceError","value":"CompositeSerializerError::ScratchSpaceError(C)","parent":{"krate":0,"index":8014},"children":[],"decl_id":null,"docs":" An error occurred while using scratch space\n","sig":null,"attributes":[{"value":"/ An error occurred while using scratch space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301099,"byte_end":301146,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8024},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301235,"byte_end":301246,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"SharedError","qualname":"::ser::serializers::CompositeSerializerError::SharedError","value":"CompositeSerializerError::SharedError(H)","parent":{"krate":0,"index":8014},"children":[],"decl_id":null,"docs":" An error occurred while serializing shared memory\n","sig":null,"attributes":[{"value":"/ An error occurred while serializing shared memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301177,"byte_end":301230,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":8014},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":300991,"byte_end":301015,"line_start":28,"line_end":28,"column_start":10,"column_end":34},"name":"CompositeSerializerError","qualname":"::ser::serializers::CompositeSerializerError","value":"pub enum CompositeSerializerError<S, C, H> {\n    SerializerError(S),\n    ScratchSpaceError(C),\n    SharedError(H),\n}","parent":null,"children":[{"krate":0,"index":8018},{"krate":0,"index":8021},{"krate":0,"index":8024}],"decl_id":null,"docs":" The default serializer error.\n","sig":null,"attributes":[{"value":"/ The default serializer error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":300931,"byte_end":300964,"line_start":26,"line_end":26,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8032},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302361,"byte_end":302380,"line_start":74,"line_end":74,"column_start":12,"column_end":31},"name":"CompositeSerializer","qualname":"::ser::serializers::CompositeSerializer","value":"CompositeSerializer {  }","parent":null,"children":[{"krate":0,"index":8036},{"krate":0,"index":8037},{"krate":0,"index":8038}],"decl_id":null,"docs":" A serializer built from composeable pieces.\n","sig":null,"attributes":[{"value":"/ A serializer built from composeable pieces.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302285,"byte_end":302332,"line_start":72,"line_end":72,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302646,"byte_end":302649,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<CompositeSerializer<S, C, H>>::new","value":"pub fn new(S, C, H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new composite serializer from serializer, scratch, and shared components.\n","sig":null,"attributes":[{"value":"/ Creates a new composite serializer from serializer, scratch, and shared components.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302533,"byte_end":302620,"line_start":81,"line_end":81,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302625,"byte_end":302634,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302890,"byte_end":302905,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"into_components","qualname":"<CompositeSerializer<S, C, H>>::into_components","value":"pub fn into_components(Self) -> (S, C, H)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the composite serializer and returns the components.\n","sig":null,"attributes":[{"value":"/ Consumes the composite serializer and returns the components.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302799,"byte_end":302864,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302869,"byte_end":302878,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303152,"byte_end":303167,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"into_serializer","qualname":"<CompositeSerializer<S, C, H>>::into_serializer","value":"pub fn into_serializer(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes the composite serializer and returns the serializer.","sig":null,"attributes":[{"value":"/ Consumes the composite serializer and returns the serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302991,"byte_end":303056,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303061,"byte_end":303064,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The scratch space and shared component are discarded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303069,"byte_end":303126,"line_start":99,"line_end":99,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303131,"byte_end":303140,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306713,"byte_end":306727,"line_start":216,"line_end":216,"column_start":10,"column_end":24},"name":"CoreSerializer","qualname":"::ser::serializers::CoreSerializer","value":"CompositeSerializer<BufferSerializer<AlignedBytes<>>,\n                    BufferScratch<AlignedBytes<>>, Infallible>","parent":null,"children":[],"decl_id":null,"docs":" A serializer suitable for environments where allocations cannot be made.","sig":null,"attributes":[{"value":"/ A serializer suitable for environments where allocations cannot be made.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306400,"byte_end":306476,"line_start":211,"line_end":211,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306477,"byte_end":306480,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ `CoreSerializer` takes two arguments: the amount of serialization memory to allocate and the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306481,"byte_end":306577,"line_start":213,"line_end":213,"column_start":1,"column_end":97}},{"value":"/ amount of scratch space to allocate. If you run out of either while serializing, the serializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306578,"byte_end":306677,"line_start":214,"line_end":214,"column_start":1,"column_end":100}},{"value":"/ will return an error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306678,"byte_end":306703,"line_start":215,"line_end":215,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":4189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":307418,"byte_end":307433,"line_start":230,"line_end":230,"column_start":10,"column_end":25},"name":"AllocSerializer","qualname":"::ser::serializers::AllocSerializer","value":"CompositeSerializer<AlignedSerializer<AlignedVec>,\n                    FallbackScratch<HeapScratch<>, AllocScratch>,\n                    SharedSerializeMap>","parent":null,"children":[],"decl_id":null,"docs":" A general-purpose serializer suitable for environments where allocations can be made.","sig":null,"attributes":[{"value":"/ A general-purpose serializer suitable for environments where allocations can be made.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306878,"byte_end":306967,"line_start":222,"line_end":222,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306968,"byte_end":306971,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ `AllocSerializer` takes one argument: the amount of scratch space to allocate before spilling","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306972,"byte_end":307069,"line_start":224,"line_end":224,"column_start":1,"column_end":98}},{"value":"/ allocations over into heap memory. A large amount of scratch space may result in some of it not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":307070,"byte_end":307169,"line_start":225,"line_end":225,"column_start":1,"column_end":100}},{"value":"/ being used, but too little scratch space will result in many allocations and decreased","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":307170,"byte_end":307260,"line_start":226,"line_end":226,"column_start":1,"column_end":91}},{"value":"/ performance. You should consider your use case carefully when determining how much scratch space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":307261,"byte_end":307361,"line_start":227,"line_end":227,"column_start":1,"column_end":101}},{"value":"/ to pre-allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":307362,"byte_end":307382,"line_start":228,"line_end":228,"column_start":1,"column_end":21}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":307383,"byte_end":307408,"line_start":229,"line_end":229,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":4223},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293815,"byte_end":293825,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer: Fallible","parent":null,"children":[{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4234},{"krate":0,"index":4236},{"krate":0,"index":4238},{"krate":0,"index":4240}],"decl_id":null,"docs":" A byte sink that knows where it is.","sig":null,"attributes":[{"value":"/ A byte sink that knows where it is.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293354,"byte_end":293393,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293394,"byte_end":293397,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A type that is [`io::Write`](std::io::Write) can be wrapped in a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293398,"byte_end":293466,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ [`WriteSerializer`](serializers::WriteSerializer) to equip it with `Serializer`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293467,"byte_end":293551,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293552,"byte_end":293555,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It's important that the memory for archived objects is properly aligned before attempting to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293556,"byte_end":293652,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ read objects out of it; use an [`AlignedVec`](crate::AlignedVec) or the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293653,"byte_end":293728,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ [`AlignedBytes`](crate::AlignedBytes) wrappers if they are appropriate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293729,"byte_end":293804,"line_start":15,"line_end":15,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293901,"byte_end":293904,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pos","qualname":"::ser::Serializer::pos","value":"pub fn pos(&Self) -> usize","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Returns the current position of the serializer.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293842,"byte_end":293893,"line_start":17,"line_end":17,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293991,"byte_end":293996,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"write","qualname":"::ser::Serializer::write","value":"pub fn write(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Attempts to write the given bytes to the serializer.\n","sig":null,"attributes":[{"value":"/ Attempts to write the given bytes to the serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293927,"byte_end":293983,"line_start":20,"line_end":20,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294127,"byte_end":294130,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"pad","qualname":"::ser::Serializer::pad","value":"pub fn pad(&mut Self, usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Advances the given number of bytes as padding.\n","sig":null,"attributes":[{"value":"/ Advances the given number of bytes as padding.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294055,"byte_end":294105,"line_start":23,"line_end":23,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294110,"byte_end":294119,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294467,"byte_end":294472,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"align","qualname":"::ser::Serializer::align","value":"pub fn align(&mut Self, usize) -> Result<usize, Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Aligns the position of the serializer to the given alignment.\n","sig":null,"attributes":[{"value":"/ Aligns the position of the serializer to the given alignment.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294380,"byte_end":294445,"line_start":33,"line_end":33,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294450,"byte_end":294459,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294798,"byte_end":294807,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"align_for","qualname":"::ser::Serializer::align_for","value":"pub fn align_for<T>(&mut Self) -> Result<usize, Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Aligns the position of the serializer to be suitable to write the given type.\n","sig":null,"attributes":[{"value":"/ Aligns the position of the serializer to be suitable to write the given type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294695,"byte_end":294776,"line_start":43,"line_end":43,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294781,"byte_end":294790,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295221,"byte_end":295236,"line_start":57,"line_end":57,"column_start":15,"column_end":30},"name":"resolve_aligned","qualname":"::ser::Serializer::resolve_aligned","value":"pub unsafe fn resolve_aligned<T: Archive + ?Sized>(&mut Self, &T, T::Resolver)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Resolves the given value with its resolver and writes the archived type.","sig":null,"attributes":[{"value":"/ Resolves the given value with its resolver and writes the archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294906,"byte_end":294982,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294987,"byte_end":294990,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Returns the position of the written archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":294995,"byte_end":295049,"line_start":51,"line_end":51,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295054,"byte_end":295057,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295062,"byte_end":295074,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295079,"byte_end":295082,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295087,"byte_end":295145,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ - The serializer must be aligned for a `T::Archived`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295150,"byte_end":295206,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295929,"byte_end":295944,"line_start":77,"line_end":77,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"::ser::Serializer::serialize_value","value":"pub fn serialize_value<T: Serialize<Self>>(&mut Self, &T)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Archives the given object and returns the position it was archived at.\n","sig":null,"attributes":[{"value":"/ Archives the given object and returns the position it was archived at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295833,"byte_end":295907,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":295912,"byte_end":295921,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296618,"byte_end":296641,"line_start":92,"line_end":92,"column_start":15,"column_end":38},"name":"resolve_unsized_aligned","qualname":"::ser::Serializer::resolve_unsized_aligned","value":"pub unsafe fn resolve_unsized_aligned<T: ArchiveUnsized +\n                                      ?Sized>(&mut Self, &T, usize,\n                                              T::MetadataResolver)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Resolves the given reference with its resolver and writes the archived reference.","sig":null,"attributes":[{"value":"/ Resolves the given reference with its resolver and writes the archived reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296176,"byte_end":296261,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296266,"byte_end":296269,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns the position of the written archived `RelPtr`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296274,"byte_end":296332,"line_start":85,"line_end":85,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296337,"byte_end":296340,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296345,"byte_end":296357,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296362,"byte_end":296365,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ - `metadata_resolver` must be the result of serializing the metadata of `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296370,"byte_end":296453,"line_start":89,"line_end":89,"column_start":5,"column_end":88}},{"value":"/ - `to` must be the position of the serialized `value` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296458,"byte_end":296534,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ - The serializer must be aligned for a `RelPtr<T::Archived>`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":296539,"byte_end":296603,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297441,"byte_end":297464,"line_start":113,"line_end":113,"column_start":8,"column_end":31},"name":"serialize_unsized_value","qualname":"::ser::Serializer::serialize_unsized_value","value":"pub fn serialize_unsized_value<T: SerializeUnsized<Self> +\n                               ?Sized>(&mut Self, &T)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4223},"children":[],"decl_id":null,"docs":" Archives a reference to the given object and returns the position it was archived at.\n","sig":null,"attributes":[{"value":"/ Archives a reference to the given object and returns the position it was archived at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297330,"byte_end":297419,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297424,"byte_end":297433,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":4242},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297953,"byte_end":297965,"line_start":127,"line_end":127,"column_start":11,"column_end":23},"name":"ScratchSpace","qualname":"::ser::ScratchSpace","value":"ScratchSpace: Fallible","parent":null,"children":[{"krate":0,"index":4243},{"krate":0,"index":4244}],"decl_id":null,"docs":" A serializer that can allocate scratch space.\n","sig":null,"attributes":[{"value":"/ A serializer that can allocate scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297893,"byte_end":297942,"line_start":126,"line_end":126,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298122,"byte_end":298134,"line_start":133,"line_end":133,"column_start":15,"column_end":27},"name":"push_scratch","qualname":"::ser::ScratchSpace::push_scratch","value":"pub unsafe fn push_scratch(&mut Self, Layout)\n-> Result<NonNull<[u8]>, Self::Error>","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Allocates scratch space of the requested size.","sig":null,"attributes":[{"value":"/ Allocates scratch space of the requested size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297982,"byte_end":298032,"line_start":128,"line_end":128,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298037,"byte_end":298040,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298045,"byte_end":298057,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298062,"byte_end":298065,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ `layout` must have non-zero size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298070,"byte_end":298107,"line_start":132,"line_end":132,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298475,"byte_end":298486,"line_start":141,"line_end":141,"column_start":15,"column_end":26},"name":"pop_scratch","qualname":"::ser::ScratchSpace::pop_scratch","value":"pub unsafe fn pop_scratch(&mut Self, NonNull<u8>, Layout)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Deallocates previously allocated scratch space.","sig":null,"attributes":[{"value":"/ Deallocates previously allocated scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298206,"byte_end":298257,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298262,"byte_end":298265,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298270,"byte_end":298282,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298287,"byte_end":298290,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ - `ptr` must be the scratch memory last allocated with `push_scratch`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298295,"byte_end":298369,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ - `layout` must be the same layout that was used to allocate that block of memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298374,"byte_end":298460,"line_start":140,"line_end":140,"column_start":5,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":4245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298687,"byte_end":298710,"line_start":147,"line_end":147,"column_start":11,"column_end":34},"name":"SharedSerializeRegistry","qualname":"::ser::SharedSerializeRegistry","value":"SharedSerializeRegistry: Fallible","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4252}],"decl_id":null,"docs":" A registry that tracks serialized shared memory.","sig":null,"attributes":[{"value":"/ A registry that tracks serialized shared memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298563,"byte_end":298615,"line_start":144,"line_end":144,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298616,"byte_end":298619,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This trait is required to serialize shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298620,"byte_end":298676,"line_start":146,"line_end":146,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298864,"byte_end":298878,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"get_shared_ptr","qualname":"::ser::SharedSerializeRegistry::get_shared_ptr","value":"pub fn get_shared_ptr(&Self, *const u8) -> Option<usize>","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Gets the position of a previously-added shared pointer.","sig":null,"attributes":[{"value":"/ Gets the position of a previously-added shared pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298727,"byte_end":298786,"line_start":148,"line_end":148,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298791,"byte_end":298794,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer has not yet been added.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298799,"byte_end":298856,"line_start":150,"line_end":150,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299074,"byte_end":299084,"line_start":157,"line_end":157,"column_start":8,"column_end":18},"name":"get_shared","qualname":"::ser::SharedSerializeRegistry::get_shared","value":"pub fn get_shared<T: ?Sized>(&Self, &T) -> Option<usize>","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Gets the position of a previously-added shared value.","sig":null,"attributes":[{"value":"/ Gets the position of a previously-added shared value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298927,"byte_end":298984,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298989,"byte_end":298992,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the value has not yet been added.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298997,"byte_end":299052,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299057,"byte_end":299066,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299270,"byte_end":299284,"line_start":162,"line_end":162,"column_start":8,"column_end":22},"name":"add_shared_ptr","qualname":"::ser::SharedSerializeRegistry::add_shared_ptr","value":"pub fn add_shared_ptr(&mut Self, *const u8, usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Adds the position of a shared pointer to the registry.\n","sig":null,"attributes":[{"value":"/ Adds the position of a shared pointer to the registry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299204,"byte_end":299262,"line_start":161,"line_end":161,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299437,"byte_end":299447,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"add_shared","qualname":"::ser::SharedSerializeRegistry::add_shared","value":"pub fn add_shared<T: ?Sized>(&mut Self, &T, usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Adds the position of a shared value to the registry.\n","sig":null,"attributes":[{"value":"/ Adds the position of a shared value to the registry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299359,"byte_end":299415,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299420,"byte_end":299429,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299785,"byte_end":299801,"line_start":173,"line_end":173,"column_start":8,"column_end":24},"name":"serialize_shared","qualname":"::ser::SharedSerializeRegistry::serialize_shared","value":"pub fn serialize_shared<T: SerializeUnsized<Self> + ?Sized>(&mut Self, &T)\n-> Result<usize, Self::Error> where Self: Serializer","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Archives the given shared value and returns its position. If the value has already been\n added then it returns the position of the previously added value.\n","sig":null,"attributes":[{"value":"/ Archives the given shared value and returns its position. If the value has already been","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299598,"byte_end":299689,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ added then it returns the position of the previously added value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299694,"byte_end":299763,"line_start":171,"line_end":171,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":299768,"byte_end":299777,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":4254},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::string","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4324},{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4365},{"krate":0,"index":4367},{"krate":0,"index":4369},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4380},{"krate":0,"index":8060},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8069},{"krate":0,"index":8072},{"krate":0,"index":8075},{"krate":0,"index":4381},{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4389},{"krate":0,"index":4391},{"krate":0,"index":4393}],"decl_id":null,"docs":" Archived versions of string types.\n","sig":null,"attributes":[{"value":"/ Archived versions of string types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":334688,"byte_end":334726,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":4255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"repr","qualname":"::string::repr","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","parent":null,"children":[{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4270},{"krate":0,"index":4273},{"krate":0,"index":4276},{"krate":0,"index":4279},{"krate":0,"index":8044},{"krate":0,"index":8048},{"krate":0,"index":8051},{"krate":0,"index":4280},{"krate":0,"index":8052},{"krate":0,"index":8056},{"krate":0,"index":8059},{"krate":0,"index":4281},{"krate":0,"index":4284}],"decl_id":null,"docs":" An archived string representation that supports inlining short strings.\n","sig":null,"attributes":[{"value":"/ An archived string representation that supports inlining short strings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341014,"byte_end":341089,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":4280},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341571,"byte_end":341586,"line_start":18,"line_end":18,"column_start":11,"column_end":26},"name":"INLINE_CAPACITY","qualname":"::string::repr::INLINE_CAPACITY","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of bytes that can be inlined.\n","sig":null,"attributes":[{"value":"/ The maximum number of bytes that can be inlined.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341508,"byte_end":341560,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Union","id":{"krate":0,"index":4281},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341817,"byte_end":341835,"line_start":28,"line_end":28,"column_start":11,"column_end":29},"name":"ArchivedStringRepr","qualname":"::string::repr::ArchivedStringRepr","value":"ArchivedStringRepr {  }","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283}],"decl_id":null,"docs":" An archived string representation that can inline short strings.\n","sig":null,"attributes":[{"value":"/ An archived string representation that can inline short strings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341738,"byte_end":341806,"line_start":27,"line_end":27,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342002,"byte_end":342011,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<ArchivedStringRepr>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the representation is inline.\n","sig":null,"attributes":[{"value":"/ Returns whether the representation is inline.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341927,"byte_end":341976,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341981,"byte_end":341990,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4286},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342255,"byte_end":342273,"line_start":46,"line_end":46,"column_start":19,"column_end":37},"name":"out_of_line_offset","qualname":"<ArchivedStringRepr>::out_of_line_offset","value":"pub unsafe fn out_of_line_offset(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset of the representation.","sig":null,"attributes":[{"value":"/ Returns the offset of the representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342087,"byte_end":342132,"line_start":40,"line_end":40,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342137,"byte_end":342140,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342145,"byte_end":342157,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342162,"byte_end":342165,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The internal representation must be out-of-line.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342170,"byte_end":342222,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342227,"byte_end":342236,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342446,"byte_end":342452,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArchivedStringRepr>::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342371,"byte_end":342420,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342425,"byte_end":342434,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4288},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342835,"byte_end":342845,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArchivedStringRepr>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342752,"byte_end":342809,"line_start":64,"line_end":64,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":342814,"byte_end":342823,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343212,"byte_end":343215,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedStringRepr>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the string.\n","sig":null,"attributes":[{"value":"/ Returns the length of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343149,"byte_end":343186,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343191,"byte_end":343200,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343510,"byte_end":343518,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedStringRepr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the string is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether the string is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343444,"byte_end":343484,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343489,"byte_end":343498,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343864,"byte_end":343869,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ArchivedStringRepr>::bytes","value":"pub fn bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a slice of the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343791,"byte_end":343838,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343843,"byte_end":343852,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4292},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344048,"byte_end":344057,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"bytes_mut","qualname":"<ArchivedStringRepr>::bytes_mut","value":"pub fn bytes_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice of the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a mutable slice of the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":343967,"byte_end":344022,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344027,"byte_end":344036,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344246,"byte_end":344252,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ArchivedStringRepr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the string as a `str`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the string as a `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344171,"byte_end":344220,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344225,"byte_end":344234,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4294},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344422,"byte_end":344432,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"as_mut_str","qualname":"<ArchivedStringRepr>::as_mut_str","value":"pub fn as_mut_str(&mut Self) -> &mut str","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the string as a `str`.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the string as a `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344339,"byte_end":344396,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344401,"byte_end":344410,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344826,"byte_end":344840,"line_start":134,"line_end":134,"column_start":19,"column_end":33},"name":"emplace_inline","qualname":"<ArchivedStringRepr>::emplace_inline","value":"pub unsafe fn emplace_inline(&str, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Emplaces a new inline representation for the given `str`.","sig":null,"attributes":[{"value":"/ Emplaces a new inline representation for the given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344535,"byte_end":344596,"line_start":127,"line_end":127,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344601,"byte_end":344604,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344609,"byte_end":344621,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344626,"byte_end":344629,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ - The length of `str` must be less than or equal to [`INLINE_CAPACITY`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344634,"byte_end":344710,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ - `out` must point to a valid location to write the inline representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344715,"byte_end":344793,"line_start":132,"line_end":132,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":344798,"byte_end":344807,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345588,"byte_end":345607,"line_start":151,"line_end":151,"column_start":19,"column_end":38},"name":"emplace_out_of_line","qualname":"<ArchivedStringRepr>::emplace_out_of_line","value":"pub unsafe fn emplace_out_of_line(&str, usize, usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Rmplaces a new out-of-line representation for the given `str`.","sig":null,"attributes":[{"value":"/ Rmplaces a new out-of-line representation for the given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345138,"byte_end":345204,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345209,"byte_end":345212,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345217,"byte_end":345229,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345234,"byte_end":345237,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ - The length of `str` must be greater than [`INLINE_CAPACITY`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345242,"byte_end":345309,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ - `pos` must be the location of the representation within the archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345314,"byte_end":345388,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ - `target` must be the location of the serialized bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345393,"byte_end":345467,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ - `out` must point to a valid location to write the out-of-line representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345472,"byte_end":345555,"line_start":149,"line_end":149,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":345560,"byte_end":345569,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4355},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335295,"byte_end":335309,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"ArchivedString","qualname":"::string::ArchivedString","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived [`String`].","sig":null,"attributes":[{"value":"/ An archived [`String`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335009,"byte_end":335036,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335037,"byte_end":335040,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This has inline and out-of-line representations. Short strings will use the available space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335041,"byte_end":335136,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ inside the structure to store the string, and long strings will store a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335137,"byte_end":335212,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ [`RelPtr`](crate::RelPtr) to a `str` instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335213,"byte_end":335262,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335263,"byte_end":335283,"line_start":20,"line_end":20,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335457,"byte_end":335463,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ArchivedString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire `ArchivedString`.\n","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire `ArchivedString`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335364,"byte_end":335431,"line_start":24,"line_end":24,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335436,"byte_end":335445,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335624,"byte_end":335635,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"pin_mut_str","qualname":"<ArchivedString>::pin_mut_str","value":"pub fn pin_mut_str(Pin<&mut Self>) -> Pin<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a pinned mutable string slice containing the entire `ArchivedString`.\n","sig":null,"attributes":[{"value":"/ Extracts a pinned mutable string slice containing the entire `ArchivedString`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335516,"byte_end":335598,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335603,"byte_end":335612,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335997,"byte_end":336013,"line_start":43,"line_end":43,"column_start":19,"column_end":35},"name":"resolve_from_str","qualname":"<ArchivedString>::resolve_from_str","value":"pub unsafe fn resolve_from_str(&str, usize, StringResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived string from a given `str`.","sig":null,"attributes":[{"value":"/ Resolves an archived string from a given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335752,"byte_end":335803,"line_start":36,"line_end":36,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335808,"byte_end":335811,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335816,"byte_end":335828,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335833,"byte_end":335836,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335841,"byte_end":335901,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335906,"byte_end":335964,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335969,"byte_end":335978,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336447,"byte_end":336465,"line_start":58,"line_end":58,"column_start":12,"column_end":30},"name":"serialize_from_str","qualname":"<ArchivedString>::serialize_from_str","value":"pub fn serialize_from_str<S: Fallible + ?Sized>(&str, &mut S)\n-> Result<StringResolver, S::Error> where str: SerializeUnsized<S>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived string from a given `str`.\n","sig":null,"attributes":[{"value":"/ Serializes an archived string from a given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336368,"byte_end":336421,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336426,"byte_end":336435,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":339176,"byte_end":339190,"line_start":184,"line_end":184,"column_start":12,"column_end":26},"name":"StringResolver","qualname":"::string::StringResolver","value":"StringResolver {  }","parent":null,"children":[{"krate":0,"index":4394}],"decl_id":null,"docs":" The resolver for `String`.\n","sig":null,"attributes":[{"value":"/ The resolver for `String`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":339134,"byte_end":339164,"line_start":183,"line_end":183,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4395},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","parent":null,"children":[{"krate":0,"index":4396},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8083},{"krate":0,"index":8084},{"krate":0,"index":8086},{"krate":0,"index":8088},{"krate":0,"index":8089},{"krate":0,"index":8091},{"krate":0,"index":8094},{"krate":0,"index":8096},{"krate":0,"index":8097},{"krate":0,"index":8100},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404}],"decl_id":null,"docs":" Archived versions of `time` types.\n","sig":null,"attributes":[{"value":"/ Archived versions of `time` types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346169,"byte_end":346207,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":8078},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346479,"byte_end":346495,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"ArchivedDuration","qualname":"::time::ArchivedDuration","value":"ArchivedDuration {  }","parent":null,"children":[{"krate":0,"index":8079},{"krate":0,"index":8080}],"decl_id":null,"docs":" An archived [`Duration`](core::time::Duration).\n","sig":null,"attributes":[{"value":"/ An archived [`Duration`](core::time::Duration).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346231,"byte_end":346282,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4405},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347113,"byte_end":347120,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"name":"as_secs","qualname":"<ArchivedDuration>::as_secs","value":"pub const fn as_secs(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of _whole_ seconds contained by this\n `ArchivedDuration`.","sig":null,"attributes":[{"value":"/ Returns the number of _whole_ seconds contained by this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346773,"byte_end":346832,"line_start":21,"line_end":21,"column_start":5,"column_end":64}},{"value":"/ `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346837,"byte_end":346860,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346865,"byte_end":346868,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The returned value does not include the fractional (nanosecond) part of the duration, which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346873,"byte_end":346968,"line_start":24,"line_end":24,"column_start":5,"column_end":100}},{"value":"/ can be obtained using [`subsec_nanos`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346973,"byte_end":347016,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347021,"byte_end":347024,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ [`subsec_nanos`]: ArchivedDuration::subsec_nanos","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347029,"byte_end":347081,"line_start":27,"line_end":27,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347086,"byte_end":347095,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347530,"byte_end":347543,"line_start":39,"line_end":39,"column_start":18,"column_end":31},"name":"subsec_millis","qualname":"<ArchivedDuration>::subsec_millis","value":"pub const fn subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of this `ArchivedDuration`, in whole milliseconds.","sig":null,"attributes":[{"value":"/ Returns the fractional part of this `ArchivedDuration`, in whole milliseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347182,"byte_end":347264,"line_start":33,"line_end":33,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347269,"byte_end":347272,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method does **not** return the length of the duration when represented by milliseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347277,"byte_end":347373,"line_start":35,"line_end":35,"column_start":5,"column_end":101}},{"value":"/ The returned number always represents a fractional portion of a second (i.e., it is less","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347378,"byte_end":347470,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ than one thousand).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347475,"byte_end":347498,"line_start":37,"line_end":37,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347503,"byte_end":347512,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347971,"byte_end":347984,"line_start":49,"line_end":49,"column_start":18,"column_end":31},"name":"subsec_micros","qualname":"<ArchivedDuration>::subsec_micros","value":"pub const fn subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of this `ArchivedDuration`, in whole microseconds.","sig":null,"attributes":[{"value":"/ Returns the fractional part of this `ArchivedDuration`, in whole microseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347624,"byte_end":347706,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347711,"byte_end":347714,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This method does **not** return the length of the duration when represented by microseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347719,"byte_end":347815,"line_start":45,"line_end":45,"column_start":5,"column_end":101}},{"value":"/ The returned number always represents a fractional portion of a second (i.e., it is less","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347820,"byte_end":347912,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ than one million).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347917,"byte_end":347939,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":347944,"byte_end":347953,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4408},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348396,"byte_end":348408,"line_start":59,"line_end":59,"column_start":18,"column_end":30},"name":"subsec_nanos","qualname":"<ArchivedDuration>::subsec_nanos","value":"pub const fn subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of this `Duration`, in nanoseconds.","sig":null,"attributes":[{"value":"/ Returns the fractional part of this `Duration`, in nanoseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348065,"byte_end":348132,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348137,"byte_end":348140,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method does **not** return the length of the duration when represented by nanoseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348145,"byte_end":348240,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"/ The returned number always represents a fractional portion of a second (i.e., it is less","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348245,"byte_end":348337,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"/ than one billion).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348342,"byte_end":348364,"line_start":57,"line_end":57,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348369,"byte_end":348378,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348591,"byte_end":348600,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"as_millis","qualname":"<ArchivedDuration>::as_millis","value":"pub const fn as_millis(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole milliseconds contained by this `ArchivedDuration`.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole milliseconds contained by this `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348471,"byte_end":348559,"line_start":63,"line_end":63,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348564,"byte_end":348573,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348867,"byte_end":348876,"line_start":72,"line_end":72,"column_start":18,"column_end":27},"name":"as_micros","qualname":"<ArchivedDuration>::as_micros","value":"pub const fn as_micros(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole microseconds contained by this `ArchivedDuration`.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole microseconds contained by this `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348747,"byte_end":348835,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":348840,"byte_end":348849,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349136,"byte_end":349144,"line_start":79,"line_end":79,"column_start":18,"column_end":26},"name":"as_nanos","qualname":"<ArchivedDuration>::as_nanos","value":"pub const fn as_nanos(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of nanoseconds contained by this `ArchivedDuration`.\n","sig":null,"attributes":[{"value":"/ Returns the total number of nanoseconds contained by this `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349023,"byte_end":349104,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349109,"byte_end":349118,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349462,"byte_end":349473,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"as_secs_f64","qualname":"<ArchivedDuration>::as_secs_f64","value":"pub fn as_secs_f64(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds contained by this `ArchivedDuration` as `f64`.","sig":null,"attributes":[{"value":"/ Returns the number of seconds contained by this `ArchivedDuration` as `f64`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349258,"byte_end":349338,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349343,"byte_end":349346,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The returned value does include the fractional (nanosecond) part of the duration.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349351,"byte_end":349436,"line_start":85,"line_end":85,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349441,"byte_end":349450,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349793,"byte_end":349804,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"as_secs_f32","qualname":"<ArchivedDuration>::as_secs_f32","value":"pub fn as_secs_f32(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds contained by this `ArchivedDuration` as `f32`.","sig":null,"attributes":[{"value":"/ Returns the number of seconds contained by this `ArchivedDuration` as `f32`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349589,"byte_end":349669,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349674,"byte_end":349677,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The returned value does include the fractional (nanosecond) part of the duration.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349682,"byte_end":349767,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349772,"byte_end":349781,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":350123,"byte_end":350130,"line_start":105,"line_end":105,"column_start":19,"column_end":26},"name":"emplace","qualname":"<ArchivedDuration>::emplace","value":"pub unsafe fn emplace(u64, u32, *mut ArchivedDuration)","parent":null,"children":[],"decl_id":null,"docs":" Constructs an archived duration at the given position.","sig":null,"attributes":[{"value":"/ Constructs an archived duration at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349920,"byte_end":349978,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349983,"byte_end":349986,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":349991,"byte_end":350003,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":350008,"byte_end":350011,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ `out` must point to memory suitable for holding an `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":350016,"byte_end":350090,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":350095,"byte_end":350104,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":4418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4524},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4679},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4685},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693},{"krate":0,"index":4695},{"krate":0,"index":4698},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4712},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4723},{"krate":0,"index":4725},{"krate":0,"index":4727},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":8102},{"krate":0,"index":8107},{"krate":0,"index":8113},{"krate":0,"index":8116},{"krate":0,"index":4735},{"krate":0,"index":4739},{"krate":0,"index":4744},{"krate":0,"index":4747},{"krate":0,"index":4750},{"krate":0,"index":4753},{"krate":0,"index":4756}],"decl_id":null,"docs":" Utilities for common archive operations.","sig":null,"attributes":[{"value":"/ Utilities for common archive operations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350465,"byte_end":350509,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350510,"byte_end":350513,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Buffer access","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350514,"byte_end":350534,"line_start":3,"line_end":3,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350535,"byte_end":350538,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Helper functions to get the root object of an archive under certain conditions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350539,"byte_end":350622,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350623,"byte_end":350626,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Alignment","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350627,"byte_end":350643,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350644,"byte_end":350647,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Alignment helpers ensure that byte buffers are properly aligned when accessing and deserializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350648,"byte_end":350748,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/ data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":350749,"byte_end":350758,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4457},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362234,"byte_end":362244,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"AlignedVec","qualname":"::util::aligned_vec::AlignedVec","value":"AlignedVec {  }","parent":null,"children":[{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460}],"decl_id":null,"docs":" A vector of bytes that aligns its memory to 16 bytes.\n","sig":null,"attributes":[{"value":"/ A vector of bytes that aligns its memory to 16 bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362165,"byte_end":362222,"line_start":13,"line_end":13,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":4464},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362585,"byte_end":362594,"line_start":33,"line_end":33,"column_start":15,"column_end":24},"name":"ALIGNMENT","qualname":"::util::aligned_vec::AlignedVec::ALIGNMENT","value":"usize","parent":{"krate":0,"index":4463},"children":[],"decl_id":null,"docs":" The alignment of the vector\n","sig":null,"attributes":[{"value":"/ The alignment of the vector","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362539,"byte_end":362570,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362890,"byte_end":362893,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<AlignedVec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `AlignedVec`.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `AlignedVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362613,"byte_end":362654,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362659,"byte_end":362662,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The vector will not allocate until elements are pushed into it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362667,"byte_end":362734,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362739,"byte_end":362742,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362747,"byte_end":362761,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362766,"byte_end":362773,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362778,"byte_end":362803,"line_start":41,"line_end":41,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362808,"byte_end":362811,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362816,"byte_end":362852,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362857,"byte_end":362864,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362869,"byte_end":362878,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363931,"byte_end":363944,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<AlignedVec>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `AlignedVec` with the specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `AlignedVec` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363026,"byte_end":363095,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363100,"byte_end":363103,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The vector will be able to hold exactly `capacity` bytes without reallocating. If","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363108,"byte_end":363193,"line_start":56,"line_end":56,"column_start":5,"column_end":90}},{"value":"/ `capacity` is 0, the vector will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363198,"byte_end":363248,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363253,"byte_end":363256,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363261,"byte_end":363275,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363280,"byte_end":363287,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363292,"byte_end":363317,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363322,"byte_end":363325,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363330,"byte_end":363378,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363383,"byte_end":363386,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ // The vector contains no items, even though it has capacity for more","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363391,"byte_end":363464,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(vec.len(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363469,"byte_end":363498,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363503,"byte_end":363538,"line_start":67,"line_end":67,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363543,"byte_end":363546,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ // These are all done without reallocating...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363551,"byte_end":363600,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ for i in 0..10 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363605,"byte_end":363625,"line_start":70,"line_end":70,"column_start":5,"column_end":25}},{"value":"/     vec.push(i);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363630,"byte_end":363650,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363655,"byte_end":363660,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363665,"byte_end":363695,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363700,"byte_end":363735,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363740,"byte_end":363743,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // ...but this may make the vector reallocate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363748,"byte_end":363797,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/ vec.push(11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363802,"byte_end":363819,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(vec.len(), 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363824,"byte_end":363854,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert!(vec.capacity() >= 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363859,"byte_end":363893,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363898,"byte_end":363905,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":363910,"byte_end":363919,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364970,"byte_end":364975,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"clear","qualname":"<AlignedVec>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364570,"byte_end":364613,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364618,"byte_end":364621,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity of the vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364626,"byte_end":364706,"line_start":107,"line_end":107,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364711,"byte_end":364714,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364719,"byte_end":364733,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364738,"byte_end":364745,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364750,"byte_end":364775,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364780,"byte_end":364783,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut v = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364788,"byte_end":364822,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ v.extend_from_slice(&[1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364827,"byte_end":364866,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364871,"byte_end":364874,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ v.clear();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364879,"byte_end":364893,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364898,"byte_end":364901,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364906,"byte_end":364932,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364937,"byte_end":364944,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":364949,"byte_end":364958,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4470},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365903,"byte_end":365916,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<AlignedVec>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the vector as much as possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365358,"byte_end":365417,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365422,"byte_end":365425,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ It will drop down as close as possible to the length but the allocator may still inform the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365430,"byte_end":365525,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ vector that there is space for a few more elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365530,"byte_end":365585,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365590,"byte_end":365593,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365598,"byte_end":365612,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365617,"byte_end":365624,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365629,"byte_end":365654,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365659,"byte_end":365662,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365667,"byte_end":365715,"line_start":145,"line_end":145,"column_start":5,"column_end":53}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365720,"byte_end":365758,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365763,"byte_end":365798,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ vec.shrink_to_fit();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365803,"byte_end":365827,"line_start":148,"line_end":148,"column_start":5,"column_end":29}},{"value":"/ assert!(vec.capacity() >= 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365832,"byte_end":365865,"line_start":149,"line_end":149,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365870,"byte_end":365877,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":365882,"byte_end":365891,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366934,"byte_end":366944,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<AlignedVec>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366064,"byte_end":366125,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366130,"byte_end":366133,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this function returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366138,"byte_end":366232,"line_start":162,"line_end":162,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage. Modifying the vector may cause its buffer to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366237,"byte_end":366324,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366329,"byte_end":366395,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366400,"byte_end":366403,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366408,"byte_end":366422,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366427,"byte_end":366434,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366439,"byte_end":366464,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366469,"byte_end":366472,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ // Allocate vecotr big enough for 4 bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366477,"byte_end":366523,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/ let size = 4;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366528,"byte_end":366545,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/ let mut x = AlignedVec::with_capacity(size);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366550,"byte_end":366598,"line_start":172,"line_end":172,"column_start":5,"column_end":53}},{"value":"/ let x_ptr = x.as_mut_ptr();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366603,"byte_end":366634,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366639,"byte_end":366642,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // Initialize elements via raw pointer writes, then set length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366647,"byte_end":366714,"line_start":175,"line_end":175,"column_start":5,"column_end":72}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366719,"byte_end":366731,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/     for i in 0..size {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366736,"byte_end":366762,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/         *x_ptr.add(i) = i as u8;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366767,"byte_end":366803,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366808,"byte_end":366817,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/     x.set_len(size);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366822,"byte_end":366846,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366851,"byte_end":366856,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(&*x, &[0, 1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366861,"byte_end":366896,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366901,"byte_end":366908,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":366913,"byte_end":366922,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367549,"byte_end":367561,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<AlignedVec>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367006,"byte_end":367056,"line_start":189,"line_end":189,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367061,"byte_end":367064,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367069,"byte_end":367100,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367105,"byte_end":367108,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367113,"byte_end":367127,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367132,"byte_end":367139,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367144,"byte_end":367169,"line_start":195,"line_end":195,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367174,"byte_end":367177,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367182,"byte_end":367218,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2, 3, 4, 5]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367223,"byte_end":367267,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(vec.as_mut_slice().len(), 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367272,"byte_end":367316,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/ for i in 0..5 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367321,"byte_end":367340,"line_start":200,"line_end":200,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(vec.as_mut_slice()[i], i as u8 + 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367345,"byte_end":367400,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/     vec.as_mut_slice()[i] = i as u8;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367405,"byte_end":367445,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(vec.as_mut_slice()[i], i as u8);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367450,"byte_end":367501,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367506,"byte_end":367511,"line_start":204,"line_end":204,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367516,"byte_end":367523,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367528,"byte_end":367537,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368674,"byte_end":368680,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AlignedVec>::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367673,"byte_end":367722,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367727,"byte_end":367730,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this function returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367735,"byte_end":367829,"line_start":213,"line_end":213,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage. Modifying the vector may cause its buffer to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367834,"byte_end":367921,"line_start":214,"line_end":214,"column_start":5,"column_end":92}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367926,"byte_end":367992,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":367997,"byte_end":368000,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The caller must also ensure that the memory the pointer (non-transitively) points to is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368005,"byte_end":368096,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/ never written to (except inside an `UnsafeCell`) using this pointer or any pointer derived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368101,"byte_end":368195,"line_start":218,"line_end":218,"column_start":5,"column_end":99}},{"value":"/ from it. If you need to mutate the contents of the slice, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368200,"byte_end":368265,"line_start":219,"line_end":219,"column_start":5,"column_end":70}},{"value":"/ [`as_mut_ptr`](AlignedVec::as_mut_ptr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368270,"byte_end":368313,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368318,"byte_end":368321,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368326,"byte_end":368340,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368345,"byte_end":368352,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368357,"byte_end":368382,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368387,"byte_end":368390,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut x = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368395,"byte_end":368429,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ x.extend_from_slice(&[1, 2, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368434,"byte_end":368470,"line_start":227,"line_end":227,"column_start":5,"column_end":41}},{"value":"/ let x_ptr = x.as_ptr();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368475,"byte_end":368502,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368507,"byte_end":368510,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368515,"byte_end":368527,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/     for i in 0..x.len() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368532,"byte_end":368561,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(*x_ptr.add(i), 1 << i);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368566,"byte_end":368612,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368617,"byte_end":368626,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368631,"byte_end":368636,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368641,"byte_end":368648,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368653,"byte_end":368662,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369170,"byte_end":369178,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<AlignedVec>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368740,"byte_end":368790,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368795,"byte_end":368798,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368803,"byte_end":368830,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368835,"byte_end":368838,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368843,"byte_end":368857,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368862,"byte_end":368869,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368874,"byte_end":368899,"line_start":247,"line_end":247,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368904,"byte_end":368907,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368912,"byte_end":368948,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2, 3, 4, 5]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":368953,"byte_end":368997,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(vec.as_slice().len(), 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369002,"byte_end":369042,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/ for i in 0..5 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369047,"byte_end":369066,"line_start":252,"line_end":252,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(vec.as_slice()[i], i as u8 + 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369071,"byte_end":369122,"line_start":253,"line_end":253,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369127,"byte_end":369132,"line_start":254,"line_end":254,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369137,"byte_end":369144,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369149,"byte_end":369158,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369558,"byte_end":369566,"line_start":271,"line_end":271,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AlignedVec>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the vector can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the vector can hold without reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369278,"byte_end":369354,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369359,"byte_end":369362,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369367,"byte_end":369381,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369386,"byte_end":369393,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369398,"byte_end":369423,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369428,"byte_end":369431,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369436,"byte_end":369480,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369485,"byte_end":369520,"line_start":268,"line_end":268,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369525,"byte_end":369532,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369537,"byte_end":369546,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370289,"byte_end":370296,"line_start":294,"line_end":294,"column_start":12,"column_end":19},"name":"reserve","qualname":"<AlignedVec>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted into the given\n `AlignedVec`. The collection may reserve more space to avoid frequent reallocations. After\n calling `reserve`, capacity will be greater than or equal to `self.len() + additional`. Does\n nothing if capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted into the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369613,"byte_end":369701,"line_start":275,"line_end":275,"column_start":5,"column_end":93}},{"value":"/ `AlignedVec`. The collection may reserve more space to avoid frequent reallocations. After","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369706,"byte_end":369800,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/ calling `reserve`, capacity will be greater than or equal to `self.len() + additional`. Does","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369805,"byte_end":369901,"line_start":277,"line_end":277,"column_start":5,"column_end":101}},{"value":"/ nothing if capacity is already sufficient.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369906,"byte_end":369952,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369957,"byte_end":369960,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369965,"byte_end":369977,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369982,"byte_end":369985,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds `usize::MAX` bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":369990,"byte_end":370048,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370053,"byte_end":370056,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370061,"byte_end":370075,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370080,"byte_end":370087,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370092,"byte_end":370117,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370122,"byte_end":370125,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370130,"byte_end":370166,"line_start":288,"line_end":288,"column_start":5,"column_end":41}},{"value":"/ vec.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370171,"byte_end":370187,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/ vec.reserve(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370192,"byte_end":370212,"line_start":290,"line_end":290,"column_start":5,"column_end":25}},{"value":"/ assert!(vec.capacity() >= 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370217,"byte_end":370251,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370256,"byte_end":370263,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":370268,"byte_end":370277,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371433,"byte_end":371441,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<AlignedVec>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371142,"byte_end":371196,"line_start":317,"line_end":317,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371201,"byte_end":371204,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371209,"byte_end":371223,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371228,"byte_end":371235,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371240,"byte_end":371265,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371270,"byte_end":371273,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371278,"byte_end":371305,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371310,"byte_end":371336,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371341,"byte_end":371344,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ v.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371349,"byte_end":371363,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371368,"byte_end":371395,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371400,"byte_end":371407,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371412,"byte_end":371421,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371802,"byte_end":371805,"line_start":345,"line_end":345,"column_start":12,"column_end":15},"name":"len","qualname":"<AlignedVec>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its 'length'.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its 'length'.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371492,"byte_end":371575,"line_start":334,"line_end":334,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371580,"byte_end":371583,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371588,"byte_end":371602,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371607,"byte_end":371614,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371619,"byte_end":371644,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371649,"byte_end":371652,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let mut a = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371657,"byte_end":371691,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ a.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371696,"byte_end":371732,"line_start":341,"line_end":341,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371737,"byte_end":371764,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371769,"byte_end":371776,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371781,"byte_end":371790,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372252,"byte_end":372269,"line_start":363,"line_end":363,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<AlignedVec>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Copies and appends all bytes in a slice to the `AlignedVec`.","sig":null,"attributes":[{"value":"/ Copies and appends all bytes in a slice to the `AlignedVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371852,"byte_end":371916,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371921,"byte_end":371924,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ The elements of the slice are appended in-order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371929,"byte_end":371981,"line_start":351,"line_end":351,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371986,"byte_end":371989,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":371994,"byte_end":372008,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372013,"byte_end":372020,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372025,"byte_end":372050,"line_start":355,"line_end":355,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372055,"byte_end":372058,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372063,"byte_end":372099,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"/ vec.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372104,"byte_end":372120,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/ vec.extend_from_slice(&[2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372125,"byte_end":372163,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372168,"byte_end":372214,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372219,"byte_end":372226,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372231,"byte_end":372240,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373019,"byte_end":373022,"line_start":389,"line_end":389,"column_start":12,"column_end":15},"name":"pop","qualname":"<AlignedVec>::pop","value":"pub fn pop(&mut Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and returns it, or `None` if it is empty.","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and returns it, or `None` if it is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372651,"byte_end":372735,"line_start":377,"line_end":377,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372740,"byte_end":372743,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372748,"byte_end":372762,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372767,"byte_end":372774,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372779,"byte_end":372804,"line_start":381,"line_end":381,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372809,"byte_end":372812,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372817,"byte_end":372853,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372858,"byte_end":372896,"line_start":384,"line_end":384,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec.pop(), Some(3));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372901,"byte_end":372936,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372941,"byte_end":372981,"line_start":386,"line_end":386,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372986,"byte_end":372993,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":372998,"byte_end":373007,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373641,"byte_end":373645,"line_start":415,"line_end":415,"column_start":12,"column_end":16},"name":"push","qualname":"<AlignedVec>::push","value":"pub fn push(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of a collection.","sig":null,"attributes":[{"value":"/ Appends an element to the back of a collection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373229,"byte_end":373280,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373285,"byte_end":373288,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373293,"byte_end":373305,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373310,"byte_end":373313,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds `usize::MAX` bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373318,"byte_end":373376,"line_start":403,"line_end":403,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373381,"byte_end":373384,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373389,"byte_end":373403,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373408,"byte_end":373415,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373420,"byte_end":373445,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373450,"byte_end":373453,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373458,"byte_end":373494,"line_start":409,"line_end":409,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373499,"byte_end":373534,"line_start":410,"line_end":410,"column_start":5,"column_end":40}},{"value":"/ vec.push(3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373539,"byte_end":373555,"line_start":411,"line_end":411,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373560,"byte_end":373603,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373608,"byte_end":373615,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373620,"byte_end":373629,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374665,"byte_end":374678,"line_start":445,"line_end":445,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<AlignedVec>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\n given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal\n to `self.len() + additional`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more elements to be inserted in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373822,"byte_end":373916,"line_start":423,"line_end":423,"column_start":5,"column_end":99}},{"value":"/ given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":373921,"byte_end":374014,"line_start":424,"line_end":424,"column_start":5,"column_end":98}},{"value":"/ to `self.len() + additional`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374019,"byte_end":374104,"line_start":425,"line_end":425,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374109,"byte_end":374112,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give the collection more space than it requests. Therefore,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374117,"byte_end":374208,"line_start":427,"line_end":427,"column_start":5,"column_end":96}},{"value":"/ capacity can not be relied upon to be precisely minimal. Prefer reserve if future insertions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374213,"byte_end":374309,"line_start":428,"line_end":428,"column_start":5,"column_end":101}},{"value":"/ are expected.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374314,"byte_end":374331,"line_start":429,"line_end":429,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374336,"byte_end":374339,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374344,"byte_end":374356,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374361,"byte_end":374364,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374369,"byte_end":374418,"line_start":433,"line_end":433,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374423,"byte_end":374426,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374431,"byte_end":374445,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374450,"byte_end":374457,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374462,"byte_end":374487,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374492,"byte_end":374495,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374500,"byte_end":374536,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/ vec.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374541,"byte_end":374557,"line_start":440,"line_end":440,"column_start":5,"column_end":21}},{"value":"/ vec.reserve_exact(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374562,"byte_end":374588,"line_start":441,"line_end":441,"column_start":5,"column_end":31}},{"value":"/ assert!(vec.capacity() >= 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374593,"byte_end":374627,"line_start":442,"line_end":442,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374632,"byte_end":374639,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374644,"byte_end":374653,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4484},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375726,"byte_end":375733,"line_start":478,"line_end":478,"column_start":19,"column_end":26},"name":"set_len","qualname":"<AlignedVec>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":374949,"byte_end":374998,"line_start":454,"line_end":454,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375003,"byte_end":375006,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This is a low-level operation that maintains none of the normal invariants of the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375011,"byte_end":375102,"line_start":456,"line_end":456,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375107,"byte_end":375110,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375115,"byte_end":375127,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375132,"byte_end":375135,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ - `new_len` must be less than or equal to [`capacity()`](AlignedVec::capacity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375140,"byte_end":375222,"line_start":460,"line_end":460,"column_start":5,"column_end":87}},{"value":"/ - The elements at `old_len..new_len` must be initialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375227,"byte_end":375287,"line_start":461,"line_end":461,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375292,"byte_end":375295,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375300,"byte_end":375314,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375319,"byte_end":375326,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375331,"byte_end":375356,"line_start":465,"line_end":465,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375361,"byte_end":375364,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375369,"byte_end":375416,"line_start":467,"line_end":467,"column_start":5,"column_end":52}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375421,"byte_end":375459,"line_start":468,"line_end":468,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375464,"byte_end":375467,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // SAFETY:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375472,"byte_end":375486,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/ // 1. `old_len..0` is empty to no elements need to be initialized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375491,"byte_end":375561,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/ // 2. `0 <= capacity` always holds whatever capacity is.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375566,"byte_end":375626,"line_start":472,"line_end":472,"column_start":5,"column_end":65}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375631,"byte_end":375643,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/     vec.set_len(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375648,"byte_end":375671,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375676,"byte_end":375681,"line_start":475,"line_end":475,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375686,"byte_end":375693,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375698,"byte_end":375707,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376587,"byte_end":376603,"line_start":511,"line_end":511,"column_start":12,"column_end":28},"name":"into_boxed_slice","qualname":"<AlignedVec>::into_boxed_slice","value":"pub fn into_boxed_slice(Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the vector into `Box<[u8]>`.","sig":null,"attributes":[{"value":"/ Converts the vector into `Box<[u8]>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375854,"byte_end":375895,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375900,"byte_end":375903,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method reallocates and copies the underlying bytes. Any excess capacity is dropped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":375908,"byte_end":376000,"line_start":486,"line_end":486,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376005,"byte_end":376008,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376013,"byte_end":376027,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376032,"byte_end":376039,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376044,"byte_end":376069,"line_start":490,"line_end":490,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376074,"byte_end":376077,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let mut v = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376082,"byte_end":376116,"line_start":492,"line_end":492,"column_start":5,"column_end":39}},{"value":"/ v.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376121,"byte_end":376157,"line_start":493,"line_end":493,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376162,"byte_end":376165,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let slice = v.into_boxed_slice();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376170,"byte_end":376207,"line_start":495,"line_end":495,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376212,"byte_end":376219,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376224,"byte_end":376227,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Any excess capacity is removed:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376232,"byte_end":376267,"line_start":498,"line_end":498,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376272,"byte_end":376275,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376280,"byte_end":376287,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376292,"byte_end":376317,"line_start":501,"line_end":501,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376322,"byte_end":376325,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376330,"byte_end":376378,"line_start":503,"line_end":503,"column_start":5,"column_end":53}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376383,"byte_end":376421,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376426,"byte_end":376429,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376434,"byte_end":376469,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/ let slice = vec.into_boxed_slice();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376474,"byte_end":376513,"line_start":507,"line_end":507,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(slice.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376518,"byte_end":376549,"line_start":508,"line_end":508,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376554,"byte_end":376561,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376566,"byte_end":376575,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377140,"byte_end":377148,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<AlignedVec>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts the vector into `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Converts the vector into `Vec<u8>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376679,"byte_end":376718,"line_start":515,"line_end":515,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376723,"byte_end":376726,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This method reallocates and copies the underlying bytes. Any excess capacity is dropped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376731,"byte_end":376823,"line_start":517,"line_end":517,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376828,"byte_end":376831,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376836,"byte_end":376850,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376855,"byte_end":376862,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376867,"byte_end":376892,"line_start":521,"line_end":521,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376897,"byte_end":376900,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let mut v = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376905,"byte_end":376939,"line_start":523,"line_end":523,"column_start":5,"column_end":39}},{"value":"/ v.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376944,"byte_end":376980,"line_start":524,"line_end":524,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376985,"byte_end":376988,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ let vec = v.into_vec();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":376993,"byte_end":377020,"line_start":526,"line_end":526,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(vec.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377025,"byte_end":377054,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377059,"byte_end":377102,"line_start":528,"line_end":528,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377107,"byte_end":377114,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377119,"byte_end":377128,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4554},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":380847,"byte_end":380857,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ScratchVec","qualname":"::util::scratch_vec::ScratchVec","value":"ScratchVec {  }","parent":null,"children":[{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558}],"decl_id":null,"docs":" A vector view into serializer scratch space.\n","sig":null,"attributes":[{"value":"/ A vector view into serializer scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":380787,"byte_end":380835,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381850,"byte_end":381853,"line_start":46,"line_end":46,"column_start":19,"column_end":22},"name":"new","qualname":"<ScratchVec<T>>::new","value":"pub unsafe fn new<S: ScratchSpace + ?Sized>(&mut S, usize)\n-> Result<Self, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `ScratchVec` with the specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `ScratchVec` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381442,"byte_end":381511,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381516,"byte_end":381519,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The vector will be able to hold exactly `capacity` elements. If `capacity` is 0, the vector","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381524,"byte_end":381619,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"/ will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381624,"byte_end":381646,"line_start":39,"line_end":39,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381651,"byte_end":381654,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381659,"byte_end":381671,"line_start":41,"line_end":41,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381676,"byte_end":381679,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ - The vector must not outlive the given scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381684,"byte_end":381742,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/ - Vectors must be dropped in the reverse order they are allocated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381747,"byte_end":381817,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381822,"byte_end":381831,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383004,"byte_end":383008,"line_start":78,"line_end":78,"column_start":19,"column_end":23},"name":"free","qualname":"<ScratchVec<T>>::free","value":"pub unsafe fn free<S: ScratchSpace + ?Sized>(Self, &mut S)\n-> Result<(), S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Frees the memory associated with the scratch vec and releases it back to the scratch space.","sig":null,"attributes":[{"value":"/ Frees the memory associated with the scratch vec and releases it back to the scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382419,"byte_end":382514,"line_start":67,"line_end":67,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382519,"byte_end":382522,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This must be called when serialization succeeds, but may be omitted when serialization","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382527,"byte_end":382617,"line_start":69,"line_end":69,"column_start":5,"column_end":95}},{"value":"/ fails. In that case, the elements of the scratch vec will be dropped but the memory will not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382622,"byte_end":382718,"line_start":70,"line_end":70,"column_start":5,"column_end":101}},{"value":"/ be popped. It is the duty of the scratch space in that case to ensure that memory resources","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382723,"byte_end":382818,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ are properly cleaned up.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382823,"byte_end":382851,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382856,"byte_end":382859,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382864,"byte_end":382876,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382881,"byte_end":382884,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The given scratch space must be the same one used to allocate the scratch vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382889,"byte_end":382971,"line_start":76,"line_end":76,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":382976,"byte_end":382985,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383606,"byte_end":383611,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"clear","qualname":"<ScratchVec<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383444,"byte_end":383487,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383492,"byte_end":383495,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity of the vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383500,"byte_end":383580,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383585,"byte_end":383594,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383896,"byte_end":383906,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ScratchVec<T>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383658,"byte_end":383719,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383724,"byte_end":383727,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this function returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383732,"byte_end":383826,"line_start":106,"line_end":106,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383831,"byte_end":383870,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383875,"byte_end":383884,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384087,"byte_end":384099,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<ScratchVec<T>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":383967,"byte_end":384017,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384022,"byte_end":384025,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384030,"byte_end":384061,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384066,"byte_end":384075,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4576},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384758,"byte_end":384764,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ScratchVec<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384210,"byte_end":384259,"line_start":121,"line_end":121,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384264,"byte_end":384267,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this functions returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384272,"byte_end":384367,"line_start":123,"line_end":123,"column_start":5,"column_end":100}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384372,"byte_end":384411,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384416,"byte_end":384419,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The caller must also ensure that the memory the pointer (non-transitively) points to is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384424,"byte_end":384515,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ never written to (except inside an `UnsafeCell`) using this pointer or any pointer derived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384520,"byte_end":384614,"line_start":127,"line_end":127,"column_start":5,"column_end":99}},{"value":"/ from it. If you need to mutate the contents of the slice, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384619,"byte_end":384684,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ [`as_mut_ptr`](ScratchVec::as_mut_ptr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384689,"byte_end":384732,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384737,"byte_end":384746,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384939,"byte_end":384947,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ScratchVec<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384823,"byte_end":384873,"line_start":135,"line_end":135,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384878,"byte_end":384881,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384886,"byte_end":384913,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":384918,"byte_end":384927,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385148,"byte_end":385156,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ScratchVec<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the vector can hole without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements the vector can hole without reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385046,"byte_end":385122,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385127,"byte_end":385136,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4579},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385454,"byte_end":385461,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"reserve","qualname":"<ScratchVec<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that there is capacity for at least `additional` more elements to be inserted into\n the `ScratchVec`.","sig":null,"attributes":[{"value":"/ Ensures that there is capacity for at least `additional` more elements to be inserted into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385203,"byte_end":385297,"line_start":149,"line_end":149,"column_start":5,"column_end":99}},{"value":"/ the `ScratchVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385302,"byte_end":385323,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385328,"byte_end":385331,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385336,"byte_end":385348,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385353,"byte_end":385356,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Panics if the required capacity exceeds the available capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385361,"byte_end":385428,"line_start":154,"line_end":154,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385433,"byte_end":385442,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385731,"byte_end":385739,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ScratchVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385651,"byte_end":385705,"line_start":162,"line_end":162,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385710,"byte_end":385719,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4581},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385899,"byte_end":385902,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"len","qualname":"<ScratchVec<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its `length`.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its `length`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385790,"byte_end":385873,"line_start":168,"line_end":168,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385878,"byte_end":385887,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4582},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386107,"byte_end":386124,"line_start":178,"line_end":178,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<ScratchVec<T>>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Copies and appends all elements in a slice to the `ScratchVec`.","sig":null,"attributes":[{"value":"/ Copies and appends all elements in a slice to the `ScratchVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":385949,"byte_end":386016,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386021,"byte_end":386024,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The elements of the slice are appended in-order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386029,"byte_end":386081,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386086,"byte_end":386095,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386615,"byte_end":386618,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"pop","qualname":"<ScratchVec<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and returns it, or `None` if it is empty.\n","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and returns it, or `None` if it is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386505,"byte_end":386589,"line_start":192,"line_end":192,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386594,"byte_end":386603,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386929,"byte_end":386933,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"push","qualname":"<ScratchVec<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of a collection.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of a collection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386852,"byte_end":386903,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":386908,"byte_end":386917,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387522,"byte_end":387535,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<ScratchVec<T>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\n given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal\n to `self.len() + additional`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more elements to be inserted in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387109,"byte_end":387203,"line_start":215,"line_end":215,"column_start":5,"column_end":99}},{"value":"/ given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387208,"byte_end":387301,"line_start":216,"line_end":216,"column_start":5,"column_end":98}},{"value":"/ to `self.len() + additional`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387306,"byte_end":387391,"line_start":217,"line_end":217,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387396,"byte_end":387399,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387404,"byte_end":387416,"line_start":219,"line_end":219,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387421,"byte_end":387424,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Panics if the required capacity exceeds the available capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387429,"byte_end":387496,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387501,"byte_end":387510,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387984,"byte_end":387991,"line_start":236,"line_end":236,"column_start":19,"column_end":26},"name":"set_len","qualname":"<ScratchVec<T>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387613,"byte_end":387662,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387667,"byte_end":387670,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This is a low-level operation that maintains none of the normal invariants of the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387675,"byte_end":387766,"line_start":229,"line_end":229,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387771,"byte_end":387774,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387779,"byte_end":387791,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387796,"byte_end":387799,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ - `new_len` must be less than or equal to [`capacity()`](ScratchVec::capacity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387804,"byte_end":387886,"line_start":233,"line_end":233,"column_start":5,"column_end":87}},{"value":"/ - The elements at `old_len..new_len` must be initialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387891,"byte_end":387951,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":387956,"byte_end":387965,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4591},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390008,"byte_end":390013,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"drain","qualname":"<ScratchVec<T>>::drain","value":"pub fn drain<R: ops::RangeBounds<usize>>(&mut Self, R) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector and yields the\n removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector and yields the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389412,"byte_end":389505,"line_start":281,"line_end":281,"column_start":5,"column_end":98}},{"value":"/ removed items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389510,"byte_end":389528,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389533,"byte_end":389536,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ When the iterator **is** dropped, all elements in the range are removed from the vector,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389541,"byte_end":389633,"line_start":284,"line_end":284,"column_start":5,"column_end":97}},{"value":"/ even if the iterator was not fully consumed. If the iterator **is not** dropped (with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389638,"byte_end":389727,"line_start":285,"line_end":285,"column_start":5,"column_end":94}},{"value":"/ `mem::forget` for example), it is unspecified how many elements are removed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389732,"byte_end":389812,"line_start":286,"line_end":286,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389817,"byte_end":389820,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389825,"byte_end":389837,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389842,"byte_end":389845,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Panics if the starting point is greater than the end point or if the end point is greater","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389850,"byte_end":389943,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ than the length of the vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389948,"byte_end":389982,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":389987,"byte_end":389996,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390969,"byte_end":390980,"line_start":320,"line_end":320,"column_start":12,"column_end":23},"name":"assume_init","qualname":"<ScratchVec<MaybeUninit<T>>>::assume_init","value":"pub fn assume_init(Self) -> ScratchVec<T>","parent":null,"children":[],"decl_id":null,"docs":" Assuming that all the elements are initialized, removes the `MaybeUninit` wrapper from the\n vector.","sig":null,"attributes":[{"value":"/ Assuming that all the elements are initialized, removes the `MaybeUninit` wrapper from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390583,"byte_end":390677,"line_start":311,"line_end":311,"column_start":5,"column_end":99}},{"value":"/ vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390682,"byte_end":390693,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390698,"byte_end":390701,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390706,"byte_end":390718,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390723,"byte_end":390726,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to guarantee that the `MaybeUninit<T>` elements really are in an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390731,"byte_end":390822,"line_start":316,"line_end":316,"column_start":5,"column_end":96}},{"value":"/ initialized state. Calling this when the content is not yet fully initialized causes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390827,"byte_end":390915,"line_start":317,"line_end":317,"column_start":5,"column_end":93}},{"value":"/ undefined behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390920,"byte_end":390943,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390948,"byte_end":390957,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392670,"byte_end":392675,"line_start":399,"line_end":399,"column_start":12,"column_end":17},"name":"Drain","qualname":"::util::scratch_vec::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633}],"decl_id":null,"docs":" A draining iterator for `ScratchVec<T>`.","sig":null,"attributes":[{"value":"/ A draining iterator for `ScratchVec<T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392523,"byte_end":392567,"line_start":396,"line_end":396,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392568,"byte_end":392571,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by [`ScratchVec::drain`]. See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392572,"byte_end":392658,"line_start":398,"line_end":398,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393117,"byte_end":393125,"line_start":416,"line_end":416,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Drain>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393031,"byte_end":393091,"line_start":414,"line_end":414,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393096,"byte_end":393105,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":4719},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352234,"byte_end":352248,"line_start":63,"line_end":63,"column_start":15,"column_end":29},"name":"archived_value","qualname":"::util::archived_value","value":"pub unsafe fn archived_value<T: Archive + ?Sized>(&[u8], usize)\n-> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts an archived value from the given byte slice at the given position.","sig":null,"attributes":[{"value":"/ Casts an archived value from the given byte slice at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":351882,"byte_end":351958,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":351959,"byte_end":351962,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":351963,"byte_end":352056,"line_start":56,"line_end":56,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352057,"byte_end":352110,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352111,"byte_end":352114,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352115,"byte_end":352127,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352128,"byte_end":352131,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ A `T::Archived` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352132,"byte_end":352209,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352210,"byte_end":352219,"line_start":62,"line_end":62,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4721},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352795,"byte_end":352813,"line_start":79,"line_end":79,"column_start":15,"column_end":33},"name":"archived_value_mut","qualname":"::util::archived_value_mut","value":"pub unsafe fn archived_value_mut<T: Archive + ?Sized>(Pin<&mut [u8]>, usize)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a mutable archived value from the given byte slice at the given position.","sig":null,"attributes":[{"value":"/ Casts a mutable archived value from the given byte slice at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352436,"byte_end":352519,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352520,"byte_end":352523,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352524,"byte_end":352617,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352618,"byte_end":352671,"line_start":73,"line_end":73,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352672,"byte_end":352675,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352676,"byte_end":352688,"line_start":75,"line_end":75,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352689,"byte_end":352692,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ A `T::Archived` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352693,"byte_end":352770,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":352771,"byte_end":352780,"line_start":78,"line_end":78,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4723},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353498,"byte_end":353520,"line_start":99,"line_end":99,"column_start":15,"column_end":37},"name":"archived_unsized_value","qualname":"::util::archived_unsized_value","value":"pub unsafe fn archived_unsized_value<T: ArchiveUnsized + ?Sized>(&[u8], usize)\n-> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts a [`RelPtr`] to the given unsized type from the given byte slice at the given position and\n returns the value it points to.","sig":null,"attributes":[{"value":"/ Casts a [`RelPtr`] to the given unsized type from the given byte slice at the given position and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353078,"byte_end":353178,"line_start":89,"line_end":89,"column_start":1,"column_end":101}},{"value":"/ returns the value it points to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353179,"byte_end":353214,"line_start":90,"line_end":90,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353215,"byte_end":353218,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353219,"byte_end":353312,"line_start":92,"line_end":92,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353313,"byte_end":353366,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353367,"byte_end":353370,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353371,"byte_end":353383,"line_start":95,"line_end":95,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353384,"byte_end":353387,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ A `RelPtr<T::Archived>` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353388,"byte_end":353473,"line_start":97,"line_end":97,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353474,"byte_end":353483,"line_start":98,"line_end":98,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4725},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354223,"byte_end":354249,"line_start":120,"line_end":120,"column_start":15,"column_end":41},"name":"archived_unsized_value_mut","qualname":"::util::archived_unsized_value_mut","value":"pub unsafe fn archived_unsized_value_mut<T: ArchiveUnsized +\n                                         ?Sized>(Pin<&mut [u8]>, usize)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a mutable [`RelPtr`] to the given unsized type from the given byte slice at the given\n position and returns the value it points to.","sig":null,"attributes":[{"value":"/ Casts a mutable [`RelPtr`] to the given unsized type from the given byte slice at the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353795,"byte_end":353890,"line_start":110,"line_end":110,"column_start":1,"column_end":96}},{"value":"/ position and returns the value it points to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353891,"byte_end":353939,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353940,"byte_end":353943,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":353944,"byte_end":354037,"line_start":113,"line_end":113,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354038,"byte_end":354091,"line_start":114,"line_end":114,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354092,"byte_end":354095,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354096,"byte_end":354108,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354109,"byte_end":354112,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ A `RelPtr<T::Archived>` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354113,"byte_end":354198,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354199,"byte_end":354208,"line_start":119,"line_end":119,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4727},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355299,"byte_end":355312,"line_start":147,"line_end":147,"column_start":15,"column_end":28},"name":"archived_root","qualname":"::util::archived_root","value":"pub unsafe fn archived_root<T: Archive + ?Sized>(&[u8]) -> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts an archived value from the given byte slice by calculating the root position.","sig":null,"attributes":[{"value":"/ Casts an archived value from the given byte slice by calculating the root position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354634,"byte_end":354721,"line_start":135,"line_end":135,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354722,"byte_end":354725,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_value`](crate::archived_value) that calculates the correct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354726,"byte_end":354821,"line_start":137,"line_end":137,"column_start":1,"column_end":96}},{"value":"/ position of the root using the length of the byte slice. If your byte slice is not guaranteed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354822,"byte_end":354922,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ end immediately after the root object, you may need to store the position of the root object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":354923,"byte_end":355019,"line_start":139,"line_end":139,"column_start":1,"column_end":97}},{"value":"/ returned from [`serialize_value`](crate::ser::Serializer::serialize_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355020,"byte_end":355099,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355100,"byte_end":355103,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355104,"byte_end":355116,"line_start":142,"line_end":142,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355117,"byte_end":355120,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355121,"byte_end":355175,"line_start":144,"line_end":144,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355176,"byte_end":355274,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355275,"byte_end":355284,"line_start":146,"line_end":146,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4729},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356125,"byte_end":356142,"line_start":163,"line_end":163,"column_start":15,"column_end":32},"name":"archived_root_mut","qualname":"::util::archived_root_mut","value":"pub unsafe fn archived_root_mut<T: Archive + ?Sized>(Pin<&mut [u8]>)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a mutable archived value from the given byte slice by calculating the root position.","sig":null,"attributes":[{"value":"/ Casts a mutable archived value from the given byte slice by calculating the root position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355445,"byte_end":355539,"line_start":151,"line_end":151,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355540,"byte_end":355543,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_value_mut`](crate::archived_value_mut) that calculates the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355544,"byte_end":355639,"line_start":153,"line_end":153,"column_start":1,"column_end":96}},{"value":"/ correct position of the root using the length of the byte slice. If your byte slice is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355640,"byte_end":355734,"line_start":154,"line_end":154,"column_start":1,"column_end":95}},{"value":"/ guaranteed to end immediately after the root object, you may need to store the position of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355735,"byte_end":355833,"line_start":155,"line_end":155,"column_start":1,"column_end":99}},{"value":"/ root object returned from [`serialize_value`](crate::ser::Serializer::serialize_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355834,"byte_end":355925,"line_start":156,"line_end":156,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355926,"byte_end":355929,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355930,"byte_end":355942,"line_start":158,"line_end":158,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355943,"byte_end":355946,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":355947,"byte_end":356001,"line_start":160,"line_end":160,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356002,"byte_end":356100,"line_start":161,"line_end":161,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356101,"byte_end":356110,"line_start":162,"line_end":162,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4731},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357049,"byte_end":357070,"line_start":184,"line_end":184,"column_start":15,"column_end":36},"name":"archived_unsized_root","qualname":"::util::archived_unsized_root","value":"pub unsafe fn archived_unsized_root<T: ArchiveUnsized + ?Sized>(&[u8])\n-> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root\n position.","sig":null,"attributes":[{"value":"/ Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356323,"byte_end":356421,"line_start":170,"line_end":170,"column_start":1,"column_end":99}},{"value":"/ position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356422,"byte_end":356435,"line_start":171,"line_end":171,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356436,"byte_end":356439,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_unsized_value`](crate::archived_unsized_value) that calculates","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356440,"byte_end":356539,"line_start":173,"line_end":173,"column_start":1,"column_end":100}},{"value":"/ the correct position of the root using the length of the byte slice. If your byte slice is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356540,"byte_end":356638,"line_start":174,"line_end":174,"column_start":1,"column_end":99}},{"value":"/ guaranteed to end immediately after the root object, you may need to store the position of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356639,"byte_end":356737,"line_start":175,"line_end":175,"column_start":1,"column_end":99}},{"value":"/ root object returned from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356738,"byte_end":356767,"line_start":176,"line_end":176,"column_start":1,"column_end":30}},{"value":"/ [`serialize_unsized_value`](crate::ser::Serializer::serialize_unsized_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356768,"byte_end":356849,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356850,"byte_end":356853,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356854,"byte_end":356866,"line_start":179,"line_end":179,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356867,"byte_end":356870,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356871,"byte_end":356925,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":356926,"byte_end":357024,"line_start":182,"line_end":182,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357025,"byte_end":357034,"line_start":183,"line_end":183,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4733},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357960,"byte_end":357985,"line_start":202,"line_end":202,"column_start":15,"column_end":40},"name":"archived_unsized_root_mut","qualname":"::util::archived_unsized_root_mut","value":"pub unsafe fn archived_unsized_root_mut<T: ArchiveUnsized +\n                                        ?Sized>(Pin<&mut [u8]>)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root\n position.","sig":null,"attributes":[{"value":"/ Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357226,"byte_end":357324,"line_start":188,"line_end":188,"column_start":1,"column_end":99}},{"value":"/ position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357325,"byte_end":357338,"line_start":189,"line_end":189,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357339,"byte_end":357342,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_unsized_value_mut`](crate::archived_unsized_value_mut) that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357343,"byte_end":357439,"line_start":191,"line_end":191,"column_start":1,"column_end":97}},{"value":"/ calculates the correct position of the root using the length of the byte slice. If your byte","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357440,"byte_end":357536,"line_start":192,"line_end":192,"column_start":1,"column_end":97}},{"value":"/ slice is not guaranteed to end immediately after the root object, you may need to store the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357537,"byte_end":357632,"line_start":193,"line_end":193,"column_start":1,"column_end":96}},{"value":"/ position of the root object returned from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357633,"byte_end":357678,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ [`serialize_unsized_value`](crate::ser::Serializer::serialize_unsized_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357679,"byte_end":357760,"line_start":195,"line_end":195,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357761,"byte_end":357764,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357765,"byte_end":357777,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357778,"byte_end":357781,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357782,"byte_end":357836,"line_start":199,"line_end":199,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357837,"byte_end":357935,"line_start":200,"line_end":200,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":357936,"byte_end":357945,"line_start":201,"line_end":201,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":8102},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358485,"byte_end":358497,"line_start":222,"line_end":222,"column_start":12,"column_end":24},"name":"AlignedBytes","qualname":"::util::AlignedBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer of bytes aligned to 16 bytes.","sig":null,"attributes":[{"value":"/ A buffer of bytes aligned to 16 bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358189,"byte_end":358231,"line_start":209,"line_end":209,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358232,"byte_end":358235,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358236,"byte_end":358250,"line_start":211,"line_end":211,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358251,"byte_end":358254,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358255,"byte_end":358262,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ use core::mem;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358263,"byte_end":358281,"line_start":214,"line_end":214,"column_start":1,"column_end":19}},{"value":"/ use rkyv::AlignedBytes;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358282,"byte_end":358309,"line_start":215,"line_end":215,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358310,"byte_end":358313,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem::align_of::<u8>(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358314,"byte_end":358355,"line_start":217,"line_end":217,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(mem::align_of::<AlignedBytes<256>>(), 16);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358356,"byte_end":358413,"line_start":218,"line_end":218,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358414,"byte_end":358421,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"repr(C, align(16))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358452,"byte_end":358473,"line_start":221,"line_end":221,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":8105},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358514,"byte_end":358525,"line_start":222,"line_end":222,"column_start":41,"column_end":52},"name":"0","qualname":"::util::AlignedBytes::0","value":"[u8; N]","parent":{"krate":0,"index":8102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4753},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360356,"byte_end":360364,"line_start":288,"line_end":288,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::util::to_bytes","value":"pub fn to_bytes<T, const N: usize>(&T)\n-> Result<AlignedVec, <AllocSerializer<> as Fallible>::Error> where\nT: Serialize<AllocSerializer<>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes the given value and returns the resulting bytes.","sig":null,"attributes":[{"value":"/ Serializes the given value and returns the resulting bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359214,"byte_end":359277,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359278,"byte_end":359281,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ The const generic parameter `N` specifies the number of bytes to pre-allocate as scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359282,"byte_end":359381,"line_start":262,"line_end":262,"column_start":1,"column_end":100}},{"value":"/ Choosing a good default value for your data can be difficult without any data, so consider using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359382,"byte_end":359482,"line_start":263,"line_end":263,"column_start":1,"column_end":101}},{"value":"/ [`ScratchTracker`](crate::ser::serializers::ScratchTracker) to determine how much scratch space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359483,"byte_end":359582,"line_start":264,"line_end":264,"column_start":1,"column_end":100}},{"value":"/ is typically used.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359583,"byte_end":359605,"line_start":265,"line_end":265,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359606,"byte_end":359609,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ This function is only available with the `alloc` feature because it uses a general-purpose","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359610,"byte_end":359704,"line_start":267,"line_end":267,"column_start":1,"column_end":95}},{"value":"/ serializer. In no-alloc and high-performance environments, the serializer should be customized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359705,"byte_end":359803,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ for the specific situation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359804,"byte_end":359835,"line_start":269,"line_end":269,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359836,"byte_end":359839,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359840,"byte_end":359854,"line_start":271,"line_end":271,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359855,"byte_end":359862,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ let value = vec![1, 2, 3, 4];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359863,"byte_end":359896,"line_start":273,"line_end":273,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359897,"byte_end":359900,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ let bytes = rkyv::to_bytes::<_, 1024>(&value).expect(\"failed to serialize vec\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359901,"byte_end":359985,"line_start":275,"line_end":275,"column_start":1,"column_end":85}},{"value":"/ // SAFETY:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359986,"byte_end":360000,"line_start":276,"line_end":276,"column_start":1,"column_end":15}},{"value":"/ // - The byte slice represents an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360001,"byte_end":360054,"line_start":277,"line_end":277,"column_start":1,"column_end":54}},{"value":"/ // - The root of the object is stored at the end of the slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360055,"byte_end":360120,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/ let deserialized = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360121,"byte_end":360152,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/     rkyv::from_bytes_unchecked::<Vec<i32>>(&bytes)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360153,"byte_end":360207,"line_start":280,"line_end":280,"column_start":1,"column_end":55}},{"value":"/         .expect(\"failed to deserialize vec\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360208,"byte_end":360256,"line_start":281,"line_end":281,"column_start":1,"column_end":49}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360257,"byte_end":360263,"line_start":282,"line_end":282,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360264,"byte_end":360267,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(deserialized, value);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360268,"byte_end":360304,"line_start":284,"line_end":284,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360305,"byte_end":360312,"line_start":285,"line_end":285,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360313,"byte_end":360338,"line_start":286,"line_end":286,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360339,"byte_end":360348,"line_start":287,"line_end":287,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4756},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361645,"byte_end":361665,"line_start":327,"line_end":327,"column_start":15,"column_end":35},"name":"from_bytes_unchecked","qualname":"::util::from_bytes_unchecked","value":"pub unsafe fn from_bytes_unchecked<T>(&[u8])\n-> Result<T, <SharedDeserializeMap as Fallible>::Error> where T: Archive,\nT::Archived: Deserialize<T, SharedDeserializeMap>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a value from the given bytes.","sig":null,"attributes":[{"value":"/ Deserializes a value from the given bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360662,"byte_end":360708,"line_start":299,"line_end":299,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360709,"byte_end":360712,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ This function is only available with the `alloc` feature because it uses a general-purpose","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360713,"byte_end":360807,"line_start":301,"line_end":301,"column_start":1,"column_end":95}},{"value":"/ deserializer. In no-alloc and high-performance environments, the deserializer should be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360808,"byte_end":360899,"line_start":302,"line_end":302,"column_start":1,"column_end":92}},{"value":"/ customized for the specific situation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360900,"byte_end":360942,"line_start":303,"line_end":303,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360943,"byte_end":360946,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360947,"byte_end":360959,"line_start":305,"line_end":305,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360960,"byte_end":360963,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":360964,"byte_end":361018,"line_start":307,"line_end":307,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361019,"byte_end":361117,"line_start":308,"line_end":308,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361118,"byte_end":361121,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361122,"byte_end":361136,"line_start":310,"line_end":310,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361137,"byte_end":361144,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/ let value = vec![1, 2, 3, 4];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361145,"byte_end":361178,"line_start":312,"line_end":312,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361179,"byte_end":361182,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ let bytes = rkyv::to_bytes::<_, 1024>(&value).expect(\"failed to serialize vec\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361183,"byte_end":361267,"line_start":314,"line_end":314,"column_start":1,"column_end":85}},{"value":"/ // SAFETY:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361268,"byte_end":361282,"line_start":315,"line_end":315,"column_start":1,"column_end":15}},{"value":"/ // - The byte slice represents an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361283,"byte_end":361336,"line_start":316,"line_end":316,"column_start":1,"column_end":54}},{"value":"/ // - The root of the object is stored at the end of the slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361337,"byte_end":361402,"line_start":317,"line_end":317,"column_start":1,"column_end":66}},{"value":"/ let deserialized = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361403,"byte_end":361434,"line_start":318,"line_end":318,"column_start":1,"column_end":32}},{"value":"/     rkyv::from_bytes_unchecked::<Vec<i32>>(&bytes)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361435,"byte_end":361489,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/         .expect(\"failed to deserialize vec\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361490,"byte_end":361538,"line_start":320,"line_end":320,"column_start":1,"column_end":49}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361539,"byte_end":361545,"line_start":321,"line_end":321,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361546,"byte_end":361549,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(deserialized, value);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361550,"byte_end":361586,"line_start":323,"line_end":323,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361587,"byte_end":361594,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361595,"byte_end":361620,"line_start":325,"line_end":325,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":361621,"byte_end":361630,"line_start":326,"line_end":326,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":4758},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4895},{"krate":0,"index":4898},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4908},{"krate":0,"index":4911},{"krate":0,"index":4914},{"krate":0,"index":4917},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4925},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4969},{"krate":0,"index":4973},{"krate":0,"index":4975},{"krate":0,"index":4979},{"krate":0,"index":4984},{"krate":0,"index":4987},{"krate":0,"index":4991},{"krate":0,"index":4998},{"krate":0,"index":5004},{"krate":0,"index":5008},{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5021}],"decl_id":null,"docs":" An archived version of `Vec`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Vec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":395989,"byte_end":396022,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8120},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407261,"byte_end":407275,"line_start":20,"line_end":20,"column_start":12,"column_end":26},"name":"RawArchivedVec","qualname":"::vec::raw::RawArchivedVec","value":"RawArchivedVec {  }","parent":null,"children":[{"krate":0,"index":8122}],"decl_id":null,"docs":" An archived [`Vec`].","sig":null,"attributes":[{"value":"/ An archived [`Vec`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":406990,"byte_end":407014,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407015,"byte_end":407018,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This uses a [`RelPtr`](crate::rel_ptr::RelPtr) to a `[T]` under the hood. Unlike","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407019,"byte_end":407103,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ [`ArchivedString`](crate::string::ArchivedString), it does not have an inline representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407104,"byte_end":407201,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407229,"byte_end":407249,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407432,"byte_end":407438,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RawArchivedVec<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the first element of the archived vec.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the first element of the archived vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407343,"byte_end":407406,"line_start":25,"line_end":25,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407411,"byte_end":407420,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407580,"byte_end":407583,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"len","qualname":"<RawArchivedVec<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the archived vec.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the archived vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407499,"byte_end":407554,"line_start":31,"line_end":31,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407559,"byte_end":407568,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407710,"byte_end":407718,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RawArchivedVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the archived vec is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether the archived vec is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407638,"byte_end":407684,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407689,"byte_end":407698,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407856,"byte_end":407864,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<RawArchivedVec<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets the elements of the archived vec as a slice.\n","sig":null,"attributes":[{"value":"/ Gets the elements of the archived vec as a slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407777,"byte_end":407830,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407835,"byte_end":407844,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408017,"byte_end":408030,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"pin_mut_slice","qualname":"<RawArchivedVec<T>>::pin_mut_slice","value":"pub fn pin_mut_slice(Pin<&mut Self>) -> Pin<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the elements of the archived vec as a pinned mutable slice.\n","sig":null,"attributes":[{"value":"/ Gets the elements of the archived vec as a pinned mutable slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407923,"byte_end":407991,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407996,"byte_end":408005,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4808},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408401,"byte_end":408410,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"index_pin","qualname":"<RawArchivedVec<T>>::index_pin","value":"pub fn index_pin<I>(Pin<&mut Self>, I) -> Pin<&mut <[T] as Index<I>>::Output>\nwhere [T]: IndexMut<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets the element at the given index ot this archived vec as a pinned mutable reference.\n","sig":null,"attributes":[{"value":"/ Gets the element at the given index ot this archived vec as a pinned mutable reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408284,"byte_end":408375,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408380,"byte_end":408389,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408948,"byte_end":408966,"line_start":75,"line_end":75,"column_start":19,"column_end":37},"name":"resolve_from_slice","qualname":"<RawArchivedVec<T>>::resolve_from_slice","value":"pub unsafe fn resolve_from_slice<U: Archive<Archived =\n                                 T>>(&[U], usize, VecResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Vec` from a given slice.","sig":null,"attributes":[{"value":"/ Resolves an archived `Vec` from a given slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408615,"byte_end":408665,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408670,"byte_end":408673,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408678,"byte_end":408690,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408695,"byte_end":408698,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408703,"byte_end":408763,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value` with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408768,"byte_end":408831,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/   [`serialize_copy_from_slice`](RawArchivedVec::serialize_copy_from_slice).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408836,"byte_end":408915,"line_start":73,"line_end":73,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":408920,"byte_end":408929,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4813},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409816,"byte_end":409841,"line_start":96,"line_end":96,"column_start":19,"column_end":44},"name":"serialize_copy_from_slice","qualname":"<RawArchivedVec<T>>::serialize_copy_from_slice","value":"pub unsafe fn serialize_copy_from_slice<U, S>(&[U], &mut S)\n-> Result<VecResolver, S::Error> where U: Serialize<S, Archived = T>,\nS: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given slice by directly copying bytes.","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given slice by directly copying bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409184,"byte_end":409262,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409267,"byte_end":409270,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409275,"byte_end":409287,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409292,"byte_end":409295,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The type being serialized must be copy-safe. Copy-safe types must be trivially copyable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409300,"byte_end":409391,"line_start":88,"line_end":88,"column_start":5,"column_end":96}},{"value":"/ (have the same archived and unarchived representations) and contain no padding bytes. In","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409396,"byte_end":409488,"line_start":89,"line_end":89,"column_start":5,"column_end":97}},{"value":"/ situations where copying uninitialized bytes the output is acceptable, this function may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409493,"byte_end":409588,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ used with types that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409593,"byte_end":409640,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409645,"byte_end":409648,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Additionally, the type being serialized must not require any validation. All bit patterns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409653,"byte_end":409746,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/ must represent valid values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409751,"byte_end":409783,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":409788,"byte_end":409797,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396538,"byte_end":396549,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"ArchivedVec","qualname":"::vec::ArchivedVec","value":"ArchivedVec {  }","parent":null,"children":[{"krate":0,"index":4923},{"krate":0,"index":4924}],"decl_id":null,"docs":" An archived [`Vec`].","sig":null,"attributes":[{"value":"/ An archived [`Vec`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396298,"byte_end":396322,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396323,"byte_end":396326,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This uses a [`RelPtr`] to a `[T]` under the hood. Unlike","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396327,"byte_end":396387,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/ [`ArchivedString`](crate::string::ArchivedString), it does not have an inline representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396388,"byte_end":396485,"line_start":22,"line_end":22,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396722,"byte_end":396728,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArchivedVec<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the first element of the archived vec.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the first element of the archived vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396633,"byte_end":396696,"line_start":30,"line_end":30,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396701,"byte_end":396710,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396868,"byte_end":396871,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedVec<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the archived vec.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the archived vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396787,"byte_end":396842,"line_start":36,"line_end":36,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396847,"byte_end":396856,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4929},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397015,"byte_end":397023,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the archived vec is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether the archived vec is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396943,"byte_end":396989,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396994,"byte_end":397003,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4930},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397155,"byte_end":397163,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArchivedVec<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets the elements of the archived vec as a slice.\n","sig":null,"attributes":[{"value":"/ Gets the elements of the archived vec as a slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397076,"byte_end":397129,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397134,"byte_end":397143,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4931},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397360,"byte_end":397373,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"pin_mut_slice","qualname":"<ArchivedVec<T>>::pin_mut_slice","value":"pub fn pin_mut_slice(Pin<&mut Self>) -> Pin<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the elements of the archived vec as a pinned mutable slice.\n","sig":null,"attributes":[{"value":"/ Gets the elements of the archived vec as a pinned mutable slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397266,"byte_end":397334,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397339,"byte_end":397348,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4933},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397796,"byte_end":397805,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"index_pin","qualname":"<ArchivedVec<T>>::index_pin","value":"pub fn index_pin<I>(Pin<&mut Self>, I) -> Pin<&mut <[T] as Index<I>>::Output>\nwhere [T]: IndexMut<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets the element at the given index ot this archived vec as a pinned mutable reference.\n","sig":null,"attributes":[{"value":"/ Gets the element at the given index ot this archived vec as a pinned mutable reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397679,"byte_end":397770,"line_start":65,"line_end":65,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":397775,"byte_end":397784,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398254,"byte_end":398272,"line_start":81,"line_end":81,"column_start":19,"column_end":37},"name":"resolve_from_slice","qualname":"<ArchivedVec<T>>::resolve_from_slice","value":"pub unsafe fn resolve_from_slice<U: Archive<Archived =\n                                 T>>(&[U], usize, VecResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Vec` from a given slice.","sig":null,"attributes":[{"value":"/ Resolves an archived `Vec` from a given slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398010,"byte_end":398060,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398065,"byte_end":398068,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398073,"byte_end":398085,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398090,"byte_end":398093,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398098,"byte_end":398158,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398163,"byte_end":398221,"line_start":79,"line_end":79,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398226,"byte_end":398235,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4938},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398725,"byte_end":398741,"line_start":97,"line_end":97,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedVec<T>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, VecResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Vec` from a given length.","sig":null,"attributes":[{"value":"/ Resolves an archived `Vec` from a given length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398480,"byte_end":398531,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398536,"byte_end":398539,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398544,"byte_end":398556,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398561,"byte_end":398564,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398569,"byte_end":398629,"line_start":94,"line_end":94,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must bet he result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398634,"byte_end":398692,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":398697,"byte_end":398706,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4939},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399085,"byte_end":399105,"line_start":106,"line_end":106,"column_start":12,"column_end":32},"name":"serialize_from_slice","qualname":"<ArchivedVec<T>>::serialize_from_slice","value":"pub fn serialize_from_slice<U: Serialize<S, Archived = T>, S: Serializer +\n                            ?Sized>(&[U], &mut S)\n-> Result<VecResolver, S::Error> where [U]: SerializeUnsized<S>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given slice.\n","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399007,"byte_end":399059,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399064,"byte_end":399073,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400055,"byte_end":400080,"line_start":129,"line_end":129,"column_start":19,"column_end":44},"name":"serialize_copy_from_slice","qualname":"<ArchivedVec<T>>::serialize_copy_from_slice","value":"pub unsafe fn serialize_copy_from_slice<U, S>(&[U], &mut S)\n-> Result<VecResolver, S::Error> where U: Serialize<S, Archived = T>,\nS: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given slice by directly copying bytes.","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given slice by directly copying bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399566,"byte_end":399644,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399649,"byte_end":399652,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399657,"byte_end":399669,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399674,"byte_end":399677,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The type being serialized must be copy-safe. Copy-safe types must be trivially copyable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399682,"byte_end":399773,"line_start":124,"line_end":124,"column_start":5,"column_end":96}},{"value":"/ (have the same archived and unarchived representations) and contain no padding bytes. In","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399778,"byte_end":399870,"line_start":125,"line_end":125,"column_start":5,"column_end":97}},{"value":"/ situations where copying uninitialized bytes the output is acceptable, this function may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399875,"byte_end":399970,"line_start":126,"line_end":126,"column_start":5,"column_end":100}},{"value":"/ used with types that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":399975,"byte_end":400022,"line_start":127,"line_end":127,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400027,"byte_end":400036,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400785,"byte_end":400804,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"serialize_from_iter","qualname":"<ArchivedVec<T>>::serialize_from_iter","value":"pub fn serialize_from_iter<U, B, I, S>(I, &mut S)\n-> Result<VecResolver, S::Error> where U: Serialize<S, Archived = T>,\nB: Borrow<U>, I: ExactSizeIterator<Item = B>, S: ScratchSpace + Serializer +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given iterator.","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400545,"byte_end":400600,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400605,"byte_end":400608,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This method is unable to perform copy optimizations; prefer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400613,"byte_end":400676,"line_start":149,"line_end":149,"column_start":5,"column_end":68}},{"value":"/ [`serialize_from_slice`](ArchivedVec::serialize_from_slice) when possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400681,"byte_end":400759,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":400764,"byte_end":400773,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5021},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":404327,"byte_end":404338,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"VecResolver","qualname":"::vec::VecResolver","value":"VecResolver {  }","parent":null,"children":[{"krate":0,"index":5022}],"decl_id":null,"docs":" The resolver for [`ArchivedVec`].\n","sig":null,"attributes":[{"value":"/ The resolver for [`ArchivedVec`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":404278,"byte_end":404315,"line_start":293,"line_end":293,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":5023},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"with","qualname":"::with","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","parent":null,"children":[{"krate":0,"index":5024},{"krate":0,"index":5334},{"krate":0,"index":5427},{"krate":0,"index":5608},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5821},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5834},{"krate":0,"index":5837},{"krate":0,"index":8335},{"krate":0,"index":8340},{"krate":0,"index":5840},{"krate":0,"index":5844},{"krate":0,"index":5848},{"krate":0,"index":5852},{"krate":0,"index":5857},{"krate":0,"index":5863},{"krate":0,"index":5867},{"krate":0,"index":5872},{"krate":0,"index":5877},{"krate":0,"index":8344},{"krate":0,"index":8348},{"krate":0,"index":5883},{"krate":0,"index":5886},{"krate":0,"index":8351},{"krate":0,"index":8353},{"krate":0,"index":8355},{"krate":0,"index":8357},{"krate":0,"index":5890},{"krate":0,"index":8359},{"krate":0,"index":8361},{"krate":0,"index":8363},{"krate":0,"index":8365},{"krate":0,"index":8367},{"krate":0,"index":8369},{"krate":0,"index":8371},{"krate":0,"index":8374},{"krate":0,"index":5891},{"krate":0,"index":5893},{"krate":0,"index":8376},{"krate":0,"index":8378},{"krate":0,"index":8380},{"krate":0,"index":8383},{"krate":0,"index":5894},{"krate":0,"index":5896},{"krate":0,"index":8385},{"krate":0,"index":8387},{"krate":0,"index":8389},{"krate":0,"index":8391},{"krate":0,"index":8393},{"krate":0,"index":8395},{"krate":0,"index":8397},{"krate":0,"index":8399},{"krate":0,"index":8401},{"krate":0,"index":8403},{"krate":0,"index":8405},{"krate":0,"index":8408},{"krate":0,"index":5897},{"krate":0,"index":5899},{"krate":0,"index":8410},{"krate":0,"index":8412}],"decl_id":null,"docs":" Wrapper type support and commonly used wrappers.","sig":null,"attributes":[{"value":"/ Wrapper type support and commonly used wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413261,"byte_end":413313,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413314,"byte_end":413317,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Wrappers can be applied with the `#[with(...)]` attribute in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413318,"byte_end":413386,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`Archive`](macro@crate::Archive) macro. See [`With`] for examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413387,"byte_end":413458,"line_start":4,"line_end":4,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8335},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414785,"byte_end":414789,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"With","qualname":"::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":8338},{"krate":0,"index":8339}],"decl_id":null,"docs":" A transparent wrapper for archived fields.","sig":null,"attributes":[{"value":"/ A transparent wrapper for archived fields.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413795,"byte_end":413841,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413842,"byte_end":413845,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is used by the `#[with(...)]` attribute in the [`Archive`](macro@crate::Archive) macro to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413846,"byte_end":413944,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ create transparent serialization wrappers. Those wrappers leverage [`ArchiveWith`] to change","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":413945,"byte_end":414041,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ how the type is archived, serialized, and deserialized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414042,"byte_end":414101,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414102,"byte_end":414105,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When a field is serialized, a reference to the field (i.e. `&T`) can be cast to a reference to a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414106,"byte_end":414206,"line_start":28,"line_end":28,"column_start":1,"column_end":101}},{"value":"/ wrapping `With` (i.e. `With<T, Wrapper>`) and serialized instead. This is safe to do because","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414207,"byte_end":414303,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ `With` is a transparent wrapper and is shaped exactly the same as the underlying field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414304,"byte_end":414395,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414396,"byte_end":414399,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414400,"byte_end":414413,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414414,"byte_end":414417,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414418,"byte_end":414425,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Inline};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414426,"byte_end":414464,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414465,"byte_end":414468,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414469,"byte_end":414491,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414492,"byte_end":414516,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/     // This will archive as if it were With<&'a i32, Inline>. That will delegate the archival","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414517,"byte_end":414614,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/     // to the ArchiveWith implementation of Inline for &T.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414615,"byte_end":414677,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/     #[with(Inline)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414678,"byte_end":414701,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/     a: &'a i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414702,"byte_end":414721,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414722,"byte_end":414727,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414728,"byte_end":414735,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414736,"byte_end":414756,"line_start":45,"line_end":45,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5843},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415068,"byte_end":415072,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"cast","qualname":"<With<F, W>>::cast","value":"pub fn cast(&F) -> &With<F, W>","parent":null,"children":[],"decl_id":null,"docs":" Casts a `With` reference from a reference to the underlying field.","sig":null,"attributes":[{"value":"/ Casts a `With` reference from a reference to the underlying field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414889,"byte_end":414959,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414964,"byte_end":414967,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This is always safe to do because `With` is a transparent wrapper.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414972,"byte_end":415042,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415047,"byte_end":415056,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5847},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415496,"byte_end":415506,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<With<F, W>>::into_inner","value":"pub fn into_inner(Self) -> F","parent":null,"children":[],"decl_id":null,"docs":" Unwraps a `With` into the underlying field.\n","sig":null,"attributes":[{"value":"/ Unwraps a `With` into the underlying field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415423,"byte_end":415470,"line_start":68,"line_end":68,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415475,"byte_end":415484,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":5852},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418518,"byte_end":418529,"line_start":174,"line_end":174,"column_start":11,"column_end":22},"name":"ArchiveWith","qualname":"::with::ArchiveWith","value":"ArchiveWith<F: ?Sized>","parent":null,"children":[{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5856}],"decl_id":null,"docs":" A variant of [`Archive`] that works with [`With`] wrappers.","sig":null,"attributes":[{"value":"/ A variant of [`Archive`] that works with [`With`] wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415651,"byte_end":415714,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415715,"byte_end":415718,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Creating a wrapper allows users to customize how fields are archived easily without changing the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415719,"byte_end":415819,"line_start":83,"line_end":83,"column_start":1,"column_end":101}},{"value":"/ unarchived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415820,"byte_end":415840,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415841,"byte_end":415844,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This trait allows wrapper types to transparently change the archive behaviors for struct fields.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415845,"byte_end":415945,"line_start":86,"line_end":86,"column_start":1,"column_end":101}},{"value":"/ When a field is serialized, its reference may be converted to a [`With`] reference, and that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415946,"byte_end":416042,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ reference may be serialized instead. `With` references look for implementations of `ArchiveWith`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416043,"byte_end":416143,"line_start":88,"line_end":88,"column_start":1,"column_end":101}},{"value":"/ to determine how a wrapped field should be treated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416144,"byte_end":416199,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416200,"byte_end":416203,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416204,"byte_end":416217,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416218,"byte_end":416221,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416222,"byte_end":416229,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416230,"byte_end":416245,"line_start":94,"line_end":94,"column_start":1,"column_end":16}},{"value":"/     archived_root,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416246,"byte_end":416268,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/     ser::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416269,"byte_end":416283,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/         serializers::AllocSerializer,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416284,"byte_end":416325,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/         Serializer,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416326,"byte_end":416349,"line_start":98,"line_end":98,"column_start":1,"column_end":24}},{"value":"/     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416350,"byte_end":416360,"line_start":99,"line_end":99,"column_start":1,"column_end":11}},{"value":"/     with::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416361,"byte_end":416376,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/         ArchiveWith,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416377,"byte_end":416401,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/         DeserializeWith,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416402,"byte_end":416430,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/         SerializeWith,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416431,"byte_end":416457,"line_start":103,"line_end":103,"column_start":1,"column_end":27}},{"value":"/     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416458,"byte_end":416468,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416469,"byte_end":416485,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416486,"byte_end":416503,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/     Deserialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416504,"byte_end":416524,"line_start":107,"line_end":107,"column_start":1,"column_end":21}},{"value":"/     Fallible,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416525,"byte_end":416542,"line_start":108,"line_end":108,"column_start":1,"column_end":18}},{"value":"/     Infallible,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416543,"byte_end":416562,"line_start":109,"line_end":109,"column_start":1,"column_end":20}},{"value":"/     Resolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416563,"byte_end":416580,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416581,"byte_end":416599,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416600,"byte_end":416606,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416607,"byte_end":416610,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ struct Incremented;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416611,"byte_end":416634,"line_start":114,"line_end":114,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416635,"byte_end":416638,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ impl ArchiveWith<i32> for Incremented {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416639,"byte_end":416682,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/     type Archived = Archived<i32>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416683,"byte_end":416721,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"/     type Resolver = Resolver<i32>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416722,"byte_end":416760,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416761,"byte_end":416764,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     unsafe fn resolve_with(field: &i32, pos: usize, _: (), out: *mut Self::Archived) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416765,"byte_end":416855,"line_start":120,"line_end":120,"column_start":1,"column_end":91}},{"value":"/         let incremented = field + 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416856,"byte_end":416896,"line_start":121,"line_end":121,"column_start":1,"column_end":41}},{"value":"/         incremented.resolve(pos, (), out);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416897,"byte_end":416943,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416944,"byte_end":416953,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416954,"byte_end":416959,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416960,"byte_end":416963,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ impl<S: Fallible + ?Sized> SerializeWith<i32, S> for Incremented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":416964,"byte_end":417032,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ where","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417033,"byte_end":417042,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/     i32: Serialize<S>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417043,"byte_end":417069,"line_start":128,"line_end":128,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417070,"byte_end":417075,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/     fn serialize_with(field: &i32, serializer: &mut S) -> Result<Self::Resolver, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417076,"byte_end":417172,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/         let incremented = field + 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417173,"byte_end":417213,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/         incremented.serialize(serializer)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417214,"byte_end":417259,"line_start":132,"line_end":132,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417260,"byte_end":417269,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417270,"byte_end":417275,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417276,"byte_end":417279,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ impl<D: Fallible + ?Sized> DeserializeWith<Archived<i32>, i32, D> for Incremented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417280,"byte_end":417365,"line_start":136,"line_end":136,"column_start":1,"column_end":86}},{"value":"/ where","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417366,"byte_end":417375,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/     Archived<i32>: Deserialize<i32, D>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417376,"byte_end":417419,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417420,"byte_end":417425,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/     fn deserialize_with(field: &Archived<i32>, deserializer: &mut D) -> Result<i32, D::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417426,"byte_end":417525,"line_start":140,"line_end":140,"column_start":1,"column_end":100}},{"value":"/         Ok(field.deserialize(deserializer)? - 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417526,"byte_end":417578,"line_start":141,"line_end":141,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417579,"byte_end":417588,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417589,"byte_end":417594,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417595,"byte_end":417598,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive, Deserialize, Serialize)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417599,"byte_end":417645,"line_start":145,"line_end":145,"column_start":1,"column_end":47}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417646,"byte_end":417666,"line_start":146,"line_end":146,"column_start":1,"column_end":21}},{"value":"/     #[with(Incremented)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417667,"byte_end":417695,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/     a: i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417696,"byte_end":417711,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/     // Another i32 field, but not incremented this time","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417712,"byte_end":417771,"line_start":149,"line_end":149,"column_start":1,"column_end":60}},{"value":"/     b: i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417772,"byte_end":417787,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417788,"byte_end":417793,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417794,"byte_end":417797,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let value = Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417798,"byte_end":417823,"line_start":153,"line_end":153,"column_start":1,"column_end":26}},{"value":"/     a: 4,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417824,"byte_end":417837,"line_start":154,"line_end":154,"column_start":1,"column_end":14}},{"value":"/     b: 9,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417838,"byte_end":417851,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417852,"byte_end":417858,"line_start":156,"line_end":156,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417859,"byte_end":417862,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AllocSerializer::<4096>::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417863,"byte_end":417923,"line_start":158,"line_end":158,"column_start":1,"column_end":61}},{"value":"/ serializer.serialize_value(&value).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417924,"byte_end":417972,"line_start":159,"line_end":159,"column_start":1,"column_end":49}},{"value":"/ let buf = serializer.into_serializer().into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":417973,"byte_end":418029,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418030,"byte_end":418033,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let archived = unsafe { archived_root::<Example>(buf.as_ref()) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418034,"byte_end":418103,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ // The wrapped field has been incremented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418104,"byte_end":418149,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(archived.a, 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418150,"byte_end":418180,"line_start":164,"line_end":164,"column_start":1,"column_end":31}},{"value":"/ // ... and the unwrapped field has not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418181,"byte_end":418223,"line_start":165,"line_end":165,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(archived.b, 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418224,"byte_end":418254,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418255,"byte_end":418258,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ let deserialized: Example = archived.deserialize(&mut Infallible).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418259,"byte_end":418338,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ // The wrapped field is back to normal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418339,"byte_end":418381,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(deserialized.a, 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418382,"byte_end":418416,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/ // ... and the unwrapped field is unchanged","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418417,"byte_end":418464,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(deserialized.b, 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418465,"byte_end":418499,"line_start":172,"line_end":172,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418500,"byte_end":418507,"line_start":173,"line_end":173,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5854},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418600,"byte_end":418608,"line_start":176,"line_end":176,"column_start":10,"column_end":18},"name":"Archived","qualname":"::with::ArchiveWith::Archived","value":"type Archived;","parent":{"krate":0,"index":5852},"children":[],"decl_id":null,"docs":" The archived type of a `With<F, Self>`.\n","sig":null,"attributes":[{"value":"/ The archived type of a `With<F, Self>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418547,"byte_end":418590,"line_start":175,"line_end":175,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":5855},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418662,"byte_end":418670,"line_start":178,"line_end":178,"column_start":10,"column_end":18},"name":"Resolver","qualname":"::with::ArchiveWith::Resolver","value":"type Resolver;","parent":{"krate":0,"index":5852},"children":[],"decl_id":null,"docs":" The resolver of a `With<F, Self>`.\n","sig":null,"attributes":[{"value":"/ The resolver of a `With<F, Self>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418614,"byte_end":418652,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5856},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418924,"byte_end":418936,"line_start":186,"line_end":186,"column_start":15,"column_end":27},"name":"resolve_with","qualname":"::with::ArchiveWith::resolve_with","value":"pub unsafe fn resolve_with(&F, usize, Self::Resolver, *mut Self::Archived)","parent":{"krate":0,"index":5852},"children":[],"decl_id":null,"docs":" Resolves the archived type using a reference to the field type `F`.","sig":null,"attributes":[{"value":"/ Resolves the archived type using a reference to the field type `F`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418677,"byte_end":418748,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418753,"byte_end":418756,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418761,"byte_end":418773,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418778,"byte_end":418781,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418786,"byte_end":418846,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `field`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":418851,"byte_end":418909,"line_start":185,"line_end":185,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":5863},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419437,"byte_end":419450,"line_start":205,"line_end":205,"column_start":11,"column_end":24},"name":"SerializeWith","qualname":"::with::SerializeWith","value":"SerializeWith<F: ?Sized, S: Fallible + ?Sized>: ArchiveWith<F>","parent":null,"children":[{"krate":0,"index":5866}],"decl_id":null,"docs":" A variant of `Serialize` that works with `With` wrappers.\n","sig":null,"attributes":[{"value":"/ A variant of `Serialize` that works with `With` wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419365,"byte_end":419426,"line_start":204,"line_end":204,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419575,"byte_end":419589,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"serialize_with","qualname":"::with::SerializeWith::serialize_with","value":"pub fn serialize_with(&F, &mut S) -> Result<Self::Resolver, S::Error>","parent":{"krate":0,"index":5863},"children":[],"decl_id":null,"docs":" Serializes the field type `F` using the given serializer.\n","sig":null,"attributes":[{"value":"/ Serializes the field type `F` using the given serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419506,"byte_end":419567,"line_start":206,"line_end":206,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":5872},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419983,"byte_end":419998,"line_start":218,"line_end":218,"column_start":11,"column_end":26},"name":"DeserializeWith","qualname":"::with::DeserializeWith","value":"DeserializeWith<F: ?Sized, T, D: Fallible + ?Sized>","parent":null,"children":[{"krate":0,"index":5876}],"decl_id":null,"docs":" A variant of `Deserialize` that works with `With` wrappers.\n","sig":null,"attributes":[{"value":"/ A variant of `Deserialize` that works with `With` wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419909,"byte_end":419972,"line_start":217,"line_end":217,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5876},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420114,"byte_end":420130,"line_start":220,"line_end":220,"column_start":8,"column_end":24},"name":"deserialize_with","qualname":"::with::DeserializeWith::deserialize_with","value":"pub fn deserialize_with(&F, &mut D) -> Result<T, D::Error>","parent":{"krate":0,"index":5872},"children":[],"decl_id":null,"docs":" Deserializes the field type `F` using the given deserializer.\n","sig":null,"attributes":[{"value":"/ Deserializes the field type `F` using the given deserializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420041,"byte_end":420106,"line_start":219,"line_end":219,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":8344},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420642,"byte_end":420651,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"Immutable","qualname":"::with::Immutable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper to make a type immutable.\n","sig":null,"attributes":[{"value":"/ A wrapper to make a type immutable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420553,"byte_end":420592,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420593,"byte_end":420613,"line_start":239,"line_end":239,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5885},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420769,"byte_end":420774,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"value","qualname":"<Immutable<T>>::value","value":"pub fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying immutable value.\n","sig":null,"attributes":[{"value":"/ Gets the underlying immutable value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420703,"byte_end":420743,"line_start":244,"line_end":244,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420748,"byte_end":420757,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8351},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421956,"byte_end":421962,"line_start":300,"line_end":300,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::with::Atomic","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that archives an atomic with an underlying atomic.","sig":null,"attributes":[{"value":"/ A wrapper that archives an atomic with an underlying atomic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421414,"byte_end":421478,"line_start":277,"line_end":277,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421479,"byte_end":421482,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ By default, atomics are archived with an underlying integer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421483,"byte_end":421547,"line_start":279,"line_end":279,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421548,"byte_end":421551,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421552,"byte_end":421564,"line_start":281,"line_end":281,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421565,"byte_end":421568,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This wrapper is only safe to use when the backing memory for wrapped types is mutable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421569,"byte_end":421659,"line_start":283,"line_end":283,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421660,"byte_end":421663,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421664,"byte_end":421677,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421678,"byte_end":421681,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421682,"byte_end":421689,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(has_atomics)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421690,"byte_end":421715,"line_start":288,"line_end":288,"column_start":1,"column_end":26}},{"value":"/ use core::sync::atomic::AtomicU32;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421716,"byte_end":421754,"line_start":289,"line_end":289,"column_start":1,"column_end":39}},{"value":"/ use rkyv::{Archive, with::Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421755,"byte_end":421793,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421794,"byte_end":421797,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(has_atomics)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421798,"byte_end":421823,"line_start":292,"line_end":292,"column_start":1,"column_end":26}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421824,"byte_end":421846,"line_start":293,"line_end":293,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421847,"byte_end":421867,"line_start":294,"line_end":294,"column_start":1,"column_end":21}},{"value":"/     #[with(Atomic)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421868,"byte_end":421891,"line_start":295,"line_end":295,"column_start":1,"column_end":24}},{"value":"/     a: AtomicU32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421892,"byte_end":421913,"line_start":296,"line_end":296,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421914,"byte_end":421919,"line_start":297,"line_end":297,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421920,"byte_end":421927,"line_start":298,"line_end":298,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8355},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422347,"byte_end":422353,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"Inline","qualname":"::with::Inline","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a reference inline.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a reference inline.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":421965,"byte_end":422014,"line_start":302,"line_end":302,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422015,"byte_end":422018,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ References serialized with `Inline` cannot be deserialized because the struct cannot own the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422019,"byte_end":422115,"line_start":304,"line_end":304,"column_start":1,"column_end":97}},{"value":"/ deserialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422116,"byte_end":422139,"line_start":305,"line_end":305,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422140,"byte_end":422143,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422144,"byte_end":422157,"line_start":307,"line_end":307,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422158,"byte_end":422161,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422162,"byte_end":422169,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Inline};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422170,"byte_end":422208,"line_start":310,"line_end":310,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422209,"byte_end":422212,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422213,"byte_end":422235,"line_start":312,"line_end":312,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422236,"byte_end":422260,"line_start":313,"line_end":313,"column_start":1,"column_end":25}},{"value":"/     #[with(Inline)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422261,"byte_end":422284,"line_start":314,"line_end":314,"column_start":1,"column_end":24}},{"value":"/     a: &'a i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422285,"byte_end":422304,"line_start":315,"line_end":315,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422305,"byte_end":422310,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422311,"byte_end":422318,"line_start":317,"line_end":317,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5890},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422885,"byte_end":422890,"line_start":340,"line_end":340,"column_start":10,"column_end":15},"name":"Boxed","qualname":"::with::Boxed","value":"RefAsBox","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a reference as if it were boxed.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a reference as if it were boxed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422356,"byte_end":422418,"line_start":321,"line_end":321,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422419,"byte_end":422422,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Inline`], unsized references can be serialized with `Boxed`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422423,"byte_end":422496,"line_start":323,"line_end":323,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422497,"byte_end":422500,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ References serialized with `Boxed` cannot be deserialized because the struct cannot own the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422501,"byte_end":422596,"line_start":325,"line_end":325,"column_start":1,"column_end":96}},{"value":"/ deserialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422597,"byte_end":422620,"line_start":326,"line_end":326,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422621,"byte_end":422624,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422625,"byte_end":422638,"line_start":328,"line_end":328,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422639,"byte_end":422642,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422643,"byte_end":422650,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Boxed};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422651,"byte_end":422688,"line_start":331,"line_end":331,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422689,"byte_end":422692,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422693,"byte_end":422715,"line_start":333,"line_end":333,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422716,"byte_end":422740,"line_start":334,"line_end":334,"column_start":1,"column_end":25}},{"value":"/     #[with(Boxed)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422741,"byte_end":422763,"line_start":335,"line_end":335,"column_start":1,"column_end":23}},{"value":"/     a: &'a str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422764,"byte_end":422783,"line_start":336,"line_end":336,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422784,"byte_end":422789,"line_start":337,"line_end":337,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422790,"byte_end":422797,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"deprecated = \"Use `RefAsBox` for references, or `AsBox` for direct fields\"","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422798,"byte_end":422875,"line_start":339,"line_end":339,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":8359},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423289,"byte_end":423294,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"AsBox","qualname":"::with::AsBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a field into a box.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a field into a box.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422904,"byte_end":422953,"line_start":342,"line_end":342,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422954,"byte_end":422957,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ This functions similarly to [`RefAsBox`], but is for regular fields instead of references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":422958,"byte_end":423052,"line_start":344,"line_end":344,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423053,"byte_end":423056,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423057,"byte_end":423070,"line_start":346,"line_end":346,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423071,"byte_end":423074,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423075,"byte_end":423082,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::AsBox};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423083,"byte_end":423120,"line_start":349,"line_end":349,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423121,"byte_end":423124,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423125,"byte_end":423147,"line_start":351,"line_end":351,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423148,"byte_end":423168,"line_start":352,"line_end":352,"column_start":1,"column_end":21}},{"value":"/     #[with(AsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423169,"byte_end":423191,"line_start":353,"line_end":353,"column_start":1,"column_end":23}},{"value":"/     a: i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423192,"byte_end":423207,"line_start":354,"line_end":354,"column_start":1,"column_end":16}},{"value":"/     #[with(AsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423208,"byte_end":423230,"line_start":355,"line_end":355,"column_start":1,"column_end":23}},{"value":"/     b: str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423231,"byte_end":423246,"line_start":356,"line_end":356,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423247,"byte_end":423252,"line_start":357,"line_end":357,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423253,"byte_end":423260,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8363},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423825,"byte_end":423833,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"RefAsBox","qualname":"::with::RefAsBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a reference as if it were boxed.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a reference as if it were boxed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423297,"byte_end":423359,"line_start":362,"line_end":362,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423360,"byte_end":423363,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Inline`], unsized references can be serialized with `RefAsBox`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423364,"byte_end":423440,"line_start":364,"line_end":364,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423441,"byte_end":423444,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ References serialized with `RefAsBox` cannot be deserialized because the struct cannot own the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423445,"byte_end":423543,"line_start":366,"line_end":366,"column_start":1,"column_end":99}},{"value":"/ deserialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423544,"byte_end":423567,"line_start":367,"line_end":367,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423568,"byte_end":423571,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423572,"byte_end":423585,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423586,"byte_end":423589,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423590,"byte_end":423597,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::RefAsBox};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423598,"byte_end":423638,"line_start":372,"line_end":372,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423639,"byte_end":423642,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423643,"byte_end":423665,"line_start":374,"line_end":374,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423666,"byte_end":423690,"line_start":375,"line_end":375,"column_start":1,"column_end":25}},{"value":"/     #[with(RefAsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423691,"byte_end":423716,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/     a: &'a i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423717,"byte_end":423736,"line_start":377,"line_end":377,"column_start":1,"column_end":20}},{"value":"/     #[with(RefAsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423737,"byte_end":423762,"line_start":378,"line_end":378,"column_start":1,"column_end":26}},{"value":"/     b: &'a str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423763,"byte_end":423782,"line_start":379,"line_end":379,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423783,"byte_end":423788,"line_start":380,"line_end":380,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423789,"byte_end":423796,"line_start":381,"line_end":381,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8367},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424646,"byte_end":424654,"line_start":409,"line_end":409,"column_start":12,"column_end":20},"name":"AsString","qualname":"::with::AsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that attempts to convert a type to and from UTF-8.","sig":null,"attributes":[{"value":"/ A wrapper that attempts to convert a type to and from UTF-8.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423836,"byte_end":423900,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423901,"byte_end":423904,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Types like `OsString` and `PathBuf` aren't guaranteed to be encoded as UTF-8, but they usually","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":423905,"byte_end":424003,"line_start":387,"line_end":387,"column_start":1,"column_end":99}},{"value":"/ are anyway. Using this wrapper will archive them as if they were regular `String`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424004,"byte_end":424091,"line_start":388,"line_end":388,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424092,"byte_end":424095,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ Regular serializers don't support the custom error handling needed for this type by default. To","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424096,"byte_end":424195,"line_start":390,"line_end":390,"column_start":1,"column_end":100}},{"value":"/ use this wrapper, a custom serializer with an error type satisfying","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424196,"byte_end":424267,"line_start":391,"line_end":391,"column_start":1,"column_end":72}},{"value":"/ `<S as Fallible>::Error: From<AsStringError>` must be provided.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424268,"byte_end":424335,"line_start":392,"line_end":392,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424336,"byte_end":424339,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424340,"byte_end":424353,"line_start":394,"line_end":394,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424354,"byte_end":424357,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424358,"byte_end":424365,"line_start":396,"line_end":396,"column_start":1,"column_end":8}},{"value":"/ use std::{ffi::OsString, path::PathBuf};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424366,"byte_end":424410,"line_start":397,"line_end":397,"column_start":1,"column_end":45}},{"value":"/ use rkyv::{Archive, with::AsString};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424411,"byte_end":424451,"line_start":398,"line_end":398,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424452,"byte_end":424455,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424456,"byte_end":424478,"line_start":400,"line_end":400,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424479,"byte_end":424499,"line_start":401,"line_end":401,"column_start":1,"column_end":21}},{"value":"/     #[with(AsString)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424500,"byte_end":424525,"line_start":402,"line_end":402,"column_start":1,"column_end":26}},{"value":"/     os_string: OsString,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424526,"byte_end":424554,"line_start":403,"line_end":403,"column_start":1,"column_end":29}},{"value":"/     #[with(AsString)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424555,"byte_end":424580,"line_start":404,"line_end":404,"column_start":1,"column_end":26}},{"value":"/     path: PathBuf,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424581,"byte_end":424603,"line_start":405,"line_end":405,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424604,"byte_end":424609,"line_start":406,"line_end":406,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424610,"byte_end":424617,"line_start":407,"line_end":407,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8372},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424827,"byte_end":424838,"line_start":415,"line_end":415,"column_start":5,"column_end":16},"name":"InvalidUTF8","qualname":"::with::AsStringError::InvalidUTF8","value":"AsStringError::InvalidUTF8","parent":{"krate":0,"index":8371},"children":[],"decl_id":null,"docs":" The `OsString` or `PathBuf` was not valid UTF-8.\n","sig":null,"attributes":[{"value":"/ The `OsString` or `PathBuf` was not valid UTF-8.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424770,"byte_end":424822,"line_start":414,"line_end":414,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":8371},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424750,"byte_end":424763,"line_start":413,"line_end":413,"column_start":10,"column_end":23},"name":"AsStringError","qualname":"::with::AsStringError","value":"pub enum AsStringError { InvalidUTF8, }","parent":null,"children":[{"krate":0,"index":8372}],"decl_id":null,"docs":" Errors that can occur when serializing a [`AsString`] wrapper.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a [`AsString`] wrapper.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424657,"byte_end":424723,"line_start":411,"line_end":411,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8376},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426104,"byte_end":426108,"line_start":456,"line_end":456,"column_start":12,"column_end":16},"name":"Lock","qualname":"::with::Lock","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that locks a lock and serializes the value immutably.","sig":null,"attributes":[{"value":"/ A wrapper that locks a lock and serializes the value immutably.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425059,"byte_end":425126,"line_start":427,"line_end":427,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425127,"byte_end":425130,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ This wrapper can panic under very specific circumstances when:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425131,"byte_end":425197,"line_start":429,"line_end":429,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425198,"byte_end":425201,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ 1. `serialize_with` is called and succeeds in locking the value to serialize it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425202,"byte_end":425286,"line_start":431,"line_end":431,"column_start":1,"column_end":85}},{"value":"/ 2. Another thread locks the value and panics, poisoning the lock","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425287,"byte_end":425355,"line_start":432,"line_end":432,"column_start":1,"column_end":69}},{"value":"/ 3. `resolve_with` is called and gets a poisoned value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425356,"byte_end":425414,"line_start":433,"line_end":433,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425415,"byte_end":425418,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Unfortunately, it's not possible to work around this issue. If your code absolutely must not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425419,"byte_end":425515,"line_start":435,"line_end":435,"column_start":1,"column_end":97}},{"value":"/ panic under any circumstances, it's recommended that you lock your values and then serialize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425516,"byte_end":425612,"line_start":436,"line_end":436,"column_start":1,"column_end":97}},{"value":"/ them while locked.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425613,"byte_end":425635,"line_start":437,"line_end":437,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425636,"byte_end":425639,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Regular serializers don't support the custom error handling needed for this type by default. To","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425640,"byte_end":425739,"line_start":439,"line_end":439,"column_start":1,"column_end":100}},{"value":"/ use this wrapper, a custom serializer with an error type satisfying","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425740,"byte_end":425811,"line_start":440,"line_end":440,"column_start":1,"column_end":72}},{"value":"/ `<S as Fallible>::Error: From<LockError>` must be provided.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425812,"byte_end":425875,"line_start":441,"line_end":441,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425876,"byte_end":425879,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425880,"byte_end":425893,"line_start":443,"line_end":443,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425894,"byte_end":425897,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425898,"byte_end":425905,"line_start":445,"line_end":445,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425906,"byte_end":425931,"line_start":446,"line_end":446,"column_start":1,"column_end":26}},{"value":"/ use rkyv::{Archive, with::Lock};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425932,"byte_end":425968,"line_start":447,"line_end":447,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425969,"byte_end":425972,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425973,"byte_end":425995,"line_start":449,"line_end":449,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425996,"byte_end":426016,"line_start":450,"line_end":450,"column_start":1,"column_end":21}},{"value":"/     #[with(Lock)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426017,"byte_end":426038,"line_start":451,"line_end":451,"column_start":1,"column_end":22}},{"value":"/     a: Mutex<i32>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426039,"byte_end":426061,"line_start":452,"line_end":452,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426062,"byte_end":426067,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426068,"byte_end":426075,"line_start":454,"line_end":454,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8381},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426247,"byte_end":426255,"line_start":462,"line_end":462,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::with::LockError::Poisoned","value":"LockError::Poisoned","parent":{"krate":0,"index":8380},"children":[],"decl_id":null,"docs":" The mutex was poisoned\n","sig":null,"attributes":[{"value":"/ The mutex was poisoned","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426216,"byte_end":426242,"line_start":461,"line_end":461,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":8380},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426200,"byte_end":426209,"line_start":460,"line_end":460,"column_start":10,"column_end":19},"name":"LockError","qualname":"::with::LockError","value":"pub enum LockError { Poisoned, }","parent":null,"children":[{"krate":0,"index":8381}],"decl_id":null,"docs":" Errors that can occur while serializing a [`Lock`] wrapper\n","sig":null,"attributes":[{"value":"/ Errors that can occur while serializing a [`Lock`] wrapper","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426111,"byte_end":426173,"line_start":458,"line_end":458,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":8385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426767,"byte_end":426774,"line_start":489,"line_end":489,"column_start":12,"column_end":19},"name":"AsOwned","qualname":"::with::AsOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a `Cow` as if it were owned.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a `Cow` as if it were owned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426468,"byte_end":426526,"line_start":474,"line_end":474,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426527,"byte_end":426530,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426531,"byte_end":426544,"line_start":476,"line_end":476,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426545,"byte_end":426548,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426549,"byte_end":426556,"line_start":478,"line_end":478,"column_start":1,"column_end":8}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426557,"byte_end":426582,"line_start":479,"line_end":479,"column_start":1,"column_end":26}},{"value":"/ use rkyv::{Archive, with::AsOwned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426583,"byte_end":426622,"line_start":480,"line_end":480,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426623,"byte_end":426626,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426627,"byte_end":426649,"line_start":482,"line_end":482,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426650,"byte_end":426674,"line_start":483,"line_end":483,"column_start":1,"column_end":25}},{"value":"/     #[with(AsOwned)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426675,"byte_end":426699,"line_start":484,"line_end":484,"column_start":1,"column_end":25}},{"value":"/     a: Cow<'a, str>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426700,"byte_end":426724,"line_start":485,"line_end":485,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426725,"byte_end":426730,"line_start":486,"line_end":486,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426731,"byte_end":426738,"line_start":487,"line_end":487,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8389},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427303,"byte_end":427308,"line_start":509,"line_end":509,"column_start":12,"column_end":17},"name":"AsVec","qualname":"::with::AsVec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes associative containers as a `Vec` of key-value pairs.","sig":null,"attributes":[{"value":"/ A wrapper that serializes associative containers as a `Vec` of key-value pairs.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426777,"byte_end":426860,"line_start":491,"line_end":491,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426861,"byte_end":426864,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ This provides faster serialization for containers like `HashMap` and `BTreeMap` by serializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426865,"byte_end":426963,"line_start":493,"line_end":493,"column_start":1,"column_end":99}},{"value":"/ the key-value pairs directly instead of building a data structure in the buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426964,"byte_end":427048,"line_start":494,"line_end":494,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427049,"byte_end":427052,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427053,"byte_end":427066,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427067,"byte_end":427070,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427071,"byte_end":427078,"line_start":498,"line_end":498,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427079,"byte_end":427113,"line_start":499,"line_end":499,"column_start":1,"column_end":35}},{"value":"/ use rkyv::{Archive, with::AsVec};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427114,"byte_end":427151,"line_start":500,"line_end":500,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427152,"byte_end":427155,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427156,"byte_end":427178,"line_start":502,"line_end":502,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427179,"byte_end":427199,"line_start":503,"line_end":503,"column_start":1,"column_end":21}},{"value":"/     #[with(AsVec)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427200,"byte_end":427222,"line_start":504,"line_end":504,"column_start":1,"column_end":23}},{"value":"/     values: HashMap<String, u32>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427223,"byte_end":427260,"line_start":505,"line_end":505,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427261,"byte_end":427266,"line_start":506,"line_end":506,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427267,"byte_end":427274,"line_start":507,"line_end":507,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427938,"byte_end":427943,"line_start":536,"line_end":536,"column_start":12,"column_end":17},"name":"Niche","qualname":"::with::Niche","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that niches some type combinations.","sig":null,"attributes":[{"value":"/ A wrapper that niches some type combinations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427311,"byte_end":427360,"line_start":511,"line_end":511,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427361,"byte_end":427364,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ A common type combination is `Option<Box<T>>`. By using a null pointer, the archived version can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427365,"byte_end":427465,"line_start":513,"line_end":513,"column_start":1,"column_end":101}},{"value":"/ save some space on-disk.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427466,"byte_end":427494,"line_start":514,"line_end":514,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427495,"byte_end":427498,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427499,"byte_end":427512,"line_start":516,"line_end":516,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427513,"byte_end":427516,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427517,"byte_end":427524,"line_start":518,"line_end":518,"column_start":1,"column_end":8}},{"value":"/ use core::mem::size_of;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427525,"byte_end":427552,"line_start":519,"line_end":519,"column_start":1,"column_end":28}},{"value":"/ use rkyv::{Archive, Archived, with::Niche};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427553,"byte_end":427600,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427601,"byte_end":427604,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427605,"byte_end":427627,"line_start":522,"line_end":522,"column_start":1,"column_end":23}},{"value":"/ struct BasicExample {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427628,"byte_end":427653,"line_start":523,"line_end":523,"column_start":1,"column_end":26}},{"value":"/     value: Option<Box<str>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427654,"byte_end":427686,"line_start":524,"line_end":524,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427687,"byte_end":427692,"line_start":525,"line_end":525,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427693,"byte_end":427696,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427697,"byte_end":427719,"line_start":527,"line_end":527,"column_start":1,"column_end":23}},{"value":"/ struct NichedExample {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427720,"byte_end":427746,"line_start":528,"line_end":528,"column_start":1,"column_end":27}},{"value":"/     #[with(Niche)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427747,"byte_end":427769,"line_start":529,"line_end":529,"column_start":1,"column_end":23}},{"value":"/     value: Option<Box<str>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427770,"byte_end":427802,"line_start":530,"line_end":530,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427803,"byte_end":427808,"line_start":531,"line_end":531,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427809,"byte_end":427812,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ assert!(size_of::<Archived<BasicExample>>() > size_of::<Archived<NichedExample>>());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427813,"byte_end":427901,"line_start":533,"line_end":533,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427902,"byte_end":427909,"line_start":534,"line_end":534,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8397},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428830,"byte_end":428842,"line_start":564,"line_end":564,"column_start":12,"column_end":24},"name":"CopyOptimize","qualname":"::with::CopyOptimize","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that provides specialized, performant implementations of serialization and\n deserialization.","sig":null,"attributes":[{"value":"/ A wrapper that provides specialized, performant implementations of serialization and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":427946,"byte_end":428034,"line_start":538,"line_end":538,"column_start":1,"column_end":89}},{"value":"/ deserialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428035,"byte_end":428055,"line_start":539,"line_end":539,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428056,"byte_end":428059,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ This wrapper can be used with containers like `Vec`, but care must be taken to ensure that they","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428060,"byte_end":428159,"line_start":541,"line_end":541,"column_start":1,"column_end":100}},{"value":"/ contain copy-safe types. Copy-safe types must be trivially copyable (have the same archived and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428160,"byte_end":428259,"line_start":542,"line_end":542,"column_start":1,"column_end":100}},{"value":"/ unarchived representations) and contain no padding bytes. In situations where copying","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428260,"byte_end":428349,"line_start":543,"line_end":543,"column_start":1,"column_end":90}},{"value":"/ uninitialized bytes the output is acceptable, this wrapper may be used with containers of types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428350,"byte_end":428449,"line_start":544,"line_end":544,"column_start":1,"column_end":100}},{"value":"/ that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428450,"byte_end":428481,"line_start":545,"line_end":545,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428482,"byte_end":428485,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428486,"byte_end":428498,"line_start":547,"line_end":547,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428499,"byte_end":428502,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ Using this wrapper with containers containing non-copy-safe types may result in undefined","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428503,"byte_end":428596,"line_start":549,"line_end":549,"column_start":1,"column_end":94}},{"value":"/ behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428597,"byte_end":428610,"line_start":550,"line_end":550,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428611,"byte_end":428614,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428615,"byte_end":428628,"line_start":552,"line_end":552,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428629,"byte_end":428632,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428633,"byte_end":428640,"line_start":554,"line_end":554,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::CopyOptimize};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428641,"byte_end":428685,"line_start":555,"line_end":555,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428686,"byte_end":428689,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428690,"byte_end":428712,"line_start":557,"line_end":557,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428713,"byte_end":428733,"line_start":558,"line_end":558,"column_start":1,"column_end":21}},{"value":"/     #[with(CopyOptimize)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428734,"byte_end":428763,"line_start":559,"line_end":559,"column_start":1,"column_end":30}},{"value":"/     bytes: Vec<u8>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428764,"byte_end":428787,"line_start":560,"line_end":560,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428788,"byte_end":428793,"line_start":561,"line_end":561,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428794,"byte_end":428801,"line_start":562,"line_end":562,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8401},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429733,"byte_end":429746,"line_start":589,"line_end":589,"column_start":12,"column_end":25},"name":"UnixTimestamp","qualname":"::with::UnixTimestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that converts a [`SystemTime`](::std::time::SystemTime) to a\n [`Duration`](::std::time::Duration) since [`UNIX_EPOCH`](::std::time::UNIX_EPOCH).","sig":null,"attributes":[{"value":"/ A wrapper that converts a [`SystemTime`](::std::time::SystemTime) to a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428845,"byte_end":428919,"line_start":566,"line_end":566,"column_start":1,"column_end":75}},{"value":"/ [`Duration`](::std::time::Duration) since [`UNIX_EPOCH`](::std::time::UNIX_EPOCH).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":428920,"byte_end":429006,"line_start":567,"line_end":567,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429007,"byte_end":429010,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ If the serialized time occurs before the UNIX epoch, serialization will panic during `resolve`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429011,"byte_end":429110,"line_start":569,"line_end":569,"column_start":1,"column_end":100}},{"value":"/ The resulting archived time will be an [`ArchivedDuration`](crate::time::ArchivedDuration)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429111,"byte_end":429205,"line_start":570,"line_end":570,"column_start":1,"column_end":95}},{"value":"/ relative to the UNIX epoch.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429206,"byte_end":429237,"line_start":571,"line_end":571,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429238,"byte_end":429241,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ Regular serializers don't support the custom error handling needed for this type by default. To","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429242,"byte_end":429341,"line_start":573,"line_end":573,"column_start":1,"column_end":100}},{"value":"/ use this wrapper, a custom serializer with an error type satisfying","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429342,"byte_end":429413,"line_start":574,"line_end":574,"column_start":1,"column_end":72}},{"value":"/ `<S as Fallible>::Error: From<UnixTimestampError>` must be provided.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429414,"byte_end":429486,"line_start":575,"line_end":575,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429487,"byte_end":429490,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429491,"byte_end":429504,"line_start":577,"line_end":577,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429505,"byte_end":429508,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429509,"byte_end":429516,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::UnixTimestamp};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429517,"byte_end":429562,"line_start":580,"line_end":580,"column_start":1,"column_end":46}},{"value":"/ use std::time::SystemTime;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429563,"byte_end":429593,"line_start":581,"line_end":581,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429594,"byte_end":429597,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429598,"byte_end":429620,"line_start":583,"line_end":583,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429621,"byte_end":429641,"line_start":584,"line_end":584,"column_start":1,"column_end":21}},{"value":"/     #[with(UnixTimestamp)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429642,"byte_end":429672,"line_start":585,"line_end":585,"column_start":1,"column_end":31}},{"value":"/     time: SystemTime,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429673,"byte_end":429698,"line_start":586,"line_end":586,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429699,"byte_end":429704,"line_start":587,"line_end":587,"column_start":1,"column_end":6}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429931,"byte_end":429950,"line_start":595,"line_end":595,"column_start":5,"column_end":24},"name":"TimeBeforeUnixEpoch","qualname":"::with::UnixTimestampError::TimeBeforeUnixEpoch","value":"UnixTimestampError::TimeBeforeUnixEpoch","parent":{"krate":0,"index":8405},"children":[],"decl_id":null,"docs":" The `SystemTime` occurred prior to the UNIX epoch.\n","sig":null,"attributes":[{"value":"/ The `SystemTime` occurred prior to the UNIX epoch.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429872,"byte_end":429926,"line_start":594,"line_end":594,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":8405},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429847,"byte_end":429865,"line_start":593,"line_end":593,"column_start":10,"column_end":28},"name":"UnixTimestampError","qualname":"::with::UnixTimestampError","value":"pub enum UnixTimestampError { TimeBeforeUnixEpoch, }","parent":null,"children":[{"krate":0,"index":8406}],"decl_id":null,"docs":" Errors that can occur when serializing a [`UnixTimestamp`] wrapper.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a [`UnixTimestamp`] wrapper.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429749,"byte_end":429820,"line_start":591,"line_end":591,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8410},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431509,"byte_end":431512,"line_start":640,"line_end":640,"column_start":12,"column_end":15},"name":"Raw","qualname":"::with::Raw","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that provides an optimized bulk data array. This is primarily intended for large\n amounts of raw data, like bytes, floats, or integers.","sig":null,"attributes":[{"value":"/ A wrapper that provides an optimized bulk data array. This is primarily intended for large","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430203,"byte_end":430297,"line_start":607,"line_end":607,"column_start":1,"column_end":95}},{"value":"/ amounts of raw data, like bytes, floats, or integers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430298,"byte_end":430355,"line_start":608,"line_end":608,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430356,"byte_end":430359,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ This wrapper can be used with containers like `Vec`, but care must be taken to ensure that they","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430360,"byte_end":430459,"line_start":610,"line_end":610,"column_start":1,"column_end":100}},{"value":"/ contain copy-safe types. Copy-safe types must be trivially copyable (have the same archived and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430460,"byte_end":430559,"line_start":611,"line_end":611,"column_start":1,"column_end":100}},{"value":"/ unarchived representations) and contain no padding bytes. In situations where copying","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430560,"byte_end":430649,"line_start":612,"line_end":612,"column_start":1,"column_end":90}},{"value":"/ uninitialized bytes the output is acceptable, this wrapper may be used with containers of types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430650,"byte_end":430749,"line_start":613,"line_end":613,"column_start":1,"column_end":100}},{"value":"/ that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430750,"byte_end":430781,"line_start":614,"line_end":614,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430782,"byte_end":430785,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ Unlike [`CopyOptimize`], this wrapper will also skip validation for its elements. If the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430786,"byte_end":430878,"line_start":616,"line_end":616,"column_start":1,"column_end":93}},{"value":"/ elements of the container can have any invalid bit patterns (e.g. `char`, `bool`, complex","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430879,"byte_end":430972,"line_start":617,"line_end":617,"column_start":1,"column_end":94}},{"value":"/ containers, etc.), then using `Raw` in an insecure setting can lead to undefined behavior. Take","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430973,"byte_end":431072,"line_start":618,"line_end":618,"column_start":1,"column_end":100}},{"value":"/ great caution!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431073,"byte_end":431091,"line_start":619,"line_end":619,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431092,"byte_end":431095,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431096,"byte_end":431108,"line_start":621,"line_end":621,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431109,"byte_end":431112,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ Using this wrapper with containers containing non-copy-safe types or types that require","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431113,"byte_end":431204,"line_start":623,"line_end":623,"column_start":1,"column_end":92}},{"value":"/ validation may result in undefined behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431205,"byte_end":431253,"line_start":624,"line_end":624,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431254,"byte_end":431257,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431258,"byte_end":431271,"line_start":626,"line_end":626,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431272,"byte_end":431275,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431276,"byte_end":431283,"line_start":628,"line_end":628,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Raw};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431284,"byte_end":431319,"line_start":629,"line_end":629,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431320,"byte_end":431323,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431324,"byte_end":431346,"line_start":631,"line_end":631,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431347,"byte_end":431367,"line_start":632,"line_end":632,"column_start":1,"column_end":21}},{"value":"/     #[with(Raw)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431368,"byte_end":431388,"line_start":633,"line_end":633,"column_start":1,"column_end":21}},{"value":"/     bytes: Vec<u8>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431389,"byte_end":431412,"line_start":634,"line_end":634,"column_start":1,"column_end":24}},{"value":"/     #[with(Raw)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431413,"byte_end":431433,"line_start":635,"line_end":635,"column_start":1,"column_end":21}},{"value":"/     vertices: Vec<[f32; 3]>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431434,"byte_end":431466,"line_start":636,"line_end":636,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431467,"byte_end":431472,"line_start":637,"line_end":637,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":431473,"byte_end":431480,"line_start":638,"line_end":638,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5920},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8758,"byte_end":8766,"line_start":192,"line_end":192,"column_start":11,"column_end":19},"name":"Fallible","qualname":"::Fallible","value":"Fallible","parent":null,"children":[{"krate":0,"index":5921}],"decl_id":null,"docs":" A type that can produce an error.","sig":null,"attributes":[{"value":"/ A type that can produce an error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8269,"byte_end":8306,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8307,"byte_end":8310,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This trait is always implemented by serializers and deserializers. Its purpose is to provide an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8311,"byte_end":8410,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"/ error type without restricting what other capabilities the type must provide.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8411,"byte_end":8492,"line_start":187,"line_end":187,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8493,"byte_end":8496,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ When writing implementations for [`Serialize`] and [`Deserialize`], it's best practice to bound","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8497,"byte_end":8596,"line_start":189,"line_end":189,"column_start":1,"column_end":100}},{"value":"/ the serializer or deserializer by `Fallible` and then require that the serialized types support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8597,"byte_end":8696,"line_start":190,"line_end":190,"column_start":1,"column_end":100}},{"value":"/ it (i.e. `S: Fallible, MyType: Serialize<S>`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8697,"byte_end":8747,"line_start":191,"line_end":191,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5921},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8829,"byte_end":8834,"line_start":194,"line_end":194,"column_start":10,"column_end":15},"name":"Error","qualname":"::Fallible::Error","value":"type Error: 'static;","parent":{"krate":0,"index":5920},"children":[],"decl_id":null,"docs":" The error produced by any failing methods.\n","sig":null,"attributes":[{"value":"/ The error produced by any failing methods.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8773,"byte_end":8819,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9039,"byte_end":9049,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"Infallible","qualname":"::Infallible","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fallible type that cannot produce errors.","sig":null,"attributes":[{"value":"/ A fallible type that cannot produce errors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8848,"byte_end":8895,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8896,"byte_end":8899,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ This type can be used to serialize and deserialize types that cannot fail to serialize or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8900,"byte_end":8993,"line_start":199,"line_end":199,"column_start":1,"column_end":94}},{"value":"/ deserialize.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":8994,"byte_end":9010,"line_start":200,"line_end":200,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":5926},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16509,"byte_end":16516,"line_start":391,"line_end":391,"column_start":11,"column_end":18},"name":"Archive","qualname":"::Archive","value":"Archive","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929}],"decl_id":null,"docs":" A type that can be used without deserializing.","sig":null,"attributes":[{"value":"/ A type that can be used without deserializing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9215,"byte_end":9265,"line_start":214,"line_end":214,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9266,"byte_end":9269,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ `Archive` is one of three basic traits used to work with zero-copy data and controls the layout","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9270,"byte_end":9369,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"/ of the data in its archived zero-copy representation. The [`Serialize`] trait helps transform","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9370,"byte_end":9467,"line_start":217,"line_end":217,"column_start":1,"column_end":98}},{"value":"/ types into that representation, and the [`Deserialize`] trait helps transform types back out.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9468,"byte_end":9565,"line_start":218,"line_end":218,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9566,"byte_end":9569,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Types that implement `Archive` must have a well-defined archived size. Unsized types can be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9570,"byte_end":9665,"line_start":220,"line_end":220,"column_start":1,"column_end":96}},{"value":"/ supported using the [`ArchiveUnsized`] trait, along with [`SerializeUnsized`] and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9666,"byte_end":9751,"line_start":221,"line_end":221,"column_start":1,"column_end":86}},{"value":"/ [`DeserializeUnsized`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9752,"byte_end":9779,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9780,"byte_end":9783,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Archiving is done depth-first, writing any data owned by a type before writing the data for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9784,"byte_end":9883,"line_start":224,"line_end":224,"column_start":1,"column_end":100}},{"value":"/ type itself. The type must be able to create the archived type from only its own data and its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9884,"byte_end":9981,"line_start":225,"line_end":225,"column_start":1,"column_end":98}},{"value":"/ resolver.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9982,"byte_end":9995,"line_start":226,"line_end":226,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9996,"byte_end":9999,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Archived data is always treated as if it is tree-shaped, with the root owning its direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10000,"byte_end":10092,"line_start":228,"line_end":228,"column_start":1,"column_end":93}},{"value":"/ descendents and so on. Data that is not tree-shaped can be supported using special serializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10093,"byte_end":10190,"line_start":229,"line_end":229,"column_start":1,"column_end":98}},{"value":"/ and deserializer bounds (see [`ArchivedRc`](crate::rc::ArchivedRc) for example). In a buffer of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10191,"byte_end":10290,"line_start":230,"line_end":230,"column_start":1,"column_end":100}},{"value":"/ serialized data, objects are laid out in *reverse order*. This means that the root object is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10291,"byte_end":10387,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/ located near the end of the buffer and leaf objects are located near the beginning.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10388,"byte_end":10475,"line_start":232,"line_end":232,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10476,"byte_end":10479,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10480,"byte_end":10494,"line_start":234,"line_end":234,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10495,"byte_end":10498,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Most of the time, `#[derive(Archive)]` will create an acceptable implementation. You can use the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10499,"byte_end":10599,"line_start":236,"line_end":236,"column_start":1,"column_end":101}},{"value":"/ `#[archive(...)]` and `#[archive_attr(...)]` attributes to control how the implementation is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10600,"byte_end":10696,"line_start":237,"line_end":237,"column_start":1,"column_end":97}},{"value":"/ generated. See the [`Archive`](macro@Archive) derive macro for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10697,"byte_end":10777,"line_start":238,"line_end":238,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10778,"byte_end":10781,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10782,"byte_end":10789,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, Deserialize, Serialize};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10790,"byte_end":10838,"line_start":241,"line_end":241,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10839,"byte_end":10842,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive, Deserialize, Serialize, Debug, PartialEq)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10843,"byte_end":10907,"line_start":243,"line_end":243,"column_start":1,"column_end":65}},{"value":"/ // This will generate a PartialEq impl between our unarchived and archived types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10908,"byte_end":10992,"line_start":244,"line_end":244,"column_start":1,"column_end":85}},{"value":"/ #[archive(compare(PartialEq))]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":10993,"byte_end":11027,"line_start":245,"line_end":245,"column_start":1,"column_end":35}},{"value":"/ // We can pass attributes through to generated types with archive_attr","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11028,"byte_end":11102,"line_start":246,"line_end":246,"column_start":1,"column_end":75}},{"value":"/ #[archive_attr(derive(Debug))]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11103,"byte_end":11137,"line_start":247,"line_end":247,"column_start":1,"column_end":35}},{"value":"/ struct Test {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11138,"byte_end":11155,"line_start":248,"line_end":248,"column_start":1,"column_end":18}},{"value":"/     int: u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11156,"byte_end":11172,"line_start":249,"line_end":249,"column_start":1,"column_end":17}},{"value":"/     string: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11173,"byte_end":11196,"line_start":250,"line_end":250,"column_start":1,"column_end":24}},{"value":"/     option: Option<Vec<i32>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11197,"byte_end":11230,"line_start":251,"line_end":251,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11231,"byte_end":11236,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11237,"byte_end":11240,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let value = Test {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11241,"byte_end":11263,"line_start":254,"line_end":254,"column_start":1,"column_end":23}},{"value":"/     int: 42,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11264,"byte_end":11280,"line_start":255,"line_end":255,"column_start":1,"column_end":17}},{"value":"/     string: \"hello world\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11281,"byte_end":11323,"line_start":256,"line_end":256,"column_start":1,"column_end":43}},{"value":"/     option: Some(vec![1, 2, 3, 4]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11324,"byte_end":11363,"line_start":257,"line_end":257,"column_start":1,"column_end":40}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11364,"byte_end":11370,"line_start":258,"line_end":258,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11371,"byte_end":11374,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ // Serializing is as easy as a single function call","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11375,"byte_end":11430,"line_start":260,"line_end":260,"column_start":1,"column_end":56}},{"value":"/ let bytes = rkyv::to_bytes::<_, 256>(&value).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11431,"byte_end":11489,"line_start":261,"line_end":261,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11490,"byte_end":11493,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ // Or you can customize your serialization for better performance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11494,"byte_end":11563,"line_start":263,"line_end":263,"column_start":1,"column_end":70}},{"value":"/ // and compatibility with #![no_std] environments","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11564,"byte_end":11617,"line_start":264,"line_end":264,"column_start":1,"column_end":54}},{"value":"/ use rkyv::ser::{Serializer, serializers::AllocSerializer};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11618,"byte_end":11680,"line_start":265,"line_end":265,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11681,"byte_end":11684,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AllocSerializer::<0>::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11685,"byte_end":11742,"line_start":267,"line_end":267,"column_start":1,"column_end":58}},{"value":"/ serializer.serialize_value(&value).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11743,"byte_end":11791,"line_start":268,"line_end":268,"column_start":1,"column_end":49}},{"value":"/ let bytes = serializer.into_serializer().into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11792,"byte_end":11850,"line_start":269,"line_end":269,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11851,"byte_end":11854,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ // You can use the safe API with the validation feature turned on,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11855,"byte_end":11925,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ // or you can use the unsafe API (shown here) for maximum performance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":11926,"byte_end":11999,"line_start":272,"line_end":272,"column_start":1,"column_end":74}},{"value":"/ let archived = unsafe { rkyv::archived_root::<Test>(&bytes[..]) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12000,"byte_end":12070,"line_start":273,"line_end":273,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(archived, &value);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12071,"byte_end":12104,"line_start":274,"line_end":274,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12105,"byte_end":12108,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ // And you can always deserialize back to the original type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12109,"byte_end":12172,"line_start":276,"line_end":276,"column_start":1,"column_end":64}},{"value":"/ let deserialized: Test = archived.deserialize(&mut rkyv::Infallible).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12173,"byte_end":12255,"line_start":277,"line_end":277,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(deserialized, value);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12256,"byte_end":12292,"line_start":278,"line_end":278,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12293,"byte_end":12300,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12301,"byte_end":12304,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ Many of the core and standard library types already have `Archive` implementations available,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12305,"byte_end":12402,"line_start":281,"line_end":281,"column_start":1,"column_end":98}},{"value":"/ but you may need to implement `Archive` for your own types in some cases the derive macro cannot","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12403,"byte_end":12503,"line_start":282,"line_end":282,"column_start":1,"column_end":101}},{"value":"/ handle.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12504,"byte_end":12515,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12516,"byte_end":12519,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ In this example, we add our own wrapper that serializes a `&'static str` as if it's owned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12520,"byte_end":12614,"line_start":285,"line_end":285,"column_start":1,"column_end":95}},{"value":"/ Normally you can lean on the archived version of `String` to do most of the work, or use the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12615,"byte_end":12711,"line_start":286,"line_end":286,"column_start":1,"column_end":97}},{"value":"/ [`Inline`](crate::with::Inline) to do exactly this. This example does everything to demonstrate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12712,"byte_end":12811,"line_start":287,"line_end":287,"column_start":1,"column_end":100}},{"value":"/ how to implement `Archive` for your own types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12812,"byte_end":12862,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12863,"byte_end":12866,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12867,"byte_end":12874,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ use core::{slice, str};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12875,"byte_end":12902,"line_start":291,"line_end":291,"column_start":1,"column_end":28}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12903,"byte_end":12918,"line_start":292,"line_end":292,"column_start":1,"column_end":16}},{"value":"/     archived_root,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12919,"byte_end":12941,"line_start":293,"line_end":293,"column_start":1,"column_end":23}},{"value":"/     ser::{Serializer, serializers::AlignedSerializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":12942,"byte_end":13000,"line_start":294,"line_end":294,"column_start":1,"column_end":59}},{"value":"/     out_field,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13001,"byte_end":13019,"line_start":295,"line_end":295,"column_start":1,"column_end":19}},{"value":"/     AlignedVec,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13020,"byte_end":13039,"line_start":296,"line_end":296,"column_start":1,"column_end":20}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13040,"byte_end":13056,"line_start":297,"line_end":297,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13057,"byte_end":13074,"line_start":298,"line_end":298,"column_start":1,"column_end":18}},{"value":"/     ArchiveUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13075,"byte_end":13098,"line_start":299,"line_end":299,"column_start":1,"column_end":24}},{"value":"/     MetadataResolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13099,"byte_end":13124,"line_start":300,"line_end":300,"column_start":1,"column_end":26}},{"value":"/     RelPtr,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13125,"byte_end":13140,"line_start":301,"line_end":301,"column_start":1,"column_end":16}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13141,"byte_end":13159,"line_start":302,"line_end":302,"column_start":1,"column_end":19}},{"value":"/     SerializeUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13160,"byte_end":13185,"line_start":303,"line_end":303,"column_start":1,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13186,"byte_end":13192,"line_start":304,"line_end":304,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13193,"byte_end":13196,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ struct OwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13197,"byte_end":13218,"line_start":306,"line_end":306,"column_start":1,"column_end":22}},{"value":"/     inner: &'static str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13219,"byte_end":13247,"line_start":307,"line_end":307,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13248,"byte_end":13253,"line_start":308,"line_end":308,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13254,"byte_end":13257,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ struct ArchivedOwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13258,"byte_end":13287,"line_start":310,"line_end":310,"column_start":1,"column_end":30}},{"value":"/     // This will be a relative pointer to our string","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13288,"byte_end":13344,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/     ptr: RelPtr<str>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13345,"byte_end":13370,"line_start":312,"line_end":312,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13371,"byte_end":13376,"line_start":313,"line_end":313,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13377,"byte_end":13380,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ impl ArchivedOwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13381,"byte_end":13408,"line_start":315,"line_end":315,"column_start":1,"column_end":28}},{"value":"/     // This will help us get the bytes of our type as a str again.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13409,"byte_end":13479,"line_start":316,"line_end":316,"column_start":1,"column_end":71}},{"value":"/     fn as_str(&self) -> &str {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13480,"byte_end":13514,"line_start":317,"line_end":317,"column_start":1,"column_end":35}},{"value":"/         unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13515,"byte_end":13535,"line_start":318,"line_end":318,"column_start":1,"column_end":21}},{"value":"/             // The as_ptr() function of RelPtr will get a pointer the str","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13536,"byte_end":13613,"line_start":319,"line_end":319,"column_start":1,"column_end":78}},{"value":"/             &*self.ptr.as_ptr()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13614,"byte_end":13649,"line_start":320,"line_end":320,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13650,"byte_end":13663,"line_start":321,"line_end":321,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13664,"byte_end":13673,"line_start":322,"line_end":322,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13674,"byte_end":13679,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13680,"byte_end":13683,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ struct OwnedStrResolver {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13684,"byte_end":13713,"line_start":325,"line_end":325,"column_start":1,"column_end":30}},{"value":"/     // This will be the position that the bytes of our string are stored at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13714,"byte_end":13794,"line_start":326,"line_end":326,"column_start":1,"column_end":81}},{"value":"/     // We'll use this to resolve the relative pointer of our","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13795,"byte_end":13859,"line_start":327,"line_end":327,"column_start":1,"column_end":65}},{"value":"/     // ArchivedOwnedStr.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13860,"byte_end":13888,"line_start":328,"line_end":328,"column_start":1,"column_end":29}},{"value":"/     pos: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13889,"byte_end":13908,"line_start":329,"line_end":329,"column_start":1,"column_end":20}},{"value":"/     // The archived metadata for our str may also need a resolver.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13909,"byte_end":13979,"line_start":330,"line_end":330,"column_start":1,"column_end":71}},{"value":"/     metadata_resolver: MetadataResolver<str>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":13980,"byte_end":14029,"line_start":331,"line_end":331,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14030,"byte_end":14035,"line_start":332,"line_end":332,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14036,"byte_end":14039,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ // The Archive implementation defines the archived version of our type and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14040,"byte_end":14118,"line_start":334,"line_end":334,"column_start":1,"column_end":79}},{"value":"/ // determines how to turn the resolver into the archived form. The Serialize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14119,"byte_end":14199,"line_start":335,"line_end":335,"column_start":1,"column_end":81}},{"value":"/ // implementations determine how to make a resolver from the original value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14200,"byte_end":14280,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ impl Archive for OwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14281,"byte_end":14312,"line_start":337,"line_end":337,"column_start":1,"column_end":32}},{"value":"/     type Archived = ArchivedOwnedStr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14313,"byte_end":14354,"line_start":338,"line_end":338,"column_start":1,"column_end":42}},{"value":"/     // This is the resolver we can create our Archived verison from.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14355,"byte_end":14427,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/     type Resolver = OwnedStrResolver;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14428,"byte_end":14469,"line_start":340,"line_end":340,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14470,"byte_end":14473,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/     // The resolve function consumes the resolver and produces the archived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14474,"byte_end":14553,"line_start":342,"line_end":342,"column_start":1,"column_end":80}},{"value":"/     // value at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14554,"byte_end":14593,"line_start":343,"line_end":343,"column_start":1,"column_end":40}},{"value":"/     unsafe fn resolve(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14594,"byte_end":14620,"line_start":344,"line_end":344,"column_start":1,"column_end":27}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14621,"byte_end":14639,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/         pos: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14640,"byte_end":14663,"line_start":346,"line_end":346,"column_start":1,"column_end":24}},{"value":"/         resolver: Self::Resolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14664,"byte_end":14701,"line_start":347,"line_end":347,"column_start":1,"column_end":38}},{"value":"/         out: *mut Self::Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14702,"byte_end":14739,"line_start":348,"line_end":348,"column_start":1,"column_end":38}},{"value":"/     ) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14740,"byte_end":14751,"line_start":349,"line_end":349,"column_start":1,"column_end":12}},{"value":"/         // We have to be careful to add the offset of the ptr field,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14752,"byte_end":14824,"line_start":350,"line_end":350,"column_start":1,"column_end":73}},{"value":"/         // otherwise we'll be using the position of the ArchivedOwnedStr","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14825,"byte_end":14901,"line_start":351,"line_end":351,"column_start":1,"column_end":77}},{"value":"/         // instead of the position of the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14902,"byte_end":14965,"line_start":352,"line_end":352,"column_start":1,"column_end":64}},{"value":"/         let (fp, fo) = out_field!(out.ptr);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":14966,"byte_end":15013,"line_start":353,"line_end":353,"column_start":1,"column_end":48}},{"value":"/         self.inner.resolve_unsized(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15014,"byte_end":15053,"line_start":354,"line_end":354,"column_start":1,"column_end":40}},{"value":"/             pos + fp,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15054,"byte_end":15079,"line_start":355,"line_end":355,"column_start":1,"column_end":26}},{"value":"/             resolver.pos,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15080,"byte_end":15109,"line_start":356,"line_end":356,"column_start":1,"column_end":30}},{"value":"/             resolver.metadata_resolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15110,"byte_end":15153,"line_start":357,"line_end":357,"column_start":1,"column_end":44}},{"value":"/             fo,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15154,"byte_end":15173,"line_start":358,"line_end":358,"column_start":1,"column_end":20}},{"value":"/         );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15174,"byte_end":15188,"line_start":359,"line_end":359,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15189,"byte_end":15198,"line_start":360,"line_end":360,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15199,"byte_end":15204,"line_start":361,"line_end":361,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15205,"byte_end":15208,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ // We restrict our serializer types with Serializer because we need its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15209,"byte_end":15284,"line_start":363,"line_end":363,"column_start":1,"column_end":76}},{"value":"/ // capabilities to archive our type. For other types, we might need more or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15285,"byte_end":15364,"line_start":364,"line_end":364,"column_start":1,"column_end":80}},{"value":"/ // less restrictive bounds on the type of S.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15365,"byte_end":15413,"line_start":365,"line_end":365,"column_start":1,"column_end":49}},{"value":"/ impl<S: Serializer + ?Sized> Serialize<S> for OwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15414,"byte_end":15474,"line_start":366,"line_end":366,"column_start":1,"column_end":61}},{"value":"/     fn serialize(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15475,"byte_end":15496,"line_start":367,"line_end":367,"column_start":1,"column_end":22}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15497,"byte_end":15515,"line_start":368,"line_end":368,"column_start":1,"column_end":19}},{"value":"/         serializer: &mut S","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15516,"byte_end":15546,"line_start":369,"line_end":369,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Self::Resolver, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15547,"byte_end":15594,"line_start":370,"line_end":370,"column_start":1,"column_end":48}},{"value":"/         // This is where we want to write the bytes of our string and return","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15595,"byte_end":15675,"line_start":371,"line_end":371,"column_start":1,"column_end":81}},{"value":"/         // a resolver that knows where those bytes were written.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15676,"byte_end":15744,"line_start":372,"line_end":372,"column_start":1,"column_end":69}},{"value":"/         // We also need to serialize the metadata for our str.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15745,"byte_end":15811,"line_start":373,"line_end":373,"column_start":1,"column_end":67}},{"value":"/         Ok(OwnedStrResolver {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15812,"byte_end":15845,"line_start":374,"line_end":374,"column_start":1,"column_end":34}},{"value":"/             pos: self.inner.serialize_unsized(serializer)?,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15846,"byte_end":15909,"line_start":375,"line_end":375,"column_start":1,"column_end":64}},{"value":"/             metadata_resolver: self.inner.serialize_metadata(serializer)?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15910,"byte_end":15987,"line_start":376,"line_end":376,"column_start":1,"column_end":78}},{"value":"/         })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":15988,"byte_end":16002,"line_start":377,"line_end":377,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16003,"byte_end":16012,"line_start":378,"line_end":378,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16013,"byte_end":16018,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16019,"byte_end":16022,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AlignedSerializer::new(AlignedVec::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16023,"byte_end":16090,"line_start":381,"line_end":381,"column_start":1,"column_end":68}},{"value":"/ const STR_VAL: &'static str = \"I'm in an OwnedStr!\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16091,"byte_end":16147,"line_start":382,"line_end":382,"column_start":1,"column_end":57}},{"value":"/ let value = OwnedStr { inner: STR_VAL };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16148,"byte_end":16192,"line_start":383,"line_end":383,"column_start":1,"column_end":45}},{"value":"/ // It works!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16193,"byte_end":16209,"line_start":384,"line_end":384,"column_start":1,"column_end":17}},{"value":"/ serializer.serialize_value(&value).expect(\"failed to archive test\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16210,"byte_end":16282,"line_start":385,"line_end":385,"column_start":1,"column_end":73}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16283,"byte_end":16321,"line_start":386,"line_end":386,"column_start":1,"column_end":39}},{"value":"/ let archived = unsafe { archived_root::<OwnedStr>(buf.as_ref()) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16322,"byte_end":16392,"line_start":387,"line_end":387,"column_start":1,"column_end":71}},{"value":"/ // Let's make sure our data got written correctly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16393,"byte_end":16446,"line_start":388,"line_end":388,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(archived.as_str(), STR_VAL);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16447,"byte_end":16490,"line_start":389,"line_end":389,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16491,"byte_end":16498,"line_start":390,"line_end":390,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5927},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16661,"byte_end":16669,"line_start":395,"line_end":395,"column_start":10,"column_end":18},"name":"Archived","qualname":"::Archive::Archived","value":"type Archived;","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" The archived representation of this type.","sig":null,"attributes":[{"value":"/ The archived representation of this type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16523,"byte_end":16568,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16573,"byte_end":16576,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ In this form, the data can be used with zero-copy deserialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16581,"byte_end":16651,"line_start":394,"line_end":394,"column_start":5,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":5928},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16844,"byte_end":16852,"line_start":399,"line_end":399,"column_start":10,"column_end":18},"name":"Resolver","qualname":"::Archive::Resolver","value":"type Resolver;","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" The resolver for this type. It must contain all the additional information from serializing\n needed to make the archived type from the normal type.\n","sig":null,"attributes":[{"value":"/ The resolver for this type. It must contain all the additional information from serializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16676,"byte_end":16771,"line_start":397,"line_end":397,"column_start":5,"column_end":100}},{"value":"/ needed to make the archived type from the normal type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16776,"byte_end":16834,"line_start":398,"line_end":398,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5929},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17478,"byte_end":17485,"line_start":413,"line_end":413,"column_start":15,"column_end":22},"name":"resolve","qualname":"::Archive::resolve","value":"pub unsafe fn resolve(&Self, usize, Self::Resolver, *mut Self::Archived)","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Creates the archived version of this value at the given position and writes it to the given\n output.","sig":null,"attributes":[{"value":"/ Creates the archived version of this value at the given position and writes it to the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16859,"byte_end":16954,"line_start":401,"line_end":401,"column_start":5,"column_end":100}},{"value":"/ output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16959,"byte_end":16970,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16975,"byte_end":16978,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The output should be initialized field-by-field rather than by writing a whole struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":16983,"byte_end":17073,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ Performing a typed copy will mark all of the padding bytes as uninitialized, but they must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17078,"byte_end":17172,"line_start":405,"line_end":405,"column_start":5,"column_end":99}},{"value":"/ remain set to the value they currently have. This prevents leaking uninitialized memory to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17177,"byte_end":17271,"line_start":406,"line_end":406,"column_start":5,"column_end":99}},{"value":"/ the final archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17276,"byte_end":17298,"line_start":407,"line_end":407,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17303,"byte_end":17306,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17311,"byte_end":17323,"line_start":409,"line_end":409,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17328,"byte_end":17331,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17336,"byte_end":17396,"line_start":411,"line_end":411,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing this object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17401,"byte_end":17463,"line_start":412,"line_end":412,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":5930},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18144,"byte_end":18153,"line_start":425,"line_end":425,"column_start":11,"column_end":20},"name":"Serialize","qualname":"::Serialize","value":"Serialize<S: Fallible + ?Sized>: Archive","parent":null,"children":[{"krate":0,"index":5932}],"decl_id":null,"docs":" Converts a type to its archived form.","sig":null,"attributes":[{"value":"/ Converts a type to its archived form.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17561,"byte_end":17602,"line_start":416,"line_end":416,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17603,"byte_end":17606,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ Objects perform any supportive serialization during [`serialize`](Serialize::serialize). For","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17607,"byte_end":17703,"line_start":418,"line_end":418,"column_start":1,"column_end":97}},{"value":"/ types that reference nonlocal (pointed-to) data, this is when that data must be serialized to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17704,"byte_end":17801,"line_start":419,"line_end":419,"column_start":1,"column_end":98}},{"value":"/ the output. These types will need to bound `S` to implement [`Serializer`](ser::Serializer) and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17802,"byte_end":17901,"line_start":420,"line_end":420,"column_start":1,"column_end":100}},{"value":"/ any other required traits (e.g. [`SharedSerializeRegistry`](ser::SharedSerializeRegistry)). They","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":17902,"byte_end":18002,"line_start":421,"line_end":421,"column_start":1,"column_end":101}},{"value":"/ should then serialize their dependencies during `serialize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18003,"byte_end":18067,"line_start":422,"line_end":422,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18068,"byte_end":18071,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ See [`Archive`] for examples of implementing `Serialize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18072,"byte_end":18133,"line_start":424,"line_end":424,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5932},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18307,"byte_end":18316,"line_start":428,"line_end":428,"column_start":8,"column_end":17},"name":"serialize","qualname":"::Serialize::serialize","value":"pub fn serialize(&Self, &mut S) -> Result<Self::Resolver, S::Error>","parent":{"krate":0,"index":5930},"children":[],"decl_id":null,"docs":" Writes the dependencies for the object and returns a resolver that can create the archived\n type.\n","sig":null,"attributes":[{"value":"/ Writes the dependencies for the object and returns a resolver that can create the archived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18191,"byte_end":18285,"line_start":426,"line_end":426,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18290,"byte_end":18299,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":5933},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18799,"byte_end":18810,"line_start":438,"line_end":438,"column_start":11,"column_end":22},"name":"Deserialize","qualname":"::Deserialize","value":"Deserialize<T, D: Fallible + ?Sized>","parent":null,"children":[{"krate":0,"index":5936}],"decl_id":null,"docs":" Converts a type back from its archived form.","sig":null,"attributes":[{"value":"/ Converts a type back from its archived form.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18384,"byte_end":18432,"line_start":431,"line_end":431,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18433,"byte_end":18436,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ Some types may require specific deserializer capabilities, such as `Rc` and `Arc`. In these","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18437,"byte_end":18532,"line_start":433,"line_end":433,"column_start":1,"column_end":96}},{"value":"/ cases, the deserializer type `D` should be bound so that it implements traits that provide those","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18533,"byte_end":18633,"line_start":434,"line_end":434,"column_start":1,"column_end":101}},{"value":"/ capabilities (e.g. [`SharedDeserializeRegistry`](de::SharedDeserializeRegistry)).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18634,"byte_end":18719,"line_start":435,"line_end":435,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18720,"byte_end":18723,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ This can be derived with [`Deserialize`](macro@Deserialize).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18724,"byte_end":18788,"line_start":437,"line_end":437,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5936},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18895,"byte_end":18906,"line_start":440,"line_end":440,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::Deserialize::deserialize","value":"pub fn deserialize(&Self, &mut D) -> Result<T, D::Error>","parent":{"krate":0,"index":5933},"children":[],"decl_id":null,"docs":" Deserializes using the given deserializer\n","sig":null,"attributes":[{"value":"/ Deserializes using the given deserializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18842,"byte_end":18887,"line_start":439,"line_end":439,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":5937},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25828,"byte_end":25842,"line_start":613,"line_end":613,"column_start":11,"column_end":25},"name":"ArchiveUnsized","qualname":"::ArchiveUnsized","value":"ArchiveUnsized: Pointee","parent":null,"children":[{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941}],"decl_id":null,"docs":" A counterpart of [`Archive`] that's suitable for unsized types.","sig":null,"attributes":[{"value":"/ A counterpart of [`Archive`] that's suitable for unsized types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18963,"byte_end":19030,"line_start":443,"line_end":443,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19031,"byte_end":19034,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ Unlike `Archive`, types that implement `ArchiveUnsized` must be serialized separately from their","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19035,"byte_end":19135,"line_start":445,"line_end":445,"column_start":1,"column_end":101}},{"value":"/ owning object. For example, whereas an `i32` might be laid out as part of a larger struct, a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19136,"byte_end":19232,"line_start":446,"line_end":446,"column_start":1,"column_end":97}},{"value":"/ `Box<i32>` would serialize the `i32` somewhere in the archive and the `Box` would point to it as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19233,"byte_end":19333,"line_start":447,"line_end":447,"column_start":1,"column_end":101}},{"value":"/ part of the larger struct. Because of this, the equivalent [`Resolver`](Archive::Resolver) type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19334,"byte_end":19433,"line_start":448,"line_end":448,"column_start":1,"column_end":100}},{"value":"/ for `ArchiveUnsized` is always a `usize` representing the position of the serialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19434,"byte_end":19529,"line_start":449,"line_end":449,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19530,"byte_end":19533,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ `ArchiveUnsized` is automatically implemented for all types that implement [`Archive`]. Nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19534,"byte_end":19633,"line_start":451,"line_end":451,"column_start":1,"column_end":100}},{"value":"/ special needs to be done to use them with types like `Box`, `Rc`, and `Arc`. It is also already","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19634,"byte_end":19733,"line_start":452,"line_end":452,"column_start":1,"column_end":100}},{"value":"/ implemented for slices and string slices, and the `rkyv_dyn` crate can be used to archive trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19734,"byte_end":19833,"line_start":453,"line_end":453,"column_start":1,"column_end":100}},{"value":"/ objects. Other unsized types must manually implement `ArchiveUnsized`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19834,"byte_end":19908,"line_start":454,"line_end":454,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19909,"byte_end":19912,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19913,"byte_end":19927,"line_start":456,"line_end":456,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19928,"byte_end":19931,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ This example shows how to manually implement `ArchiveUnsized` for an unsized type. Special care","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":19932,"byte_end":20031,"line_start":458,"line_end":458,"column_start":1,"column_end":100}},{"value":"/ must be taken to ensure that the types are laid out correctly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20032,"byte_end":20098,"line_start":459,"line_end":459,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20099,"byte_end":20102,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20103,"byte_end":20110,"line_start":461,"line_end":461,"column_start":1,"column_end":8}},{"value":"/ use core::{mem::transmute, ops::{Deref, DerefMut}};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20111,"byte_end":20166,"line_start":462,"line_end":462,"column_start":1,"column_end":56}},{"value":"/ use ptr_meta::Pointee;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20167,"byte_end":20193,"line_start":463,"line_end":463,"column_start":1,"column_end":27}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20194,"byte_end":20209,"line_start":464,"line_end":464,"column_start":1,"column_end":16}},{"value":"/     from_archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20210,"byte_end":20232,"line_start":465,"line_end":465,"column_start":1,"column_end":23}},{"value":"/     to_archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20233,"byte_end":20253,"line_start":466,"line_end":466,"column_start":1,"column_end":21}},{"value":"/     archived_unsized_value,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20254,"byte_end":20285,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/     ser::{serializers::AlignedSerializer, Serializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20286,"byte_end":20344,"line_start":468,"line_end":468,"column_start":1,"column_end":59}},{"value":"/     AlignedVec,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20345,"byte_end":20364,"line_start":469,"line_end":469,"column_start":1,"column_end":20}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20365,"byte_end":20381,"line_start":470,"line_end":470,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20382,"byte_end":20399,"line_start":471,"line_end":471,"column_start":1,"column_end":18}},{"value":"/     ArchivedMetadata,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20400,"byte_end":20425,"line_start":472,"line_end":472,"column_start":1,"column_end":26}},{"value":"/     ArchivePointee,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20426,"byte_end":20449,"line_start":473,"line_end":473,"column_start":1,"column_end":24}},{"value":"/     ArchiveUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20450,"byte_end":20473,"line_start":474,"line_end":474,"column_start":1,"column_end":24}},{"value":"/     FixedUsize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20474,"byte_end":20493,"line_start":475,"line_end":475,"column_start":1,"column_end":20}},{"value":"/     RelPtr,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20494,"byte_end":20509,"line_start":476,"line_end":476,"column_start":1,"column_end":16}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20510,"byte_end":20528,"line_start":477,"line_end":477,"column_start":1,"column_end":19}},{"value":"/     SerializeUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20529,"byte_end":20554,"line_start":478,"line_end":478,"column_start":1,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20555,"byte_end":20561,"line_start":479,"line_end":479,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20562,"byte_end":20565,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ // We're going to be dealing mostly with blocks that have a trailing slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20566,"byte_end":20644,"line_start":481,"line_end":481,"column_start":1,"column_end":79}},{"value":"/ pub struct Block<H, T: ?Sized> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20645,"byte_end":20681,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/     head: H,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20682,"byte_end":20698,"line_start":483,"line_end":483,"column_start":1,"column_end":17}},{"value":"/     tail: T,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20699,"byte_end":20715,"line_start":484,"line_end":484,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20716,"byte_end":20721,"line_start":485,"line_end":485,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20722,"byte_end":20725,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ impl<H, T> Pointee for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20726,"byte_end":20768,"line_start":487,"line_end":487,"column_start":1,"column_end":43}},{"value":"/     type Metadata = usize;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20769,"byte_end":20799,"line_start":488,"line_end":488,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20800,"byte_end":20805,"line_start":489,"line_end":489,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20806,"byte_end":20809,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ // For blocks with trailing slices, we need to store the length of the slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20810,"byte_end":20890,"line_start":491,"line_end":491,"column_start":1,"column_end":81}},{"value":"/ // in the metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20891,"byte_end":20914,"line_start":492,"line_end":492,"column_start":1,"column_end":24}},{"value":"/ pub struct BlockSliceMetadata {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20915,"byte_end":20950,"line_start":493,"line_end":493,"column_start":1,"column_end":36}},{"value":"/     len: Archived<usize>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20951,"byte_end":20980,"line_start":494,"line_end":494,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20981,"byte_end":20986,"line_start":495,"line_end":495,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20987,"byte_end":20990,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ // ArchivePointee is automatically derived for sized types because pointers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":20991,"byte_end":21070,"line_start":497,"line_end":497,"column_start":1,"column_end":80}},{"value":"/ // to sized types don't need to store any extra information. Because we're","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21071,"byte_end":21149,"line_start":498,"line_end":498,"column_start":1,"column_end":79}},{"value":"/ // making an unsized block, we need to define what metadata gets stored with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21150,"byte_end":21230,"line_start":499,"line_end":499,"column_start":1,"column_end":81}},{"value":"/ // our data pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21231,"byte_end":21255,"line_start":500,"line_end":500,"column_start":1,"column_end":25}},{"value":"/ impl<H, T> ArchivePointee for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21256,"byte_end":21305,"line_start":501,"line_end":501,"column_start":1,"column_end":50}},{"value":"/     // This is the extra data that needs to get stored for blocks with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21306,"byte_end":21380,"line_start":502,"line_end":502,"column_start":1,"column_end":75}},{"value":"/     // trailing slices","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21381,"byte_end":21407,"line_start":503,"line_end":503,"column_start":1,"column_end":27}},{"value":"/     type ArchivedMetadata = BlockSliceMetadata;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21408,"byte_end":21459,"line_start":504,"line_end":504,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21460,"byte_end":21463,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/     // We need to be able to turn our archived metadata into regular","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21464,"byte_end":21536,"line_start":506,"line_end":506,"column_start":1,"column_end":73}},{"value":"/     // metadata for our type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21537,"byte_end":21569,"line_start":507,"line_end":507,"column_start":1,"column_end":33}},{"value":"/     fn pointer_metadata(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21570,"byte_end":21598,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/         archived: &Self::ArchivedMetadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21599,"byte_end":21644,"line_start":509,"line_end":509,"column_start":1,"column_end":46}},{"value":"/     ) -> <Self as Pointee>::Metadata {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21645,"byte_end":21687,"line_start":510,"line_end":510,"column_start":1,"column_end":43}},{"value":"/         from_archived!(archived.len) as usize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21688,"byte_end":21737,"line_start":511,"line_end":511,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21738,"byte_end":21747,"line_start":512,"line_end":512,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21748,"byte_end":21753,"line_start":513,"line_end":513,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21754,"byte_end":21757,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ // We're implementing ArchiveUnsized for just Block<H, [T]>. We can still","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21758,"byte_end":21835,"line_start":515,"line_end":515,"column_start":1,"column_end":78}},{"value":"/ // implement Archive for blocks with sized tails and they won't conflict.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21836,"byte_end":21913,"line_start":516,"line_end":516,"column_start":1,"column_end":78}},{"value":"/ impl<H: Archive, T: Archive> ArchiveUnsized for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21914,"byte_end":21981,"line_start":517,"line_end":517,"column_start":1,"column_end":68}},{"value":"/     // We'll reuse our block type as our archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":21982,"byte_end":22041,"line_start":518,"line_end":518,"column_start":1,"column_end":60}},{"value":"/     type Archived = Block<Archived<H>, [Archived<T>]>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22042,"byte_end":22100,"line_start":519,"line_end":519,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22101,"byte_end":22104,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/     // This is where we'd put any resolve data for our metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22105,"byte_end":22173,"line_start":521,"line_end":521,"column_start":1,"column_end":69}},{"value":"/     // Most of the time, this can just be () because most metadata is Copy,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22174,"byte_end":22253,"line_start":522,"line_end":522,"column_start":1,"column_end":80}},{"value":"/     // but the option is there if you need it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22254,"byte_end":22304,"line_start":523,"line_end":523,"column_start":1,"column_end":51}},{"value":"/     type MetadataResolver = ();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22305,"byte_end":22340,"line_start":524,"line_end":524,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22341,"byte_end":22344,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/     // Here's where we make the metadata for our pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22345,"byte_end":22406,"line_start":526,"line_end":526,"column_start":1,"column_end":62}},{"value":"/     // This also gets the position and resolver for the metadata, but we","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22407,"byte_end":22483,"line_start":527,"line_end":527,"column_start":1,"column_end":77}},{"value":"/     // don't need it in this case.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22484,"byte_end":22522,"line_start":528,"line_end":528,"column_start":1,"column_end":39}},{"value":"/     unsafe fn resolve_metadata(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22523,"byte_end":22558,"line_start":529,"line_end":529,"column_start":1,"column_end":36}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22559,"byte_end":22577,"line_start":530,"line_end":530,"column_start":1,"column_end":19}},{"value":"/         _: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22578,"byte_end":22599,"line_start":531,"line_end":531,"column_start":1,"column_end":22}},{"value":"/         _: Self::MetadataResolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22600,"byte_end":22638,"line_start":532,"line_end":532,"column_start":1,"column_end":39}},{"value":"/         out: *mut ArchivedMetadata<Self>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22639,"byte_end":22684,"line_start":533,"line_end":533,"column_start":1,"column_end":46}},{"value":"/     ) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22685,"byte_end":22696,"line_start":534,"line_end":534,"column_start":1,"column_end":12}},{"value":"/         unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22697,"byte_end":22717,"line_start":535,"line_end":535,"column_start":1,"column_end":21}},{"value":"/             out.write(BlockSliceMetadata {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22718,"byte_end":22764,"line_start":536,"line_end":536,"column_start":1,"column_end":47}},{"value":"/                 len: to_archived!(self.tail.len() as FixedUsize),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22765,"byte_end":22834,"line_start":537,"line_end":537,"column_start":1,"column_end":70}},{"value":"/             });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22835,"byte_end":22854,"line_start":538,"line_end":538,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22855,"byte_end":22868,"line_start":539,"line_end":539,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22869,"byte_end":22878,"line_start":540,"line_end":540,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22879,"byte_end":22884,"line_start":541,"line_end":541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22885,"byte_end":22888,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ // The bounds we use on our serializer type indicate that we need basic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22889,"byte_end":22964,"line_start":543,"line_end":543,"column_start":1,"column_end":76}},{"value":"/ // serializer capabilities, and then whatever capabilities our head and tail","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":22965,"byte_end":23045,"line_start":544,"line_end":544,"column_start":1,"column_end":81}},{"value":"/ // types need to serialize themselves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23046,"byte_end":23088,"line_start":545,"line_end":545,"column_start":1,"column_end":43}},{"value":"/ impl<","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23089,"byte_end":23098,"line_start":546,"line_end":546,"column_start":1,"column_end":10}},{"value":"/     H: Serialize<S>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23099,"byte_end":23123,"line_start":547,"line_end":547,"column_start":1,"column_end":25}},{"value":"/     T: Serialize<S>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23124,"byte_end":23148,"line_start":548,"line_end":548,"column_start":1,"column_end":25}},{"value":"/     S: Serializer + ?Sized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23149,"byte_end":23179,"line_start":549,"line_end":549,"column_start":1,"column_end":31}},{"value":"/ > SerializeUnsized<S> for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23180,"byte_end":23225,"line_start":550,"line_end":550,"column_start":1,"column_end":46}},{"value":"/     // This is where we construct our unsized type in the serializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23226,"byte_end":23298,"line_start":551,"line_end":551,"column_start":1,"column_end":73}},{"value":"/     fn serialize_unsized(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23299,"byte_end":23328,"line_start":552,"line_end":552,"column_start":1,"column_end":30}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23329,"byte_end":23347,"line_start":553,"line_end":553,"column_start":1,"column_end":19}},{"value":"/         serializer: &mut S","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23348,"byte_end":23378,"line_start":554,"line_end":554,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<usize, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23379,"byte_end":23417,"line_start":555,"line_end":555,"column_start":1,"column_end":39}},{"value":"/         // First, we archive the head and all the tails. This will make sure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23418,"byte_end":23498,"line_start":556,"line_end":556,"column_start":1,"column_end":81}},{"value":"/         // that when we finally build our block, we don't accidentally mess","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23499,"byte_end":23578,"line_start":557,"line_end":557,"column_start":1,"column_end":80}},{"value":"/         // up the structure with serialized dependencies.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23579,"byte_end":23640,"line_start":558,"line_end":558,"column_start":1,"column_end":62}},{"value":"/         let head_resolver = self.head.serialize(serializer)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23641,"byte_end":23706,"line_start":559,"line_end":559,"column_start":1,"column_end":66}},{"value":"/         let mut resolvers = Vec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23707,"byte_end":23750,"line_start":560,"line_end":560,"column_start":1,"column_end":44}},{"value":"/         for tail in self.tail.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23751,"byte_end":23793,"line_start":561,"line_end":561,"column_start":1,"column_end":43}},{"value":"/             resolvers.push(tail.serialize(serializer)?);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23794,"byte_end":23854,"line_start":562,"line_end":562,"column_start":1,"column_end":61}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23855,"byte_end":23868,"line_start":563,"line_end":563,"column_start":1,"column_end":14}},{"value":"/         // Now we align our serializer for our archived type and write it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23869,"byte_end":23947,"line_start":564,"line_end":564,"column_start":1,"column_end":79}},{"value":"/         // We can't align for unsized types so we treat the trailing slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":23948,"byte_end":24026,"line_start":565,"line_end":565,"column_start":1,"column_end":79}},{"value":"/         // like an array of 0 length for now.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24027,"byte_end":24076,"line_start":566,"line_end":566,"column_start":1,"column_end":50}},{"value":"/         serializer.align_for::<Block<Archived<H>, [Archived<T>; 0]>>()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24077,"byte_end":24153,"line_start":567,"line_end":567,"column_start":1,"column_end":77}},{"value":"/         let result = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24154,"byte_end":24187,"line_start":568,"line_end":568,"column_start":1,"column_end":34}},{"value":"/             serializer.resolve_aligned(&self.head, head_resolver)?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24188,"byte_end":24258,"line_start":569,"line_end":569,"column_start":1,"column_end":71}},{"value":"/         };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24259,"byte_end":24273,"line_start":570,"line_end":570,"column_start":1,"column_end":15}},{"value":"/         serializer.align_for::<Archived<T>>()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24274,"byte_end":24325,"line_start":571,"line_end":571,"column_start":1,"column_end":52}},{"value":"/         for (item, resolver) in self.tail.iter().zip(resolvers.drain(..)) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24326,"byte_end":24405,"line_start":572,"line_end":572,"column_start":1,"column_end":80}},{"value":"/             unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24406,"byte_end":24430,"line_start":573,"line_end":573,"column_start":1,"column_end":25}},{"value":"/                 serializer.resolve_aligned(item, resolver)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24431,"byte_end":24495,"line_start":574,"line_end":574,"column_start":1,"column_end":65}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24496,"byte_end":24513,"line_start":575,"line_end":575,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24514,"byte_end":24527,"line_start":576,"line_end":576,"column_start":1,"column_end":14}},{"value":"/         Ok(result)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24528,"byte_end":24550,"line_start":577,"line_end":577,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24551,"byte_end":24560,"line_start":578,"line_end":578,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24561,"byte_end":24564,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/     // This is where we serialize the metadata for our type. In this case,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24565,"byte_end":24643,"line_start":580,"line_end":580,"column_start":1,"column_end":79}},{"value":"/     // we do all the work in resolve and don't need to do anything here.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24644,"byte_end":24720,"line_start":581,"line_end":581,"column_start":1,"column_end":77}},{"value":"/     fn serialize_metadata(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24721,"byte_end":24751,"line_start":582,"line_end":582,"column_start":1,"column_end":31}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24752,"byte_end":24770,"line_start":583,"line_end":583,"column_start":1,"column_end":19}},{"value":"/         serializer: &mut S","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24771,"byte_end":24801,"line_start":584,"line_end":584,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Self::MetadataResolver, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24802,"byte_end":24857,"line_start":585,"line_end":585,"column_start":1,"column_end":56}},{"value":"/         Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24858,"byte_end":24876,"line_start":586,"line_end":586,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24877,"byte_end":24886,"line_start":587,"line_end":587,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24887,"byte_end":24892,"line_start":588,"line_end":588,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24893,"byte_end":24896,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ let value = Block {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24897,"byte_end":24920,"line_start":590,"line_end":590,"column_start":1,"column_end":24}},{"value":"/     head: \"Numbers 1-4\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24921,"byte_end":24961,"line_start":591,"line_end":591,"column_start":1,"column_end":41}},{"value":"/     tail: [1, 2, 3, 4],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24962,"byte_end":24989,"line_start":592,"line_end":592,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24990,"byte_end":24996,"line_start":593,"line_end":593,"column_start":1,"column_end":7}},{"value":"/ // We have a Block<String, [i32; 4]> but we want to it to be a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":24997,"byte_end":25063,"line_start":594,"line_end":594,"column_start":1,"column_end":67}},{"value":"/ // Block<String, [i32]>, so we need to do more pointer transmutation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25064,"byte_end":25136,"line_start":595,"line_end":595,"column_start":1,"column_end":73}},{"value":"/ let ptr = (&value as *const Block<String, [i32; 4]>).cast::<()>();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25137,"byte_end":25207,"line_start":596,"line_end":596,"column_start":1,"column_end":71}},{"value":"/ let unsized_value = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25208,"byte_end":25240,"line_start":597,"line_end":597,"column_start":1,"column_end":33}},{"value":"/     &*transmute::<(*const (), usize), *const Block<String, [i32]>>((ptr, 4))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25241,"byte_end":25321,"line_start":598,"line_end":598,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25322,"byte_end":25328,"line_start":599,"line_end":599,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25329,"byte_end":25332,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AlignedSerializer::new(AlignedVec::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25333,"byte_end":25400,"line_start":601,"line_end":601,"column_start":1,"column_end":68}},{"value":"/ let pos = serializer.serialize_unsized_value(unsized_value)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25401,"byte_end":25464,"line_start":602,"line_end":602,"column_start":1,"column_end":64}},{"value":"/     .expect(\"failed to archive block\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25465,"byte_end":25508,"line_start":603,"line_end":603,"column_start":1,"column_end":44}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25509,"byte_end":25547,"line_start":604,"line_end":604,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25548,"byte_end":25551,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ let archived_ref = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25552,"byte_end":25583,"line_start":606,"line_end":606,"column_start":1,"column_end":32}},{"value":"/     archived_unsized_value::<Block<String, [i32]>>(buf.as_slice(), pos)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25584,"byte_end":25659,"line_start":607,"line_end":607,"column_start":1,"column_end":76}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25660,"byte_end":25666,"line_start":608,"line_end":608,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(archived_ref.head, \"Numbers 1-4\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25667,"byte_end":25716,"line_start":609,"line_end":609,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(archived_ref.tail.len(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25717,"byte_end":25760,"line_start":610,"line_end":610,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(archived_ref.tail, [1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25761,"byte_end":25809,"line_start":611,"line_end":611,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25810,"byte_end":25817,"line_start":612,"line_end":612,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5938},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26088,"byte_end":26096,"line_start":618,"line_end":618,"column_start":10,"column_end":18},"name":"Archived","qualname":"::ArchiveUnsized::Archived","value":"type Archived: ArchivePointee + ?Sized;","parent":{"krate":0,"index":5937},"children":[],"decl_id":null,"docs":" The archived counterpart of this type. Unlike `Archive`, it may be unsized.","sig":null,"attributes":[{"value":"/ The archived counterpart of this type. Unlike `Archive`, it may be unsized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25858,"byte_end":25937,"line_start":614,"line_end":614,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25942,"byte_end":25945,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ This type must implement [`ArchivePointee`], a trait that helps make valid pointers using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25950,"byte_end":26043,"line_start":616,"line_end":616,"column_start":5,"column_end":98}},{"value":"/ archived pointer metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26048,"byte_end":26078,"line_start":617,"line_end":617,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":5939},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26387,"byte_end":26403,"line_start":624,"line_end":624,"column_start":10,"column_end":26},"name":"MetadataResolver","qualname":"::ArchiveUnsized::MetadataResolver","value":"type MetadataResolver;","parent":{"krate":0,"index":5937},"children":[],"decl_id":null,"docs":" The resolver for the metadata of this type.","sig":null,"attributes":[{"value":"/ The resolver for the metadata of this type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26128,"byte_end":26175,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26180,"byte_end":26183,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Because the pointer metadata must be archived with the relative pointer and not with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26188,"byte_end":26280,"line_start":622,"line_end":622,"column_start":5,"column_end":97}},{"value":"/ structure itself, its resolver must be passed back to the structure holding the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26285,"byte_end":26377,"line_start":623,"line_end":623,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27057,"byte_end":27073,"line_start":638,"line_end":638,"column_start":15,"column_end":31},"name":"resolve_metadata","qualname":"::ArchiveUnsized::resolve_metadata","value":"pub unsafe fn resolve_metadata(&Self, usize, Self::MetadataResolver,\n                               *mut ArchivedMetadata<Self>)","parent":{"krate":0,"index":5937},"children":[],"decl_id":null,"docs":" Creates the archived version of the metadata for this value at the given position and writes\n it to the given output.","sig":null,"attributes":[{"value":"/ Creates the archived version of the metadata for this value at the given position and writes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26410,"byte_end":26506,"line_start":626,"line_end":626,"column_start":5,"column_end":101}},{"value":"/ it to the given output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26511,"byte_end":26538,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26543,"byte_end":26546,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The output should be initialized field-by-field rather than by writing a whole struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26551,"byte_end":26641,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/ Performing a typed copy will mark all of the padding bytes as uninitialized, but they must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26646,"byte_end":26740,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/ remain set to the value they currently have. This prevents leaking uninitialized memory to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26745,"byte_end":26839,"line_start":631,"line_end":631,"column_start":5,"column_end":99}},{"value":"/ the final archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26844,"byte_end":26866,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26871,"byte_end":26874,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26879,"byte_end":26891,"line_start":634,"line_end":634,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26896,"byte_end":26899,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26904,"byte_end":26964,"line_start":636,"line_end":636,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing this object's metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":26969,"byte_end":27042,"line_start":637,"line_end":637,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27928,"byte_end":27943,"line_start":659,"line_end":659,"column_start":15,"column_end":30},"name":"resolve_unsized","qualname":"::ArchiveUnsized::resolve_unsized","value":"pub unsafe fn resolve_unsized(&Self, usize, usize, Self::MetadataResolver,\n                              *mut RelPtr<Self::Archived>)","parent":{"krate":0,"index":5937},"children":[],"decl_id":null,"docs":" Resolves a relative pointer to this value with the given `from` and `to` and writes it to\n the given output.","sig":null,"attributes":[{"value":"/ Resolves a relative pointer to this value with the given `from` and `to` and writes it to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27206,"byte_end":27299,"line_start":645,"line_end":645,"column_start":5,"column_end":98}},{"value":"/ the given output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27304,"byte_end":27325,"line_start":646,"line_end":646,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27330,"byte_end":27333,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The output should be initialized field-by-field rather than by writing a whole struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27338,"byte_end":27428,"line_start":648,"line_end":648,"column_start":5,"column_end":95}},{"value":"/ Performing a typed copy will mark all of the padding bytes as uninitialized, but they must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27433,"byte_end":27527,"line_start":649,"line_end":649,"column_start":5,"column_end":99}},{"value":"/ remain set to the value they currently have. This prevents leaking uninitialized memory to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27532,"byte_end":27626,"line_start":650,"line_end":650,"column_start":5,"column_end":99}},{"value":"/ the final archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27631,"byte_end":27653,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27658,"byte_end":27661,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27666,"byte_end":27678,"line_start":653,"line_end":653,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27683,"byte_end":27686,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27691,"byte_end":27752,"line_start":655,"line_end":655,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some `Self::Archived` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27757,"byte_end":27832,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/ - `resolver` must be the result of serializing this object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27837,"byte_end":27899,"line_start":657,"line_end":657,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":27904,"byte_end":27913,"line_start":658,"line_end":658,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":5942},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28382,"byte_end":28396,"line_start":674,"line_end":674,"column_start":11,"column_end":25},"name":"ArchivePointee","qualname":"::ArchivePointee","value":"ArchivePointee: Pointee","parent":null,"children":[{"krate":0,"index":5943},{"krate":0,"index":5944}],"decl_id":null,"docs":" An archived type with associated metadata for its relative pointer.","sig":null,"attributes":[{"value":"/ An archived type with associated metadata for its relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28165,"byte_end":28236,"line_start":670,"line_end":670,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28237,"byte_end":28240,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ This is mostly used in the context of smart pointers and unsized types, and is implemented for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28241,"byte_end":28339,"line_start":672,"line_end":672,"column_start":1,"column_end":99}},{"value":"/ all sized types by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28340,"byte_end":28371,"line_start":673,"line_end":673,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":5943},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28485,"byte_end":28501,"line_start":676,"line_end":676,"column_start":10,"column_end":26},"name":"ArchivedMetadata","qualname":"::ArchivePointee::ArchivedMetadata","value":"type ArchivedMetadata;","parent":{"krate":0,"index":5942},"children":[],"decl_id":null,"docs":" The archived version of the pointer metadata for this type.\n","sig":null,"attributes":[{"value":"/ The archived version of the pointer metadata for this type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28412,"byte_end":28475,"line_start":675,"line_end":675,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28587,"byte_end":28603,"line_start":679,"line_end":679,"column_start":8,"column_end":24},"name":"pointer_metadata","qualname":"::ArchivePointee::pointer_metadata","value":"pub fn pointer_metadata(&Self::ArchivedMetadata)\n-> <Self as Pointee>::Metadata","parent":{"krate":0,"index":5942},"children":[],"decl_id":null,"docs":" Converts some archived metadata to the pointer metadata for itself.\n","sig":null,"attributes":[{"value":"/ Converts some archived metadata to the pointer metadata for itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28508,"byte_end":28579,"line_start":678,"line_end":678,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":5945},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28834,"byte_end":28850,"line_start":685,"line_end":685,"column_start":11,"column_end":27},"name":"SerializeUnsized","qualname":"::SerializeUnsized","value":"SerializeUnsized<S: Fallible + ?Sized>: ArchiveUnsized","parent":null,"children":[{"krate":0,"index":5947},{"krate":0,"index":5948}],"decl_id":null,"docs":" A counterpart of [`Serialize`] that's suitable for unsized types.","sig":null,"attributes":[{"value":"/ A counterpart of [`Serialize`] that's suitable for unsized types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28674,"byte_end":28743,"line_start":682,"line_end":682,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28744,"byte_end":28747,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ See [`ArchiveUnsized`] for examples of implementing `SerializeUnsized`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28748,"byte_end":28823,"line_start":684,"line_end":684,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28971,"byte_end":28988,"line_start":687,"line_end":687,"column_start":8,"column_end":25},"name":"serialize_unsized","qualname":"::SerializeUnsized::serialize_unsized","value":"pub fn serialize_unsized(&Self, &mut S) -> Result<usize, S::Error>","parent":{"krate":0,"index":5945},"children":[],"decl_id":null,"docs":" Writes the object and returns the position of the archived type.\n","sig":null,"attributes":[{"value":"/ Writes the object and returns the position of the archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28895,"byte_end":28963,"line_start":686,"line_end":686,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29104,"byte_end":29122,"line_start":690,"line_end":690,"column_start":8,"column_end":26},"name":"serialize_metadata","qualname":"::SerializeUnsized::serialize_metadata","value":"pub fn serialize_metadata(&Self, &mut S)\n-> Result<Self::MetadataResolver, S::Error>","parent":{"krate":0,"index":5945},"children":[],"decl_id":null,"docs":" Serializes the metadata for the given type.\n","sig":null,"attributes":[{"value":"/ Serializes the metadata for the given type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29049,"byte_end":29096,"line_start":689,"line_end":689,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":5949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29280,"byte_end":29298,"line_start":694,"line_end":694,"column_start":11,"column_end":29},"name":"DeserializeUnsized","qualname":"::DeserializeUnsized","value":"DeserializeUnsized<T: Pointee + ?Sized, D: Fallible + ?Sized>: ArchivePointee","parent":null,"children":[{"krate":0,"index":5952},{"krate":0,"index":5954}],"decl_id":null,"docs":" A counterpart of [`Deserialize`] that's suitable for unsized types.\n","sig":null,"attributes":[{"value":"/ A counterpart of [`Deserialize`] that's suitable for unsized types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29198,"byte_end":29269,"line_start":693,"line_end":693,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29546,"byte_end":29565,"line_start":700,"line_end":700,"column_start":15,"column_end":34},"name":"deserialize_unsized","qualname":"::DeserializeUnsized::deserialize_unsized","value":"pub unsafe fn deserialize_unsized<impl FnMut(Layout) -> *mut u8: FnMut(Layout)\n                                  ->\n                                  *mut u8>(&Self, &mut D,\n                                           impl FnMut(Layout) -> *mut u8)\n-> Result<*mut (), D::Error>","parent":{"krate":0,"index":5949},"children":[],"decl_id":null,"docs":" Deserializes a reference to the given value.","sig":null,"attributes":[{"value":"/ Deserializes a reference to the given value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29364,"byte_end":29412,"line_start":695,"line_end":695,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29417,"byte_end":29420,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29425,"byte_end":29437,"line_start":697,"line_end":697,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29442,"byte_end":29445,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ `out` must point to memory with the layout returned by `deserialized_layout`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29450,"byte_end":29531,"line_start":699,"line_end":699,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":5954},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29756,"byte_end":29776,"line_start":707,"line_end":707,"column_start":8,"column_end":28},"name":"deserialize_metadata","qualname":"::DeserializeUnsized::deserialize_metadata","value":"pub fn deserialize_metadata(&Self, &mut D) -> Result<T::Metadata, D::Error>","parent":{"krate":0,"index":5949},"children":[],"decl_id":null,"docs":" Deserializes the metadata for the given type.\n","sig":null,"attributes":[{"value":"/ Deserializes the metadata for the given type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29699,"byte_end":29748,"line_start":706,"line_end":706,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":5955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30044,"byte_end":30054,"line_start":714,"line_end":714,"column_start":10,"column_end":20},"name":"FixedUsize","qualname":"::FixedUsize","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The native type that `usize` is converted to for archiving.","sig":null,"attributes":[{"value":"/ The native type that `usize` is converted to for archiving.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29843,"byte_end":29906,"line_start":710,"line_end":710,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29907,"byte_end":29910,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ This will be `u16`, `u32`, or `u64` when the `size_16`, `size_32`, or `size_64` features are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29911,"byte_end":30007,"line_start":712,"line_end":712,"column_start":1,"column_end":97}},{"value":"/ enabled, respectively.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30008,"byte_end":30034,"line_start":713,"line_end":713,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":5956},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30290,"byte_end":30300,"line_start":719,"line_end":719,"column_start":10,"column_end":20},"name":"FixedIsize","qualname":"::FixedIsize","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" The native type that `isize` is converted to for archiving.","sig":null,"attributes":[{"value":"/ The native type that `isize` is converted to for archiving.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30089,"byte_end":30152,"line_start":715,"line_end":715,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30153,"byte_end":30156,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ This will be `i16`, `i32`, or `i64` when the `size_16`, `size_32`, or `size_64` features are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30157,"byte_end":30253,"line_start":717,"line_end":717,"column_start":1,"column_end":97}},{"value":"/ enabled, respectively.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30254,"byte_end":30280,"line_start":718,"line_end":718,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":5957},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30452,"byte_end":30461,"line_start":724,"line_end":724,"column_start":10,"column_end":19},"name":"RawRelPtr","qualname":"::RawRelPtr","value":"rel_ptr::RawRelPtr<Archived<isize>>","parent":null,"children":[],"decl_id":null,"docs":" The default raw relative pointer.","sig":null,"attributes":[{"value":"/ The default raw relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30336,"byte_end":30373,"line_start":721,"line_end":721,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30374,"byte_end":30377,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ This will use an archived [`FixedIsize`] to hold the offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30378,"byte_end":30442,"line_start":723,"line_end":723,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":5958},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30613,"byte_end":30619,"line_start":728,"line_end":728,"column_start":10,"column_end":16},"name":"RelPtr","qualname":"::RelPtr","value":"rel_ptr::RelPtr<T, Archived<isize>>","parent":null,"children":[],"decl_id":null,"docs":" The default relative pointer.","sig":null,"attributes":[{"value":"/ The default relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30501,"byte_end":30534,"line_start":725,"line_end":725,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30535,"byte_end":30538,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ This will use an archived [`FixedIsize`] to hold the offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30539,"byte_end":30603,"line_start":727,"line_end":727,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":5960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30806,"byte_end":30814,"line_start":733,"line_end":733,"column_start":10,"column_end":18},"name":"Archived","qualname":"::Archived","value":"<T as Archive>::Archived","parent":null,"children":[],"decl_id":null,"docs":" Alias for the archived version of some [`Archive`] type.","sig":null,"attributes":[{"value":"/ Alias for the archived version of some [`Archive`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30663,"byte_end":30723,"line_start":730,"line_end":730,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30724,"byte_end":30727,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30728,"byte_end":30796,"line_start":732,"line_end":732,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":5962},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30982,"byte_end":30990,"line_start":737,"line_end":737,"column_start":10,"column_end":18},"name":"Resolver","qualname":"::Resolver","value":"<T as Archive>::Resolver","parent":null,"children":[],"decl_id":null,"docs":" Alias for the resolver for some [`Archive`] type.","sig":null,"attributes":[{"value":"/ Alias for the resolver for some [`Archive`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30846,"byte_end":30899,"line_start":734,"line_end":734,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30900,"byte_end":30903,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":30904,"byte_end":30972,"line_start":736,"line_end":736,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":5964},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31174,"byte_end":31190,"line_start":741,"line_end":741,"column_start":10,"column_end":26},"name":"ArchivedMetadata","qualname":"::ArchivedMetadata","value":"<<T as ArchiveUnsized>::Archived as ArchivePointee>::ArchivedMetadata","parent":null,"children":[],"decl_id":null,"docs":" Alias for the archived metadata for some [`ArchiveUnsized`] type.","sig":null,"attributes":[{"value":"/ Alias for the archived metadata for some [`ArchiveUnsized`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31022,"byte_end":31091,"line_start":738,"line_end":738,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31092,"byte_end":31095,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31096,"byte_end":31164,"line_start":740,"line_end":740,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":5966},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31423,"byte_end":31439,"line_start":746,"line_end":746,"column_start":10,"column_end":26},"name":"MetadataResolver","qualname":"::MetadataResolver","value":"<T as ArchiveUnsized>::MetadataResolver","parent":null,"children":[],"decl_id":null,"docs":" Alias for the metadata resolver for some [`ArchiveUnsized`] type.","sig":null,"attributes":[{"value":"/ Alias for the metadata resolver for some [`ArchiveUnsized`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31271,"byte_end":31340,"line_start":743,"line_end":743,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31341,"byte_end":31344,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":31345,"byte_end":31413,"line_start":745,"line_end":745,"column_start":1,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37272,"byte_end":37283,"line_start":15,"line_end":15,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38862,"byte_end":38873,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39974,"byte_end":39985,"line_start":100,"line_end":100,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40266,"byte_end":40277,"line_start":112,"line_end":112,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40401,"byte_end":40412,"line_start":119,"line_end":119,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40537,"byte_end":40548,"line_start":126,"line_end":126,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40787,"byte_end":40798,"line_start":136,"line_end":136,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40972,"byte_end":40983,"line_start":145,"line_end":145,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41146,"byte_end":41157,"line_start":152,"line_end":152,"column_start":46,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41226,"byte_end":41237,"line_start":154,"line_end":154,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41398,"byte_end":41409,"line_start":161,"line_end":161,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41641,"byte_end":41652,"line_start":169,"line_end":169,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41828,"byte_end":41839,"line_start":177,"line_end":177,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":42029,"byte_end":42040,"line_start":184,"line_end":184,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":44946,"byte_end":44959,"line_start":31,"line_end":31,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":45739,"byte_end":45749,"line_start":54,"line_end":54,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":46475,"byte_end":46479,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":46544,"byte_end":46548,"line_start":96,"line_end":96,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":46959,"byte_end":46973,"line_start":114,"line_end":114,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":47529,"byte_end":47547,"line_start":135,"line_end":135,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":48060,"byte_end":48070,"line_start":153,"line_end":153,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49636,"byte_end":49652,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55090,"byte_end":55106,"line_start":375,"line_end":375,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":63527,"byte_end":63543,"line_start":557,"line_end":557,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":63707,"byte_end":63723,"line_start":563,"line_end":563,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64110,"byte_end":64126,"line_start":584,"line_end":584,"column_start":27,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64169,"byte_end":64185,"line_start":586,"line_end":586,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64367,"byte_end":64383,"line_start":595,"line_end":595,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64546,"byte_end":64562,"line_start":602,"line_end":602,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64834,"byte_end":64850,"line_start":613,"line_end":613,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":65161,"byte_end":65168,"line_start":629,"line_end":629,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":65418,"byte_end":65425,"line_start":640,"line_end":640,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66523,"byte_end":66530,"line_start":671,"line_end":671,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66577,"byte_end":66584,"line_start":672,"line_end":672,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66756,"byte_end":66760,"line_start":679,"line_end":679,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67043,"byte_end":67047,"line_start":693,"line_end":693,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67094,"byte_end":67098,"line_start":694,"line_end":694,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67259,"byte_end":67263,"line_start":701,"line_end":701,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67553,"byte_end":67557,"line_start":715,"line_end":715,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67604,"byte_end":67608,"line_start":716,"line_end":716,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67773,"byte_end":67779,"line_start":723,"line_end":723,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":68069,"byte_end":68075,"line_start":737,"line_end":737,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":68122,"byte_end":68128,"line_start":738,"line_end":738,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69370,"byte_end":69386,"line_start":13,"line_end":13,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71332,"byte_end":71348,"line_start":79,"line_end":79,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":72134,"byte_end":72150,"line_start":102,"line_end":102,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73248,"byte_end":73265,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76137,"byte_end":76154,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":80754,"byte_end":80771,"line_start":242,"line_end":242,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82044,"byte_end":82059,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87118,"byte_end":87133,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":88963,"byte_end":88978,"line_start":272,"line_end":272,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89158,"byte_end":89173,"line_start":279,"line_end":279,"column_start":34,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89258,"byte_end":89273,"line_start":281,"line_end":281,"column_start":75,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89442,"byte_end":89457,"line_start":290,"line_end":290,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89865,"byte_end":89872,"line_start":308,"line_end":308,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90112,"byte_end":90119,"line_start":319,"line_end":319,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90677,"byte_end":90684,"line_start":342,"line_end":342,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90731,"byte_end":90738,"line_start":343,"line_end":343,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90906,"byte_end":90916,"line_start":351,"line_end":351,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91154,"byte_end":91164,"line_start":362,"line_end":362,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91716,"byte_end":91726,"line_start":385,"line_end":385,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91769,"byte_end":91779,"line_start":386,"line_end":386,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91960,"byte_end":91964,"line_start":394,"line_end":394,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92336,"byte_end":92340,"line_start":411,"line_end":411,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92383,"byte_end":92387,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92582,"byte_end":92589,"line_start":420,"line_end":420,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92998,"byte_end":93005,"line_start":437,"line_end":437,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93048,"byte_end":93055,"line_start":438,"line_end":438,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93225,"byte_end":93229,"line_start":446,"line_end":446,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93577,"byte_end":93581,"line_start":463,"line_end":463,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93624,"byte_end":93628,"line_start":464,"line_end":464,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93802,"byte_end":93808,"line_start":472,"line_end":472,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94158,"byte_end":94164,"line_start":489,"line_end":489,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94207,"byte_end":94213,"line_start":490,"line_end":490,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94401,"byte_end":94410,"line_start":498,"line_end":498,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94797,"byte_end":94806,"line_start":515,"line_end":515,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94849,"byte_end":94858,"line_start":516,"line_end":516,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96206,"byte_end":96221,"line_start":20,"line_end":20,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98575,"byte_end":98590,"line_start":107,"line_end":107,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98840,"byte_end":98855,"line_start":116,"line_end":116,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98977,"byte_end":98992,"line_start":123,"line_end":123,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99854,"byte_end":99870,"line_start":26,"line_end":26,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104964,"byte_end":104980,"line_start":222,"line_end":222,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107216,"byte_end":107232,"line_start":282,"line_end":282,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107412,"byte_end":107428,"line_start":288,"line_end":288,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107667,"byte_end":107674,"line_start":300,"line_end":300,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107914,"byte_end":107921,"line_start":311,"line_end":311,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108533,"byte_end":108540,"line_start":335,"line_end":335,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108587,"byte_end":108594,"line_start":336,"line_end":336,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108777,"byte_end":108781,"line_start":344,"line_end":344,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109060,"byte_end":109064,"line_start":358,"line_end":358,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109107,"byte_end":109111,"line_start":359,"line_end":359,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109283,"byte_end":109287,"line_start":367,"line_end":367,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109573,"byte_end":109577,"line_start":381,"line_end":381,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109620,"byte_end":109624,"line_start":382,"line_end":382,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109800,"byte_end":109806,"line_start":390,"line_end":390,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":110092,"byte_end":110098,"line_start":404,"line_end":404,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":110141,"byte_end":110147,"line_start":405,"line_end":405,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111360,"byte_end":111376,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114099,"byte_end":114115,"line_start":131,"line_end":131,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":115101,"byte_end":115117,"line_start":161,"line_end":161,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":115280,"byte_end":115296,"line_start":167,"line_end":167,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116129,"byte_end":116134,"line_start":20,"line_end":20,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116646,"byte_end":116651,"line_start":34,"line_end":34,"column_start":79,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116937,"byte_end":116942,"line_start":44,"line_end":44,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120577,"byte_end":120602,"line_start":24,"line_end":24,"column_start":22,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120781,"byte_end":120806,"line_start":28,"line_end":28,"column_start":22,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120833,"byte_end":120858,"line_start":30,"line_end":30,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121146,"byte_end":121171,"line_start":42,"line_end":42,"column_start":20,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121371,"byte_end":121391,"line_start":50,"line_end":50,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121613,"byte_end":121633,"line_start":60,"line_end":60,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121928,"byte_end":121948,"line_start":72,"line_end":72,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":122039,"byte_end":122059,"line_start":79,"line_end":79,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":122144,"byte_end":122164,"line_start":83,"line_end":83,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123300,"byte_end":123315,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125446,"byte_end":125461,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125551,"byte_end":125566,"line_start":86,"line_end":86,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125668,"byte_end":125683,"line_start":93,"line_end":93,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125818,"byte_end":125833,"line_start":100,"line_end":100,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125959,"byte_end":125974,"line_start":109,"line_end":109,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125999,"byte_end":126014,"line_start":111,"line_end":111,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126165,"byte_end":126180,"line_start":118,"line_end":118,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126321,"byte_end":126336,"line_start":127,"line_end":127,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126478,"byte_end":126493,"line_start":134,"line_end":134,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126630,"byte_end":126645,"line_start":141,"line_end":141,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126944,"byte_end":126959,"line_start":155,"line_end":155,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":128550,"byte_end":128553,"line_start":12,"line_end":12,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":128929,"byte_end":128932,"line_start":22,"line_end":22,"column_start":78,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":129148,"byte_end":129159,"line_start":29,"line_end":29,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":129820,"byte_end":129831,"line_start":48,"line_end":48,"column_start":82,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":130024,"byte_end":130035,"line_start":55,"line_end":55,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":130590,"byte_end":130598,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":131018,"byte_end":131026,"line_start":24,"line_end":24,"column_start":87,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":131360,"byte_end":131376,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":131932,"byte_end":131948,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":132325,"byte_end":132333,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":132829,"byte_end":132837,"line_start":11,"line_end":11,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":133239,"byte_end":133247,"line_start":24,"line_end":24,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":133525,"byte_end":133541,"line_start":34,"line_end":34,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":133971,"byte_end":133987,"line_start":50,"line_end":50,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":134275,"byte_end":134283,"line_start":61,"line_end":61,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/niche.rs","byte_start":134621,"byte_end":134638,"line_start":5,"line_end":5,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/niche.rs","byte_start":135098,"byte_end":135104,"line_start":24,"line_end":24,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":135862,"byte_end":135864,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":136026,"byte_end":136028,"line_start":26,"line_end":26,"column_start":50,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":136366,"byte_end":136368,"line_start":36,"line_end":36,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":136718,"byte_end":136728,"line_start":47,"line_end":47,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":137434,"byte_end":137444,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":137629,"byte_end":137633,"line_start":77,"line_end":77,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":138072,"byte_end":138076,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":138613,"byte_end":138627,"line_start":108,"line_end":108,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139156,"byte_end":139159,"line_start":128,"line_end":128,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139326,"byte_end":139329,"line_start":135,"line_end":135,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139670,"byte_end":139673,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":140102,"byte_end":140112,"line_start":157,"line_end":157,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":140694,"byte_end":140704,"line_start":174,"line_end":174,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":140965,"byte_end":140969,"line_start":187,"line_end":187,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":141411,"byte_end":141415,"line_start":202,"line_end":202,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":141955,"byte_end":141969,"line_start":218,"line_end":218,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":142870,"byte_end":142876,"line_start":8,"line_end":8,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143191,"byte_end":143197,"line_start":18,"line_end":18,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143465,"byte_end":143479,"line_start":28,"line_end":28,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143680,"byte_end":143694,"line_start":38,"line_end":38,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143851,"byte_end":143857,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144374,"byte_end":144385,"line_start":12,"line_end":12,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144557,"byte_end":144560,"line_start":19,"line_end":19,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144728,"byte_end":144739,"line_start":26,"line_end":26,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144942,"byte_end":144945,"line_start":33,"line_end":33,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":145134,"byte_end":145137,"line_start":40,"line_end":40,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":145497,"byte_end":145500,"line_start":50,"line_end":50,"column_start":79,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":145763,"byte_end":145774,"line_start":57,"line_end":57,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158318,"byte_end":158327,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158527,"byte_end":158536,"line_start":20,"line_end":20,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158707,"byte_end":158716,"line_start":27,"line_end":27,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158868,"byte_end":158873,"line_start":36,"line_end":36,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":159349,"byte_end":159354,"line_start":49,"line_end":49,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":159667,"byte_end":159675,"line_start":59,"line_end":59,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":160024,"byte_end":160037,"line_start":72,"line_end":72,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":160222,"byte_end":160236,"line_start":81,"line_end":81,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":160725,"byte_end":160739,"line_start":94,"line_end":94,"column_start":62,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":161037,"byte_end":161045,"line_start":104,"line_end":104,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":161464,"byte_end":161486,"line_start":119,"line_end":119,"column_start":59,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":161677,"byte_end":161686,"line_start":128,"line_end":128,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162072,"byte_end":162081,"line_start":139,"line_end":139,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162352,"byte_end":162360,"line_start":148,"line_end":148,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162671,"byte_end":162688,"line_start":160,"line_end":160,"column_start":54,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162843,"byte_end":162850,"line_start":169,"line_end":169,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163226,"byte_end":163233,"line_start":180,"line_end":180,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163496,"byte_end":163504,"line_start":189,"line_end":189,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163803,"byte_end":163818,"line_start":201,"line_end":201,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163976,"byte_end":163992,"line_start":210,"line_end":210,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":164386,"byte_end":164402,"line_start":221,"line_end":221,"column_start":62,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":164655,"byte_end":164663,"line_start":230,"line_end":230,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":165040,"byte_end":165064,"line_start":244,"line_end":244,"column_start":61,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2021}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/option.rs","byte_start":165802,"byte_end":165808,"line_start":17,"line_end":17,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/option.rs","byte_start":166787,"byte_end":166793,"line_start":45,"line_end":45,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/option.rs","byte_start":167074,"byte_end":167088,"line_start":54,"line_end":54,"column_start":70,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173213,"byte_end":173224,"line_start":186,"line_end":186,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173448,"byte_end":173459,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173649,"byte_end":173660,"line_start":201,"line_end":201,"column_start":74,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173822,"byte_end":173835,"line_start":209,"line_end":209,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":174044,"byte_end":174057,"line_start":217,"line_end":217,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":174232,"byte_end":174245,"line_start":224,"line_end":224,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":174852,"byte_end":174860,"line_start":250,"line_end":250,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":175483,"byte_end":175491,"line_start":276,"line_end":276,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":175746,"byte_end":175758,"line_start":287,"line_end":287,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176103,"byte_end":176115,"line_start":299,"line_end":299,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176289,"byte_end":176297,"line_start":306,"line_end":306,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176612,"byte_end":176624,"line_start":317,"line_end":317,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176969,"byte_end":176981,"line_start":329,"line_end":329,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177155,"byte_end":177163,"line_start":336,"line_end":336,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177418,"byte_end":177429,"line_start":346,"line_end":346,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177749,"byte_end":177760,"line_start":357,"line_end":357,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177953,"byte_end":177961,"line_start":365,"line_end":365,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":178177,"byte_end":178188,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":178508,"byte_end":178519,"line_start":386,"line_end":386,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":178712,"byte_end":178720,"line_start":394,"line_end":394,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/result.rs","byte_start":179666,"byte_end":179672,"line_start":17,"line_end":17,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/result.rs","byte_start":180888,"byte_end":180894,"line_start":48,"line_end":48,"column_start":79,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/result.rs","byte_start":181219,"byte_end":181233,"line_start":58,"line_end":58,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":181897,"byte_end":181905,"line_start":4,"line_end":4,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":182201,"byte_end":182209,"line_start":14,"line_end":14,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":182379,"byte_end":182395,"line_start":21,"line_end":21,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":182585,"byte_end":182593,"line_start":28,"line_end":28,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":146840,"byte_end":146841,"line_start":17,"line_end":17,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":147016,"byte_end":147017,"line_start":24,"line_end":24,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":147328,"byte_end":147329,"line_start":39,"line_end":39,"column_start":71,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":157013,"byte_end":157021,"line_start":350,"line_end":350,"column_start":84,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":192542,"byte_end":192549,"line_start":12,"line_end":12,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":192933,"byte_end":192940,"line_start":25,"line_end":25,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":193409,"byte_end":193424,"line_start":39,"line_end":39,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":194012,"byte_end":194027,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":194416,"byte_end":194423,"line_start":69,"line_end":69,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":194918,"byte_end":194925,"line_start":12,"line_end":12,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":195296,"byte_end":195303,"line_start":25,"line_end":25,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":195657,"byte_end":195672,"line_start":37,"line_end":37,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":196208,"byte_end":196223,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":196549,"byte_end":196556,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":197120,"byte_end":197124,"line_start":14,"line_end":14,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":197456,"byte_end":197460,"line_start":30,"line_end":30,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":197720,"byte_end":197724,"line_start":39,"line_end":39,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":198153,"byte_end":198161,"line_start":53,"line_end":53,"column_start":86,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":198749,"byte_end":198764,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":198927,"byte_end":198934,"line_start":81,"line_end":81,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":199086,"byte_end":199093,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":199417,"byte_end":199424,"line_start":98,"line_end":98,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":199662,"byte_end":199670,"line_start":105,"line_end":105,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":200700,"byte_end":200716,"line_start":16,"line_end":16,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203689,"byte_end":203705,"line_start":100,"line_end":100,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203846,"byte_end":203854,"line_start":107,"line_end":107,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203986,"byte_end":204002,"line_start":114,"line_end":114,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204179,"byte_end":204187,"line_start":121,"line_end":121,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204341,"byte_end":204349,"line_start":128,"line_end":128,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204620,"byte_end":204628,"line_start":138,"line_end":138,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204798,"byte_end":204814,"line_start":145,"line_end":145,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204954,"byte_end":204970,"line_start":154,"line_end":154,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206761,"byte_end":206777,"line_start":211,"line_end":211,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206918,"byte_end":206926,"line_start":218,"line_end":218,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207058,"byte_end":207074,"line_start":225,"line_end":225,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207251,"byte_end":207259,"line_start":232,"line_end":232,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207413,"byte_end":207421,"line_start":239,"line_end":239,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207693,"byte_end":207701,"line_start":249,"line_end":249,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207871,"byte_end":207887,"line_start":256,"line_end":256,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208025,"byte_end":208039,"line_start":265,"line_end":265,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209486,"byte_end":209500,"line_start":309,"line_end":309,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210081,"byte_end":210087,"line_start":331,"line_end":331,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210215,"byte_end":210229,"line_start":338,"line_end":338,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210404,"byte_end":210410,"line_start":345,"line_end":345,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210800,"byte_end":210806,"line_start":365,"line_end":365,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":211937,"byte_end":211943,"line_start":394,"line_end":394,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212276,"byte_end":212290,"line_start":404,"line_end":404,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212645,"byte_end":212665,"line_start":416,"line_end":416,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212908,"byte_end":212928,"line_start":424,"line_end":424,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2859},{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213138,"byte_end":213158,"line_start":432,"line_end":432,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213317,"byte_end":213329,"line_start":439,"line_end":439,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213469,"byte_end":213489,"line_start":446,"line_end":446,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213684,"byte_end":213696,"line_start":453,"line_end":453,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213854,"byte_end":213866,"line_start":460,"line_end":460,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214271,"byte_end":214283,"line_start":473,"line_end":473,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214457,"byte_end":214477,"line_start":480,"line_end":480,"column_start":61,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214711,"byte_end":214731,"line_start":490,"line_end":490,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215067,"byte_end":215087,"line_start":503,"line_end":503,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215297,"byte_end":215317,"line_start":511,"line_end":511,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215476,"byte_end":215488,"line_start":518,"line_end":518,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215628,"byte_end":215648,"line_start":525,"line_end":525,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215843,"byte_end":215855,"line_start":532,"line_end":532,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":216013,"byte_end":216025,"line_start":539,"line_end":539,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":216630,"byte_end":216642,"line_start":556,"line_end":556,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":216816,"byte_end":216836,"line_start":563,"line_end":563,"column_start":61,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217161,"byte_end":217179,"line_start":578,"line_end":578,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217863,"byte_end":217881,"line_start":598,"line_end":598,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218084,"byte_end":218102,"line_start":606,"line_end":606,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218254,"byte_end":218264,"line_start":613,"line_end":613,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218400,"byte_end":218418,"line_start":620,"line_end":620,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218606,"byte_end":218616,"line_start":627,"line_end":627,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":219038,"byte_end":219048,"line_start":647,"line_end":647,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":220215,"byte_end":220225,"line_start":676,"line_end":676,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":220578,"byte_end":220596,"line_start":686,"line_end":686,"column_start":59,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/time.rs","byte_start":221807,"byte_end":221823,"line_start":4,"line_end":4,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/time.rs","byte_start":222012,"byte_end":222020,"line_start":11,"line_end":11,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":222477,"byte_end":222484,"line_start":12,"line_end":12,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":222868,"byte_end":222875,"line_start":25,"line_end":25,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":223344,"byte_end":223359,"line_start":39,"line_end":39,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":223947,"byte_end":223962,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":224351,"byte_end":224358,"line_start":69,"line_end":69,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":226542,"byte_end":226549,"line_start":12,"line_end":12,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":226920,"byte_end":226927,"line_start":25,"line_end":25,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":227281,"byte_end":227296,"line_start":37,"line_end":37,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":227832,"byte_end":227847,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":228173,"byte_end":228180,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230310,"byte_end":230326,"line_start":13,"line_end":13,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230772,"byte_end":230788,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231813,"byte_end":231827,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3107},{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232640,"byte_end":232660,"line_start":82,"line_end":82,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233421,"byte_end":233441,"line_start":107,"line_end":107,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234661,"byte_end":234679,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236380,"byte_end":236397,"line_start":24,"line_end":24,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238528,"byte_end":238545,"line_start":99,"line_end":99,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240144,"byte_end":240161,"line_start":150,"line_end":150,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240474,"byte_end":240491,"line_start":163,"line_end":163,"column_start":46,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240560,"byte_end":240577,"line_start":165,"line_end":165,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240740,"byte_end":240757,"line_start":172,"line_end":172,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240939,"byte_end":240956,"line_start":179,"line_end":179,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241129,"byte_end":241146,"line_start":186,"line_end":186,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250203,"byte_end":250216,"line_start":19,"line_end":19,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250420,"byte_end":250433,"line_start":28,"line_end":28,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3305},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251036,"byte_end":251049,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3310},{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251701,"byte_end":251723,"line_start":74,"line_end":74,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251942,"byte_end":251964,"line_start":84,"line_end":84,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3317},{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252567,"byte_end":252589,"line_start":105,"line_end":105,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253141,"byte_end":253158,"line_start":126,"line_end":126,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253334,"byte_end":253351,"line_start":134,"line_end":134,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253647,"byte_end":253664,"line_start":146,"line_end":146,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254198,"byte_end":254213,"line_start":167,"line_end":167,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254387,"byte_end":254402,"line_start":175,"line_end":175,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254698,"byte_end":254713,"line_start":187,"line_end":187,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3344},{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255272,"byte_end":255296,"line_start":208,"line_end":208,"column_start":36,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255471,"byte_end":255495,"line_start":216,"line_end":216,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255791,"byte_end":255815,"line_start":228,"line_end":228,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256740,"byte_end":256754,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259309,"byte_end":259323,"line_start":114,"line_end":114,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259717,"byte_end":259731,"line_start":125,"line_end":125,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260136,"byte_end":260150,"line_start":136,"line_end":136,"column_start":20,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260193,"byte_end":260207,"line_start":138,"line_end":138,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260344,"byte_end":260358,"line_start":145,"line_end":145,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3413}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260514,"byte_end":260528,"line_start":152,"line_end":152,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260675,"byte_end":260689,"line_start":159,"line_end":159,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260886,"byte_end":260900,"line_start":166,"line_end":166,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261292,"byte_end":261298,"line_start":181,"line_end":181,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3427}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261740,"byte_end":261744,"line_start":197,"line_end":197,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261965,"byte_end":261969,"line_start":207,"line_end":207,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262415,"byte_end":262422,"line_start":222,"line_end":222,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262647,"byte_end":262654,"line_start":232,"line_end":232,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263759,"byte_end":263769,"line_start":20,"line_end":20,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265399,"byte_end":265409,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265539,"byte_end":265549,"line_start":78,"line_end":78,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265693,"byte_end":265703,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265870,"byte_end":265880,"line_start":92,"line_end":92,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266060,"byte_end":266070,"line_start":101,"line_end":101,"column_start":69,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266239,"byte_end":266249,"line_start":108,"line_end":108,"column_start":49,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266324,"byte_end":266334,"line_start":110,"line_end":110,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266486,"byte_end":266496,"line_start":116,"line_end":116,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266653,"byte_end":266663,"line_start":122,"line_end":122,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266909,"byte_end":266919,"line_start":132,"line_end":132,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267176,"byte_end":267186,"line_start":142,"line_end":142,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267720,"byte_end":267734,"line_start":165,"line_end":165,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270113,"byte_end":270127,"line_start":233,"line_end":233,"column_start":65,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271563,"byte_end":271574,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272004,"byte_end":272015,"line_start":36,"line_end":36,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276775,"byte_end":276784,"line_start":159,"line_end":159,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278848,"byte_end":278857,"line_start":224,"line_end":224,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279069,"byte_end":279078,"line_start":232,"line_end":232,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3671}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280859,"byte_end":280865,"line_start":273,"line_end":273,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281964,"byte_end":281970,"line_start":304,"line_end":304,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3694},{"krate":0,"index":3695}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282983,"byte_end":282989,"line_start":338,"line_end":338,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":286092,"byte_end":286098,"line_start":433,"line_end":433,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":286430,"byte_end":286436,"line_start":445,"line_end":445,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3717}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287513,"byte_end":287527,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289091,"byte_end":289105,"line_start":73,"line_end":73,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289575,"byte_end":289589,"line_start":87,"line_end":87,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290353,"byte_end":290357,"line_start":110,"line_end":110,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290578,"byte_end":290582,"line_start":120,"line_end":120,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290972,"byte_end":290979,"line_start":135,"line_end":135,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3780},{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291204,"byte_end":291211,"line_start":145,"line_end":145,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3785}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291328,"byte_end":291342,"line_start":151,"line_end":151,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291403,"byte_end":291417,"line_start":153,"line_end":153,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3792}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291565,"byte_end":291579,"line_start":160,"line_end":160,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3797}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291747,"byte_end":291761,"line_start":167,"line_end":167,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3801}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291926,"byte_end":291940,"line_start":174,"line_end":174,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":292158,"byte_end":292172,"line_start":181,"line_end":181,"column_start":74,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":3811}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":292813,"byte_end":292819,"line_start":203,"line_end":203,"column_start":82,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308697,"byte_end":308714,"line_start":30,"line_end":30,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3885}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":309048,"byte_end":309065,"line_start":44,"line_end":44,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":309200,"byte_end":309217,"line_start":53,"line_end":53,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3891}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":309322,"byte_end":309339,"line_start":57,"line_end":57,"column_start":68,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311113,"byte_end":311124,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3903}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311849,"byte_end":311860,"line_start":142,"line_end":142,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3906}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311956,"byte_end":311967,"line_start":148,"line_end":148,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312078,"byte_end":312089,"line_start":152,"line_end":152,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3912},{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313477,"byte_end":313494,"line_start":191,"line_end":191,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313665,"byte_end":313682,"line_start":195,"line_end":195,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313709,"byte_end":313726,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3917}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":314789,"byte_end":314806,"line_start":226,"line_end":226,"column_start":20,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315307,"byte_end":315319,"line_start":241,"line_end":241,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315487,"byte_end":315499,"line_start":245,"line_end":245,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315509,"byte_end":315521,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315955,"byte_end":315967,"line_start":265,"line_end":265,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":316175,"byte_end":316187,"line_start":275,"line_end":275,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3931}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":316264,"byte_end":316276,"line_start":281,"line_end":281,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3933}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":316340,"byte_end":316352,"line_start":285,"line_end":285,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318152,"byte_end":318175,"line_start":333,"line_end":333,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318352,"byte_end":318375,"line_start":337,"line_end":337,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318402,"byte_end":318425,"line_start":339,"line_end":339,"column_start":23,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318713,"byte_end":318736,"line_start":351,"line_end":351,"column_start":20,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319096,"byte_end":319114,"line_start":362,"line_end":362,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319288,"byte_end":319306,"line_start":366,"line_end":366,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319316,"byte_end":319334,"line_start":368,"line_end":368,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3949}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319528,"byte_end":319546,"line_start":378,"line_end":378,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319637,"byte_end":319655,"line_start":385,"line_end":385,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319736,"byte_end":319754,"line_start":389,"line_end":389,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321275,"byte_end":321296,"line_start":26,"line_end":26,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321804,"byte_end":321825,"line_start":46,"line_end":46,"column_start":20,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322948,"byte_end":322964,"line_start":90,"line_end":90,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323608,"byte_end":323624,"line_start":112,"line_end":112,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4000}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323733,"byte_end":323749,"line_start":119,"line_end":119,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323834,"byte_end":323850,"line_start":123,"line_end":123,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":325390,"byte_end":325411,"line_start":173,"line_end":173,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326189,"byte_end":326210,"line_start":197,"line_end":197,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326354,"byte_end":326367,"line_start":206,"line_end":206,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326783,"byte_end":326796,"line_start":223,"line_end":223,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326891,"byte_end":326904,"line_start":229,"line_end":229,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":327016,"byte_end":327029,"line_start":233,"line_end":233,"column_start":64,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":328782,"byte_end":328797,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329000,"byte_end":329015,"line_start":294,"line_end":294,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329187,"byte_end":329202,"line_start":303,"line_end":303,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4038}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329297,"byte_end":329312,"line_start":307,"line_end":307,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330079,"byte_end":330093,"line_start":334,"line_end":334,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331622,"byte_end":331636,"line_start":377,"line_end":377,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331711,"byte_end":331725,"line_start":381,"line_end":381,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":332539,"byte_end":332553,"line_start":406,"line_end":406,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333695,"byte_end":333710,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334277,"byte_end":334292,"line_start":45,"line_end":45,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334363,"byte_end":334378,"line_start":49,"line_end":49,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4085},{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301285,"byte_end":301309,"line_start":37,"line_end":37,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301832,"byte_end":301856,"line_start":56,"line_end":56,"column_start":29,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302498,"byte_end":302517,"line_start":80,"line_end":80,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303267,"byte_end":303286,"line_start":106,"line_end":106,"column_start":54,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303537,"byte_end":303556,"line_start":117,"line_end":117,"column_start":58,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303705,"byte_end":303724,"line_start":121,"line_end":121,"column_start":62,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4164},{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":305399,"byte_end":305418,"line_start":179,"line_end":179,"column_start":66,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":4178},{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306005,"byte_end":306024,"line_start":196,"line_end":196,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341902,"byte_end":341920,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335343,"byte_end":335357,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336878,"byte_end":336892,"line_start":75,"line_end":75,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336992,"byte_end":337006,"line_start":82,"line_end":82,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337105,"byte_end":337119,"line_start":89,"line_end":89,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4370}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337265,"byte_end":337279,"line_start":96,"line_end":96,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4372},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337412,"byte_end":337426,"line_start":105,"line_end":105,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337571,"byte_end":337585,"line_start":112,"line_end":112,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337610,"byte_end":337624,"line_start":114,"line_end":114,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338224,"byte_end":338238,"line_start":141,"line_end":141,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4382}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338376,"byte_end":338390,"line_start":148,"line_end":148,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338517,"byte_end":338531,"line_start":155,"line_end":155,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338699,"byte_end":338713,"line_start":162,"line_end":162,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4388}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338849,"byte_end":338863,"line_start":169,"line_end":169,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346750,"byte_end":346766,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362318,"byte_end":362328,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362522,"byte_end":362532,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377236,"byte_end":377239,"line_start":536,"line_end":536,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4488}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377358,"byte_end":377368,"line_start":543,"line_end":543,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4490}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377483,"byte_end":377493,"line_start":550,"line_end":550,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377597,"byte_end":377607,"line_start":557,"line_end":557,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4494}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377714,"byte_end":377724,"line_start":564,"line_end":564,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377837,"byte_end":377847,"line_start":571,"line_end":571,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378160,"byte_end":378170,"line_start":583,"line_end":583,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378307,"byte_end":378317,"line_start":590,"line_end":590,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378405,"byte_end":378415,"line_start":597,"line_end":597,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4504},{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378547,"byte_end":378557,"line_start":606,"line_end":606,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378708,"byte_end":378718,"line_start":613,"line_end":613,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4510},{"krate":0,"index":4511}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378933,"byte_end":378943,"line_start":622,"line_end":622,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379113,"byte_end":379123,"line_start":630,"line_end":630,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379820,"byte_end":379830,"line_start":659,"line_end":659,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379911,"byte_end":379921,"line_start":662,"line_end":662,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379941,"byte_end":379951,"line_start":664,"line_end":664,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":380936,"byte_end":380946,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381255,"byte_end":381265,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381396,"byte_end":381406,"line_start":33,"line_end":33,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381422,"byte_end":381432,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390550,"byte_end":390560,"line_start":310,"line_end":310,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391157,"byte_end":391167,"line_start":329,"line_end":329,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4598}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391286,"byte_end":391296,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391404,"byte_end":391414,"line_start":343,"line_end":343,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391525,"byte_end":391535,"line_start":350,"line_end":350,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391670,"byte_end":391680,"line_start":357,"line_end":357,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391826,"byte_end":391836,"line_start":364,"line_end":364,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4613},{"krate":0,"index":4614}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391978,"byte_end":391988,"line_start":373,"line_end":373,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4617}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392149,"byte_end":392159,"line_start":380,"line_end":380,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392383,"byte_end":392393,"line_start":389,"line_end":389,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4626}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392834,"byte_end":392839,"line_start":406,"line_end":406,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393012,"byte_end":393017,"line_start":413,"line_end":413,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393204,"byte_end":393209,"line_start":421,"line_end":421,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4642}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393304,"byte_end":393309,"line_start":427,"line_end":427,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393641,"byte_end":393646,"line_start":443,"line_end":443,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4651}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393850,"byte_end":393855,"line_start":452,"line_end":452,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":394138,"byte_end":394147,"line_start":458,"line_end":458,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":395422,"byte_end":395427,"line_start":493,"line_end":493,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":395477,"byte_end":395482,"line_start":495,"line_end":495,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358562,"byte_end":358574,"line_start":224,"line_end":224,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358668,"byte_end":358680,"line_start":230,"line_end":230,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4741},{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358826,"byte_end":358838,"line_start":239,"line_end":239,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358975,"byte_end":358987,"line_start":246,"line_end":246,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359109,"byte_end":359121,"line_start":253,"line_end":253,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4752}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407319,"byte_end":407333,"line_start":24,"line_end":24,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4808},{"krate":0,"index":4811},{"krate":0,"index":4813}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410122,"byte_end":410136,"line_start":108,"line_end":108,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410248,"byte_end":410262,"line_start":115,"line_end":115,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4821}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410368,"byte_end":410382,"line_start":122,"line_end":122,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4825}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410542,"byte_end":410556,"line_start":131,"line_end":131,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4829},{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410770,"byte_end":410784,"line_start":140,"line_end":140,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410966,"byte_end":410980,"line_start":147,"line_end":147,"column_start":64,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":4840}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":411320,"byte_end":411334,"line_start":161,"line_end":161,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4851}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":411657,"byte_end":411671,"line_start":175,"line_end":175,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":411846,"byte_end":411860,"line_start":182,"line_end":182,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":412017,"byte_end":412031,"line_start":189,"line_end":189,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4864}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396612,"byte_end":396623,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4933},{"krate":0,"index":4936},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4952}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":401674,"byte_end":401685,"line_start":183,"line_end":183,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":401793,"byte_end":401804,"line_start":190,"line_end":190,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4965}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":401923,"byte_end":401934,"line_start":197,"line_end":197,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402087,"byte_end":402098,"line_start":203,"line_end":203,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4971},{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402233,"byte_end":402244,"line_start":212,"line_end":212,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402287,"byte_end":402298,"line_start":214,"line_end":214,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4977}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402457,"byte_end":402468,"line_start":221,"line_end":221,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4982},{"krate":0,"index":4983}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402650,"byte_end":402661,"line_start":230,"line_end":230,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402842,"byte_end":402853,"line_start":237,"line_end":237,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4990}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403041,"byte_end":403052,"line_start":244,"line_end":244,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4996}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403384,"byte_end":403395,"line_start":258,"line_end":258,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5007}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403718,"byte_end":403729,"line_start":272,"line_end":272,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5014}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403929,"byte_end":403940,"line_start":279,"line_end":279,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5017}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":432389,"byte_end":432396,"line_start":31,"line_end":31,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":432773,"byte_end":432780,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"value":"","parent":null,"children":[{"krate":0,"index":5149}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":433032,"byte_end":433039,"line_start":53,"line_end":53,"column_start":91,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":5154}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":433298,"byte_end":433305,"line_start":63,"line_end":63,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":433745,"byte_end":433752,"line_start":79,"line_end":79,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5165}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":434042,"byte_end":434049,"line_start":90,"line_end":90,"column_start":79,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5170}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":434402,"byte_end":434409,"line_start":105,"line_end":105,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5175}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":434799,"byte_end":434806,"line_start":120,"line_end":120,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5179}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":435103,"byte_end":435110,"line_start":130,"line_end":130,"column_start":85,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":5183}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":435487,"byte_end":435494,"line_start":145,"line_end":145,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":435943,"byte_end":435950,"line_start":160,"line_end":160,"column_start":74,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":436289,"byte_end":436296,"line_start":170,"line_end":170,"column_start":91,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":436616,"byte_end":436621,"line_start":183,"line_end":183,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":437012,"byte_end":437017,"line_start":197,"line_end":197,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5218}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":437493,"byte_end":437498,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":438118,"byte_end":438123,"line_start":238,"line_end":238,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":438485,"byte_end":438490,"line_start":252,"line_end":252,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":438842,"byte_end":438847,"line_start":262,"line_end":262,"column_start":74,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":5237}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":439326,"byte_end":439331,"line_start":282,"line_end":282,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":439786,"byte_end":439791,"line_start":299,"line_end":299,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5246}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":440196,"byte_end":440201,"line_start":313,"line_end":313,"column_start":83,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":5250}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":440674,"byte_end":440686,"line_start":333,"line_end":333,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5255}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":441038,"byte_end":441050,"line_start":347,"line_end":347,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":441544,"byte_end":441556,"line_start":362,"line_end":362,"column_start":69,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5266}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":442242,"byte_end":442254,"line_start":384,"line_end":384,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":442632,"byte_end":442644,"line_start":398,"line_end":398,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":443153,"byte_end":443165,"line_start":413,"line_end":413,"column_start":73,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":443916,"byte_end":443928,"line_start":438,"line_end":438,"column_start":63,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":444347,"byte_end":444359,"line_start":452,"line_end":452,"column_start":62,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5307}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":444910,"byte_end":444913,"line_start":474,"line_end":474,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":445278,"byte_end":445281,"line_start":488,"line_end":488,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":445775,"byte_end":445778,"line_start":503,"line_end":503,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5326}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":450157,"byte_end":450163,"line_start":95,"line_end":95,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":450665,"byte_end":450671,"line_start":113,"line_end":113,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5405}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":450954,"byte_end":450960,"line_start":122,"line_end":122,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5408}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":451761,"byte_end":451767,"line_start":148,"line_end":148,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":452269,"byte_end":452275,"line_start":166,"line_end":166,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":452534,"byte_end":452540,"line_start":174,"line_end":174,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":453808,"byte_end":453814,"line_start":22,"line_end":22,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":454163,"byte_end":454169,"line_start":37,"line_end":37,"column_start":70,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5556}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":454389,"byte_end":454397,"line_start":46,"line_end":46,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":454820,"byte_end":454828,"line_start":61,"line_end":61,"column_start":86,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":5565}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":455068,"byte_end":455073,"line_start":70,"line_end":70,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":455493,"byte_end":455498,"line_start":85,"line_end":85,"column_start":85,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":5574}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":455752,"byte_end":455757,"line_start":92,"line_end":92,"column_start":79,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5578}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":457564,"byte_end":457569,"line_start":150,"line_end":150,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":458020,"byte_end":458025,"line_start":166,"line_end":166,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5589}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":458267,"byte_end":458272,"line_start":174,"line_end":174,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":459249,"byte_end":459254,"line_start":202,"line_end":202,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":459705,"byte_end":459710,"line_start":218,"line_end":218,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":459952,"byte_end":459957,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":461016,"byte_end":461024,"line_start":24,"line_end":24,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":461542,"byte_end":461550,"line_start":41,"line_end":41,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5727}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":461962,"byte_end":461970,"line_start":55,"line_end":55,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":462173,"byte_end":462181,"line_start":62,"line_end":62,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":462697,"byte_end":462705,"line_start":79,"line_end":79,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5737}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":463115,"byte_end":463123,"line_start":93,"line_end":93,"column_start":76,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5740}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":463346,"byte_end":463350,"line_start":102,"line_end":102,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":464276,"byte_end":464280,"line_start":124,"line_end":124,"column_start":76,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":464618,"byte_end":464622,"line_start":137,"line_end":137,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5755}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":464915,"byte_end":464919,"line_start":148,"line_end":148,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":465849,"byte_end":465853,"line_start":170,"line_end":170,"column_start":77,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5764}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":466193,"byte_end":466197,"line_start":183,"line_end":183,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":466518,"byte_end":466523,"line_start":196,"line_end":196,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":466912,"byte_end":466917,"line_start":210,"line_end":210,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5781}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":467391,"byte_end":467396,"line_start":228,"line_end":228,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5787}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":468019,"byte_end":468024,"line_start":251,"line_end":251,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":468384,"byte_end":468389,"line_start":265,"line_end":265,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5796}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":468739,"byte_end":468744,"line_start":275,"line_end":275,"column_start":73,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5800}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":469203,"byte_end":469216,"line_start":295,"line_end":295,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":469705,"byte_end":469718,"line_start":312,"line_end":312,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5807}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":470084,"byte_end":470097,"line_start":324,"line_end":324,"column_start":81,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":5811}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414872,"byte_end":414876,"line_start":52,"line_end":52,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415406,"byte_end":415410,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5847}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415580,"byte_end":415584,"line_start":75,"line_end":75,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5851}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419102,"byte_end":419106,"line_start":194,"line_end":194,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5862}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419740,"byte_end":419744,"line_start":210,"line_end":210,"column_start":80,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5871}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420239,"byte_end":420240,"line_start":223,"line_end":223,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5882}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420684,"byte_end":420693,"line_start":243,"line_end":243,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5885}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420841,"byte_end":420850,"line_start":251,"line_end":251,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5888},{"krate":0,"index":5889}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424865,"byte_end":424878,"line_start":418,"line_end":418,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425041,"byte_end":425054,"line_start":425,"line_end":425,"column_start":30,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426282,"byte_end":426291,"line_start":465,"line_end":465,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5895}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426454,"byte_end":426463,"line_start":472,"line_end":472,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429977,"byte_end":429995,"line_start":598,"line_end":598,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5898}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430180,"byte_end":430198,"line_start":605,"line_end":605,"column_start":30,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9070,"byte_end":9080,"line_start":204,"line_end":204,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5923}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9147,"byte_end":9157,"line_start":208,"line_end":208,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5925}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7280,"byte_end":7286,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7297,"byte_end":7302,"line_start":144,"line_end":144,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7312,"byte_end":7323,"line_start":145,"line_end":145,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":124}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43755,"byte_end":43764,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43774,"byte_end":43783,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":435}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43793,"byte_end":43803,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":492}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43813,"byte_end":43821,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":569}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43831,"byte_end":43839,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":838}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43923,"byte_end":43932,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":903}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43942,"byte_end":43951,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1102}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/mod.rs","byte_start":43961,"byte_end":43965,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1187}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7372,"byte_end":7374,"line_start":148,"line_end":148,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1233}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117256,"byte_end":117269,"line_start":3,"line_end":3,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1234}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7596,"byte_end":7599,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1301}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7620,"byte_end":7623,"line_start":154,"line_end":154,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3096}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7633,"byte_end":7638,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3121}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/mod.rs","byte_start":235744,"byte_end":235754,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":3122}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/mod.rs","byte_start":235764,"byte_end":235778,"line_start":5,"line_end":5,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":3230}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7648,"byte_end":7651,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3285}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7661,"byte_end":7667,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3357}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7677,"byte_end":7679,"line_start":158,"line_end":158,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3454}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7689,"byte_end":7696,"line_start":159,"line_end":159,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3616}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7706,"byte_end":7712,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3718}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7722,"byte_end":7725,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3818}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293201,"byte_end":293212,"line_start":3,"line_end":3,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":3819}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7735,"byte_end":7741,"line_start":162,"line_end":162,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4254}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":334736,"byte_end":334740,"line_start":3,"line_end":3,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4255}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7751,"byte_end":7755,"line_start":163,"line_end":163,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4395}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7765,"byte_end":7769,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4418}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7830,"byte_end":7833,"line_start":167,"line_end":167,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4758}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":7843,"byte_end":7847,"line_start":168,"line_end":168,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5023}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":37272,"byte_end":37283,"line_start":15,"line_end":15,"column_start":34,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":38862,"byte_end":38873,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":39974,"byte_end":39985,"line_start":100,"line_end":100,"column_start":34,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40266,"byte_end":40277,"line_start":112,"line_end":112,"column_start":47,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40401,"byte_end":40412,"line_start":119,"line_end":119,"column_start":48,"column_end":59},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40537,"byte_end":40548,"line_start":126,"line_end":126,"column_start":49,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40787,"byte_end":40798,"line_start":136,"line_end":136,"column_start":44,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":40972,"byte_end":40983,"line_start":145,"line_end":145,"column_start":66,"column_end":77},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41146,"byte_end":41157,"line_start":152,"line_end":152,"column_start":46,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41226,"byte_end":41237,"line_start":154,"line_end":154,"column_start":62,"column_end":73},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41398,"byte_end":41409,"line_start":161,"line_end":161,"column_start":48,"column_end":59},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41641,"byte_end":41652,"line_start":169,"line_end":169,"column_start":35,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":41828,"byte_end":41839,"line_start":177,"line_end":177,"column_start":62,"column_end":73},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/boxed.rs","byte_start":42029,"byte_end":42040,"line_start":184,"line_end":184,"column_start":51,"column_end":62},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":44946,"byte_end":44959,"line_start":31,"line_end":31,"column_start":48,"column_end":61},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":175},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":45739,"byte_end":45749,"line_start":54,"line_end":54,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":46475,"byte_end":46479,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":197},"to":{"krate":20,"index":42}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":46544,"byte_end":46548,"line_start":96,"line_end":96,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":5942}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":46959,"byte_end":46973,"line_start":114,"line_end":114,"column_start":18,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":213},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":47529,"byte_end":47547,"line_start":135,"line_end":135,"column_start":35,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":221},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":48060,"byte_end":48070,"line_start":153,"line_end":153,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":49636,"byte_end":49652,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":55090,"byte_end":55106,"line_start":375,"line_end":375,"column_start":16,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":63527,"byte_end":63543,"line_start":557,"line_end":557,"column_start":51,"column_end":67},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":63707,"byte_end":63723,"line_start":563,"line_end":563,"column_start":32,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64110,"byte_end":64126,"line_start":584,"line_end":584,"column_start":27,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64169,"byte_end":64185,"line_start":586,"line_end":586,"column_start":33,"column_end":49},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64367,"byte_end":64383,"line_start":595,"line_end":595,"column_start":30,"column_end":46},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64546,"byte_end":64562,"line_start":602,"line_end":602,"column_start":48,"column_end":64},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":64834,"byte_end":64850,"line_start":613,"line_end":613,"column_start":51,"column_end":67},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":65161,"byte_end":65168,"line_start":629,"line_end":629,"column_start":16,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":65418,"byte_end":65425,"line_start":640,"line_end":640,"column_start":29,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66523,"byte_end":66530,"line_start":671,"line_end":671,"column_start":38,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66577,"byte_end":66584,"line_start":672,"line_end":672,"column_start":34,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":66756,"byte_end":66760,"line_start":679,"line_end":679,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67043,"byte_end":67047,"line_start":693,"line_end":693,"column_start":38,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67094,"byte_end":67098,"line_start":694,"line_end":694,"column_start":34,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67259,"byte_end":67263,"line_start":701,"line_end":701,"column_start":29,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67553,"byte_end":67557,"line_start":715,"line_end":715,"column_start":38,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67604,"byte_end":67608,"line_start":716,"line_end":716,"column_start":34,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":67773,"byte_end":67779,"line_start":723,"line_end":723,"column_start":29,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":68069,"byte_end":68075,"line_start":737,"line_end":737,"column_start":38,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_map/mod.rs","byte_start":68122,"byte_end":68128,"line_start":738,"line_end":738,"column_start":34,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":69370,"byte_end":69386,"line_start":13,"line_end":13,"column_start":9,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":71332,"byte_end":71348,"line_start":79,"line_end":79,"column_start":13,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/btree_set.rs","byte_start":72134,"byte_end":72150,"line_start":102,"line_end":102,"column_start":36,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5968},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":73248,"byte_end":73265,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":76137,"byte_end":76154,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_index/mod.rs","byte_start":80754,"byte_end":80771,"line_start":242,"line_end":242,"column_start":21,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":82044,"byte_end":82059,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":87118,"byte_end":87133,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":88963,"byte_end":88978,"line_start":272,"line_end":272,"column_start":51,"column_end":66},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89158,"byte_end":89173,"line_start":279,"line_end":279,"column_start":34,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89258,"byte_end":89273,"line_start":281,"line_end":281,"column_start":75,"column_end":90},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89442,"byte_end":89457,"line_start":290,"line_end":290,"column_start":48,"column_end":63},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":89865,"byte_end":89872,"line_start":308,"line_end":308,"column_start":16,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90112,"byte_end":90119,"line_start":319,"line_end":319,"column_start":29,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90677,"byte_end":90684,"line_start":342,"line_end":342,"column_start":38,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90731,"byte_end":90738,"line_start":343,"line_end":343,"column_start":34,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":90906,"byte_end":90916,"line_start":351,"line_end":351,"column_start":16,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91154,"byte_end":91164,"line_start":362,"line_end":362,"column_start":29,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91716,"byte_end":91726,"line_start":385,"line_end":385,"column_start":34,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91769,"byte_end":91779,"line_start":386,"line_end":386,"column_start":30,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":91960,"byte_end":91964,"line_start":394,"line_end":394,"column_start":29,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92336,"byte_end":92340,"line_start":411,"line_end":411,"column_start":34,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92383,"byte_end":92387,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92582,"byte_end":92589,"line_start":420,"line_end":420,"column_start":29,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":92998,"byte_end":93005,"line_start":437,"line_end":437,"column_start":34,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93048,"byte_end":93055,"line_start":438,"line_end":438,"column_start":30,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93225,"byte_end":93229,"line_start":446,"line_end":446,"column_start":29,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93577,"byte_end":93581,"line_start":463,"line_end":463,"column_start":34,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93624,"byte_end":93628,"line_start":464,"line_end":464,"column_start":30,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":93802,"byte_end":93808,"line_start":472,"line_end":472,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94158,"byte_end":94164,"line_start":489,"line_end":489,"column_start":34,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94207,"byte_end":94213,"line_start":490,"line_end":490,"column_start":30,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94401,"byte_end":94410,"line_start":498,"line_end":498,"column_start":29,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94797,"byte_end":94806,"line_start":515,"line_end":515,"column_start":34,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_map/mod.rs","byte_start":94849,"byte_end":94858,"line_start":516,"line_end":516,"column_start":30,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":96206,"byte_end":96221,"line_start":20,"line_end":20,"column_start":9,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98575,"byte_end":98590,"line_start":107,"line_end":107,"column_start":36,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98840,"byte_end":98855,"line_start":116,"line_end":116,"column_start":34,"column_end":49},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/hash_set.rs","byte_start":98977,"byte_end":98992,"line_start":123,"line_end":123,"column_start":27,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":99854,"byte_end":99870,"line_start":26,"line_end":26,"column_start":12,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":104964,"byte_end":104980,"line_start":222,"line_end":222,"column_start":16,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107216,"byte_end":107232,"line_start":282,"line_end":282,"column_start":51,"column_end":67},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":944},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107412,"byte_end":107428,"line_start":288,"line_end":288,"column_start":48,"column_end":64},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":944},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107667,"byte_end":107674,"line_start":300,"line_end":300,"column_start":16,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":107914,"byte_end":107921,"line_start":311,"line_end":311,"column_start":29,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108533,"byte_end":108540,"line_start":335,"line_end":335,"column_start":38,"column_end":45},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108587,"byte_end":108594,"line_start":336,"line_end":336,"column_start":34,"column_end":41},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":108777,"byte_end":108781,"line_start":344,"line_end":344,"column_start":29,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109060,"byte_end":109064,"line_start":358,"line_end":358,"column_start":34,"column_end":38},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109107,"byte_end":109111,"line_start":359,"line_end":359,"column_start":30,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109283,"byte_end":109287,"line_start":367,"line_end":367,"column_start":29,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109573,"byte_end":109577,"line_start":381,"line_end":381,"column_start":34,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109620,"byte_end":109624,"line_start":382,"line_end":382,"column_start":30,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":109800,"byte_end":109806,"line_start":390,"line_end":390,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":110092,"byte_end":110098,"line_start":404,"line_end":404,"column_start":34,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_map/mod.rs","byte_start":110141,"byte_end":110147,"line_start":405,"line_end":405,"column_start":30,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":111360,"byte_end":111376,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":114099,"byte_end":114115,"line_start":131,"line_end":131,"column_start":13,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":115101,"byte_end":115117,"line_start":161,"line_end":161,"column_start":36,"column_end":52},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/index_set.rs","byte_start":115280,"byte_end":115296,"line_start":167,"line_end":167,"column_start":34,"column_end":50},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116129,"byte_end":116134,"line_start":20,"line_end":20,"column_start":42,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5993},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116646,"byte_end":116651,"line_start":34,"line_end":34,"column_start":79,"column_end":84},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5993},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/collections/util/mod.rs","byte_start":116937,"byte_end":116942,"line_start":44,"line_end":44,"column_start":49,"column_end":54},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5993},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120577,"byte_end":120602,"line_start":24,"line_end":24,"column_start":22,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6009},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120781,"byte_end":120806,"line_start":28,"line_end":28,"column_start":22,"column_end":47},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6009},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":120833,"byte_end":120858,"line_start":30,"line_end":30,"column_start":23,"column_end":48},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6009},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121146,"byte_end":121171,"line_start":42,"line_end":42,"column_start":20,"column_end":45},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6009},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121371,"byte_end":121391,"line_start":50,"line_end":50,"column_start":6,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121613,"byte_end":121633,"line_start":60,"line_end":60,"column_start":21,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":121928,"byte_end":121948,"line_start":72,"line_end":72,"column_start":18,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1262},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":122039,"byte_end":122059,"line_start":79,"line_end":79,"column_start":19,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/deserializers/alloc.rs","byte_start":122144,"byte_end":122164,"line_start":83,"line_end":83,"column_start":36,"column_end":56},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":1293}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/de/mod.rs","byte_start":117866,"byte_end":117874,"line_start":23,"line_end":23,"column_start":38,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":5920},"to":{"krate":0,"index":1293}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":123300,"byte_end":123315,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125446,"byte_end":125461,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125551,"byte_end":125566,"line_start":86,"line_end":86,"column_start":23,"column_end":38},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125668,"byte_end":125683,"line_start":93,"line_end":93,"column_start":21,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125818,"byte_end":125833,"line_start":100,"line_end":100,"column_start":16,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125959,"byte_end":125974,"line_start":109,"line_end":109,"column_start":13,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":125999,"byte_end":126014,"line_start":111,"line_end":111,"column_start":21,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126165,"byte_end":126180,"line_start":118,"line_end":118,"column_start":27,"column_end":42},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126321,"byte_end":126336,"line_start":127,"line_end":127,"column_start":14,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126478,"byte_end":126493,"line_start":134,"line_end":134,"column_start":20,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126630,"byte_end":126645,"line_start":141,"line_end":141,"column_start":27,"column_end":42},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ffi.rs","byte_start":126944,"byte_end":126959,"line_start":155,"line_end":155,"column_start":21,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":128550,"byte_end":128553,"line_start":12,"line_end":12,"column_start":46,"column_end":49},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":128929,"byte_end":128932,"line_start":22,"line_end":22,"column_start":78,"column_end":81},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":129148,"byte_end":129159,"line_start":29,"line_end":29,"column_start":39,"column_end":50},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":55},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":129820,"byte_end":129831,"line_start":48,"line_end":48,"column_start":82,"column_end":93},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/boxed.rs","byte_start":130024,"byte_end":130035,"line_start":55,"line_end":55,"column_start":84,"column_end":95},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":130590,"byte_end":130598,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":131018,"byte_end":131026,"line_start":24,"line_end":24,"column_start":87,"column_end":95},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":131360,"byte_end":131376,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":131932,"byte_end":131948,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_map.rs","byte_start":132325,"byte_end":132333,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":136}},"from":{"krate":5,"index":1392},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":132829,"byte_end":132837,"line_start":11,"line_end":11,"column_start":36,"column_end":44},"kind":{"Impl":{"id":137}},"from":{"krate":5,"index":7454},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":133239,"byte_end":133247,"line_start":24,"line_end":24,"column_start":70,"column_end":78},"kind":{"Impl":{"id":138}},"from":{"krate":5,"index":7454},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":133525,"byte_end":133541,"line_start":34,"line_end":34,"column_start":44,"column_end":60},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5968},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":133971,"byte_end":133987,"line_start":50,"line_end":50,"column_start":54,"column_end":70},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5968},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/collections/btree_set.rs","byte_start":134275,"byte_end":134283,"line_start":61,"line_end":61,"column_start":63,"column_end":71},"kind":{"Impl":{"id":141}},"from":{"krate":5,"index":7454},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/niche.rs","byte_start":134621,"byte_end":134638,"line_start":5,"line_end":5,"column_start":42,"column_end":59},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/niche.rs","byte_start":135098,"byte_end":135104,"line_start":24,"line_end":24,"column_start":48,"column_end":54},"kind":{"Impl":{"id":143}},"from":{"krate":2,"index":46719},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":135862,"byte_end":135864,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":1291}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":136026,"byte_end":136028,"line_start":26,"line_end":26,"column_start":50,"column_end":52},"kind":{"Impl":{"id":145}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":136366,"byte_end":136368,"line_start":36,"line_end":36,"column_start":33,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":136718,"byte_end":136728,"line_start":47,"line_end":47,"column_start":42,"column_end":52},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3503},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":137434,"byte_end":137444,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":137629,"byte_end":137633,"line_start":77,"line_end":77,"column_start":50,"column_end":54},"kind":{"Impl":{"id":149}},"from":{"krate":5,"index":4880},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":138072,"byte_end":138076,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":{"Impl":{"id":150}},"from":{"krate":5,"index":4880},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":138613,"byte_end":138627,"line_start":108,"line_end":108,"column_start":44,"column_end":58},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3573},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139156,"byte_end":139159,"line_start":128,"line_end":128,"column_start":41,"column_end":44},"kind":{"Impl":{"id":152}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":1291}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139326,"byte_end":139329,"line_start":135,"line_end":135,"column_start":52,"column_end":55},"kind":{"Impl":{"id":153}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":139670,"byte_end":139673,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":140102,"byte_end":140112,"line_start":157,"line_end":157,"column_start":38,"column_end":48},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3503},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":140694,"byte_end":140704,"line_start":174,"line_end":174,"column_start":40,"column_end":50},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":140965,"byte_end":140969,"line_start":187,"line_end":187,"column_start":52,"column_end":56},"kind":{"Impl":{"id":157}},"from":{"krate":5,"index":6004},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":141411,"byte_end":141415,"line_start":202,"line_end":202,"column_start":35,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":5,"index":6004},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/rc.rs","byte_start":141955,"byte_end":141969,"line_start":218,"line_end":218,"column_start":46,"column_end":60},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3573},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":142870,"byte_end":142876,"line_start":8,"line_end":8,"column_start":18,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143191,"byte_end":143197,"line_start":18,"line_end":18,"column_start":45,"column_end":51},"kind":{"Impl":{"id":161}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143465,"byte_end":143479,"line_start":28,"line_end":28,"column_start":55,"column_end":69},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4355},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143680,"byte_end":143694,"line_start":38,"line_end":38,"column_start":28,"column_end":42},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/string.rs","byte_start":143851,"byte_end":143857,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"kind":{"Impl":{"id":164}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144374,"byte_end":144385,"line_start":12,"line_end":12,"column_start":48,"column_end":59},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144557,"byte_end":144560,"line_start":19,"line_end":19,"column_start":56,"column_end":59},"kind":{"Impl":{"id":166}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144728,"byte_end":144739,"line_start":26,"line_end":26,"column_start":44,"column_end":55},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":144942,"byte_end":144945,"line_start":33,"line_end":33,"column_start":52,"column_end":55},"kind":{"Impl":{"id":168}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":145134,"byte_end":145137,"line_start":40,"line_end":40,"column_start":30,"column_end":33},"kind":{"Impl":{"id":169}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":145497,"byte_end":145500,"line_start":50,"line_end":50,"column_start":79,"column_end":82},"kind":{"Impl":{"id":170}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/alloc/vec.rs","byte_start":145763,"byte_end":145774,"line_start":57,"line_end":57,"column_start":67,"column_end":78},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4921},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158318,"byte_end":158327,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"kind":{"Impl":{"id":172}},"from":{"krate":2,"index":45213},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158527,"byte_end":158536,"line_start":20,"line_end":20,"column_start":45,"column_end":54},"kind":{"Impl":{"id":173}},"from":{"krate":2,"index":45213},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158707,"byte_end":158716,"line_start":27,"line_end":27,"column_start":58,"column_end":67},"kind":{"Impl":{"id":174}},"from":{"krate":2,"index":45213},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":158868,"byte_end":158873,"line_start":36,"line_end":36,"column_start":30,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":2,"index":45229},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":159349,"byte_end":159354,"line_start":49,"line_end":49,"column_start":62,"column_end":67},"kind":{"Impl":{"id":176}},"from":{"krate":2,"index":45229},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":159667,"byte_end":159675,"line_start":59,"line_end":59,"column_start":69,"column_end":77},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":160024,"byte_end":160037,"line_start":72,"line_end":72,"column_start":50,"column_end":63},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7709},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":160222,"byte_end":160236,"line_start":81,"line_end":81,"column_start":30,"column_end":44},"kind":{"Impl":{"id":179}},"from":{"krate":2,"index":45298},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":160725,"byte_end":160739,"line_start":94,"line_end":94,"column_start":62,"column_end":76},"kind":{"Impl":{"id":180}},"from":{"krate":2,"index":45298},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":161037,"byte_end":161045,"line_start":104,"line_end":104,"column_start":50,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":161464,"byte_end":161486,"line_start":119,"line_end":119,"column_start":59,"column_end":81},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7734},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":161677,"byte_end":161686,"line_start":128,"line_end":128,"column_start":30,"column_end":39},"kind":{"Impl":{"id":183}},"from":{"krate":2,"index":45254},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162072,"byte_end":162081,"line_start":139,"line_end":139,"column_start":62,"column_end":71},"kind":{"Impl":{"id":184}},"from":{"krate":2,"index":45254},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162352,"byte_end":162360,"line_start":148,"line_end":148,"column_start":73,"column_end":81},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162671,"byte_end":162688,"line_start":160,"line_end":160,"column_start":54,"column_end":71},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":162843,"byte_end":162850,"line_start":169,"line_end":169,"column_start":30,"column_end":37},"kind":{"Impl":{"id":187}},"from":{"krate":2,"index":45275},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163226,"byte_end":163233,"line_start":180,"line_end":180,"column_start":62,"column_end":69},"kind":{"Impl":{"id":188}},"from":{"krate":2,"index":45275},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163496,"byte_end":163504,"line_start":189,"line_end":189,"column_start":71,"column_end":79},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163803,"byte_end":163818,"line_start":201,"line_end":201,"column_start":52,"column_end":67},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":163976,"byte_end":163992,"line_start":210,"line_end":210,"column_start":30,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":2,"index":45321},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":164386,"byte_end":164402,"line_start":221,"line_end":221,"column_start":62,"column_end":78},"kind":{"Impl":{"id":192}},"from":{"krate":2,"index":45321},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":164655,"byte_end":164663,"line_start":230,"line_end":230,"column_start":52,"column_end":60},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/ops.rs","byte_start":165040,"byte_end":165064,"line_start":244,"line_end":244,"column_start":61,"column_end":85},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7807},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/option.rs","byte_start":165802,"byte_end":165808,"line_start":17,"line_end":17,"column_start":30,"column_end":36},"kind":{"Impl":{"id":195}},"from":{"krate":2,"index":46719},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/option.rs","byte_start":166787,"byte_end":166793,"line_start":45,"line_end":45,"column_start":62,"column_end":68},"kind":{"Impl":{"id":196}},"from":{"krate":2,"index":46719},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/option.rs","byte_start":167074,"byte_end":167088,"line_start":54,"line_end":54,"column_start":70,"column_end":84},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7831},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173213,"byte_end":173224,"line_start":186,"line_end":186,"column_start":29,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":2,"index":3035},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173448,"byte_end":173459,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"kind":{"Impl":{"id":265}},"from":{"krate":2,"index":3035},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173649,"byte_end":173660,"line_start":201,"line_end":201,"column_start":74,"column_end":85},"kind":{"Impl":{"id":266}},"from":{"krate":2,"index":3035},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":173822,"byte_end":173835,"line_start":209,"line_end":209,"column_start":18,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":2,"index":38224},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":174044,"byte_end":174057,"line_start":217,"line_end":217,"column_start":45,"column_end":58},"kind":{"Impl":{"id":268}},"from":{"krate":2,"index":38224},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":174232,"byte_end":174245,"line_start":224,"line_end":224,"column_start":62,"column_end":75},"kind":{"Impl":{"id":269}},"from":{"krate":2,"index":38224},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":174852,"byte_end":174860,"line_start":250,"line_end":250,"column_start":54,"column_end":62},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":175483,"byte_end":175491,"line_start":276,"line_end":276,"column_start":54,"column_end":62},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":175746,"byte_end":175758,"line_start":287,"line_end":287,"column_start":18,"column_end":30},"kind":{"Impl":{"id":276}},"from":{"krate":2,"index":23628},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176103,"byte_end":176115,"line_start":299,"line_end":299,"column_start":45,"column_end":57},"kind":{"Impl":{"id":277}},"from":{"krate":2,"index":23628},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176289,"byte_end":176297,"line_start":306,"line_end":306,"column_start":61,"column_end":69},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176612,"byte_end":176624,"line_start":317,"line_end":317,"column_start":18,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":2,"index":23820},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":176969,"byte_end":176981,"line_start":329,"line_end":329,"column_start":45,"column_end":57},"kind":{"Impl":{"id":280}},"from":{"krate":2,"index":23820},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177155,"byte_end":177163,"line_start":336,"line_end":336,"column_start":61,"column_end":69},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177418,"byte_end":177429,"line_start":346,"line_end":346,"column_start":18,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":2,"index":47272},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177749,"byte_end":177760,"line_start":357,"line_end":357,"column_start":45,"column_end":56},"kind":{"Impl":{"id":283}},"from":{"krate":2,"index":47272},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":177953,"byte_end":177961,"line_start":365,"line_end":365,"column_start":60,"column_end":68},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":178177,"byte_end":178188,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"kind":{"Impl":{"id":285}},"from":{"krate":2,"index":47236},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":178508,"byte_end":178519,"line_start":386,"line_end":386,"column_start":45,"column_end":56},"kind":{"Impl":{"id":286}},"from":{"krate":2,"index":47236},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/primitive.rs","byte_start":178712,"byte_end":178720,"line_start":394,"line_end":394,"column_start":60,"column_end":68},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/result.rs","byte_start":179666,"byte_end":179672,"line_start":17,"line_end":17,"column_start":42,"column_end":48},"kind":{"Impl":{"id":288}},"from":{"krate":2,"index":46845},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/result.rs","byte_start":180888,"byte_end":180894,"line_start":48,"line_end":48,"column_start":79,"column_end":85},"kind":{"Impl":{"id":289}},"from":{"krate":2,"index":46845},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/result.rs","byte_start":181219,"byte_end":181233,"line_start":58,"line_end":58,"column_start":48,"column_end":62},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7900},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":181897,"byte_end":181905,"line_start":4,"line_end":4,"column_start":18,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":2,"index":49313},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":182201,"byte_end":182209,"line_start":14,"line_end":14,"column_start":45,"column_end":53},"kind":{"Impl":{"id":292}},"from":{"krate":2,"index":49313},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":182379,"byte_end":182395,"line_start":21,"line_end":21,"column_start":57,"column_end":73},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":8078},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/time.rs","byte_start":182585,"byte_end":182593,"line_start":28,"line_end":28,"column_start":33,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":2,"index":49313},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":146840,"byte_end":146841,"line_start":17,"line_end":17,"column_start":28,"column_end":29},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2354},"to":{"krate":0,"index":5942}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":147016,"byte_end":147017,"line_start":24,"line_end":24,"column_start":37,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2358},"to":{"krate":0,"index":5937}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":147328,"byte_end":147329,"line_start":39,"line_end":39,"column_start":71,"column_end":72},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2363},"to":{"krate":0,"index":5945}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/core/mod.rs","byte_start":157013,"byte_end":157021,"line_start":350,"line_end":350,"column_start":84,"column_end":92},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5938},"to":{"krate":0,"index":5949}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":192542,"byte_end":192549,"line_start":12,"line_end":12,"column_start":57,"column_end":64},"kind":{"Impl":{"id":414}},"from":{"krate":1,"index":1086},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":192933,"byte_end":192940,"line_start":25,"line_end":25,"column_start":45,"column_end":52},"kind":{"Impl":{"id":415}},"from":{"krate":1,"index":1086},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":193409,"byte_end":193424,"line_start":39,"line_end":39,"column_start":42,"column_end":57},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":194012,"byte_end":194027,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_map.rs","byte_start":194416,"byte_end":194423,"line_start":69,"line_end":69,"column_start":44,"column_end":51},"kind":{"Impl":{"id":418}},"from":{"krate":1,"index":1086},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":194918,"byte_end":194925,"line_start":12,"line_end":12,"column_start":45,"column_end":52},"kind":{"Impl":{"id":419}},"from":{"krate":1,"index":1803},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":195296,"byte_end":195303,"line_start":25,"line_end":25,"column_start":33,"column_end":40},"kind":{"Impl":{"id":420}},"from":{"krate":1,"index":1803},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":195657,"byte_end":195672,"line_start":37,"line_end":37,"column_start":49,"column_end":64},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":196208,"byte_end":196223,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/collections/hash_set.rs","byte_start":196549,"byte_end":196556,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"kind":{"Impl":{"id":423}},"from":{"krate":1,"index":1803},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":197120,"byte_end":197124,"line_start":14,"line_end":14,"column_start":25,"column_end":29},"kind":{"Impl":{"id":424}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":5937}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":197456,"byte_end":197460,"line_start":30,"line_end":30,"column_start":25,"column_end":29},"kind":{"Impl":{"id":425}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":5942}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":197720,"byte_end":197724,"line_start":39,"line_end":39,"column_start":54,"column_end":58},"kind":{"Impl":{"id":426}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":5945}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":198153,"byte_end":198161,"line_start":53,"line_end":53,"column_start":86,"column_end":94},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5938},"to":{"krate":0,"index":5949}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":198749,"byte_end":198764,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":198927,"byte_end":198934,"line_start":81,"line_end":81,"column_start":37,"column_end":44},"kind":{"Impl":{"id":429}},"from":{"krate":1,"index":10438},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":199086,"byte_end":199093,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"kind":{"Impl":{"id":430}},"from":{"krate":1,"index":10438},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":199417,"byte_end":199424,"line_start":98,"line_end":98,"column_start":47,"column_end":54},"kind":{"Impl":{"id":431}},"from":{"krate":1,"index":10438},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/ffi.rs","byte_start":199662,"byte_end":199670,"line_start":105,"line_end":105,"column_start":56,"column_end":64},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":200700,"byte_end":200716,"line_start":16,"line_end":16,"column_start":6,"column_end":22},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203689,"byte_end":203705,"line_start":100,"line_end":100,"column_start":30,"column_end":46},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7255},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203846,"byte_end":203854,"line_start":107,"line_end":107,"column_start":38,"column_end":46},"kind":{"Impl":{"id":435}},"from":{"krate":1,"index":10950},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":203986,"byte_end":204002,"line_start":114,"line_end":114,"column_start":31,"column_end":47},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7255},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204179,"byte_end":204187,"line_start":121,"line_end":121,"column_start":39,"column_end":47},"kind":{"Impl":{"id":437}},"from":{"krate":1,"index":10950},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204341,"byte_end":204349,"line_start":128,"line_end":128,"column_start":18,"column_end":26},"kind":{"Impl":{"id":438}},"from":{"krate":1,"index":10950},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204620,"byte_end":204628,"line_start":138,"line_end":138,"column_start":45,"column_end":53},"kind":{"Impl":{"id":439}},"from":{"krate":1,"index":10950},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204798,"byte_end":204814,"line_start":145,"line_end":145,"column_start":57,"column_end":73},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":204954,"byte_end":204970,"line_start":154,"line_end":154,"column_start":6,"column_end":22},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206761,"byte_end":206777,"line_start":211,"line_end":211,"column_start":30,"column_end":46},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7281},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":206918,"byte_end":206926,"line_start":218,"line_end":218,"column_start":38,"column_end":46},"kind":{"Impl":{"id":443}},"from":{"krate":1,"index":10953},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207058,"byte_end":207074,"line_start":225,"line_end":225,"column_start":31,"column_end":47},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":7281},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207251,"byte_end":207259,"line_start":232,"line_end":232,"column_start":39,"column_end":47},"kind":{"Impl":{"id":445}},"from":{"krate":1,"index":10953},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207413,"byte_end":207421,"line_start":239,"line_end":239,"column_start":18,"column_end":26},"kind":{"Impl":{"id":446}},"from":{"krate":1,"index":10953},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207693,"byte_end":207701,"line_start":249,"line_end":249,"column_start":45,"column_end":53},"kind":{"Impl":{"id":447}},"from":{"krate":1,"index":10953},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":207871,"byte_end":207887,"line_start":256,"line_end":256,"column_start":57,"column_end":73},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7281},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":208025,"byte_end":208039,"line_start":265,"line_end":265,"column_start":6,"column_end":20},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":209486,"byte_end":209500,"line_start":309,"line_end":309,"column_start":28,"column_end":42},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7307},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210081,"byte_end":210087,"line_start":331,"line_end":331,"column_start":36,"column_end":42},"kind":{"Impl":{"id":451}},"from":{"krate":1,"index":10926},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210215,"byte_end":210229,"line_start":338,"line_end":338,"column_start":29,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7307},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210404,"byte_end":210410,"line_start":345,"line_end":345,"column_start":37,"column_end":43},"kind":{"Impl":{"id":453}},"from":{"krate":1,"index":10926},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":210800,"byte_end":210806,"line_start":365,"line_end":365,"column_start":18,"column_end":24},"kind":{"Impl":{"id":454}},"from":{"krate":1,"index":10926},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":211937,"byte_end":211943,"line_start":394,"line_end":394,"column_start":45,"column_end":51},"kind":{"Impl":{"id":455}},"from":{"krate":1,"index":10926},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212276,"byte_end":212290,"line_start":404,"line_end":404,"column_start":55,"column_end":69},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7307},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212645,"byte_end":212665,"line_start":416,"line_end":416,"column_start":6,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":212908,"byte_end":212928,"line_start":424,"line_end":424,"column_start":24,"column_end":44},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7333},"to":{"krate":1,"index":4818}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213138,"byte_end":213158,"line_start":432,"line_end":432,"column_start":34,"column_end":54},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7333},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213317,"byte_end":213329,"line_start":439,"line_end":439,"column_start":42,"column_end":54},"kind":{"Impl":{"id":460}},"from":{"krate":1,"index":10920},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213469,"byte_end":213489,"line_start":446,"line_end":446,"column_start":35,"column_end":55},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":7333},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213684,"byte_end":213696,"line_start":453,"line_end":453,"column_start":43,"column_end":55},"kind":{"Impl":{"id":462}},"from":{"krate":1,"index":10920},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":213854,"byte_end":213866,"line_start":460,"line_end":460,"column_start":18,"column_end":30},"kind":{"Impl":{"id":463}},"from":{"krate":1,"index":10920},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214271,"byte_end":214283,"line_start":473,"line_end":473,"column_start":45,"column_end":57},"kind":{"Impl":{"id":464}},"from":{"krate":1,"index":10920},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214457,"byte_end":214477,"line_start":480,"line_end":480,"column_start":61,"column_end":81},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":7333},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":214711,"byte_end":214731,"line_start":490,"line_end":490,"column_start":6,"column_end":26},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215067,"byte_end":215087,"line_start":503,"line_end":503,"column_start":24,"column_end":44},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7357},"to":{"krate":1,"index":4818}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215297,"byte_end":215317,"line_start":511,"line_end":511,"column_start":34,"column_end":54},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7357},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215476,"byte_end":215488,"line_start":518,"line_end":518,"column_start":42,"column_end":54},"kind":{"Impl":{"id":469}},"from":{"krate":1,"index":10923},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215628,"byte_end":215648,"line_start":525,"line_end":525,"column_start":35,"column_end":55},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":7357},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":215843,"byte_end":215855,"line_start":532,"line_end":532,"column_start":43,"column_end":55},"kind":{"Impl":{"id":471}},"from":{"krate":1,"index":10923},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":216013,"byte_end":216025,"line_start":539,"line_end":539,"column_start":18,"column_end":30},"kind":{"Impl":{"id":472}},"from":{"krate":1,"index":10923},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":216630,"byte_end":216642,"line_start":556,"line_end":556,"column_start":45,"column_end":57},"kind":{"Impl":{"id":473}},"from":{"krate":1,"index":10923},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":216816,"byte_end":216836,"line_start":563,"line_end":563,"column_start":61,"column_end":81},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7357},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217161,"byte_end":217179,"line_start":578,"line_end":578,"column_start":6,"column_end":24},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":217863,"byte_end":217881,"line_start":598,"line_end":598,"column_start":24,"column_end":42},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7383},"to":{"krate":1,"index":4818}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218084,"byte_end":218102,"line_start":606,"line_end":606,"column_start":32,"column_end":50},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7383},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218254,"byte_end":218264,"line_start":613,"line_end":613,"column_start":40,"column_end":50},"kind":{"Impl":{"id":478}},"from":{"krate":1,"index":10896},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218400,"byte_end":218418,"line_start":620,"line_end":620,"column_start":33,"column_end":51},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7383},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":218606,"byte_end":218616,"line_start":627,"line_end":627,"column_start":41,"column_end":51},"kind":{"Impl":{"id":480}},"from":{"krate":1,"index":10896},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":219038,"byte_end":219048,"line_start":647,"line_end":647,"column_start":18,"column_end":28},"kind":{"Impl":{"id":481}},"from":{"krate":1,"index":10896},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":220215,"byte_end":220225,"line_start":676,"line_end":676,"column_start":45,"column_end":55},"kind":{"Impl":{"id":482}},"from":{"krate":1,"index":10896},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/net.rs","byte_start":220578,"byte_end":220596,"line_start":686,"line_end":686,"column_start":59,"column_end":77},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7383},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/time.rs","byte_start":221807,"byte_end":221823,"line_start":4,"line_end":4,"column_start":30,"column_end":46},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":8078},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/std/time.rs","byte_start":222012,"byte_end":222020,"line_start":11,"line_end":11,"column_start":38,"column_end":46},"kind":{"Impl":{"id":485}},"from":{"krate":2,"index":49313},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":222477,"byte_end":222484,"line_start":12,"line_end":12,"column_start":57,"column_end":64},"kind":{"Impl":{"id":486}},"from":{"krate":23,"index":548},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":222868,"byte_end":222875,"line_start":25,"line_end":25,"column_start":45,"column_end":52},"kind":{"Impl":{"id":487}},"from":{"krate":23,"index":548},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":223344,"byte_end":223359,"line_start":39,"line_end":39,"column_start":42,"column_end":57},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":223947,"byte_end":223962,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_map.rs","byte_start":224351,"byte_end":224358,"line_start":69,"line_end":69,"column_start":44,"column_end":51},"kind":{"Impl":{"id":490}},"from":{"krate":23,"index":548},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":226542,"byte_end":226549,"line_start":12,"line_end":12,"column_start":45,"column_end":52},"kind":{"Impl":{"id":491}},"from":{"krate":23,"index":1707},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":226920,"byte_end":226927,"line_start":25,"line_end":25,"column_start":33,"column_end":40},"kind":{"Impl":{"id":492}},"from":{"krate":23,"index":1707},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":227281,"byte_end":227296,"line_start":37,"line_end":37,"column_start":49,"column_end":64},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":227832,"byte_end":227847,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/impls/hashbrown/hash_set.rs","byte_start":228173,"byte_end":228180,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"kind":{"Impl":{"id":495}},"from":{"krate":23,"index":1707},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230310,"byte_end":230326,"line_start":13,"line_end":13,"column_start":6,"column_end":22},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":230772,"byte_end":230788,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":231813,"byte_end":231827,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":232640,"byte_end":232660,"line_start":82,"line_end":82,"column_start":6,"column_end":26},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":233421,"byte_end":233441,"line_start":107,"line_end":107,"column_start":6,"column_end":26},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/net.rs","byte_start":234661,"byte_end":234679,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":236380,"byte_end":236397,"line_start":24,"line_end":24,"column_start":34,"column_end":51},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":3175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":238528,"byte_end":238545,"line_start":99,"line_end":99,"column_start":34,"column_end":51},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":3175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240144,"byte_end":240161,"line_start":150,"line_end":150,"column_start":49,"column_end":66},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240474,"byte_end":240491,"line_start":163,"line_end":163,"column_start":46,"column_end":63},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240560,"byte_end":240577,"line_start":165,"line_end":165,"column_start":62,"column_end":79},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240740,"byte_end":240757,"line_start":172,"line_end":172,"column_start":48,"column_end":65},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":240939,"byte_end":240956,"line_start":179,"line_end":179,"column_start":60,"column_end":77},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/niche/option_box.rs","byte_start":241129,"byte_end":241146,"line_start":186,"line_end":186,"column_start":62,"column_end":79},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250203,"byte_end":250216,"line_start":19,"line_end":19,"column_start":36,"column_end":49},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7709},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":250420,"byte_end":250433,"line_start":28,"line_end":28,"column_start":24,"column_end":37},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251036,"byte_end":251049,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7709},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251701,"byte_end":251723,"line_start":74,"line_end":74,"column_start":36,"column_end":58},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7734},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":251942,"byte_end":251964,"line_start":84,"line_end":84,"column_start":24,"column_end":46},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":252567,"byte_end":252589,"line_start":105,"line_end":105,"column_start":28,"column_end":50},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7734},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253141,"byte_end":253158,"line_start":126,"line_end":126,"column_start":36,"column_end":53},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253334,"byte_end":253351,"line_start":134,"line_end":134,"column_start":24,"column_end":41},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":253647,"byte_end":253664,"line_start":146,"line_end":146,"column_start":28,"column_end":45},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254198,"byte_end":254213,"line_start":167,"line_end":167,"column_start":36,"column_end":51},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254387,"byte_end":254402,"line_start":175,"line_end":175,"column_start":24,"column_end":39},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":254698,"byte_end":254713,"line_start":187,"line_end":187,"column_start":28,"column_end":43},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255272,"byte_end":255296,"line_start":208,"line_end":208,"column_start":36,"column_end":60},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7807},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255471,"byte_end":255495,"line_start":216,"line_end":216,"column_start":24,"column_end":48},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ops.rs","byte_start":255791,"byte_end":255815,"line_start":228,"line_end":228,"column_start":28,"column_end":52},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7807},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":256740,"byte_end":256754,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259309,"byte_end":259323,"line_start":114,"line_end":114,"column_start":16,"column_end":30},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":259717,"byte_end":259731,"line_start":125,"line_end":125,"column_start":19,"column_end":33},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260136,"byte_end":260150,"line_start":136,"line_end":136,"column_start":20,"column_end":34},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7831},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260193,"byte_end":260207,"line_start":138,"line_end":138,"column_start":36,"column_end":50},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7831},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260344,"byte_end":260358,"line_start":145,"line_end":145,"column_start":22,"column_end":36},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7831},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260514,"byte_end":260528,"line_start":152,"line_end":152,"column_start":34,"column_end":48},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7831},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260675,"byte_end":260689,"line_start":159,"line_end":159,"column_start":36,"column_end":50},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7831},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":260886,"byte_end":260900,"line_start":166,"line_end":166,"column_start":51,"column_end":65},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7831},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261292,"byte_end":261298,"line_start":181,"line_end":181,"column_start":59,"column_end":65},"kind":{"Impl":{"id":534}},"from":{"krate":2,"index":46719},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261740,"byte_end":261744,"line_start":197,"line_end":197,"column_start":26,"column_end":30},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":3428},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":261965,"byte_end":261969,"line_start":207,"line_end":207,"column_start":37,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":3428},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262415,"byte_end":262422,"line_start":222,"line_end":222,"column_start":26,"column_end":33},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/option.rs","byte_start":262647,"byte_end":262654,"line_start":232,"line_end":232,"column_start":37,"column_end":44},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":263759,"byte_end":263769,"line_start":20,"line_end":20,"column_start":37,"column_end":47},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":3503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265399,"byte_end":265409,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265539,"byte_end":265549,"line_start":78,"line_end":78,"column_start":51,"column_end":61},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265693,"byte_end":265703,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":265870,"byte_end":265880,"line_start":92,"line_end":92,"column_start":47,"column_end":57},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266060,"byte_end":266070,"line_start":101,"line_end":101,"column_start":69,"column_end":79},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266239,"byte_end":266249,"line_start":108,"line_end":108,"column_start":49,"column_end":59},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266324,"byte_end":266334,"line_start":110,"line_end":110,"column_start":65,"column_end":75},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266486,"byte_end":266496,"line_start":116,"line_end":116,"column_start":51,"column_end":61},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266653,"byte_end":266663,"line_start":122,"line_end":122,"column_start":53,"column_end":63},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":266909,"byte_end":266919,"line_start":132,"line_end":132,"column_start":54,"column_end":64},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267176,"byte_end":267186,"line_start":142,"line_end":142,"column_start":29,"column_end":39},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":3503},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":267720,"byte_end":267734,"line_start":165,"line_end":165,"column_start":37,"column_end":51},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":3573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rc/mod.rs","byte_start":270113,"byte_end":270127,"line_start":233,"line_end":233,"column_start":65,"column_end":79},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":3573},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":271563,"byte_end":271574,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7841},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":272004,"byte_end":272015,"line_start":36,"line_end":36,"column_start":28,"column_end":39},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7841},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":273303,"byte_end":273307,"line_start":70,"line_end":70,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3027},"to":{"krate":0,"index":3648}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":276775,"byte_end":276784,"line_start":159,"line_end":159,"column_start":17,"column_end":26},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":3652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":278848,"byte_end":278857,"line_start":224,"line_end":224,"column_start":36,"column_end":45},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":3652},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":279069,"byte_end":279078,"line_start":232,"line_end":232,"column_start":34,"column_end":43},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":3652},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":280859,"byte_end":280865,"line_start":273,"line_end":273,"column_start":20,"column_end":26},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":3680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":281964,"byte_end":281970,"line_start":304,"line_end":304,"column_start":45,"column_end":51},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":3680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":282983,"byte_end":282989,"line_start":338,"line_end":338,"column_start":45,"column_end":51},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":3680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":286092,"byte_end":286098,"line_start":433,"line_end":433,"column_start":64,"column_end":70},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/rel_ptr/mod.rs","byte_start":286430,"byte_end":286436,"line_start":445,"line_end":445,"column_start":62,"column_end":68},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":287513,"byte_end":287527,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289091,"byte_end":289105,"line_start":73,"line_end":73,"column_start":19,"column_end":33},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":7900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":289575,"byte_end":289589,"line_start":87,"line_end":87,"column_start":22,"column_end":36},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290353,"byte_end":290357,"line_start":110,"line_end":110,"column_start":26,"column_end":30},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290578,"byte_end":290582,"line_start":120,"line_end":120,"column_start":37,"column_end":41},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":290972,"byte_end":290979,"line_start":135,"line_end":135,"column_start":26,"column_end":33},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":3773},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291204,"byte_end":291211,"line_start":145,"line_end":145,"column_start":37,"column_end":44},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":3773},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291328,"byte_end":291342,"line_start":151,"line_end":151,"column_start":27,"column_end":41},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291403,"byte_end":291417,"line_start":153,"line_end":153,"column_start":51,"column_end":65},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291565,"byte_end":291579,"line_start":160,"line_end":160,"column_start":30,"column_end":44},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291747,"byte_end":291761,"line_start":167,"line_end":167,"column_start":48,"column_end":62},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":291926,"byte_end":291940,"line_start":174,"line_end":174,"column_start":51,"column_end":65},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":292158,"byte_end":292172,"line_start":181,"line_end":181,"column_start":74,"column_end":88},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/result.rs","byte_start":292813,"byte_end":292819,"line_start":203,"line_end":203,"column_start":82,"column_end":88},"kind":{"Impl":{"id":578}},"from":{"krate":2,"index":46845},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":308697,"byte_end":308714,"line_start":30,"line_end":30,"column_start":29,"column_end":46},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":309048,"byte_end":309065,"line_start":44,"line_end":44,"column_start":30,"column_end":47},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7913},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":309200,"byte_end":309217,"line_start":53,"line_end":53,"column_start":22,"column_end":39},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7913},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":309322,"byte_end":309339,"line_start":57,"line_end":57,"column_start":68,"column_end":85},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7913},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311113,"byte_end":311124,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311849,"byte_end":311860,"line_start":142,"line_end":142,"column_start":34,"column_end":45},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7919},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":311956,"byte_end":311967,"line_start":148,"line_end":148,"column_start":35,"column_end":46},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7919},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":312078,"byte_end":312089,"line_start":152,"line_end":152,"column_start":39,"column_end":50},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7919},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313477,"byte_end":313494,"line_start":191,"line_end":191,"column_start":22,"column_end":39},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7926},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313665,"byte_end":313682,"line_start":195,"line_end":195,"column_start":22,"column_end":39},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7926},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":313709,"byte_end":313726,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7926},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":314789,"byte_end":314806,"line_start":226,"line_end":226,"column_start":20,"column_end":37},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7926},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315307,"byte_end":315319,"line_start":241,"line_end":241,"column_start":22,"column_end":34},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7939},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315487,"byte_end":315499,"line_start":245,"line_end":245,"column_start":22,"column_end":34},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7939},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315509,"byte_end":315521,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":315955,"byte_end":315967,"line_start":265,"line_end":265,"column_start":15,"column_end":27},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7939},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":316175,"byte_end":316187,"line_start":275,"line_end":275,"column_start":18,"column_end":30},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7939},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":316264,"byte_end":316276,"line_start":281,"line_end":281,"column_start":19,"column_end":31},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7939},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":316340,"byte_end":316352,"line_start":285,"line_end":285,"column_start":23,"column_end":35},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7939},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318152,"byte_end":318175,"line_start":333,"line_end":333,"column_start":22,"column_end":45},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7944},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318352,"byte_end":318375,"line_start":337,"line_end":337,"column_start":22,"column_end":45},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7944},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318402,"byte_end":318425,"line_start":339,"line_end":339,"column_start":23,"column_end":46},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7944},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":318713,"byte_end":318736,"line_start":351,"line_end":351,"column_start":20,"column_end":43},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7944},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319096,"byte_end":319114,"line_start":362,"line_end":362,"column_start":22,"column_end":40},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319288,"byte_end":319306,"line_start":366,"line_end":366,"column_start":22,"column_end":40},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319316,"byte_end":319334,"line_start":368,"line_end":368,"column_start":6,"column_end":24},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319528,"byte_end":319546,"line_start":378,"line_end":378,"column_start":18,"column_end":36},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319637,"byte_end":319655,"line_start":385,"line_end":385,"column_start":19,"column_end":37},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7950},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/alloc.rs","byte_start":319736,"byte_end":319754,"line_start":389,"line_end":389,"column_start":34,"column_end":52},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7950},"to":{"krate":0,"index":4245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321275,"byte_end":321296,"line_start":26,"line_end":26,"column_start":23,"column_end":44},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7954},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":321804,"byte_end":321825,"line_start":46,"line_end":46,"column_start":20,"column_end":41},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7954},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":322948,"byte_end":322964,"line_start":90,"line_end":90,"column_start":9,"column_end":25},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323608,"byte_end":323624,"line_start":112,"line_end":112,"column_start":30,"column_end":46},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7961},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323733,"byte_end":323749,"line_start":119,"line_end":119,"column_start":22,"column_end":38},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7961},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":323834,"byte_end":323850,"line_start":123,"line_end":123,"column_start":37,"column_end":53},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7961},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":325390,"byte_end":325411,"line_start":173,"line_end":173,"column_start":23,"column_end":44},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7968},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326189,"byte_end":326210,"line_start":197,"line_end":197,"column_start":28,"column_end":49},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7968},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326354,"byte_end":326367,"line_start":206,"line_end":206,"column_start":9,"column_end":22},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326783,"byte_end":326796,"line_start":223,"line_end":223,"column_start":30,"column_end":43},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7980},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":326891,"byte_end":326904,"line_start":229,"line_end":229,"column_start":22,"column_end":35},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7980},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":327016,"byte_end":327029,"line_start":233,"line_end":233,"column_start":64,"column_end":77},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7980},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":328782,"byte_end":328797,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329000,"byte_end":329015,"line_start":294,"line_end":294,"column_start":42,"column_end":57},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7987},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329187,"byte_end":329202,"line_start":303,"line_end":303,"column_start":35,"column_end":50},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7987},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":329297,"byte_end":329312,"line_start":307,"line_end":307,"column_start":57,"column_end":72},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7987},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":330079,"byte_end":330093,"line_start":334,"line_end":334,"column_start":9,"column_end":23},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331622,"byte_end":331636,"line_start":377,"line_end":377,"column_start":32,"column_end":46},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":331711,"byte_end":331725,"line_start":381,"line_end":381,"column_start":40,"column_end":54},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/core.rs","byte_start":332539,"byte_end":332553,"line_start":406,"line_end":406,"column_start":21,"column_end":35},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":333695,"byte_end":333710,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":8007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334277,"byte_end":334292,"line_start":45,"line_end":45,"column_start":33,"column_end":48},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":8007},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/std.rs","byte_start":334363,"byte_end":334378,"line_start":49,"line_end":49,"column_start":35,"column_end":50},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":8007},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301285,"byte_end":301309,"line_start":37,"line_end":37,"column_start":32,"column_end":56},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8014},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":301832,"byte_end":301856,"line_start":56,"line_end":56,"column_start":29,"column_end":53},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8014},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":302498,"byte_end":302517,"line_start":80,"line_end":80,"column_start":15,"column_end":34},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303267,"byte_end":303286,"line_start":106,"line_end":106,"column_start":54,"column_end":73},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":8032},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303537,"byte_end":303556,"line_start":117,"line_end":117,"column_start":58,"column_end":77},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":8032},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":303705,"byte_end":303724,"line_start":121,"line_end":121,"column_start":62,"column_end":81},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8032},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":305399,"byte_end":305418,"line_start":179,"line_end":179,"column_start":66,"column_end":85},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":8032},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/serializers/mod.rs","byte_start":306005,"byte_end":306024,"line_start":196,"line_end":196,"column_start":9,"column_end":28},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":8032},"to":{"krate":0,"index":4245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":293827,"byte_end":293835,"line_start":16,"line_end":16,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":5920},"to":{"krate":0,"index":4223}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":297967,"byte_end":297975,"line_start":127,"line_end":127,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":5920},"to":{"krate":0,"index":4242}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/ser/mod.rs","byte_start":298712,"byte_end":298720,"line_start":147,"line_end":147,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":5920},"to":{"krate":0,"index":4245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/repr.rs","byte_start":341902,"byte_end":341920,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":4281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":335343,"byte_end":335357,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":4355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336878,"byte_end":336892,"line_start":75,"line_end":75,"column_start":21,"column_end":35},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":336992,"byte_end":337006,"line_start":82,"line_end":82,"column_start":22,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337105,"byte_end":337119,"line_start":89,"line_end":89,"column_start":21,"column_end":35},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337265,"byte_end":337279,"line_start":96,"line_end":96,"column_start":16,"column_end":30},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337412,"byte_end":337426,"line_start":105,"line_end":105,"column_start":23,"column_end":37},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337571,"byte_end":337585,"line_start":112,"line_end":112,"column_start":13,"column_end":27},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":337610,"byte_end":337624,"line_start":114,"line_end":114,"column_start":21,"column_end":35},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338224,"byte_end":338238,"line_start":141,"line_end":141,"column_start":14,"column_end":28},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338376,"byte_end":338390,"line_start":148,"line_end":148,"column_start":20,"column_end":34},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338517,"byte_end":338531,"line_start":155,"line_end":155,"column_start":21,"column_end":35},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338699,"byte_end":338713,"line_start":162,"line_end":162,"column_start":26,"column_end":40},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/string/mod.rs","byte_start":338849,"byte_end":338863,"line_start":169,"line_end":169,"column_start":25,"column_end":39},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":4355},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/time.rs","byte_start":346750,"byte_end":346766,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":8078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362318,"byte_end":362328,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":362522,"byte_end":362532,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":4457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377236,"byte_end":377239,"line_start":536,"line_end":536,"column_start":27,"column_end":30},"kind":{"Impl":{"id":656}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377358,"byte_end":377368,"line_start":543,"line_end":543,"column_start":22,"column_end":32},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377483,"byte_end":377493,"line_start":550,"line_end":550,"column_start":22,"column_end":32},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377597,"byte_end":377607,"line_start":557,"line_end":557,"column_start":23,"column_end":33},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377714,"byte_end":377724,"line_start":564,"line_end":564,"column_start":26,"column_end":36},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2619}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":377837,"byte_end":377847,"line_start":571,"line_end":571,"column_start":16,"column_end":26},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378160,"byte_end":378170,"line_start":583,"line_end":583,"column_start":21,"column_end":31},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378307,"byte_end":378317,"line_start":590,"line_end":590,"column_start":18,"column_end":28},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378405,"byte_end":378415,"line_start":597,"line_end":597,"column_start":16,"column_end":26},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378547,"byte_end":378557,"line_start":606,"line_end":606,"column_start":19,"column_end":29},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378708,"byte_end":378718,"line_start":613,"line_end":613,"column_start":47,"column_end":57},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":378933,"byte_end":378943,"line_start":622,"line_end":622,"column_start":50,"column_end":60},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379113,"byte_end":379123,"line_start":630,"line_end":630,"column_start":20,"column_end":30},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":4457},"to":{"krate":1,"index":4509}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379820,"byte_end":379830,"line_start":659,"line_end":659,"column_start":22,"column_end":32},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379911,"byte_end":379921,"line_start":662,"line_end":662,"column_start":22,"column_end":32},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/aligned_vec.rs","byte_start":379941,"byte_end":379951,"line_start":664,"line_end":664,"column_start":16,"column_end":26},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":3058}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":380936,"byte_end":380946,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381255,"byte_end":381265,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381396,"byte_end":381406,"line_start":33,"line_end":33,"column_start":31,"column_end":41},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":381422,"byte_end":381432,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":4554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":390550,"byte_end":390560,"line_start":310,"line_end":310,"column_start":9,"column_end":19},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":4554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391157,"byte_end":391167,"line_start":329,"line_end":329,"column_start":24,"column_end":34},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391286,"byte_end":391296,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391404,"byte_end":391414,"line_start":343,"line_end":343,"column_start":25,"column_end":35},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391525,"byte_end":391535,"line_start":350,"line_end":350,"column_start":28,"column_end":38},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2619}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391670,"byte_end":391680,"line_start":357,"line_end":357,"column_start":36,"column_end":46},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391826,"byte_end":391836,"line_start":364,"line_end":364,"column_start":24,"column_end":34},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":391978,"byte_end":391988,"line_start":373,"line_end":373,"column_start":27,"column_end":37},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392149,"byte_end":392159,"line_start":380,"line_end":380,"column_start":54,"column_end":64},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392383,"byte_end":392393,"line_start":389,"line_end":389,"column_start":57,"column_end":67},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":392834,"byte_end":392839,"line_start":406,"line_end":406,"column_start":36,"column_end":41},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393012,"byte_end":393017,"line_start":413,"line_end":413,"column_start":9,"column_end":14},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":4627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393204,"byte_end":393209,"line_start":421,"line_end":421,"column_start":24,"column_end":29},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393304,"byte_end":393309,"line_start":427,"line_end":427,"column_start":22,"column_end":27},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393641,"byte_end":393646,"line_start":443,"line_end":443,"column_start":33,"column_end":38},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":393850,"byte_end":393855,"line_start":452,"line_end":452,"column_start":18,"column_end":23},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":394138,"byte_end":394147,"line_start":458,"line_end":458,"column_start":34,"column_end":43},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":395422,"byte_end":395427,"line_start":493,"line_end":493,"column_start":31,"column_end":36},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/scratch_vec.rs","byte_start":395477,"byte_end":395482,"line_start":495,"line_end":495,"column_start":39,"column_end":44},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358562,"byte_end":358574,"line_start":224,"line_end":224,"column_start":34,"column_end":46},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":8102},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358668,"byte_end":358680,"line_start":230,"line_end":230,"column_start":32,"column_end":44},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":8102},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358826,"byte_end":358838,"line_start":239,"line_end":239,"column_start":35,"column_end":47},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":8102},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":358975,"byte_end":358987,"line_start":246,"line_end":246,"column_start":38,"column_end":50},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":8102},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/util/mod.rs","byte_start":359109,"byte_end":359121,"line_start":253,"line_end":253,"column_start":38,"column_end":50},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8102},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":407319,"byte_end":407333,"line_start":24,"line_end":24,"column_start":9,"column_end":23},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410122,"byte_end":410136,"line_start":108,"line_end":108,"column_start":24,"column_end":38},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410248,"byte_end":410262,"line_start":115,"line_end":115,"column_start":25,"column_end":39},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410368,"byte_end":410382,"line_start":122,"line_end":122,"column_start":19,"column_end":33},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410542,"byte_end":410556,"line_start":131,"line_end":131,"column_start":42,"column_end":56},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410770,"byte_end":410784,"line_start":140,"line_end":140,"column_start":59,"column_end":73},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":410966,"byte_end":410980,"line_start":147,"line_end":147,"column_start":64,"column_end":78},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":411320,"byte_end":411334,"line_start":161,"line_end":161,"column_start":45,"column_end":59},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":411657,"byte_end":411671,"line_start":175,"line_end":175,"column_start":55,"column_end":69},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":411846,"byte_end":411860,"line_start":182,"line_end":182,"column_start":22,"column_end":36},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/raw.rs","byte_start":412017,"byte_end":412031,"line_start":189,"line_end":189,"column_start":41,"column_end":55},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8120},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":396612,"byte_end":396623,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":4921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":401674,"byte_end":401685,"line_start":183,"line_end":183,"column_start":24,"column_end":35},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":401793,"byte_end":401804,"line_start":190,"line_end":190,"column_start":25,"column_end":36},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":401923,"byte_end":401934,"line_start":197,"line_end":197,"column_start":36,"column_end":47},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402087,"byte_end":402098,"line_start":203,"line_end":203,"column_start":19,"column_end":30},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402233,"byte_end":402244,"line_start":212,"line_end":212,"column_start":20,"column_end":31},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402287,"byte_end":402298,"line_start":214,"line_end":214,"column_start":36,"column_end":47},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402457,"byte_end":402468,"line_start":221,"line_end":221,"column_start":42,"column_end":53},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402650,"byte_end":402661,"line_start":230,"line_end":230,"column_start":22,"column_end":33},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":402842,"byte_end":402853,"line_start":237,"line_end":237,"column_start":56,"column_end":67},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403041,"byte_end":403052,"line_start":244,"line_end":244,"column_start":64,"column_end":75},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403384,"byte_end":403395,"line_start":258,"line_end":258,"column_start":45,"column_end":56},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403718,"byte_end":403729,"line_start":272,"line_end":272,"column_start":52,"column_end":63},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/vec/mod.rs","byte_start":403929,"byte_end":403940,"line_start":279,"line_end":279,"column_start":41,"column_end":52},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":432389,"byte_end":432396,"line_start":31,"line_end":31,"column_start":58,"column_end":65},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":432773,"byte_end":432780,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":433032,"byte_end":433039,"line_start":53,"line_end":53,"column_start":91,"column_end":98},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":433298,"byte_end":433305,"line_start":63,"line_end":63,"column_start":60,"column_end":67},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":433745,"byte_end":433752,"line_start":79,"line_end":79,"column_start":40,"column_end":47},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":434042,"byte_end":434049,"line_start":90,"line_end":90,"column_start":79,"column_end":86},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":434402,"byte_end":434409,"line_start":105,"line_end":105,"column_start":40,"column_end":47},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":434799,"byte_end":434806,"line_start":120,"line_end":120,"column_start":69,"column_end":76},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":435103,"byte_end":435110,"line_start":130,"line_end":130,"column_start":85,"column_end":92},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":435487,"byte_end":435494,"line_start":145,"line_end":145,"column_start":45,"column_end":52},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":435943,"byte_end":435950,"line_start":160,"line_end":160,"column_start":74,"column_end":81},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":436289,"byte_end":436296,"line_start":170,"line_end":170,"column_start":91,"column_end":98},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":8385},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":436616,"byte_end":436621,"line_start":183,"line_end":183,"column_start":62,"column_end":67},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":437012,"byte_end":437017,"line_start":197,"line_end":197,"column_start":52,"column_end":57},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":437493,"byte_end":437498,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":438118,"byte_end":438123,"line_start":238,"line_end":238,"column_start":47,"column_end":52},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":438485,"byte_end":438490,"line_start":252,"line_end":252,"column_start":46,"column_end":51},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":438842,"byte_end":438847,"line_start":262,"line_end":262,"column_start":74,"column_end":79},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":439326,"byte_end":439331,"line_start":282,"line_end":282,"column_start":66,"column_end":71},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":439786,"byte_end":439791,"line_start":299,"line_end":299,"column_start":49,"column_end":54},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":440196,"byte_end":440201,"line_start":313,"line_end":313,"column_start":83,"column_end":88},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":440674,"byte_end":440686,"line_start":333,"line_end":333,"column_start":42,"column_end":54},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":441038,"byte_end":441050,"line_start":347,"line_end":347,"column_start":41,"column_end":53},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":441544,"byte_end":441556,"line_start":362,"line_end":362,"column_start":69,"column_end":81},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":442242,"byte_end":442254,"line_start":384,"line_end":384,"column_start":44,"column_end":56},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":442632,"byte_end":442644,"line_start":398,"line_end":398,"column_start":43,"column_end":55},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":443153,"byte_end":443165,"line_start":413,"line_end":413,"column_start":73,"column_end":85},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":443916,"byte_end":443928,"line_start":438,"line_end":438,"column_start":63,"column_end":75},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":444347,"byte_end":444359,"line_start":452,"line_end":452,"column_start":62,"column_end":74},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":8397},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":444910,"byte_end":444913,"line_start":474,"line_end":474,"column_start":42,"column_end":45},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":8410},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":445278,"byte_end":445281,"line_start":488,"line_end":488,"column_start":41,"column_end":44},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":8410},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/alloc.rs","byte_start":445775,"byte_end":445778,"line_start":503,"line_end":503,"column_start":69,"column_end":72},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":8410},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":450157,"byte_end":450163,"line_start":95,"line_end":95,"column_start":39,"column_end":45},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":8351},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":450665,"byte_end":450671,"line_start":113,"line_end":113,"column_start":66,"column_end":72},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":8351},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":450954,"byte_end":450960,"line_start":122,"line_end":122,"column_start":13,"column_end":19},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":8351},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":451761,"byte_end":451767,"line_start":148,"line_end":148,"column_start":39,"column_end":45},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8351},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":452269,"byte_end":452275,"line_start":166,"line_end":166,"column_start":66,"column_end":72},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":8351},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/atomic.rs","byte_start":452534,"byte_end":452540,"line_start":174,"line_end":174,"column_start":13,"column_end":19},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":8351},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":453808,"byte_end":453814,"line_start":22,"line_end":22,"column_start":38,"column_end":44},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":8355},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":454163,"byte_end":454169,"line_start":37,"line_end":37,"column_start":70,"column_end":76},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":8355},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":454389,"byte_end":454397,"line_start":46,"line_end":46,"column_start":54,"column_end":62},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":8363},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":454820,"byte_end":454828,"line_start":61,"line_end":61,"column_start":86,"column_end":94},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":8363},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":455068,"byte_end":455073,"line_start":70,"line_end":70,"column_start":53,"column_end":58},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":8359},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":455493,"byte_end":455498,"line_start":85,"line_end":85,"column_start":85,"column_end":90},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":8359},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":455752,"byte_end":455757,"line_start":92,"line_end":92,"column_start":79,"column_end":84},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":8359},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":457564,"byte_end":457569,"line_start":150,"line_end":150,"column_start":44,"column_end":49},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":458020,"byte_end":458025,"line_start":166,"line_end":166,"column_start":71,"column_end":76},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":458267,"byte_end":458272,"line_start":174,"line_end":174,"column_start":9,"column_end":14},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":459249,"byte_end":459254,"line_start":202,"line_end":202,"column_start":44,"column_end":49},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":459705,"byte_end":459710,"line_start":218,"line_end":218,"column_start":71,"column_end":76},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/core.rs","byte_start":459952,"byte_end":459957,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":8393},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":461016,"byte_end":461024,"line_start":24,"line_end":24,"column_start":32,"column_end":40},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":8367},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":461542,"byte_end":461550,"line_start":41,"line_end":41,"column_start":59,"column_end":67},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":8367},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":461962,"byte_end":461970,"line_start":55,"line_end":55,"column_start":77,"column_end":85},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":8367},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":462173,"byte_end":462181,"line_start":62,"line_end":62,"column_start":31,"column_end":39},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":8367},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":462697,"byte_end":462705,"line_start":79,"line_end":79,"column_start":58,"column_end":66},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":8367},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":463115,"byte_end":463123,"line_start":93,"line_end":93,"column_start":76,"column_end":84},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":8367},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":463346,"byte_end":463350,"line_start":102,"line_end":102,"column_start":44,"column_end":48},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":8376},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":464276,"byte_end":464280,"line_start":124,"line_end":124,"column_start":76,"column_end":80},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":8376},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":464618,"byte_end":464622,"line_start":137,"line_end":137,"column_start":62,"column_end":66},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":8376},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":464915,"byte_end":464919,"line_start":148,"line_end":148,"column_start":45,"column_end":49},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":8376},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":465849,"byte_end":465853,"line_start":170,"line_end":170,"column_start":77,"column_end":81},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":8376},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":466193,"byte_end":466197,"line_start":183,"line_end":183,"column_start":63,"column_end":67},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":8376},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":466518,"byte_end":466523,"line_start":196,"line_end":196,"column_start":61,"column_end":66},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":466912,"byte_end":466917,"line_start":210,"line_end":210,"column_start":51,"column_end":56},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":467391,"byte_end":467396,"line_start":228,"line_end":228,"column_start":9,"column_end":14},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":468019,"byte_end":468024,"line_start":251,"line_end":251,"column_start":46,"column_end":51},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":468384,"byte_end":468389,"line_start":265,"line_end":265,"column_start":45,"column_end":50},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":468739,"byte_end":468744,"line_start":275,"line_end":275,"column_start":73,"column_end":78},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":469203,"byte_end":469216,"line_start":295,"line_end":295,"column_start":34,"column_end":47},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":8401},"to":{"krate":0,"index":5852}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":469705,"byte_end":469718,"line_start":312,"line_end":312,"column_start":61,"column_end":74},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":8401},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/std.rs","byte_start":470084,"byte_end":470097,"line_start":324,"line_end":324,"column_start":81,"column_end":94},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":8401},"to":{"krate":0,"index":5872}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":414872,"byte_end":414876,"line_start":52,"line_end":52,"column_start":20,"column_end":24},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":8335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415406,"byte_end":415410,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":8335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":415580,"byte_end":415584,"line_start":75,"line_end":75,"column_start":33,"column_end":37},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":8335},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419102,"byte_end":419106,"line_start":194,"line_end":194,"column_start":48,"column_end":52},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":8335},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419485,"byte_end":419496,"line_start":205,"line_end":205,"column_start":59,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":5852},"to":{"krate":0,"index":5863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":419740,"byte_end":419744,"line_start":210,"line_end":210,"column_start":80,"column_end":84},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":8335},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420239,"byte_end":420240,"line_start":223,"line_end":223,"column_start":49,"column_end":50},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":5878},"to":{"krate":0,"index":5933}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420684,"byte_end":420693,"line_start":243,"line_end":243,"column_start":17,"column_end":26},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":8344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":420841,"byte_end":420850,"line_start":251,"line_end":251,"column_start":27,"column_end":36},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":8344},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":424865,"byte_end":424878,"line_start":418,"line_end":418,"column_start":23,"column_end":36},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":8371},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":425041,"byte_end":425054,"line_start":425,"line_end":425,"column_start":30,"column_end":43},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":8371},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426282,"byte_end":426291,"line_start":465,"line_end":465,"column_start":23,"column_end":32},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":8380},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":426454,"byte_end":426463,"line_start":472,"line_end":472,"column_start":30,"column_end":39},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":8380},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":429977,"byte_end":429995,"line_start":598,"line_end":598,"column_start":23,"column_end":41},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":8405},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/with/mod.rs","byte_start":430180,"byte_end":430198,"line_start":605,"line_end":605,"column_start":30,"column_end":48},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":8405},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9070,"byte_end":9080,"line_start":204,"line_end":204,"column_start":19,"column_end":29},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":8414},"to":{"krate":0,"index":5920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":9147,"byte_end":9157,"line_start":208,"line_end":208,"column_start":18,"column_end":28},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":8414},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":18177,"byte_end":18184,"line_start":425,"line_end":425,"column_start":44,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":5926},"to":{"krate":0,"index":5930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":25844,"byte_end":25851,"line_start":613,"line_end":613,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":42},"to":{"krate":0,"index":5937}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28398,"byte_end":28405,"line_start":674,"line_end":674,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":42},"to":{"krate":0,"index":5942}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":28874,"byte_end":28888,"line_start":685,"line_end":685,"column_start":51,"column_end":65},"kind":"SuperTrait","from":{"krate":0,"index":5937},"to":{"krate":0,"index":5945}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.35/src/lib.rs","byte_start":29343,"byte_end":29357,"line_start":694,"line_end":694,"column_start":74,"column_end":88},"kind":"SuperTrait","from":{"krate":0,"index":5942},"to":{"krate":0,"index":5949}}]}