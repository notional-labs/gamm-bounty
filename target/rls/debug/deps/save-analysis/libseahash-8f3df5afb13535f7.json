{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","seahash","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=8f3df5afb13535f7","-C","extra-filename=-8f3df5afb13535f7","--out-dir","/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/target/rls/debug/deps/libseahash-8f3df5afb13535f7.rmeta"},"prelude":{"crate_id":{"name":"seahash","disambiguator":[2210998738040360748,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":0,"byte_end":8225,"line_start":1,"line_end":168,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":8073,"byte_end":8077,"line_start":159,"line_end":159,"column_start":18,"column_end":22},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":8079,"byte_end":8090,"line_start":159,"line_end":159,"column_start":24,"column_end":35},"alias_span":null,"name":"hash_seeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":8092,"byte_end":8097,"line_start":159,"line_end":159,"column_start":37,"column_end":42},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":8116,"byte_end":8125,"line_start":160,"line_end":160,"column_start":17,"column_end":26},"alias_span":null,"name":"SeaHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":0,"byte_end":8225,"line_start":1,"line_end":168,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":54}],"decl_id":null,"docs":" SeaHash: A blazingly fast, portable hash function with proven statistical guarantees.","sig":null,"attributes":[{"value":"/ SeaHash: A blazingly fast, portable hash function with proven statistical guarantees.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":0,"byte_end":89,"line_start":1,"line_end":1,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":90,"byte_end":93,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ SeaHash is a hash function with performance better than (around 3-20% improvement) xxHash and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":94,"byte_end":191,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ MetroHash. Furthermore, SeaHash has mathematically provable statistical guarantees.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":192,"byte_end":279,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":280,"byte_end":283,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ SeaHash is a portable hash function, meaning that the output is not dependent on the hosting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":284,"byte_end":380,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ architecture, and makes no assumptions on endianness or the alike. This stable layout allows it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":381,"byte_end":480,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ to be used for on-disk/permanent storage (e.g. checksums).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":481,"byte_end":543,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":544,"byte_end":547,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Design, advantages, and features","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":548,"byte_end":586,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":587,"byte_end":590,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ - **High quality**: It beats most other general purpose hash functions because it provides full","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":591,"byte_end":690,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/   avalanche inbetween state updates.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":691,"byte_end":731,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ - **Performance**: SeaHash beats every high-quality (grading 10/10 in smhasher) hash function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":732,"byte_end":829,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/    that I know of.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":830,"byte_end":852,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ - **Provable quality guarantees**: Contrary to most other non-cryptographic hash function,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":853,"byte_end":947,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"/   SeaHash can be proved to satisfy the avalanche criterion as well as BIC.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":948,"byte_end":1026,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ - **Parallelizable**: Consists of multiple, independent states to take advantage of ILP and/or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1027,"byte_end":1125,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   software threads.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1126,"byte_end":1149,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/ - **Bulk reads**: Reads 8 or 4 bytes a time.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1150,"byte_end":1198,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/ - **Stable and portable**: Does not depend on the target architecture, and produces a stable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1199,"byte_end":1295,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/   value, which is only changed in major version bumps.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1296,"byte_end":1354,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ - **Keyed**: Designed to not leak the seed/key. Note that it has not gone through","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1355,"byte_end":1440,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/   cryptoanalysis yet, so the keyed version shouldn't be relied on when security is needed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1441,"byte_end":1535,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ - **Hardware accelerateable**: SeaHash is designed such that ASICs can implement it with really","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1536,"byte_end":1635,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/   high performance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1636,"byte_end":1659,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1660,"byte_end":1663,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # A word of warning!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1664,"byte_end":1688,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1689,"byte_end":1692,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This is **not** a cryptographic function, and it certainly should not be used as one. If you","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1693,"byte_end":1789,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ want a good cryptographic hash function, you should use SHA-3 (Keccak) or BLAKE2.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1790,"byte_end":1875,"line_start":31,"line_end":31,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1876,"byte_end":1879,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is not secure, nor does it aim to be. It aims to have high quality pseudorandom output and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1880,"byte_end":1977,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ few collisions, as well as being fast.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":1978,"byte_end":2020,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2021,"byte_end":2024,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Benchmark","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2025,"byte_end":2040,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2041,"byte_end":2044,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ On normal hardware, it is expected to run with a rate around 5.9-6.7 GB/S on a 2.5 GHz CPU.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2045,"byte_end":2140,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ Further improvement can be seen when hashing very big buffers in parallel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2141,"byte_end":2219,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2220,"byte_end":2223,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ | Function    | Quality       | Cycles per byte (lower is better) | Author","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2224,"byte_end":2302,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ |-------------|---------------|-----------------------------------|-------------------","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2303,"byte_end":2393,"line_start":42,"line_end":42,"column_start":1,"column_end":91}},{"value":"/ | **SeaHash** | **Excellent** | **0.24**                          | **Ticki**","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2394,"byte_end":2475,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/ | xxHash      | Excellent     | 0.31                              | Collet","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2476,"byte_end":2554,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ | MetroHash   | Excellent     | 0.35                              | Rogers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2555,"byte_end":2633,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ | Murmur      | Excellent     | 0.64                              | Appleby","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2634,"byte_end":2713,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ | Rabin       | Medium        | 1.51                              | Rabin","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2714,"byte_end":2791,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ | CityHash    | Excellent     | 1.62                              | Pike, Alakuijala","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2792,"byte_end":2880,"line_start":48,"line_end":48,"column_start":1,"column_end":89}},{"value":"/ | LoseLose    | Terrible      | 2.01                              | Kernighan, Ritchie","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2881,"byte_end":2971,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/ | FNV         | Poor          | 3.12                              | Fowler, Noll, Vo","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":2972,"byte_end":3060,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/ | SipHash     | Pseudorandom  | 3.21                              | Aumasson, Bernstein","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3061,"byte_end":3152,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ | CRC         | Good          | 3.91                              | Peterson","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3153,"byte_end":3233,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ | DJB2        | Poor          | 4.13                              | Bernstein","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3234,"byte_end":3315,"line_start":53,"line_end":53,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3316,"byte_end":3319,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ## Ideal architecture","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3320,"byte_end":3345,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3346,"byte_end":3349,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ SeaHash is designed and optimized for the most common architecture in use:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3350,"byte_end":3428,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3429,"byte_end":3432,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - Little-endian","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3433,"byte_end":3452,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ - 64-bit","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3453,"byte_end":3465,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ - 64 or more bytes cache lines","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3466,"byte_end":3500,"line_start":61,"line_end":61,"column_start":1,"column_end":35}},{"value":"/ - 4 or more instruction pipelines","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3501,"byte_end":3538,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/ - 4 or more 64-bit registers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3539,"byte_end":3571,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3572,"byte_end":3575,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Anything that does not hold the above requirements will perform worse by up to 30-40%. Note that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3576,"byte_end":3676,"line_start":65,"line_end":65,"column_start":1,"column_end":101}},{"value":"/ this means it is still faster than CityHash (~1 GB/S), MurMurHash (~2.6 GB/S), FNV (~0.5 GB/S),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3677,"byte_end":3776,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ etc.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3777,"byte_end":3785,"line_start":67,"line_end":67,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3786,"byte_end":3789,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Achieving the performance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3790,"byte_end":3821,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3822,"byte_end":3825,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Like any good general-purpose hash function, SeaHash reads 8 bytes at once effectively reducing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3826,"byte_end":3925,"line_start":71,"line_end":71,"column_start":1,"column_end":100}},{"value":"/ the running time by an order of ~5.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3926,"byte_end":3965,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3966,"byte_end":3969,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Secondly, SeaHash achieves the performance by heavily exploiting Instruction-Level Parallelism.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":3970,"byte_end":4069,"line_start":74,"line_end":74,"column_start":1,"column_end":100}},{"value":"/ In particular, it fetches 4 integers in every round and independently diffuses them. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4070,"byte_end":4163,"line_start":75,"line_end":75,"column_start":1,"column_end":94}},{"value":"/ yields four different states, which are finally combined.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4164,"byte_end":4225,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4226,"byte_end":4229,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Statistical guarantees","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4230,"byte_end":4258,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4259,"byte_end":4262,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ SeaHash comes with certain proven guarantees about the statistical properties of the output:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4263,"byte_end":4359,"line_start":80,"line_end":80,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4360,"byte_end":4363,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ 1. Pick some _n_-byte sequence, _s_. The number of _n_-byte sequence colliding with _s_ is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4364,"byte_end":4458,"line_start":82,"line_end":82,"column_start":1,"column_end":95}},{"value":"/    independent of the choice of _s_ (all equivalence class have equal size).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4459,"byte_end":4539,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"/ 2. If you flip any bit in the input, the probability for any bit in the output to be flipped is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4540,"byte_end":4639,"line_start":84,"line_end":84,"column_start":1,"column_end":100}},{"value":"/    0.5.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4640,"byte_end":4651,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/ 3. The hash value of a sequence of uniformly distributed bytes is itself uniformly distributed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4652,"byte_end":4751,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4752,"byte_end":4755,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The first guarantee can be derived through deduction, by proving that the diffusion function is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4756,"byte_end":4855,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ bijective (reverse the XORs and find the congruence inverses to the primes).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4856,"byte_end":4936,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4937,"byte_end":4940,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The second guarantee requires more complex calculations: Construct a matrix of probabilities","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":4941,"byte_end":5037,"line_start":91,"line_end":91,"column_start":1,"column_end":97}},{"value":"/ and set one to certain (1), then apply transformations through the respective operations. The","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5038,"byte_end":5135,"line_start":92,"line_end":92,"column_start":1,"column_end":98}},{"value":"/ proof is a bit long, but relatively simple.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5136,"byte_end":5183,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5184,"byte_end":5187,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The third guarantee requires proving that the hash value is a tree, such that:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5188,"byte_end":5270,"line_start":95,"line_end":95,"column_start":1,"column_end":83}},{"value":"/ - Leafs represents the input values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5271,"byte_end":5311,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/ - Single-child nodes reduce to the diffusion of the child.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5312,"byte_end":5374,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/ - Multiple-child nodes reduce to the sum of the children.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5375,"byte_end":5436,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5437,"byte_end":5440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Then simply show that each of these reductions transform uniformly distributed variables to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5441,"byte_end":5536,"line_start":100,"line_end":100,"column_start":1,"column_end":96}},{"value":"/ uniformly distributed variables.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5537,"byte_end":5573,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5574,"byte_end":5577,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Inner workings","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5578,"byte_end":5598,"line_start":103,"line_end":103,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5599,"byte_end":5602,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ In technical terms, SeaHash follows a alternating 4-state length-padded Merkle–Damgård","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5603,"byte_end":5696,"line_start":105,"line_end":105,"column_start":1,"column_end":91}},{"value":"/ construction with an XOR-diffuse compression function (click to enlarge):","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5697,"byte_end":5774,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5775,"byte_end":5778,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [![A diagram.](http://ticki.github.io/img/seahash_construction_diagram.svg)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5779,"byte_end":5859,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ (http://ticki.github.io/img/seahash_construction_diagram.svg)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5860,"byte_end":5925,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5926,"byte_end":5929,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ It starts with 4 initial states, then it alternates between them (increment, wrap on 4) and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":5930,"byte_end":6025,"line_start":111,"line_end":111,"column_start":1,"column_end":96}},{"value":"/ does XOR with the respective block. When a state has been visited the diffusion function (f) is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6026,"byte_end":6125,"line_start":112,"line_end":112,"column_start":1,"column_end":100}},{"value":"/ applied. The very last block is padded with zeros.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6126,"byte_end":6180,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6181,"byte_end":6184,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ After all the blocks have been gone over, all the states are XOR'd to the number of bytes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6185,"byte_end":6278,"line_start":115,"line_end":115,"column_start":1,"column_end":94}},{"value":"/ written. The sum is then passed through the diffusion function, which produces the final hash","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6279,"byte_end":6376,"line_start":116,"line_end":116,"column_start":1,"column_end":98}},{"value":"/ value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6377,"byte_end":6387,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6388,"byte_end":6391,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The diffusion function is drawn below.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6392,"byte_end":6434,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6435,"byte_end":6438,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```notest","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6439,"byte_end":6452,"line_start":121,"line_end":121,"column_start":1,"column_end":14}},{"value":"/ x ← px","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6453,"byte_end":6465,"line_start":122,"line_end":122,"column_start":1,"column_end":11}},{"value":"/ x ← x ⊕ ((x ≫ 32) ≫ (x ≫ 60))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6466,"byte_end":6509,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/ x ← px","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6510,"byte_end":6522,"line_start":124,"line_end":124,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6523,"byte_end":6530,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6531,"byte_end":6534,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The advantage of having four completely segregated (note that there is no mix round, so they're","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6535,"byte_end":6634,"line_start":127,"line_end":127,"column_start":1,"column_end":100}},{"value":"/ entirely independent) states is that fast parallelism is possible. For example, if I were to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6635,"byte_end":6731,"line_start":128,"line_end":128,"column_start":1,"column_end":97}},{"value":"/ hash 1 TB, I can spawn up four threads which can run independently without _any_","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6732,"byte_end":6816,"line_start":129,"line_end":129,"column_start":1,"column_end":85}},{"value":"/ intercommunication or synchronization before the last round.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6817,"byte_end":6881,"line_start":130,"line_end":130,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6882,"byte_end":6885,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ If the diffusion function (f) was cryptographically secure, it would pass cryptoanalysis","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6886,"byte_end":6978,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ trivially. This might seem irrelevant, as it clearly isn't cryptographically secure, but it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":6979,"byte_end":7074,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ tells us something about the inner semantics. In particular, any diffusion function with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7075,"byte_end":7167,"line_start":134,"line_end":134,"column_start":1,"column_end":93}},{"value":"/ sufficient statistical quality will make up a good hash function in this construction.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7168,"byte_end":7258,"line_start":135,"line_end":135,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7259,"byte_end":7262,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Read [the blog post](http://ticki.github.io/blog/seahash-explained/) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7263,"byte_end":7353,"line_start":137,"line_end":137,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7354,"byte_end":7357,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # ASIC version","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7358,"byte_end":7376,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7377,"byte_end":7380,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ SeaHash is specifically designed such that it can be efficiently implemented in the form of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7381,"byte_end":7476,"line_start":141,"line_end":141,"column_start":1,"column_end":96}},{"value":"/ ASIC while only using very few transistors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7477,"byte_end":7524,"line_start":142,"line_end":142,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7525,"byte_end":7528,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Specification","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7529,"byte_end":7548,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7549,"byte_end":7552,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ See the [`reference`](./reference) module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7553,"byte_end":7599,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7600,"byte_end":7603,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ # Credits","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7604,"byte_end":7617,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7618,"byte_end":7621,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Aside for myself (@ticki), there are couple of other people who have helped creating this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7622,"byte_end":7716,"line_start":150,"line_end":150,"column_start":1,"column_end":95}},{"value":"/ Joshua Landau suggested using the [PCG family of diffusions](http://www.pcg-random.org/),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7717,"byte_end":7810,"line_start":151,"line_end":151,"column_start":1,"column_end":94}},{"value":"/ created by Melissa E. O'Neill. Sokolov Yura spotted multiple bugs in SeaHash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7811,"byte_end":7892,"line_start":152,"line_end":152,"column_start":1,"column_end":82}},{"value":"warn(missing_docs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7894,"byte_end":7916,"line_start":154,"line_end":154,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":7971,"byte_end":7977,"line_start":155,"line_end":155,"column_start":55,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8350,"byte_end":8355,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"State","qualname":"::buffer::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" A SeaHash state.\n","sig":null,"attributes":[{"value":"/ A SeaHash state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8301,"byte_end":8321,"line_start":7,"line_end":7,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8596,"byte_end":8599,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new(u64, u64, u64, u64) -> State","parent":null,"children":[],"decl_id":null,"docs":" Create a new state vector with some initial values.\n","sig":null,"attributes":[{"value":"/ Create a new state vector with some initial values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8529,"byte_end":8584,"line_start":23,"line_end":23,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8821,"byte_end":8825,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"hash","qualname":"<State>::hash","value":"pub fn hash(&[u8], (u64, u64, u64, u64)) -> State","parent":null,"children":[],"decl_id":null,"docs":" Hash a buffer with some seed.\n","sig":null,"attributes":[{"value":"/ Hash a buffer with some seed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8776,"byte_end":8809,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":13943,"byte_end":13947,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"push","qualname":"<State>::push","value":"pub fn push(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Write another 64-bit integer into the state.\n","sig":null,"attributes":[{"value":"/ Write another 64-bit integer into the state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":13883,"byte_end":13931,"line_start":170,"line_end":170,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":14540,"byte_end":14543,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"pop","qualname":"<State>::pop","value":"pub fn pop(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Remove the most recently written 64-bit integer from the state.","sig":null,"attributes":[{"value":"/ Remove the most recently written 64-bit integer from the state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":14362,"byte_end":14429,"line_start":188,"line_end":188,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":14434,"byte_end":14437,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Given the value of the most recently written u64 `last`, remove it from the state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":14442,"byte_end":14528,"line_start":190,"line_end":190,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":15053,"byte_end":15061,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state.\n","sig":null,"attributes":[{"value":"/ Finalize the state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":15004,"byte_end":15027,"line_start":208,"line_end":208,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":15032,"byte_end":15041,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16920,"byte_end":16924,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"hash","qualname":"::buffer::hash","value":"pub fn hash(&[u8]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Hash some buffer.","sig":null,"attributes":[{"value":"/ Hash some buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":15968,"byte_end":15989,"line_start":236,"line_end":236,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":15990,"byte_end":15993,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ This is a highly optimized implementation of SeaHash. It implements numerous techniques to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":15994,"byte_end":16088,"line_start":238,"line_end":238,"column_start":1,"column_end":95}},{"value":"/ improve performance:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16089,"byte_end":16113,"line_start":239,"line_end":239,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16114,"byte_end":16117,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ - Register allocation: This makes a great deal out of making sure everything fits into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16118,"byte_end":16208,"line_start":241,"line_end":241,"column_start":1,"column_end":91}},{"value":"/   registers such that minimal memory accesses are needed. This works quite successfully on most","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16209,"byte_end":16308,"line_start":242,"line_end":242,"column_start":1,"column_end":100}},{"value":"/   CPUs, and the only time it reads from memory is when it fetches the data of the buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16309,"byte_end":16402,"line_start":243,"line_end":243,"column_start":1,"column_end":94}},{"value":"/ - Bulk reads: Like most other good hash functions, we read 8 bytes a time. This obviously","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16403,"byte_end":16496,"line_start":244,"line_end":244,"column_start":1,"column_end":94}},{"value":"/   improves performance a lot","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16497,"byte_end":16529,"line_start":245,"line_end":245,"column_start":1,"column_end":33}},{"value":"/ - Independent updates: We make sure very few statements next to each other depends on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16530,"byte_end":16623,"line_start":246,"line_end":246,"column_start":1,"column_end":94}},{"value":"/   other. This means that almost always the CPU will be able to run the instructions in parallel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16624,"byte_end":16724,"line_start":247,"line_end":247,"column_start":1,"column_end":101}},{"value":"/ - Loop unrolling: The hot loop is unrolled such that very little branches (one every 32 bytes)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16725,"byte_end":16823,"line_start":248,"line_end":248,"column_start":1,"column_end":99}},{"value":"/   are needed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16824,"byte_end":16841,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16842,"byte_end":16845,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ and more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16846,"byte_end":16859,"line_start":251,"line_end":251,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16860,"byte_end":16863,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The seed of this hash function is prechosen.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":16864,"byte_end":16912,"line_start":253,"line_end":253,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":18086,"byte_end":18097,"line_start":279,"line_end":279,"column_start":8,"column_end":19},"name":"hash_seeded","qualname":"::buffer::hash_seeded","value":"pub fn hash_seeded(&[u8], u64, u64, u64, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Hash some buffer according to a chosen seed.","sig":null,"attributes":[{"value":"/ Hash some buffer according to a chosen seed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17097,"byte_end":17145,"line_start":264,"line_end":264,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17146,"byte_end":17149,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ The keys are expected to be chosen from a uniform distribution. The keys should be mutually","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17150,"byte_end":17245,"line_start":266,"line_end":266,"column_start":1,"column_end":96}},{"value":"/ distinct to avoid issues with collisions if the lanes are permuted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17246,"byte_end":17317,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17318,"byte_end":17321,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This is not secure, as [the key can be extracted with a bit of computational","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17322,"byte_end":17402,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ work](https://github.com/ticki/tfs/issues/5), as such, it is recommended to have a fallback","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17403,"byte_end":17498,"line_start":270,"line_end":270,"column_start":1,"column_end":96}},{"value":"/ hash function (adaptive hashing) in the case of hash flooding. It can be considered unbroken if","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17499,"byte_end":17598,"line_start":271,"line_end":271,"column_start":1,"column_end":100}},{"value":"/ the output is not known (i.e. no malicious party has access to the raw values of the keys, only","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17599,"byte_end":17698,"line_start":272,"line_end":272,"column_start":1,"column_end":100}},{"value":"/ a permutation thereof).), however I absolutely do not recommend using it for this. If you want","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17699,"byte_end":17797,"line_start":273,"line_end":273,"column_start":1,"column_end":99}},{"value":"/ to be strict, this should only be used as a layer of obfuscation, such that the fallback (e.g.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17798,"byte_end":17896,"line_start":274,"line_end":274,"column_start":1,"column_end":99}},{"value":"/ SipHash) is harder to trigger.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17897,"byte_end":17931,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17932,"byte_end":17935,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ In the future, I might strengthen the security if possible while having backward compatibility","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":17936,"byte_end":18034,"line_start":277,"line_end":277,"column_start":1,"column_end":99}},{"value":"/ with the default initialization vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":18035,"byte_end":18078,"line_start":278,"line_end":278,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":38},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reference","qualname":"::reference","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" A slow, but clear reference implementation of SeaHash.","sig":null,"attributes":[{"value":"/ A slow, but clear reference implementation of SeaHash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26211,"byte_end":26269,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26270,"byte_end":26273,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Specification","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26274,"byte_end":26293,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26294,"byte_end":26297,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The input buffer is padded with null bytes until the length is divisible by 8.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26298,"byte_end":26380,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26381,"byte_end":26384,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ We start out with state","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26385,"byte_end":26412,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26413,"byte_end":26416,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```notest","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26417,"byte_end":26430,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ a = 0x16f11fe89b0d677c","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26431,"byte_end":26457,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/ b = 0xb480a793d8e6c86c","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26458,"byte_end":26484,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ c = 0x6fe2e5aaf078ebc9","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26485,"byte_end":26511,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ d = 0x14f994a4c5259381","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26512,"byte_end":26538,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26539,"byte_end":26546,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26547,"byte_end":26550,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If a seed is given, each of the initial state component are modularly multiplied by the seed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26551,"byte_end":26648,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26649,"byte_end":26652,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ From the stream, we read one 64-bit block (in little-endian) at a time.  This number, `n`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26653,"byte_end":26747,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ determines the new state by:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26748,"byte_end":26780,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26781,"byte_end":26784,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```notest","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26785,"byte_end":26798,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ a' = b","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26799,"byte_end":26809,"line_start":22,"line_end":22,"column_start":1,"column_end":11}},{"value":"/ b' = c","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26810,"byte_end":26820,"line_start":23,"line_end":23,"column_start":1,"column_end":11}},{"value":"/ c' = d","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26821,"byte_end":26831,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"/ d' = g(a ⊕ n)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26832,"byte_end":26851,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26852,"byte_end":26859,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26860,"byte_end":26863,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `g(x)` is defined as `g(x) = j(h(j(x)))` with `h(x) = (x ≫ 32) ≫ (x ≫ 60)` and `j(x) ≡ px (mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26864,"byte_end":26970,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ 2^64)` with `p = 0x7ed0e9fa0d94a33`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":26971,"byte_end":27011,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":27012,"byte_end":27015,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Let the final state be `(x, y, z, w)`. Then the final result is given by `H = g(x ⊕ y ⊕ z ⊕ w ⊕","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":27016,"byte_end":27123,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ l)` where `l` is the number of bytes in the original buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":27124,"byte_end":27188,"line_start":32,"line_end":32,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29601,"byte_end":29605,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"hash","qualname":"::reference::hash","value":"pub fn hash(&[u8]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A reference implementation of SeaHash.","sig":null,"attributes":[{"value":"/ A reference implementation of SeaHash.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29186,"byte_end":29228,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29229,"byte_end":29232,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This is bloody slow when compared to the optimized version. This is because SeaHash was","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29233,"byte_end":29324,"line_start":114,"line_end":114,"column_start":1,"column_end":92}},{"value":"/ specifically designed to take all sorts of hardware and software hacks into account to achieve","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29325,"byte_end":29423,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/ maximal performance, but this makes code significantly less readable. As such, this version has","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29424,"byte_end":29523,"line_start":116,"line_end":116,"column_start":1,"column_end":100}},{"value":"/ only one goal: to make the algorithm readable and understandable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29524,"byte_end":29593,"line_start":117,"line_end":117,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29841,"byte_end":29852,"line_start":129,"line_end":129,"column_start":8,"column_end":19},"name":"hash_seeded","qualname":"::reference::hash_seeded","value":"pub fn hash_seeded(&[u8], u64, u64, u64, u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The seeded version of the reference implementation.\n","sig":null,"attributes":[{"value":"/ The seeded version of the reference implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":29778,"byte_end":29833,"line_start":128,"line_end":128,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":30654,"byte_end":30663,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SeaHasher","qualname":"::stream::SeaHasher","value":"SeaHasher {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" The streaming version of the algorithm.\n","sig":null,"attributes":[{"value":"/ The streaming version of the algorithm.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":30576,"byte_end":30619,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31216,"byte_end":31219,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<SeaHasher>::new","value":"pub fn new() -> SeaHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SeaHasher` with default state.\n","sig":null,"attributes":[{"value":"/ Create a new `SeaHasher` with default state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31156,"byte_end":31204,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31414,"byte_end":31424,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"with_seeds","qualname":"<SeaHasher>::with_seeds","value":"pub fn with_seeds(u64, u64, u64, u64) -> SeaHasher","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SeaHasher` given some seed.","sig":null,"attributes":[{"value":"/ Construct a new `SeaHasher` given some seed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31277,"byte_end":31325,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31330,"byte_end":31333,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ For maximum quality, these seeds should be chosen at random.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31338,"byte_end":31402,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8517,"byte_end":8522,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":27816,"byte_end":27821,"line_start":68,"line_end":68,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":30913,"byte_end":30922,"line_start":19,"line_end":19,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31140,"byte_end":31149,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":37187,"byte_end":37196,"line_start":165,"line_end":165,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/lib.rs","byte_start":8160,"byte_end":8169,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":38}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/buffer.rs","byte_start":8517,"byte_end":8522,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/reference.rs","byte_start":27816,"byte_end":27821,"line_start":68,"line_end":68,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":43},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":30913,"byte_end":30922,"line_start":19,"line_end":19,"column_start":18,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":31140,"byte_end":31149,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/seahash-4.1.0/src/stream.rs","byte_start":37187,"byte_end":37196,"line_start":165,"line_end":165,"column_start":17,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":9765}}]}