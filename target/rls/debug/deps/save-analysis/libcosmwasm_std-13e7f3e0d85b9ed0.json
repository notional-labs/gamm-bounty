{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cosmwasm_std","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","--cfg","feature=\"staking\"","--cfg","feature=\"stargate\"","-C","metadata=13e7f3e0d85b9ed0","-C","extra-filename=-13e7f3e0d85b9ed0","--out-dir","/home/pegasus/gamm-bounty/target/rls/debug/deps","-L","dependency=/home/pegasus/gamm-bounty/target/rls/debug/deps","--extern","base64=/home/pegasus/gamm-bounty/target/rls/debug/deps/libbase64-fc54b7dac8c37ff8.rmeta","--extern","cosmwasm_crypto=/home/pegasus/gamm-bounty/target/rls/debug/deps/libcosmwasm_crypto-9c09c68f2d422dbf.rmeta","--extern","cosmwasm_derive=/home/pegasus/gamm-bounty/target/rls/debug/deps/libcosmwasm_derive-e0940b54583889c2.so","--extern","forward_ref=/home/pegasus/gamm-bounty/target/rls/debug/deps/libforward_ref-ad53a069a2fb4eca.rmeta","--extern","schemars=/home/pegasus/gamm-bounty/target/rls/debug/deps/libschemars-9754f47e22dce047.rmeta","--extern","serde=/home/pegasus/gamm-bounty/target/rls/debug/deps/libserde-c1d432fbb121598a.rmeta","--extern","serde_json_wasm=/home/pegasus/gamm-bounty/target/rls/debug/deps/libserde_json_wasm-3052ff04be52c143.rmeta","--extern","thiserror=/home/pegasus/gamm-bounty/target/rls/debug/deps/libthiserror-e3a57847eed1a010.rmeta","--extern","uint=/home/pegasus/gamm-bounty/target/rls/debug/deps/libuint-96451aa6e73e4f40.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/gamm-bounty/target/rls/debug/deps/libcosmwasm_std-13e7f3e0d85b9ed0.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_std","disambiguator":[44137453521606470,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":20,"id":{"name":"schemars","disambiguator":[17440064862244611357,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":21,"id":{"name":"schemars_derive","disambiguator":[2540693042485245159,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":22,"id":{"name":"serde_json","disambiguator":[12678097581128961371,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":23,"id":{"name":"serde","disambiguator":[17980787110817151086,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":24,"id":{"name":"serde_derive","disambiguator":[148910710895920752,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":25,"id":{"name":"itoa","disambiguator":[17049241849807862071,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":26,"id":{"name":"ryu","disambiguator":[17940794535282221057,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","num":27,"id":{"name":"dyn_clone","disambiguator":[13100049144307428382,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":28,"id":{"name":"cosmwasm_crypto","disambiguator":[3444350373674553527,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":29,"id":{"name":"ed25519_zebra","disambiguator":[5956362811929139524,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":30,"id":{"name":"curve25519_dalek","disambiguator":[4317110610654966187,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":31,"id":{"name":"byteorder","disambiguator":[10759264828178175851,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":32,"id":{"name":"digest","disambiguator":[5824929665002196307,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":33,"id":{"name":"generic_array","disambiguator":[16503618241300499417,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":34,"id":{"name":"typenum","disambiguator":[15156522918217822298,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":35,"id":{"name":"rand_core","disambiguator":[15207504034317212721,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":36,"id":{"name":"getrandom","disambiguator":[2461200758836736362,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":37,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":38,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":39,"id":{"name":"zeroize","disambiguator":[17242528780769521303,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":40,"id":{"name":"subtle","disambiguator":[6726078597970934848,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":41,"id":{"name":"sha2","disambiguator":[17449906326775450644,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":42,"id":{"name":"block_buffer","disambiguator":[2941707752308610780,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":43,"id":{"name":"opaque_debug","disambiguator":[13793138413731508433,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":44,"id":{"name":"cpufeatures","disambiguator":[671447939216757284,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":45,"id":{"name":"thiserror","disambiguator":[9532481712551766127,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":46,"id":{"name":"thiserror_impl","disambiguator":[5255882316168842,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":47,"id":{"name":"hex","disambiguator":[11626158831599541981,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":48,"id":{"name":"k256","disambiguator":[14824828738918670918,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":49,"id":{"name":"elliptic_curve","disambiguator":[7564582286802622957,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":50,"id":{"name":"ff","disambiguator":[7275797372374354766,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":51,"id":{"name":"rand_core","disambiguator":[15011191323302329710,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":52,"id":{"name":"getrandom","disambiguator":[4404432128622822102,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":53,"id":{"name":"group","disambiguator":[6224525368059733775,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":54,"id":{"name":"pkcs8","disambiguator":[14172027859217563322,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":55,"id":{"name":"der","disambiguator":[6250461571298937335,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":56,"id":{"name":"const_oid","disambiguator":[11007946657151268298,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":57,"id":{"name":"spki","disambiguator":[12889950664987281820,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":58,"id":{"name":"crypto_bigint","disambiguator":[2831363836755876264,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":59,"id":{"name":"ecdsa","disambiguator":[668564338190648431,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":60,"id":{"name":"hmac","disambiguator":[16192299068299546387,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":61,"id":{"name":"crypto_mac","disambiguator":[6278053353291529653,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","num":62,"id":{"name":"signature","disambiguator":[17607123070581677799,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","num":63,"id":{"name":"forward_ref","disambiguator":[13070892360798197713,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","num":64,"id":{"name":"cosmwasm_derive","disambiguator":[9029782114737316099,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","num":65,"id":{"name":"uint","disambiguator":[15616148857499711007,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","num":66,"id":{"name":"static_assertions","disambiguator":[3211594889311287531,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","num":67,"id":{"name":"crunchy","disambiguator":[14877014724138690532,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","num":68,"id":{"name":"base64","disambiguator":[11527856027903617124,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/serde.rs","num":69,"id":{"name":"serde_json_wasm","disambiguator":[67554095449317982,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":0,"byte_end":4360,"line_start":1,"line_end":120,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48316,"byte_end":48334,"line_start":6,"line_end":6,"column_start":31,"column_end":49},"alias_span":null,"name":"RecoverPubkeyError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3606},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48361,"byte_end":48384,"line_start":8,"line_end":8,"column_start":5,"column_end":28},"alias_span":null,"name":"ConversionOverflowError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48386,"byte_end":48403,"line_start":8,"line_end":8,"column_start":30,"column_end":47},"alias_span":null,"name":"DivideByZeroError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3583},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48405,"byte_end":48418,"line_start":8,"line_end":8,"column_start":49,"column_end":62},"alias_span":null,"name":"OverflowError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48420,"byte_end":48437,"line_start":8,"line_end":8,"column_start":64,"column_end":81},"alias_span":null,"name":"OverflowOperation","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3496},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48439,"byte_end":48447,"line_start":8,"line_end":8,"column_start":83,"column_end":91},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48453,"byte_end":48462,"line_start":9,"line_end":9,"column_start":5,"column_end":14},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48489,"byte_end":48500,"line_start":11,"line_end":11,"column_start":23,"column_end":34},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/mod.rs","byte_start":48530,"byte_end":48547,"line_start":12,"line_end":12,"column_start":29,"column_end":46},"alias_span":null,"name":"VerificationError","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":5301},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110888,"byte_end":110895,"line_start":10,"line_end":10,"column_start":19,"column_end":26},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5334},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110897,"byte_end":110917,"line_start":10,"line_end":10,"column_start":28,"column_end":48},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5335},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110897,"byte_end":110917,"line_start":10,"line_end":10,"column_start":28,"column_end":48},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5336},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110941,"byte_end":110951,"line_start":11,"line_end":11,"column_start":22,"column_end":32},"alias_span":null,"name":"Decimal256","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110953,"byte_end":110976,"line_start":11,"line_end":11,"column_start":34,"column_end":57},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5370},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110953,"byte_end":110976,"line_start":11,"line_end":11,"column_start":34,"column_end":57},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":110997,"byte_end":111005,"line_start":12,"line_end":12,"column_start":19,"column_end":27},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":111022,"byte_end":111027,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"alias_span":null,"name":"Isqrt","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5371},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":111046,"byte_end":111053,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":5952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":111072,"byte_end":111079,"line_start":15,"line_end":15,"column_start":18,"column_end":25},"alias_span":null,"name":"Uint256","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":6533},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":111098,"byte_end":111105,"line_start":16,"line_end":16,"column_start":18,"column_end":25},"alias_span":null,"name":"Uint512","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/mod.rs","byte_start":111123,"byte_end":111129,"line_start":17,"line_end":17,"column_start":17,"column_end":23},"alias_span":null,"name":"Uint64","value":"","parent":{"krate":0,"index":563}},{"kind":"Use","ref_id":{"krate":0,"index":6856},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322692,"byte_end":322710,"line_start":14,"line_end":14,"column_start":16,"column_end":34},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":6795},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322712,"byte_end":322727,"line_start":14,"line_end":14,"column_start":36,"column_end":51},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":6730},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322729,"byte_end":322738,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322784,"byte_end":322799,"line_start":16,"line_end":16,"column_start":15,"column_end":30},"alias_span":null,"name":"ChannelResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7019},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322801,"byte_end":322809,"line_start":16,"line_end":16,"column_start":32,"column_end":40},"alias_span":null,"name":"IbcQuery","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7087},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322811,"byte_end":322831,"line_start":16,"line_end":16,"column_start":42,"column_end":62},"alias_span":null,"name":"ListChannelsResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7026},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322833,"byte_end":322847,"line_start":16,"line_end":16,"column_start":64,"column_end":78},"alias_span":null,"name":"PortIdResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7570},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322901,"byte_end":322923,"line_start":19,"line_end":19,"column_start":5,"column_end":27},"alias_span":null,"name":"AllDelegationsResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322925,"byte_end":322946,"line_start":19,"line_end":19,"column_start":29,"column_end":50},"alias_span":null,"name":"AllValidatorsResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7509},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322948,"byte_end":322967,"line_start":19,"line_end":19,"column_start":52,"column_end":71},"alias_span":null,"name":"BondedDenomResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7572},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":322969,"byte_end":322979,"line_start":19,"line_end":19,"column_start":73,"column_end":83},"alias_span":null,"name":"Delegation","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7700},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323005,"byte_end":323019,"line_start":20,"line_end":20,"column_start":25,"column_end":39},"alias_span":null,"name":"FullDelegation","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323021,"byte_end":323033,"line_start":20,"line_end":20,"column_start":41,"column_end":53},"alias_span":null,"name":"StakingQuery","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323035,"byte_end":323044,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"alias_span":null,"name":"Validator","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":7834},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323046,"byte_end":323063,"line_start":20,"line_end":20,"column_start":66,"column_end":83},"alias_span":null,"name":"ValidatorResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":8200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323148,"byte_end":323168,"line_start":24,"line_end":24,"column_start":16,"column_end":36},"alias_span":null,"name":"ContractInfoResponse","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":8191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323170,"byte_end":323179,"line_start":24,"line_end":24,"column_start":38,"column_end":47},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":1760}},{"kind":"Use","ref_id":{"krate":0,"index":8471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":334957,"byte_end":334971,"line_start":12,"line_end":12,"column_start":26,"column_end":40},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":334994,"byte_end":335006,"line_start":13,"line_end":13,"column_start":22,"column_end":34},"alias_span":null,"name":"wasm_execute","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335008,"byte_end":335024,"line_start":13,"line_end":13,"column_start":36,"column_end":52},"alias_span":null,"name":"wasm_instantiate","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":8748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335026,"byte_end":335033,"line_start":13,"line_end":13,"column_start":54,"column_end":61},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":8595},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335035,"byte_end":335044,"line_start":13,"line_end":13,"column_start":63,"column_end":72},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335046,"byte_end":335055,"line_start":13,"line_end":13,"column_start":74,"column_end":83},"alias_span":null,"name":"CustomMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9315},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335057,"byte_end":335064,"line_start":13,"line_end":13,"column_start":85,"column_end":92},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9059},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335116,"byte_end":335131,"line_start":15,"line_end":15,"column_start":22,"column_end":37},"alias_span":null,"name":"DistributionMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":8923},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335133,"byte_end":335143,"line_start":15,"line_end":15,"column_start":39,"column_end":49},"alias_span":null,"name":"StakingMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9426},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335196,"byte_end":335202,"line_start":17,"line_end":17,"column_start":22,"column_end":28},"alias_span":null,"name":"GovMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335204,"byte_end":335214,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"alias_span":null,"name":"VoteOption","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335232,"byte_end":335237,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":2084},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335256,"byte_end":335260,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9620},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335262,"byte_end":335271,"line_start":19,"line_end":19,"column_start":24,"column_end":33},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335273,"byte_end":335278,"line_start":19,"line_end":19,"column_start":35,"column_end":40},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":2091},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335296,"byte_end":335309,"line_start":20,"line_end":20,"column_start":16,"column_end":29},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9686},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335329,"byte_end":335337,"line_start":21,"line_end":21,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9915},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335361,"byte_end":335366,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Reply","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9826},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335368,"byte_end":335375,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"alias_span":null,"name":"ReplyOn","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":9835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335377,"byte_end":335383,"line_start":22,"line_end":22,"column_start":39,"column_end":45},"alias_span":null,"name":"SubMsg","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":10043},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335385,"byte_end":335408,"line_start":22,"line_end":22,"column_start":47,"column_end":70},"alias_span":null,"name":"SubMsgExecutionResponse","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":10036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335410,"byte_end":335422,"line_start":22,"line_end":22,"column_start":72,"column_end":84},"alias_span":null,"name":"SubMsgResult","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":10173},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/mod.rs","byte_start":335448,"byte_end":335460,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":1937}},{"kind":"Use","ref_id":{"krate":0,"index":3278},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":389,"byte_end":393,"line_start":26,"line_end":26,"column_start":28,"column_end":32},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":395,"byte_end":408,"line_start":26,"line_end":26,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3329},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":395,"byte_end":408,"line_start":26,"line_end":26,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":434,"byte_end":440,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3375},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":434,"byte_end":440,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":465,"byte_end":469,"line_start":28,"line_end":28,"column_start":24,"column_end":28},"alias_span":null,"name":"coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":471,"byte_end":476,"line_start":28,"line_end":28,"column_start":30,"column_end":35},"alias_span":null,"name":"coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":478,"byte_end":487,"line_start":28,"line_end":28,"column_start":37,"column_end":46},"alias_span":null,"name":"has_coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3399},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":489,"byte_end":493,"line_start":28,"line_end":28,"column_start":48,"column_end":52},"alias_span":null,"name":"Coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3465},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":518,"byte_end":522,"line_start":29,"line_end":29,"column_start":23,"column_end":27},"alias_span":null,"name":"Deps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":524,"byte_end":531,"line_start":29,"line_end":29,"column_start":29,"column_end":36},"alias_span":null,"name":"DepsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":533,"byte_end":542,"line_start":29,"line_end":29,"column_start":38,"column_end":47},"alias_span":null,"name":"OwnedDeps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3606},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":574,"byte_end":597,"line_start":31,"line_end":31,"column_start":5,"column_end":28},"alias_span":null,"name":"ConversionOverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":599,"byte_end":616,"line_start":31,"line_end":31,"column_start":30,"column_end":47},"alias_span":null,"name":"DivideByZeroError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3583},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":618,"byte_end":631,"line_start":31,"line_end":31,"column_start":49,"column_end":62},"alias_span":null,"name":"OverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":633,"byte_end":650,"line_start":31,"line_end":31,"column_start":64,"column_end":81},"alias_span":null,"name":"OverflowOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":656,"byte_end":674,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"alias_span":null,"name":"RecoverPubkeyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3496},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":676,"byte_end":684,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":686,"byte_end":695,"line_start":32,"line_end":32,"column_start":35,"column_end":44},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":697,"byte_end":708,"line_start":32,"line_end":32,"column_start":46,"column_end":57},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":710,"byte_end":727,"line_start":32,"line_end":32,"column_start":59,"column_end":76},"alias_span":null,"name":"VerificationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":787,"byte_end":805,"line_start":36,"line_end":36,"column_start":5,"column_end":23},"alias_span":null,"name":"IbcAcknowledgement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":807,"byte_end":823,"line_start":36,"line_end":36,"column_start":25,"column_end":41},"alias_span":null,"name":"IbcBasicResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4216},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":825,"byte_end":835,"line_start":36,"line_end":36,"column_start":43,"column_end":53},"alias_span":null,"name":"IbcChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4943},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":837,"byte_end":855,"line_start":36,"line_end":36,"column_start":55,"column_end":73},"alias_span":null,"name":"IbcChannelCloseMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4812},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":857,"byte_end":877,"line_start":36,"line_end":36,"column_start":75,"column_end":95},"alias_span":null,"name":"IbcChannelConnectMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4679},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":883,"byte_end":900,"line_start":37,"line_end":37,"column_start":5,"column_end":22},"alias_span":null,"name":"IbcChannelOpenMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4088},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":902,"byte_end":913,"line_start":37,"line_end":37,"column_start":24,"column_end":35},"alias_span":null,"name":"IbcEndpoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4076},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":915,"byte_end":921,"line_start":37,"line_end":37,"column_start":37,"column_end":43},"alias_span":null,"name":"IbcMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4289},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":923,"byte_end":931,"line_start":37,"line_end":37,"column_start":45,"column_end":53},"alias_span":null,"name":"IbcOrder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":933,"byte_end":942,"line_start":37,"line_end":37,"column_start":55,"column_end":64},"alias_span":null,"name":"IbcPacket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5009},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":944,"byte_end":959,"line_start":37,"line_end":37,"column_start":66,"column_end":81},"alias_span":null,"name":"IbcPacketAckMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4948},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":965,"byte_end":984,"line_start":38,"line_end":38,"column_start":5,"column_end":24},"alias_span":null,"name":"IbcPacketReceiveMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5073},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":986,"byte_end":1005,"line_start":38,"line_end":38,"column_start":26,"column_end":45},"alias_span":null,"name":"IbcPacketTimeoutMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5211},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1007,"byte_end":1025,"line_start":38,"line_end":38,"column_start":47,"column_end":65},"alias_span":null,"name":"IbcReceiveResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1027,"byte_end":1037,"line_start":38,"line_end":38,"column_start":67,"column_end":77},"alias_span":null,"name":"IbcTimeout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4350},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1039,"byte_end":1054,"line_start":38,"line_end":38,"column_start":79,"column_end":94},"alias_span":null,"name":"IbcTimeoutBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1134,"byte_end":1138,"line_start":42,"line_end":42,"column_start":26,"column_end":30},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5291},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1195,"byte_end":1200,"line_start":44,"line_end":44,"column_start":27,"column_end":32},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1202,"byte_end":1208,"line_start":44,"line_end":44,"column_start":34,"column_end":40},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5301},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1238,"byte_end":1245,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5336},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1247,"byte_end":1257,"line_start":46,"line_end":46,"column_start":14,"column_end":24},"alias_span":null,"name":"Decimal256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1259,"byte_end":1282,"line_start":46,"line_end":46,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5370},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1259,"byte_end":1282,"line_start":46,"line_end":46,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5334},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1284,"byte_end":1304,"line_start":46,"line_end":46,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5335},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1284,"byte_end":1304,"line_start":46,"line_end":46,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1306,"byte_end":1314,"line_start":46,"line_end":46,"column_start":73,"column_end":81},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1316,"byte_end":1321,"line_start":46,"line_end":46,"column_start":83,"column_end":88},"alias_span":null,"name":"Isqrt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5371},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1323,"byte_end":1330,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1336,"byte_end":1343,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"Uint256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6533},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1345,"byte_end":1352,"line_start":47,"line_end":47,"column_start":14,"column_end":21},"alias_span":null,"name":"Uint512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1354,"byte_end":1360,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"alias_span":null,"name":"Uint64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6856},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1393,"byte_end":1411,"line_start":50,"line_end":50,"column_start":5,"column_end":23},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6795},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1413,"byte_end":1428,"line_start":50,"line_end":50,"column_start":25,"column_end":40},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6730},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1430,"byte_end":1439,"line_start":50,"line_end":50,"column_start":42,"column_end":51},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1441,"byte_end":1461,"line_start":50,"line_end":50,"column_start":53,"column_end":73},"alias_span":null,"name":"ContractInfoResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1463,"byte_end":1474,"line_start":50,"line_end":50,"column_start":75,"column_end":86},"alias_span":null,"name":"CustomQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1480,"byte_end":1492,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"alias_span":null,"name":"QueryRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1494,"byte_end":1503,"line_start":51,"line_end":51,"column_start":19,"column_end":28},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7570},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1564,"byte_end":1586,"line_start":55,"line_end":55,"column_start":5,"column_end":27},"alias_span":null,"name":"AllDelegationsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1588,"byte_end":1609,"line_start":55,"line_end":55,"column_start":29,"column_end":50},"alias_span":null,"name":"AllValidatorsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7509},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1611,"byte_end":1630,"line_start":55,"line_end":55,"column_start":52,"column_end":71},"alias_span":null,"name":"BondedDenomResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7572},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1632,"byte_end":1642,"line_start":55,"line_end":55,"column_start":73,"column_end":83},"alias_span":null,"name":"Delegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7700},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1644,"byte_end":1658,"line_start":55,"line_end":55,"column_start":85,"column_end":99},"alias_span":null,"name":"FullDelegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1664,"byte_end":1676,"line_start":56,"line_end":56,"column_start":5,"column_end":17},"alias_span":null,"name":"StakingQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1678,"byte_end":1687,"line_start":56,"line_end":56,"column_start":19,"column_end":28},"alias_span":null,"name":"Validator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7834},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1689,"byte_end":1706,"line_start":56,"line_end":56,"column_start":30,"column_end":47},"alias_span":null,"name":"ValidatorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1763,"byte_end":1778,"line_start":59,"line_end":59,"column_start":24,"column_end":39},"alias_span":null,"name":"ChannelResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7019},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1780,"byte_end":1788,"line_start":59,"line_end":59,"column_start":41,"column_end":49},"alias_span":null,"name":"IbcQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7087},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1790,"byte_end":1810,"line_start":59,"line_end":59,"column_start":51,"column_end":71},"alias_span":null,"name":"ListChannelsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7026},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1812,"byte_end":1826,"line_start":59,"line_end":59,"column_start":73,"column_end":87},"alias_span":null,"name":"PortIdResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2084},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1859,"byte_end":1863,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1865,"byte_end":1877,"line_start":61,"line_end":61,"column_start":11,"column_end":23},"alias_span":null,"name":"wasm_execute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1879,"byte_end":1895,"line_start":61,"line_end":61,"column_start":25,"column_end":41},"alias_span":null,"name":"wasm_instantiate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9620},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1897,"byte_end":1906,"line_start":61,"line_end":61,"column_start":43,"column_end":52},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1908,"byte_end":1915,"line_start":61,"line_end":61,"column_start":54,"column_end":61},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1917,"byte_end":1931,"line_start":61,"line_end":61,"column_start":63,"column_end":77},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8595},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1933,"byte_end":1942,"line_start":61,"line_end":61,"column_start":79,"column_end":88},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1944,"byte_end":1953,"line_start":61,"line_end":61,"column_start":90,"column_end":99},"alias_span":null,"name":"CustomMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1959,"byte_end":1964,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1966,"byte_end":1971,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2091},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1973,"byte_end":1986,"line_start":62,"line_end":62,"column_start":19,"column_end":32},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9915},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1988,"byte_end":1993,"line_start":62,"line_end":62,"column_start":34,"column_end":39},"alias_span":null,"name":"Reply","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9826},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":1995,"byte_end":2002,"line_start":62,"line_end":62,"column_start":41,"column_end":48},"alias_span":null,"name":"ReplyOn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9686},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2004,"byte_end":2012,"line_start":62,"line_end":62,"column_start":50,"column_end":58},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2014,"byte_end":2020,"line_start":62,"line_end":62,"column_start":60,"column_end":66},"alias_span":null,"name":"SubMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10043},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2022,"byte_end":2045,"line_start":62,"line_end":62,"column_start":68,"column_end":91},"alias_span":null,"name":"SubMsgExecutionResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2051,"byte_end":2063,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"alias_span":null,"name":"SubMsgResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10173},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2065,"byte_end":2077,"line_start":63,"line_end":63,"column_start":19,"column_end":31},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9315},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2079,"byte_end":2086,"line_start":63,"line_end":63,"column_start":33,"column_end":40},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9059},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2144,"byte_end":2159,"line_start":66,"line_end":66,"column_start":26,"column_end":41},"alias_span":null,"name":"DistributionMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8923},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2161,"byte_end":2171,"line_start":66,"line_end":66,"column_start":43,"column_end":53},"alias_span":null,"name":"StakingMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9426},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2228,"byte_end":2234,"line_start":68,"line_end":68,"column_start":26,"column_end":32},"alias_span":null,"name":"GovMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2236,"byte_end":2246,"line_start":68,"line_end":68,"column_start":34,"column_end":44},"alias_span":null,"name":"VoteOption","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2331},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2272,"byte_end":2283,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"alias_span":null,"name":"from_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2285,"byte_end":2295,"line_start":69,"line_end":69,"column_start":37,"column_end":47},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2336},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2297,"byte_end":2306,"line_start":69,"line_end":69,"column_start":49,"column_end":58},"alias_span":null,"name":"to_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2333},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2308,"byte_end":2314,"line_start":69,"line_end":69,"column_start":60,"column_end":66},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10181},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2341,"byte_end":2354,"line_start":70,"line_end":70,"column_start":25,"column_end":38},"alias_span":null,"name":"MemoryStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2382,"byte_end":2391,"line_start":71,"line_end":71,"column_start":27,"column_end":36},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2417,"byte_end":2420,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"alias_span":null,"name":"Api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2422,"byte_end":2429,"line_start":72,"line_end":72,"column_start":30,"column_end":37},"alias_span":null,"name":"Querier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2431,"byte_end":2444,"line_start":72,"line_end":72,"column_start":39,"column_end":52},"alias_span":null,"name":"QuerierResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10235},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2446,"byte_end":2460,"line_start":72,"line_end":72,"column_start":54,"column_end":68},"alias_span":null,"name":"QuerierWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2525},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2462,"byte_end":2469,"line_start":72,"line_end":72,"column_start":70,"column_end":77},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10364},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2495,"byte_end":2504,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2506,"byte_end":2518,"line_start":73,"line_end":73,"column_start":35,"column_end":47},"alias_span":null,"name":"ContractInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2520,"byte_end":2523,"line_start":73,"line_end":73,"column_start":49,"column_end":52},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10431},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2525,"byte_end":2536,"line_start":73,"line_end":73,"column_start":54,"column_end":65},"alias_span":null,"name":"MessageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10307},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":2538,"byte_end":2553,"line_start":73,"line_end":73,"column_start":67,"column_end":82},"alias_span":null,"name":"TransactionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10564},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3609,"byte_end":3623,"line_start":102,"line_end":102,"column_start":26,"column_end":40},"alias_span":null,"name":"StakingQuerier","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3660,"byte_end":3669,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"alias_span":null,"name":"digit_sum","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3671,"byte_end":3688,"line_start":104,"line_end":104,"column_start":20,"column_end":37},"alias_span":null,"name":"mock_dependencies","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3690,"byte_end":3720,"line_start":104,"line_end":104,"column_start":39,"column_end":69},"alias_span":null,"name":"mock_dependencies_with_balance","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3115},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3730,"byte_end":3761,"line_start":105,"line_end":105,"column_start":9,"column_end":40},"alias_span":null,"name":"mock_dependencies_with_balances","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3763,"byte_end":3771,"line_start":105,"line_end":105,"column_start":42,"column_end":50},"alias_span":null,"name":"mock_env","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3773,"byte_end":3782,"line_start":105,"line_end":105,"column_start":52,"column_end":61},"alias_span":null,"name":"mock_info","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3784,"byte_end":3799,"line_start":105,"line_end":105,"column_start":63,"column_end":78},"alias_span":null,"name":"mock_wasmd_attr","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3801,"byte_end":3815,"line_start":105,"line_end":105,"column_start":80,"column_end":94},"alias_span":null,"name":"riffle_shuffle","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":10558},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3825,"byte_end":3836,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"alias_span":null,"name":"BankQuerier","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":10548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3838,"byte_end":3845,"line_start":106,"line_end":106,"column_start":22,"column_end":29},"alias_span":null,"name":"MockApi","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3847,"byte_end":3858,"line_start":106,"line_end":106,"column_start":31,"column_end":42},"alias_span":null,"name":"MockQuerier","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3150},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3860,"byte_end":3890,"line_start":106,"line_end":106,"column_start":44,"column_end":74},"alias_span":null,"name":"MockQuerierCustomHandlerResult","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3116},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3892,"byte_end":3903,"line_start":106,"line_end":106,"column_start":76,"column_end":87},"alias_span":null,"name":"MockStorage","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3112},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3913,"byte_end":3931,"line_start":107,"line_end":107,"column_start":9,"column_end":27},"alias_span":null,"name":"MOCK_CONTRACT_ADDR","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4008,"byte_end":4024,"line_start":111,"line_end":111,"column_start":9,"column_end":25},"alias_span":null,"name":"mock_ibc_channel","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3141},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4026,"byte_end":4056,"line_start":111,"line_end":111,"column_start":27,"column_end":57},"alias_span":null,"name":"mock_ibc_channel_close_confirm","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4058,"byte_end":4085,"line_start":111,"line_end":111,"column_start":59,"column_end":86},"alias_span":null,"name":"mock_ibc_channel_close_init","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4095,"byte_end":4123,"line_start":112,"line_end":112,"column_start":9,"column_end":37},"alias_span":null,"name":"mock_ibc_channel_connect_ack","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3139},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4125,"byte_end":4157,"line_start":112,"line_end":112,"column_start":39,"column_end":71},"alias_span":null,"name":"mock_ibc_channel_connect_confirm","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4159,"byte_end":4185,"line_start":112,"line_end":112,"column_start":73,"column_end":99},"alias_span":null,"name":"mock_ibc_channel_open_init","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3137},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4195,"byte_end":4220,"line_start":113,"line_end":113,"column_start":9,"column_end":34},"alias_span":null,"name":"mock_ibc_channel_open_try","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3146},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4222,"byte_end":4241,"line_start":113,"line_end":113,"column_start":36,"column_end":55},"alias_span":null,"name":"mock_ibc_packet_ack","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3142},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4243,"byte_end":4263,"line_start":113,"line_end":113,"column_start":57,"column_end":77},"alias_span":null,"name":"mock_ibc_packet_recv","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":0,"index":3148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4273,"byte_end":4296,"line_start":114,"line_end":114,"column_start":9,"column_end":32},"alias_span":null,"name":"mock_ibc_packet_timeout","value":"","parent":{"krate":0,"index":3197}},{"kind":"Use","ref_id":{"krate":64,"index":10},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":4348,"byte_end":4359,"line_start":120,"line_end":120,"column_start":26,"column_end":37},"alias_span":null,"name":"entry_point","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":0,"byte_end":4360,"line_start":1,"line_end":120,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":158},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":245},{"krate":0,"index":385},{"krate":0,"index":541},{"krate":0,"index":547},{"krate":0,"index":563},{"krate":0,"index":1760},{"krate":0,"index":1937},{"krate":0,"index":2299},{"krate":0,"index":2307},{"krate":0,"index":2338},{"krate":0,"index":2382},{"krate":0,"index":2411},{"krate":0,"index":2580},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2802},{"krate":0,"index":2805},{"krate":0,"index":2808},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2839},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2880},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2893},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":3197},{"krate":0,"index":3275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3278},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5538,"byte_end":5542,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Addr","qualname":"::addresses::Addr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A human readable address.","sig":null,"attributes":[{"value":"/ A human readable address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4511,"byte_end":4540,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4541,"byte_end":4544,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4545,"byte_end":4632,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/ assumptions should be made other than being UTF-8 encoded and of reasonable length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4633,"byte_end":4720,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4721,"byte_end":4724,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type represents a validated address. It can be created in the following ways","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4725,"byte_end":4810,"line_start":14,"line_end":14,"column_start":1,"column_end":86}},{"value":"/ 1. Use `Addr::unchecked(input)`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4811,"byte_end":4846,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ 2. Use `let checked: Addr = deps.api.addr_validate(input)?`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4847,"byte_end":4910,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4911,"byte_end":4983,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ 4. Deserialize from JSON. This must only be done from JSON that was validated before","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":4984,"byte_end":5072,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"/    such as a contract's state. `Addr` must not be used in messages sent by the user","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5073,"byte_end":5160,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/    because this would result in unvalidated instances.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5161,"byte_end":5219,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5220,"byte_end":5223,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is immutable. If you really need to mutate it (Really? Are you sure?), create","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5224,"byte_end":5315,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5316,"byte_end":5407,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5408,"byte_end":5421,"line_start":24,"line_end":24,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6230,"byte_end":6239,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"unchecked","qualname":"<Addr>::unchecked","value":"pub fn unchecked<impl Into<String>: Into<String>>(impl Into<String>) -> Addr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Addr` instance from the given input without checking the validity\n of the input. Since `Addr` must always contain valid addresses, the caller is\n responsible for ensuring the input is valid.","sig":null,"attributes":[{"value":"/ Creates a new `Addr` instance from the given input without checking the validity","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5569,"byte_end":5653,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ of the input. Since `Addr` must always contain valid addresses, the caller is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5658,"byte_end":5739,"line_start":32,"line_end":32,"column_start":5,"column_end":86}},{"value":"/ responsible for ensuring the input is valid.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5744,"byte_end":5792,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5797,"byte_end":5800,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Use this in cases where the address was validated before or in test code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5805,"byte_end":5882,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ If you see this in contract code, it should most likely be replaced with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5887,"byte_end":5963,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5968,"byte_end":6034,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6039,"byte_end":6042,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6047,"byte_end":6062,"line_start":39,"line_end":39,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6067,"byte_end":6070,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6075,"byte_end":6082,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6087,"byte_end":6118,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ let address = Addr::unchecked(\"foobar\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6123,"byte_end":6167,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(address, \"foobar\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6172,"byte_end":6206,"line_start":44,"line_end":44,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6211,"byte_end":6218,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6335,"byte_end":6341,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Addr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6314,"byte_end":6323,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6550,"byte_end":6558,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Addr>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the UTF-8 encoded address string as a byte array.","sig":null,"attributes":[{"value":"/ Returns the UTF-8 encoded address string as a byte array.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6394,"byte_end":6455,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6460,"byte_end":6463,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `address.as_str().as_bytes()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6468,"byte_end":6524,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6529,"byte_end":6538,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6688,"byte_end":6699,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Addr>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Utility for explicit conversion to `String`.\n","sig":null,"attributes":[{"value":"/ Utility for explicit conversion to `String`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6614,"byte_end":6662,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6667,"byte_end":6676,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8125,"byte_end":8138,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"CanonicalAddr","qualname":"::addresses::CanonicalAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3330},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8139,"byte_end":8149,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"name":"0","qualname":"::addresses::CanonicalAddr::0","value":"binary::Binary","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":9061,"byte_end":9069,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CanonicalAddr>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23336,"byte_end":23342,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Binary","qualname":"::binary::Binary","value":"","parent":null,"children":[],"decl_id":null,"docs":" Binary is a wrapper around Vec<u8> to add base64 de/serialization\n with serde. It also adds some helper methods to help encode inline.","sig":null,"attributes":[{"value":"/ Binary is a wrapper around Vec<u8> to add base64 de/serialization","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23017,"byte_end":23086,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ with serde. It also adds some helper methods to help encode inline.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23087,"byte_end":23158,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23159,"byte_end":23162,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23163,"byte_end":23248,"line_start":12,"line_end":12,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":3398},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23372,"byte_end":23383,"line_start":14,"line_end":14,"column_start":48,"column_end":59},"name":"0","qualname":"::binary::Binary::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"schemars(with = \"String\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23343,"byte_end":23371,"line_start":14,"line_end":14,"column_start":19,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23513,"byte_end":23524,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"from_base64","qualname":"<Binary>::from_base64","value":"pub fn from_base64(&str) -> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" take an (untrusted) string and decode it into bytes.\n fails if it is not valid base64\n","sig":null,"attributes":[{"value":"/ take an (untrusted) string and decode it into bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23405,"byte_end":23461,"line_start":17,"line_end":17,"column_start":5,"column_end":61}},{"value":"/ fails if it is not valid base64","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23466,"byte_end":23501,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23843,"byte_end":23852,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"to_base64","qualname":"<Binary>::to_base64","value":"pub fn to_base64(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" encode to base64 string (guaranteed to be success as we control the data inside).\n this returns normalized form (with trailing = if needed)\n","sig":null,"attributes":[{"value":"/ encode to base64 string (guaranteed to be success as we control the data inside).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23681,"byte_end":23766,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ this returns normalized form (with trailing = if needed)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23771,"byte_end":23831,"line_start":25,"line_end":25,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23922,"byte_end":23930,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Binary>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24974,"byte_end":24982,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Binary>::to_array","value":"pub fn to_array<const LENGTH: usize>(&Self) -> StdResult<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Copies content into fixed-sized array.\n The result type `A: ByteArray` is a workaround for\n the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).\n `A` is a fixed-sized array like `[u8; 8]`.","sig":null,"attributes":[{"value":"/ Copies content into fixed-sized array.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23986,"byte_end":24028,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/ The result type `A: ByteArray` is a workaround for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24033,"byte_end":24087,"line_start":35,"line_end":35,"column_start":5,"column_end":59}},{"value":"/ the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24092,"byte_end":24184,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ `A` is a fixed-sized array like `[u8; 8]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24189,"byte_end":24235,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24240,"byte_end":24243,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ByteArray is implemented for `[u8; 0]` to `[u8; 64]`, such that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24248,"byte_end":24315,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ we are limited to 64 bytes for now.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24320,"byte_end":24359,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24364,"byte_end":24367,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24372,"byte_end":24386,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24391,"byte_end":24394,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Copy to array of explicit length","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24399,"byte_end":24435,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24440,"byte_end":24443,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24448,"byte_end":24455,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24460,"byte_end":24491,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24496,"byte_end":24547,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/ let array: [u8; 3] = binary.to_array().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24552,"byte_end":24604,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(array, [0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24609,"byte_end":24651,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24656,"byte_end":24663,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24668,"byte_end":24671,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Copy to integer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24676,"byte_end":24695,"line_start":53,"line_end":53,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24700,"byte_end":24703,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24708,"byte_end":24715,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24720,"byte_end":24751,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0x8b, 0x67, 0x64, 0x84, 0xb5, 0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24756,"byte_end":24837,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ let num = u64::from_be_bytes(binary.to_array().unwrap());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24842,"byte_end":24903,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num, 10045108015024774967);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24908,"byte_end":24950,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":24955,"byte_end":24962,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3399},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39730,"byte_end":39734,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Coin","qualname":"::coins::Coin","value":"Coin { denom, amount }","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3400},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39745,"byte_end":39750,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"denom","qualname":"::coins::Coin::denom","value":"std::string::String","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3401},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39768,"byte_end":39774,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"amount","qualname":"::coins::Coin::amount","value":"math::uint128::Uint128","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39811,"byte_end":39814,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Coin>::new","value":"pub fn new<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40985,"byte_end":40990,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"coins","qualname":"::coins::coins","value":"pub fn coins<impl Into<String>: Into<String>>(u128, impl Into<String>)\n-> Vec<Coin>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut constructor for a set of one denomination of coins","sig":null,"attributes":[{"value":"/ A shortcut constructor for a set of one denomination of coins","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40460,"byte_end":40525,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40526,"byte_end":40529,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40530,"byte_end":40544,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40545,"byte_end":40548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40549,"byte_end":40556,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40557,"byte_end":40627,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40628,"byte_end":40683,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40684,"byte_end":40711,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40712,"byte_end":40754,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/ let tip = coins(123, \"ucosm\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40755,"byte_end":40789,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40790,"byte_end":40793,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40794,"byte_end":40846,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40847,"byte_end":40903,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/   to_address: info.sender.into(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40904,"byte_end":40941,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/   amount: tip,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40942,"byte_end":40960,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ })];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40961,"byte_end":40969,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":40970,"byte_end":40977,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41626,"byte_end":41630,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"coin","qualname":"::coins::coin","value":"pub fn coin<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Coin","parent":null,"children":[],"decl_id":null,"docs":" A shorthand constructor for Coin","sig":null,"attributes":[{"value":"/ A shorthand constructor for Coin","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41079,"byte_end":41115,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41116,"byte_end":41119,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41120,"byte_end":41134,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41135,"byte_end":41138,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41139,"byte_end":41146,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coin, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41147,"byte_end":41216,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41217,"byte_end":41272,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41273,"byte_end":41300,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41301,"byte_end":41343,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ let tip = vec![","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41344,"byte_end":41363,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/     coin(123, \"ucosm\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41364,"byte_end":41391,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     coin(24, \"ustake\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41392,"byte_end":41419,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41420,"byte_end":41426,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41427,"byte_end":41430,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41431,"byte_end":41483,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41484,"byte_end":41540,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/     to_address: info.sender.into(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41541,"byte_end":41580,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/     amount: tip,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41581,"byte_end":41601,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ })];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41602,"byte_end":41610,"line_start":71,"line_end":71,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41611,"byte_end":41618,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41801,"byte_end":41810,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"has_coins","qualname":"::coins::has_coins","value":"pub fn has_coins(&[Coin], &Coin) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has_coins returns true if the list of coins has at least the required amount\n","sig":null,"attributes":[{"value":"/ has_coins returns true if the list of coins has at least the required amount","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":41713,"byte_end":41793,"line_start":77,"line_end":77,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44877,"byte_end":44886,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"OwnedDeps","qualname":"::deps::OwnedDeps","value":"OwnedDeps { storage, api, querier, custom_query_type }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" Holds all external dependencies of the contract.\n Designed to allow easy dependency injection at runtime.\n This cannot be copied or cloned since it would behave differently\n for mock storages and a bridge storage in the VM.\n","sig":null,"attributes":[{"value":"/ Holds all external dependencies of the contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44629,"byte_end":44681,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ Designed to allow easy dependency injection at runtime.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44682,"byte_end":44741,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ This cannot be copied or cloned since it would behave differently","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44742,"byte_end":44811,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ for mock storages and a bridge storage in the VM.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44812,"byte_end":44865,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":220},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44953,"byte_end":44960,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::OwnedDeps::storage","value":"S","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44973,"byte_end":44976,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::OwnedDeps::api","value":"A","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":222},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":44989,"byte_end":44996,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::OwnedDeps::querier","value":"Q","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45009,"byte_end":45026,"line_start":16,"line_end":16,"column_start":9,"column_end":26},"name":"custom_query_type","qualname":"::deps::OwnedDeps::custom_query_type","value":"std::marker::PhantomData<C>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45058,"byte_end":45065,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"DepsMut","qualname":"::deps::DepsMut","value":"DepsMut { storage, api, querier }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45104,"byte_end":45111,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::DepsMut::storage","value":"&'a mut (dyn traits::Storage + 'a)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45142,"byte_end":45145,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::DepsMut::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45168,"byte_end":45175,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::DepsMut::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3465},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45231,"byte_end":45235,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Deps","qualname":"::deps::Deps","value":"Deps { storage, api, querier }","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3468},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45274,"byte_end":45281,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::Deps::storage","value":"&'a (dyn traits::Storage + 'a)","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45308,"byte_end":45311,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::Deps::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3470},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45334,"byte_end":45341,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::Deps::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45802,"byte_end":45808,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<OwnedDeps<S, A, Q, C>>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":46000,"byte_end":46006,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<OwnedDeps<S, A, Q, C>>::as_mut","value":"pub fn as_mut(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":46256,"byte_end":46262,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<DepsMut>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":46430,"byte_end":46436,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"branch","qualname":"<DepsMut>::branch","value":"pub fn branch(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48820,"byte_end":48837,"line_start":11,"line_end":11,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidHashFormat","value":"RecoverPubkeyError::InvalidHashFormat","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48784,"byte_end":48815,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48884,"byte_end":48906,"line_start":13,"line_end":13,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidSignatureFormat","value":"RecoverPubkeyError::InvalidSignatureFormat","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48843,"byte_end":48879,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48983,"byte_end":49003,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidRecoveryParam","value":"RecoverPubkeyError::InvalidRecoveryParam","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48912,"byte_end":48978,"line_start":14,"line_end":14,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3494},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49053,"byte_end":49063,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::UnknownErr","value":"RecoverPubkeyError::UnknownErr { error_code }","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49009,"byte_end":49048,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":48759,"byte_end":48777,"line_start":9,"line_end":9,"column_start":10,"column_end":28},"name":"RecoverPubkeyError","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError","value":"pub enum RecoverPubkeyError {\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49207,"byte_end":49218,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<RecoverPubkeyError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3515},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52133,"byte_end":52148,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"name":"VerificationErr","qualname":"::errors::std_error::StdError::VerificationErr","value":"StdError::VerificationErr { source }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Verification error: {source}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52088,"byte_end":52128,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3517},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52313,"byte_end":52329,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"RecoverPubkeyErr","qualname":"::errors::std_error::StdError::RecoverPubkeyErr","value":"StdError::RecoverPubkeyErr { source }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Recover pubkey error: {source}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52266,"byte_end":52308,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":3519},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52544,"byte_end":52554,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::std_error::StdError::GenericErr","value":"StdError::GenericErr { msg }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":" Whenever there is no specific error type available\n","sig":null,"attributes":[{"value":"/ Whenever there is no specific error type available","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52448,"byte_end":52502,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"error(\"Generic error: {msg}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52507,"byte_end":52539,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":3521},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52703,"byte_end":52716,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"InvalidBase64","qualname":"::errors::std_error::StdError::InvalidBase64","value":"StdError::InvalidBase64 { msg }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid Base64 string: {msg}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52658,"byte_end":52698,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3523},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52891,"byte_end":52906,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"name":"InvalidDataSize","qualname":"::errors::std_error::StdError::InvalidDataSize","value":"StdError::InvalidDataSize { expected, actual }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid data size: expected={expected} actual={actual}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52820,"byte_end":52886,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3526},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53208,"byte_end":53219,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::errors::std_error::StdError::InvalidUtf8","value":"StdError::InvalidUtf8 { msg }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":" Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.\n","sig":null,"attributes":[{"value":"/ Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53033,"byte_end":53143,"line_start":57,"line_end":57,"column_start":5,"column_end":115}},{"value":"error(\"Cannot decode UTF8 bytes into string: {msg}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53148,"byte_end":53203,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3528},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53356,"byte_end":53364,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::errors::std_error::StdError::NotFound","value":"StdError::NotFound { kind }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{kind} not found\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53323,"byte_end":53351,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3530},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53530,"byte_end":53538,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"ParseErr","qualname":"::errors::std_error::StdError::ParseErr","value":"StdError::ParseErr { target_type, msg }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error parsing into type {target_type}: {msg}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53469,"byte_end":53525,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":3533},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53778,"byte_end":53790,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"SerializeErr","qualname":"::errors::std_error::StdError::SerializeErr","value":"StdError::SerializeErr { source_type, msg }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error serializing type {source_type}: {msg}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53718,"byte_end":53773,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3536},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54005,"byte_end":54013,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::errors::std_error::StdError::Overflow","value":"StdError::Overflow { source }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Overflow: {source}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":53970,"byte_end":54000,"line_start":86,"line_end":86,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":3538},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54168,"byte_end":54180,"line_start":93,"line_end":93,"column_start":5,"column_end":17},"name":"DivideByZero","qualname":"::errors::std_error::StdError::DivideByZero","value":"StdError::DivideByZero { source }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Divide by zero: {source}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54127,"byte_end":54163,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54333,"byte_end":54351,"line_start":99,"line_end":99,"column_start":5,"column_end":23},"name":"ConversionOverflow","qualname":"::errors::std_error::StdError::ConversionOverflow","value":"StdError::ConversionOverflow { source }","parent":{"krate":0,"index":3496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Conversion error: \")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54298,"byte_end":54328,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3496},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":52073,"byte_end":52081,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"StdError","qualname":"::errors::std_error::StdError","value":"pub enum StdError {\n    VerificationErr {\n        source: VerificationError,\n    },\n    RecoverPubkeyErr {\n        source: RecoverPubkeyError,\n    },\n    GenericErr {\n        msg: String,\n    },\n    InvalidBase64 {\n        msg: String,\n    },\n    InvalidDataSize {\n        expected: u64,\n        actual: u64,\n    },\n    InvalidUtf8 {\n        msg: String,\n    },\n    NotFound {\n        kind: String,\n    },\n    ParseErr {\n        target_type: String,\n        msg: String,\n    },\n    SerializeErr {\n        source_type: String,\n        msg: String,\n    },\n    Overflow {\n        source: OverflowError,\n    },\n    DivideByZero {\n        source: DivideByZeroError,\n    },\n    ConversionOverflow {\n        source: ConversionOverflowError,\n    },\n}","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3519},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540}],"decl_id":null,"docs":" Structured error type for init, execute and query.","sig":null,"attributes":[{"value":"/ Structured error type for init, execute and query.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51292,"byte_end":51346,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51347,"byte_end":51350,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This can be serialized and passed over the Wasm/VM boundary, which allows us to use structured","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51351,"byte_end":51449,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ error types in e.g. integration tests. In that process backtraces are stripped off.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51450,"byte_end":51537,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51538,"byte_end":51541,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard error within the standard library\". This is not the only","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51542,"byte_end":51639,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51640,"byte_end":51678,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51679,"byte_end":51682,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When new cases are added, they should describe the problem rather than what was attempted (e.g.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51683,"byte_end":51782,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ InvalidBase64 is preferred over Base64DecodingErr). In the long run this allows us to get rid of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51783,"byte_end":51883,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ the duplication in \"StdError::FooErr\".","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51884,"byte_end":51926,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51927,"byte_end":51930,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Checklist for adding a new error:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51931,"byte_end":51968,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ - Add enum case","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51969,"byte_end":51988,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/ - Add creator function in std_error_helpers.rs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":51989,"byte_end":52039,"line_start":22,"line_end":22,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54517,"byte_end":54533,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"verification_err","qualname":"<StdError>::verification_err","value":"pub fn verification_err(VerificationError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54743,"byte_end":54761,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"recover_pubkey_err","qualname":"<StdError>::recover_pubkey_err","value":"pub fn recover_pubkey_err(RecoverPubkeyError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54973,"byte_end":54984,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"generic_err","qualname":"<StdError>::generic_err","value":"pub fn generic_err<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":55195,"byte_end":55209,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"invalid_base64","qualname":"<StdError>::invalid_base64","value":"pub fn invalid_base64<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":55424,"byte_end":55441,"line_start":140,"line_end":140,"column_start":12,"column_end":29},"name":"invalid_data_size","qualname":"<StdError>::invalid_data_size","value":"pub fn invalid_data_size(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":55805,"byte_end":55817,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"invalid_utf8","qualname":"<StdError>::invalid_utf8","value":"pub fn invalid_utf8<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":56030,"byte_end":56039,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"not_found","qualname":"<StdError>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":56251,"byte_end":56260,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"parse_err","qualname":"<StdError>::parse_err","value":"pub fn parse_err<impl Into<String>: Into<String>,\n                 impl ToString: ToString>(impl Into<String>, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":56537,"byte_end":56550,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"serialize_err","qualname":"<StdError>::serialize_err","value":"pub fn serialize_err<impl Into<String>: Into<String>,\n                     impl ToString: ToString>(impl Into<String>,\n                                              impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":56831,"byte_end":56839,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"overflow","qualname":"<StdError>::overflow","value":"pub fn overflow(OverflowError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":57038,"byte_end":57052,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"divide_by_zero","qualname":"<StdError>::divide_by_zero","value":"pub fn divide_by_zero(DivideByZeroError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":310},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64828,"byte_end":64837,"line_start":447,"line_end":447,"column_start":10,"column_end":19},"name":"StdResult","qualname":"::errors::std_error::StdResult","value":"core::result::Result<T, StdError>","parent":null,"children":[],"decl_id":null,"docs":" The return type for init, execute and query. Since the error type cannot be serialized to JSON,\n this is only available within the contract and its unit tests.","sig":null,"attributes":[{"value":"/ The return type for init, execute and query. Since the error type cannot be serialized to JSON,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64510,"byte_end":64609,"line_start":442,"line_end":442,"column_start":1,"column_end":100}},{"value":"/ this is only available within the contract and its unit tests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64610,"byte_end":64676,"line_start":443,"line_end":443,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64677,"byte_end":64680,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard result within the standard library\". This is not the only","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64681,"byte_end":64779,"line_start":445,"line_end":445,"column_start":1,"column_end":99}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64780,"byte_end":64818,"line_start":446,"line_end":446,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3543},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64951,"byte_end":64954,"line_start":451,"line_end":451,"column_start":5,"column_end":8},"name":"Add","qualname":"::errors::std_error::OverflowOperation::Add","value":"OverflowOperation::Add","parent":{"krate":0,"index":3542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3545},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64960,"byte_end":64963,"line_start":452,"line_end":452,"column_start":5,"column_end":8},"name":"Sub","qualname":"::errors::std_error::OverflowOperation::Sub","value":"OverflowOperation::Sub","parent":{"krate":0,"index":3542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64969,"byte_end":64972,"line_start":453,"line_end":453,"column_start":5,"column_end":8},"name":"Mul","qualname":"::errors::std_error::OverflowOperation::Mul","value":"OverflowOperation::Mul","parent":{"krate":0,"index":3542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64978,"byte_end":64981,"line_start":454,"line_end":454,"column_start":5,"column_end":8},"name":"Pow","qualname":"::errors::std_error::OverflowOperation::Pow","value":"OverflowOperation::Pow","parent":{"krate":0,"index":3542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3551},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64987,"byte_end":64990,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"Shr","qualname":"::errors::std_error::OverflowOperation::Shr","value":"OverflowOperation::Shr","parent":{"krate":0,"index":3542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3553},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64996,"byte_end":64999,"line_start":456,"line_end":456,"column_start":5,"column_end":8},"name":"Shl","qualname":"::errors::std_error::OverflowOperation::Shl","value":"OverflowOperation::Shl","parent":{"krate":0,"index":3542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3542},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64927,"byte_end":64944,"line_start":450,"line_end":450,"column_start":10,"column_end":27},"name":"OverflowOperation","qualname":"::errors::std_error::OverflowOperation","value":"pub enum OverflowOperation { Add, Sub, Mul, Pow, Shr, Shl, }","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3551},{"krate":0,"index":3553}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3583},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65258,"byte_end":65271,"line_start":467,"line_end":467,"column_start":12,"column_end":25},"name":"OverflowError","qualname":"::errors::std_error::OverflowError","value":"OverflowError { operation, operand1, operand2 }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot {operation} with {operand1} and {operand2}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65185,"byte_end":65246,"line_start":466,"line_end":466,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3584},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65282,"byte_end":65291,"line_start":468,"line_end":468,"column_start":9,"column_end":18},"name":"operation","qualname":"::errors::std_error::OverflowError::operation","value":"errors::std_error::OverflowOperation","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3585},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65320,"byte_end":65328,"line_start":469,"line_end":469,"column_start":9,"column_end":17},"name":"operand1","qualname":"::errors::std_error::OverflowError::operand1","value":"std::string::String","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3586},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65346,"byte_end":65354,"line_start":470,"line_end":470,"column_start":9,"column_end":17},"name":"operand2","qualname":"::errors::std_error::OverflowError::operand2","value":"std::string::String","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65399,"byte_end":65402,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<OverflowError>::new","value":"pub fn new<impl ToString: ToString,\n           impl ToString: ToString>(OverflowOperation, impl ToString,\n                                    impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3606},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66028,"byte_end":66051,"line_start":495,"line_end":495,"column_start":12,"column_end":35},"name":"ConversionOverflowError","qualname":"::errors::std_error::ConversionOverflowError","value":"ConversionOverflowError { source_type, target_type, value }","parent":null,"children":[{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609}],"decl_id":null,"docs":" The error returned by [`TryFrom`] conversions that overflow, for example\n when converting from [`Uint256`] to [`Uint128`].","sig":null,"attributes":[{"value":"/ The error returned by [`TryFrom`] conversions that overflow, for example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65669,"byte_end":65745,"line_start":487,"line_end":487,"column_start":1,"column_end":77}},{"value":"/ when converting from [`Uint256`] to [`Uint128`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65746,"byte_end":65798,"line_start":488,"line_end":488,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65799,"byte_end":65802,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ [`TryFrom`]: std::convert::TryFrom","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65803,"byte_end":65841,"line_start":490,"line_end":490,"column_start":1,"column_end":39}},{"value":"/ [`Uint256`]: crate::Uint256","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65842,"byte_end":65873,"line_start":491,"line_end":491,"column_start":1,"column_end":32}},{"value":"/ [`Uint128`]: crate::Uint128","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65874,"byte_end":65905,"line_start":492,"line_end":492,"column_start":1,"column_end":32}},{"value":"error(\"Error converting {source_type} to {target_type} for {value}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65945,"byte_end":66016,"line_start":494,"line_end":494,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3607},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66062,"byte_end":66073,"line_start":496,"line_end":496,"column_start":9,"column_end":20},"name":"source_type","qualname":"::errors::std_error::ConversionOverflowError::source_type","value":"&'static str","parent":{"krate":0,"index":3606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3608},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66097,"byte_end":66108,"line_start":497,"line_end":497,"column_start":9,"column_end":20},"name":"target_type","qualname":"::errors::std_error::ConversionOverflowError::target_type","value":"&'static str","parent":{"krate":0,"index":3606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3609},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66132,"byte_end":66137,"line_start":498,"line_end":498,"column_start":9,"column_end":14},"name":"value","qualname":"::errors::std_error::ConversionOverflowError::value","value":"std::string::String","parent":{"krate":0,"index":3606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66192,"byte_end":66195,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"new","qualname":"<ConversionOverflowError>::new","value":"pub fn new<impl Into<String>: Into<String>>(&'static str, &'static str,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66528,"byte_end":66545,"line_start":517,"line_end":517,"column_start":12,"column_end":29},"name":"DivideByZeroError","qualname":"::errors::std_error::DivideByZeroError","value":"DivideByZeroError { operand }","parent":null,"children":[{"krate":0,"index":3630}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot devide {operand} by zero\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66473,"byte_end":66516,"line_start":516,"line_end":516,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3630},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66556,"byte_end":66563,"line_start":518,"line_end":518,"column_start":9,"column_end":16},"name":"operand","qualname":"::errors::std_error::DivideByZeroError::operand","value":"std::string::String","parent":{"krate":0,"index":3629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66612,"byte_end":66615,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"new","qualname":"<DivideByZeroError>::new","value":"pub fn new<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3867},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75355,"byte_end":75369,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"name":"InvalidRequest","qualname":"::errors::system_error::SystemError::InvalidRequest","value":"SystemError::InvalidRequest { error, request }","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75431,"byte_end":75446,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"InvalidResponse","qualname":"::errors::system_error::SystemError::InvalidResponse","value":"SystemError::InvalidResponse { error, response }","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3873},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75509,"byte_end":75523,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"NoSuchContract","qualname":"::errors::system_error::SystemError::NoSuchContract","value":"SystemError::NoSuchContract { addr }","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75611,"byte_end":75618,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::errors::system_error::SystemError::Unknown","value":"SystemError::Unknown {  }","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3876},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75627,"byte_end":75645,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"name":"UnsupportedRequest","qualname":"::errors::system_error::SystemError::UnsupportedRequest","value":"SystemError::UnsupportedRequest { kind }","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75337,"byte_end":75348,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"SystemError","qualname":"::errors::system_error::SystemError","value":"pub enum SystemError {\n    InvalidRequest {\n        error: String,\n        request: Binary,\n    },\n    InvalidResponse {\n        error: String,\n        response: Binary,\n    },\n    NoSuchContract {\n        addr: String,\n    },\n    Unknown {\n    },\n    UnsupportedRequest {\n        kind: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3870},{"krate":0,"index":3873},{"krate":0,"index":3875},{"krate":0,"index":3876}],"decl_id":null,"docs":" SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","sig":null,"attributes":[{"value":"/ SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":74610,"byte_end":74699,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":74700,"byte_end":74703,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is used on return values for Querier as a nested result: Result<StdResult<T>, SystemError>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":74704,"byte_end":74803,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ The first wrap (SystemError) will trigger if the contract address doesn't exist,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":74804,"byte_end":74888,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ the QueryRequest is malformated, etc. The second wrap will be an error message from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":74889,"byte_end":74976,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ the contract itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":74977,"byte_end":75001,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75002,"byte_end":75005,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Such errors are only created by the VM. The error type is defined in the standard library, to ensure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75006,"byte_end":75110,"line_start":13,"line_end":13,"column_start":1,"column_end":105}},{"value":"/ the contract understands the error format without creating a dependency on cosmwasm-vm.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75111,"byte_end":75202,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75274,"byte_end":75309,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75310,"byte_end":75327,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3891},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76898,"byte_end":76906,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"BatchErr","qualname":"::errors::verification_error::VerificationError::BatchErr","value":"VerificationError::BatchErr","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Batch error\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76870,"byte_end":76893,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3893},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76942,"byte_end":76952,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::verification_error::VerificationError::GenericErr","value":"VerificationError::GenericErr","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Generic error\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76912,"byte_end":76937,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76994,"byte_end":77011,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::verification_error::VerificationError::InvalidHashFormat","value":"VerificationError::InvalidHashFormat","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76958,"byte_end":76989,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3897},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77058,"byte_end":77080,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::verification_error::VerificationError::InvalidSignatureFormat","value":"VerificationError::InvalidSignatureFormat","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77017,"byte_end":77053,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3899},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77128,"byte_end":77147,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidPubkeyFormat","qualname":"::errors::verification_error::VerificationError::InvalidPubkeyFormat","value":"VerificationError::InvalidPubkeyFormat","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid public key format\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77086,"byte_end":77123,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3901},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77224,"byte_end":77244,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::verification_error::VerificationError::InvalidRecoveryParam","value":"VerificationError::InvalidRecoveryParam","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77153,"byte_end":77219,"line_start":21,"line_end":21,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77294,"byte_end":77304,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::verification_error::VerificationError::UnknownErr","value":"VerificationError::UnknownErr { error_code }","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77250,"byte_end":77289,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3878},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":76846,"byte_end":76863,"line_start":10,"line_end":10,"column_start":10,"column_end":27},"name":"VerificationError","qualname":"::errors::verification_error::VerificationError","value":"pub enum VerificationError {\n    BatchErr,\n    GenericErr,\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidPubkeyFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3901},{"krate":0,"index":3903}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77447,"byte_end":77458,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<VerificationError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4077},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81083,"byte_end":81091,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::ibc::IbcMsg::Transfer","value":"IbcMsg::Transfer { channel_id, to_address, amount, timeout }","parent":{"krate":0,"index":4076},"children":[],"decl_id":null,"docs":" Sends bank tokens owned by the contract to the given address on another chain.\n The channel must already be established between the ibctransfer module on this chain\n and a matching module on the remote chain.\n We cannot select the port_id, this is whatever the local chain has bound the ibctransfer\n module to.\n","sig":null,"attributes":[{"value":"/ Sends bank tokens owned by the contract to the given address on another chain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80736,"byte_end":80818,"line_start":22,"line_end":22,"column_start":5,"column_end":87}},{"value":"/ The channel must already be established between the ibctransfer module on this chain","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80823,"byte_end":80911,"line_start":23,"line_end":23,"column_start":5,"column_end":93}},{"value":"/ and a matching module on the remote chain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80916,"byte_end":80962,"line_start":24,"line_end":24,"column_start":5,"column_end":51}},{"value":"/ We cannot select the port_id, this is whatever the local chain has bound the ibctransfer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80967,"byte_end":81059,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ module to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81064,"byte_end":81078,"line_start":26,"line_end":26,"column_start":5,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":4082},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81775,"byte_end":81785,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"SendPacket","qualname":"::ibc::IbcMsg::SendPacket","value":"IbcMsg::SendPacket { channel_id, data, timeout }","parent":{"krate":0,"index":4076},"children":[],"decl_id":null,"docs":" Sends an IBC packet with given data over the existing channel.\n Data should be encoded in a format defined by the channel version,\n and the module on the other side should know how to parse this.\n","sig":null,"attributes":[{"value":"/ Sends an IBC packet with given data over the existing channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81557,"byte_end":81623,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ Data should be encoded in a format defined by the channel version,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81628,"byte_end":81698,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ and the module on the other side should know how to parse this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81703,"byte_end":81770,"line_start":40,"line_end":40,"column_start":5,"column_end":72}}]},{"kind":"StructVariant","id":{"krate":0,"index":4086},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82071,"byte_end":82083,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"name":"CloseChannel","qualname":"::ibc::IbcMsg::CloseChannel","value":"IbcMsg::CloseChannel { channel_id }","parent":{"krate":0,"index":4076},"children":[],"decl_id":null,"docs":" This will close an existing channel that is owned by this contract.\n Port is auto-assigned to the contract's IBC port\n","sig":null,"attributes":[{"value":"/ This will close an existing channel that is owned by this contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":81938,"byte_end":82009,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ Port is auto-assigned to the contract's IBC port","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82014,"byte_end":82066,"line_start":48,"line_end":48,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":4076},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80723,"byte_end":80729,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"IbcMsg","qualname":"::ibc::IbcMsg","value":"pub enum IbcMsg {\n    Transfer {\n        channel_id: String,\n        to_address: String,\n        amount: Coin,\n        timeout: IbcTimeout,\n    },\n    SendPacket {\n        channel_id: String,\n        data: Binary,\n        timeout: IbcTimeout,\n    },\n    CloseChannel {\n        channel_id: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":4082},{"krate":0,"index":4086}],"decl_id":null,"docs":" These are messages in the IBC lifecycle. Only usable by IBC-enabled contracts\n (contracts that directly speak the IBC protocol via 6 entry points)\n","sig":null,"attributes":[{"value":"/ These are messages in the IBC lifecycle. Only usable by IBC-enabled contracts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80435,"byte_end":80516,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ (contracts that directly speak the IBC protocol via 6 entry points)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80517,"byte_end":80588,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80589,"byte_end":80606,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":80678,"byte_end":80713,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4088},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82193,"byte_end":82204,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"IbcEndpoint","qualname":"::ibc::IbcEndpoint","value":"IbcEndpoint { port_id, channel_id }","parent":null,"children":[{"krate":0,"index":4089},{"krate":0,"index":4090}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4089},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82215,"byte_end":82222,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"name":"port_id","qualname":"::ibc::IbcEndpoint::port_id","value":"std::string::String","parent":{"krate":0,"index":4088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4090},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82240,"byte_end":82250,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"name":"channel_id","qualname":"::ibc::IbcEndpoint::channel_id","value":"std::string::String","parent":{"krate":0,"index":4088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82592,"byte_end":82602,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"IbcTimeout","qualname":"::ibc::IbcTimeout","value":"IbcTimeout {  }","parent":null,"children":[{"krate":0,"index":4214},{"krate":0,"index":4215}],"decl_id":null,"docs":" In IBC each package must set at least one type of timeout:\n the timestamp or the block height. Using this rather complex enum instead of\n two timeout fields we ensure that at least one timeout is set.\n","sig":null,"attributes":[{"value":"/ In IBC each package must set at least one type of timeout:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82263,"byte_end":82325,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ the timestamp or the block height. Using this rather complex enum instead of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82326,"byte_end":82406,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ two timeout fields we ensure that at least one timeout is set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82407,"byte_end":82473,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82545,"byte_end":82580,"line_start":62,"line_end":62,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82807,"byte_end":82817,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"with_block","qualname":"<IbcTimeout>::with_block","value":"pub fn with_block(IbcTimeoutBlock) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82962,"byte_end":82976,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"with_timestamp","qualname":"<IbcTimeout>::with_timestamp","value":"pub fn with_timestamp(Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83123,"byte_end":83132,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"with_both","qualname":"<IbcTimeout>::with_both","value":"pub fn with_both(IbcTimeoutBlock, Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83310,"byte_end":83315,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"block","qualname":"<IbcTimeout>::block","value":"pub fn block(&Self) -> Option<IbcTimeoutBlock>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83389,"byte_end":83398,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<IbcTimeout>::timestamp","value":"pub fn timestamp(&Self) -> Option<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4216},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84042,"byte_end":84052,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"IbcChannel","qualname":"::ibc::IbcChannel","value":"IbcChannel { endpoint, counterparty_endpoint, order, version, connection_id }","parent":null,"children":[{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221}],"decl_id":null,"docs":" IbcChannel defines all information on a channel.\n This is generally used in the hand-shake process, but can be queried directly.\n","sig":null,"attributes":[{"value":"/ IbcChannel defines all information on a channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83806,"byte_end":83858,"line_start":114,"line_end":114,"column_start":1,"column_end":53}},{"value":"/ This is generally used in the hand-shake process, but can be queried directly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83859,"byte_end":83941,"line_start":115,"line_end":115,"column_start":1,"column_end":83}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84013,"byte_end":84030,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4217},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84063,"byte_end":84071,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"endpoint","qualname":"::ibc::IbcChannel::endpoint","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4218},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84094,"byte_end":84115,"line_start":120,"line_end":120,"column_start":9,"column_end":30},"name":"counterparty_endpoint","qualname":"::ibc::IbcChannel::counterparty_endpoint","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4219},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84138,"byte_end":84143,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"order","qualname":"::ibc::IbcChannel::order","value":"ibc::IbcOrder","parent":{"krate":0,"index":4216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4220},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84163,"byte_end":84170,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"version","qualname":"::ibc::IbcChannel::version","value":"std::string::String","parent":{"krate":0,"index":4216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4221},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84318,"byte_end":84331,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"connection_id","qualname":"::ibc::IbcChannel::connection_id","value":"std::string::String","parent":{"krate":0,"index":4216},"children":[],"decl_id":null,"docs":" The connection upon which this channel was created. If this is a multi-hop\n channel, we only expose the first hop.\n","sig":null,"attributes":[{"value":"/ The connection upon which this channel was created. If this is a multi-hop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84184,"byte_end":84262,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/ channel, we only expose the first hop.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84267,"byte_end":84309,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84409,"byte_end":84412,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcChannel>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(IbcEndpoint, IbcEndpoint,\n                                            IbcOrder, impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new IbcChannel.\n","sig":null,"attributes":[{"value":"/ Construct a new IbcChannel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84366,"byte_end":84397,"line_start":129,"line_end":129,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4346},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85179,"byte_end":85188,"line_start":153,"line_end":153,"column_start":5,"column_end":14},"name":"Unordered","qualname":"::ibc::IbcOrder::Unordered","value":"IbcOrder::Unordered","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ORDER_UNORDERED\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85138,"byte_end":85174,"line_start":152,"line_end":152,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4348},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85233,"byte_end":85240,"line_start":155,"line_end":155,"column_start":5,"column_end":12},"name":"Ordered","qualname":"::ibc::IbcOrder::Ordered","value":"IbcOrder::Ordered","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ORDER_ORDERED\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85194,"byte_end":85228,"line_start":154,"line_end":154,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":4289},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85123,"byte_end":85131,"line_start":151,"line_end":151,"column_start":10,"column_end":18},"name":"IbcOrder","qualname":"::ibc::IbcOrder","value":"pub enum IbcOrder { Unordered, Ordered, }","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4348}],"decl_id":null,"docs":" IbcOrder defines if a channel is ORDERED or UNORDERED\n Values come from https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/ibc/core/channel/v1/channel.proto#L69-L80\n Naming comes from the protobuf files and go translations.\n","sig":null,"attributes":[{"value":"/ IbcOrder defines if a channel is ORDERED or UNORDERED","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84804,"byte_end":84861,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/ Values come from https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/ibc/core/channel/v1/channel.proto#L69-L80","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84862,"byte_end":84980,"line_start":148,"line_end":148,"column_start":1,"column_end":119}},{"value":"/ Naming comes from the protobuf files and go translations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84981,"byte_end":85042,"line_start":149,"line_end":149,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4350},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85558,"byte_end":85573,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"IbcTimeoutBlock","qualname":"::ibc::IbcTimeoutBlock","value":"IbcTimeoutBlock { revision, height }","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"decl_id":null,"docs":" IBCTimeoutHeight Height is a monotonically increasing data type\n that can be compared against another Height for the purposes of updating and\n freezing clients.\n Ordering is (revision_number, timeout_height)\n","sig":null,"attributes":[{"value":"/ IBCTimeoutHeight Height is a monotonically increasing data type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85245,"byte_end":85312,"line_start":158,"line_end":158,"column_start":1,"column_end":68}},{"value":"/ that can be compared against another Height for the purposes of updating and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85313,"byte_end":85393,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ freezing clients.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85394,"byte_end":85415,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ Ordering is (revision_number, timeout_height)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85416,"byte_end":85465,"line_start":161,"line_end":161,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4351},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85719,"byte_end":85727,"line_start":166,"line_end":166,"column_start":9,"column_end":17},"name":"revision","qualname":"::ibc::IbcTimeoutBlock::revision","value":"u64","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" the version that the client is currently on\n (eg. after reseting the chain this could increment 1 as height drops to 0)\n","sig":null,"attributes":[{"value":"/ the version that the client is currently on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85580,"byte_end":85627,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/ (eg. after reseting the chain this could increment 1 as height drops to 0)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85632,"byte_end":85710,"line_start":165,"line_end":165,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4352},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85842,"byte_end":85848,"line_start":169,"line_end":169,"column_start":9,"column_end":15},"name":"height","qualname":"::ibc::IbcTimeoutBlock::height","value":"u64","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" block height after which the packet times out.\n the height within the given revision\n","sig":null,"attributes":[{"value":"/ block height after which the packet times out.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85738,"byte_end":85788,"line_start":167,"line_end":167,"column_start":5,"column_end":55}},{"value":"/ the height within the given revision","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85793,"byte_end":85833,"line_start":168,"line_end":168,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85892,"byte_end":85899,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<IbcTimeoutBlock>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86450,"byte_end":86459,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"IbcPacket","qualname":"::ibc::IbcPacket","value":"IbcPacket { data, src, dest, sequence, timeout }","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4423}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86421,"byte_end":86438,"line_start":194,"line_end":194,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4419},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86530,"byte_end":86534,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"data","qualname":"::ibc::IbcPacket::data","value":"binary::Binary","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":" The raw data sent from the other side in the packet\n","sig":null,"attributes":[{"value":"/ The raw data sent from the other side in the packet","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86466,"byte_end":86521,"line_start":196,"line_end":196,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4420},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86614,"byte_end":86617,"line_start":199,"line_end":199,"column_start":9,"column_end":12},"name":"src","qualname":"::ibc::IbcPacket::src","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":" identifies the channel and port on the sending chain.\n","sig":null,"attributes":[{"value":"/ identifies the channel and port on the sending chain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86548,"byte_end":86605,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4421},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86704,"byte_end":86708,"line_start":201,"line_end":201,"column_start":9,"column_end":13},"name":"dest","qualname":"::ibc::IbcPacket::dest","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":" identifies the channel and port on the receiving chain.\n","sig":null,"attributes":[{"value":"/ identifies the channel and port on the receiving chain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86636,"byte_end":86695,"line_start":200,"line_end":200,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4422},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86794,"byte_end":86802,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"name":"sequence","qualname":"::ibc::IbcPacket::sequence","value":"u64","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":" The sequence number of the packet on the given channel\n","sig":null,"attributes":[{"value":"/ The sequence number of the packet on the given channel","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86727,"byte_end":86785,"line_start":202,"line_end":202,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4423},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86817,"byte_end":86824,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"name":"timeout","qualname":"::ibc::IbcPacket::timeout","value":"ibc::IbcTimeout","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86904,"byte_end":86907,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacket>::new","value":"pub fn new<impl Into<Binary>: Into<Binary>>(impl Into<Binary>, IbcEndpoint,\n                                            IbcEndpoint, u64, IbcTimeout)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new IbcPacket.\n","sig":null,"attributes":[{"value":"/ Construct a new IbcPacket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86862,"byte_end":86892,"line_start":208,"line_end":208,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87306,"byte_end":87324,"line_start":228,"line_end":228,"column_start":12,"column_end":30},"name":"IbcAcknowledgement","qualname":"::ibc::IbcAcknowledgement","value":"IbcAcknowledgement { data }","parent":null,"children":[{"krate":0,"index":4492}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87277,"byte_end":87294,"line_start":227,"line_end":227,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87335,"byte_end":87339,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"name":"data","qualname":"::ibc::IbcAcknowledgement::data","value":"binary::Binary","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87558,"byte_end":87561,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcAcknowledgement>::new","value":"pub fn new<impl Into<Binary>: Into<Binary>>(impl Into<Binary>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87664,"byte_end":87675,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"encode_json","qualname":"<IbcAcknowledgement>::encode_json","value":"pub fn encode_json<impl Serialize: Serialize>(&impl Serialize)\n-> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4680},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88174,"byte_end":88182,"line_start":252,"line_end":252,"column_start":5,"column_end":13},"name":"OpenInit","qualname":"::ibc::IbcChannelOpenMsg::OpenInit","value":"IbcChannelOpenMsg::OpenInit { channel }","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" The ChanOpenInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88021,"byte_end":88169,"line_start":251,"line_end":251,"column_start":5,"column_end":153}}]},{"kind":"StructVariant","id":{"krate":0,"index":4682},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88364,"byte_end":88371,"line_start":254,"line_end":254,"column_start":5,"column_end":12},"name":"OpenTry","qualname":"::ibc::IbcChannelOpenMsg::OpenTry","value":"IbcChannelOpenMsg::OpenTry { channel, counterparty_version }","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" The ChanOpenTry step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenTry step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88212,"byte_end":88359,"line_start":253,"line_end":253,"column_start":5,"column_end":152}}]},{"kind":"Enum","id":{"krate":0,"index":4679},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87997,"byte_end":88014,"line_start":250,"line_end":250,"column_start":10,"column_end":27},"name":"IbcChannelOpenMsg","qualname":"::ibc::IbcChannelOpenMsg","value":"pub enum IbcChannelOpenMsg {\n    OpenInit {\n        channel: IbcChannel,\n    },\n    OpenTry {\n        channel: IbcChannel,\n        counterparty_version: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4682}],"decl_id":null,"docs":" The message that is passed into `ibc_channel_open`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_channel_open`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87808,"byte_end":87862,"line_start":246,"line_end":246,"column_start":1,"column_end":55}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87934,"byte_end":87969,"line_start":248,"line_end":248,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87970,"byte_end":87987,"line_start":249,"line_end":249,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88487,"byte_end":88495,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"new_init","qualname":"<IbcChannelOpenMsg>::new_init","value":"pub fn new_init(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88580,"byte_end":88587,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"new_try","qualname":"<IbcChannelOpenMsg>::new_try","value":"pub fn new_try<impl Into<String>: Into<String>>(IbcChannel, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88796,"byte_end":88803,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"channel","qualname":"<IbcChannelOpenMsg>::channel","value":"pub fn channel(&Self) -> &IbcChannel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88982,"byte_end":89002,"line_start":279,"line_end":279,"column_start":12,"column_end":32},"name":"counterparty_version","qualname":"<IbcChannelOpenMsg>::counterparty_version","value":"pub fn counterparty_version(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4813},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89860,"byte_end":89867,"line_start":305,"line_end":305,"column_start":5,"column_end":12},"name":"OpenAck","qualname":"::ibc::IbcChannelConnectMsg::OpenAck","value":"IbcChannelConnectMsg::OpenAck { channel, counterparty_version }","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" The ChanOpenAck step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenAck step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89708,"byte_end":89855,"line_start":304,"line_end":304,"column_start":5,"column_end":152}}]},{"kind":"StructVariant","id":{"krate":0,"index":4816},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90104,"byte_end":90115,"line_start":310,"line_end":310,"column_start":5,"column_end":16},"name":"OpenConfirm","qualname":"::ibc::IbcChannelConnectMsg::OpenConfirm","value":"IbcChannelConnectMsg::OpenConfirm { channel }","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" The ChanOpenConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89948,"byte_end":90099,"line_start":309,"line_end":309,"column_start":5,"column_end":156}}]},{"kind":"Enum","id":{"krate":0,"index":4812},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89681,"byte_end":89701,"line_start":303,"line_end":303,"column_start":10,"column_end":30},"name":"IbcChannelConnectMsg","qualname":"::ibc::IbcChannelConnectMsg","value":"pub enum IbcChannelConnectMsg {\n    OpenAck {\n        channel: IbcChannel,\n        counterparty_version: String,\n    },\n    OpenConfirm {\n        channel: IbcChannel,\n    },\n}","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4816}],"decl_id":null,"docs":" The message that is passed into `ibc_channel_connect`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_channel_connect`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89489,"byte_end":89546,"line_start":299,"line_end":299,"column_start":1,"column_end":58}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89618,"byte_end":89653,"line_start":301,"line_end":301,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89654,"byte_end":89671,"line_start":302,"line_end":302,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90183,"byte_end":90190,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"new_ack","qualname":"<IbcChannelConnectMsg>::new_ack","value":"pub fn new_ack<impl Into<String>: Into<String>>(IbcChannel, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90399,"byte_end":90410,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"new_confirm","qualname":"<IbcChannelConnectMsg>::new_confirm","value":"pub fn new_confirm(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90498,"byte_end":90505,"line_start":325,"line_end":325,"column_start":12,"column_end":19},"name":"channel","qualname":"<IbcChannelConnectMsg>::channel","value":"pub fn channel(&Self) -> &IbcChannel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90687,"byte_end":90707,"line_start":332,"line_end":332,"column_start":12,"column_end":32},"name":"counterparty_version","qualname":"<IbcChannelConnectMsg>::counterparty_version","value":"pub fn counterparty_version(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91578,"byte_end":91587,"line_start":358,"line_end":358,"column_start":5,"column_end":14},"name":"CloseInit","qualname":"::ibc::IbcChannelCloseMsg::CloseInit","value":"IbcChannelCloseMsg::CloseInit { channel }","parent":{"krate":0,"index":4943},"children":[],"decl_id":null,"docs":" The ChanCloseInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanCloseInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91424,"byte_end":91573,"line_start":357,"line_end":357,"column_start":5,"column_end":154}}]},{"kind":"StructVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91774,"byte_end":91786,"line_start":360,"line_end":360,"column_start":5,"column_end":17},"name":"CloseConfirm","qualname":"::ibc::IbcChannelCloseMsg::CloseConfirm","value":"IbcChannelCloseMsg::CloseConfirm { channel }","parent":{"krate":0,"index":4943},"children":[],"decl_id":null,"docs":" The ChanCloseConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanCloseConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91617,"byte_end":91769,"line_start":359,"line_end":359,"column_start":5,"column_end":157}}]},{"kind":"Enum","id":{"krate":0,"index":4943},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91399,"byte_end":91417,"line_start":356,"line_end":356,"column_start":10,"column_end":28},"name":"IbcChannelCloseMsg","qualname":"::ibc::IbcChannelCloseMsg","value":"pub enum IbcChannelCloseMsg {\n    CloseInit {\n        channel: IbcChannel,\n    },\n    CloseConfirm {\n        channel: IbcChannel,\n    },\n}","parent":null,"children":[{"krate":0,"index":4944},{"krate":0,"index":4946}],"decl_id":null,"docs":" The message that is passed into `ibc_channel_close`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_channel_close`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91209,"byte_end":91264,"line_start":352,"line_end":352,"column_start":1,"column_end":56}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91336,"byte_end":91371,"line_start":354,"line_end":354,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91372,"byte_end":91389,"line_start":355,"line_end":355,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91880,"byte_end":91888,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"new_init","qualname":"<IbcChannelCloseMsg>::new_init","value":"pub fn new_init(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91974,"byte_end":91985,"line_start":368,"line_end":368,"column_start":12,"column_end":23},"name":"new_confirm","qualname":"<IbcChannelCloseMsg>::new_confirm","value":"pub fn new_confirm(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92074,"byte_end":92081,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"channel","qualname":"<IbcChannelCloseMsg>::channel","value":"pub fn channel(&Self) -> &IbcChannel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4948},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92684,"byte_end":92703,"line_start":392,"line_end":392,"column_start":12,"column_end":31},"name":"IbcPacketReceiveMsg","qualname":"::ibc::IbcPacketReceiveMsg","value":"IbcPacketReceiveMsg { packet }","parent":null,"children":[{"krate":0,"index":4949}],"decl_id":null,"docs":" The message that is passed into `ibc_packet_receive`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_packet_receive`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92527,"byte_end":92583,"line_start":389,"line_end":389,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92655,"byte_end":92672,"line_start":391,"line_end":391,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92714,"byte_end":92720,"line_start":393,"line_end":393,"column_start":9,"column_end":15},"name":"packet","qualname":"::ibc::IbcPacketReceiveMsg::packet","value":"ibc::IbcPacket","parent":{"krate":0,"index":4948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92774,"byte_end":92777,"line_start":397,"line_end":397,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacketReceiveMsg>::new","value":"pub fn new(IbcPacket) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5009},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92993,"byte_end":93008,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"IbcPacketAckMsg","qualname":"::ibc::IbcPacketAckMsg","value":"IbcPacketAckMsg { acknowledgement, original_packet }","parent":null,"children":[{"krate":0,"index":5010},{"krate":0,"index":5011}],"decl_id":null,"docs":" The message that is passed into `ibc_packet_ack`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_packet_ack`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92840,"byte_end":92892,"line_start":402,"line_end":402,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92964,"byte_end":92981,"line_start":404,"line_end":404,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5010},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93019,"byte_end":93034,"line_start":406,"line_end":406,"column_start":9,"column_end":24},"name":"acknowledgement","qualname":"::ibc::IbcPacketAckMsg::acknowledgement","value":"ibc::IbcAcknowledgement","parent":{"krate":0,"index":5009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5011},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93064,"byte_end":93079,"line_start":407,"line_end":407,"column_start":9,"column_end":24},"name":"original_packet","qualname":"::ibc::IbcPacketAckMsg::original_packet","value":"ibc::IbcPacket","parent":{"krate":0,"index":5009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93129,"byte_end":93132,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacketAckMsg>::new","value":"pub fn new(IbcAcknowledgement, IbcPacket) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5073},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93457,"byte_end":93476,"line_start":422,"line_end":422,"column_start":12,"column_end":31},"name":"IbcPacketTimeoutMsg","qualname":"::ibc::IbcPacketTimeoutMsg","value":"IbcPacketTimeoutMsg { packet }","parent":null,"children":[{"krate":0,"index":5074}],"decl_id":null,"docs":" The message that is passed into `ibc_packet_timeout`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_packet_timeout`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93300,"byte_end":93356,"line_start":419,"line_end":419,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93428,"byte_end":93445,"line_start":421,"line_end":421,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5074},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93487,"byte_end":93493,"line_start":423,"line_end":423,"column_start":9,"column_end":15},"name":"packet","qualname":"::ibc::IbcPacketTimeoutMsg::packet","value":"ibc::IbcPacket","parent":{"krate":0,"index":5073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93547,"byte_end":93550,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacketTimeoutMsg>::new","value":"pub fn new(IbcPacket) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94071,"byte_end":94087,"line_start":441,"line_end":441,"column_start":12,"column_end":28},"name":"IbcBasicResponse","qualname":"::ibc::IbcBasicResponse","value":"IbcBasicResponse { messages, attributes, events }","parent":null,"children":[{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138}],"decl_id":null,"docs":" This is the return value for the majority of the ibc handlers.\n That are able to dispatch messages / events on their own,\n but have no meaningful return value to the calling code.","sig":null,"attributes":[{"value":"/ This is the return value for the majority of the ibc handlers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93613,"byte_end":93679,"line_start":432,"line_end":432,"column_start":1,"column_end":67}},{"value":"/ That are able to dispatch messages / events on their own,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93680,"byte_end":93741,"line_start":433,"line_end":433,"column_start":1,"column_end":62}},{"value":"/ but have no meaningful return value to the calling code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93742,"byte_end":93802,"line_start":434,"line_end":434,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93803,"byte_end":93806,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ Callbacks that have return values (like receive_packet)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93807,"byte_end":93866,"line_start":436,"line_end":436,"column_start":1,"column_end":60}},{"value":"/ or that cannot redispatch messages (like the handshake callbacks)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93867,"byte_end":93936,"line_start":437,"line_end":437,"column_start":1,"column_end":70}},{"value":"/ will use other Response types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93937,"byte_end":93970,"line_start":438,"line_end":438,"column_start":1,"column_end":34}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94042,"byte_end":94059,"line_start":440,"line_end":440,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94434,"byte_end":94442,"line_start":446,"line_end":446,"column_start":9,"column_end":17},"name":"messages","qualname":"::ibc::IbcBasicResponse::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":5134},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn member is set, they will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94105,"byte_end":94176,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn member is set, they will invoke this contract's `reply` entry point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94181,"byte_end":94267,"line_start":443,"line_end":443,"column_start":5,"column_end":91}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94272,"byte_end":94336,"line_start":444,"line_end":444,"column_start":5,"column_end":69}},{"value":"/ Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94341,"byte_end":94425,"line_start":445,"line_end":445,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":5137},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94726,"byte_end":94736,"line_start":452,"line_end":452,"column_start":9,"column_end":19},"name":"attributes","qualname":"::ibc::IbcBasicResponse::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":5134},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a `wasm` event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94464,"byte_end":94530,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94535,"byte_end":94538,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94543,"byte_end":94629,"line_start":449,"line_end":449,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94634,"byte_end":94637,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94642,"byte_end":94717,"line_start":451,"line_end":451,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95045,"byte_end":95051,"line_start":459,"line_end":459,"column_start":9,"column_end":15},"name":"events","qualname":"::ibc::IbcBasicResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":5134},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94758,"byte_end":94833,"line_start":453,"line_end":453,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94838,"byte_end":94872,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94877,"byte_end":94880,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94885,"byte_end":94948,"line_start":456,"line_end":456,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94953,"byte_end":94956,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":94961,"byte_end":95036,"line_start":458,"line_end":458,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95406,"byte_end":95409,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcBasicResponse<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95524,"byte_end":95537,"line_start":479,"line_end":479,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<IbcBasicResponse<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95457,"byte_end":95512,"line_start":478,"line_end":478,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95840,"byte_end":95851,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"add_message","qualname":"<IbcBasicResponse<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95690,"byte_end":95772,"line_start":484,"line_end":484,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95777,"byte_end":95828,"line_start":485,"line_end":485,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96108,"byte_end":96122,"line_start":493,"line_end":493,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<IbcBasicResponse<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95972,"byte_end":96040,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96045,"byte_end":96096,"line_start":492,"line_end":492,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96442,"byte_end":96451,"line_start":503,"line_end":503,"column_start":12,"column_end":21},"name":"add_event","qualname":"<IbcBasicResponse<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96216,"byte_end":96292,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96297,"byte_end":96324,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96329,"byte_end":96332,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96337,"byte_end":96412,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96417,"byte_end":96430,"line_start":502,"line_end":502,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97153,"byte_end":97167,"line_start":526,"line_end":526,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<IbcBasicResponse<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96543,"byte_end":96601,"line_start":508,"line_end":508,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96606,"byte_end":96609,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96614,"byte_end":96683,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96688,"byte_end":96746,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96751,"byte_end":96754,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96759,"byte_end":96774,"line_start":513,"line_end":513,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96779,"byte_end":96782,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96787,"byte_end":96794,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, IbcBasicResponse};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96799,"byte_end":96846,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96851,"byte_end":96854,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96859,"byte_end":96880,"line_start":518,"line_end":518,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96885,"byte_end":96916,"line_start":519,"line_end":519,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96921,"byte_end":96946,"line_start":520,"line_end":520,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96951,"byte_end":96984,"line_start":521,"line_end":521,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":96989,"byte_end":96995,"line_start":522,"line_end":522,"column_start":5,"column_end":11}},{"value":"/ let res: IbcBasicResponse = IbcBasicResponse::new().add_attributes(attrs.clone());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97000,"byte_end":97086,"line_start":523,"line_end":523,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97091,"byte_end":97129,"line_start":524,"line_end":524,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97134,"byte_end":97141,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97711,"byte_end":97723,"line_start":545,"line_end":545,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<IbcBasicResponse<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97355,"byte_end":97430,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97435,"byte_end":97438,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97443,"byte_end":97458,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97463,"byte_end":97466,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97471,"byte_end":97478,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, IbcBasicResponse};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97483,"byte_end":97535,"line_start":539,"line_end":539,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97540,"byte_end":97543,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> IbcBasicResponse {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97548,"byte_end":97622,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/     IbcBasicResponse::new().add_messages(msgs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97627,"byte_end":97677,"line_start":542,"line_end":542,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97682,"byte_end":97687,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97692,"byte_end":97699,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98226,"byte_end":98241,"line_start":560,"line_end":560,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<IbcBasicResponse<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97873,"byte_end":97945,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97950,"byte_end":97953,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97958,"byte_end":97973,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97978,"byte_end":97981,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97986,"byte_end":97993,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, IbcBasicResponse};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":97998,"byte_end":98047,"line_start":554,"line_end":554,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98052,"byte_end":98055,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> IbcBasicResponse {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98060,"byte_end":98134,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/     IbcBasicResponse::new().add_submessages(msgs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98139,"byte_end":98192,"line_start":557,"line_end":557,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98197,"byte_end":98202,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98207,"byte_end":98214,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98595,"byte_end":98605,"line_start":570,"line_end":570,"column_start":12,"column_end":22},"name":"add_events","qualname":"<IbcBasicResponse<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98377,"byte_end":98453,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98458,"byte_end":98475,"line_start":566,"line_end":566,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98480,"byte_end":98483,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98488,"byte_end":98564,"line_start":568,"line_end":568,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":98569,"byte_end":98583,"line_start":569,"line_end":569,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5211},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99191,"byte_end":99209,"line_start":583,"line_end":583,"column_start":12,"column_end":30},"name":"IbcReceiveResponse","qualname":"::ibc::IbcReceiveResponse","value":"IbcReceiveResponse { acknowledgement, messages, attributes, events }","parent":null,"children":[{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99162,"byte_end":99179,"line_start":582,"line_end":582,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99355,"byte_end":99370,"line_start":586,"line_end":586,"column_start":9,"column_end":24},"name":"acknowledgement","qualname":"::ibc::IbcReceiveResponse::acknowledgement","value":"binary::Binary","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" The bytes we return to the contract that sent the packet.\n This may represent a success or error of exection\n","sig":null,"attributes":[{"value":"/ The bytes we return to the contract that sent the packet.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99227,"byte_end":99288,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ This may represent a success or error of exection","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99293,"byte_end":99346,"line_start":585,"line_end":585,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5214},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99722,"byte_end":99730,"line_start":591,"line_end":591,"column_start":9,"column_end":17},"name":"messages","qualname":"::ibc::IbcReceiveResponse::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn member is set, they will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `call` or `msg.into()` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99384,"byte_end":99455,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn member is set, they will invoke this contract's `reply` entry point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99460,"byte_end":99546,"line_start":588,"line_end":588,"column_start":5,"column_end":91}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99551,"byte_end":99615,"line_start":589,"line_end":589,"column_start":5,"column_end":69}},{"value":"/ Use `call` or `msg.into()` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99620,"byte_end":99713,"line_start":590,"line_end":590,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":5215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100014,"byte_end":100024,"line_start":597,"line_end":597,"column_start":9,"column_end":19},"name":"attributes","qualname":"::ibc::IbcReceiveResponse::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99752,"byte_end":99818,"line_start":592,"line_end":592,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99823,"byte_end":99826,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99831,"byte_end":99917,"line_start":594,"line_end":594,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99922,"byte_end":99925,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":99930,"byte_end":100005,"line_start":596,"line_end":596,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5216},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100333,"byte_end":100339,"line_start":604,"line_end":604,"column_start":9,"column_end":15},"name":"events","qualname":"::ibc::IbcReceiveResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100046,"byte_end":100121,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100126,"byte_end":100160,"line_start":599,"line_end":599,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100165,"byte_end":100168,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100173,"byte_end":100236,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100241,"byte_end":100244,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100249,"byte_end":100324,"line_start":603,"line_end":603,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100745,"byte_end":100748,"line_start":620,"line_end":620,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcReceiveResponse<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100854,"byte_end":100861,"line_start":625,"line_end":625,"column_start":12,"column_end":19},"name":"set_ack","qualname":"<IbcReceiveResponse<T>>::set_ack","value":"pub fn set_ack<impl Into<Binary>: Into<Binary>>(Self, impl Into<Binary>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the acknowledgement for this response.\n","sig":null,"attributes":[{"value":"/ Set the acknowledgement for this response.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100796,"byte_end":100842,"line_start":624,"line_end":624,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101040,"byte_end":101053,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<IbcReceiveResponse<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100973,"byte_end":101028,"line_start":630,"line_end":630,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101356,"byte_end":101367,"line_start":638,"line_end":638,"column_start":12,"column_end":23},"name":"add_message","qualname":"<IbcReceiveResponse<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101206,"byte_end":101288,"line_start":636,"line_end":636,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101293,"byte_end":101344,"line_start":637,"line_end":637,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101624,"byte_end":101638,"line_start":645,"line_end":645,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<IbcReceiveResponse<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101488,"byte_end":101556,"line_start":643,"line_end":643,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101561,"byte_end":101612,"line_start":644,"line_end":644,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101958,"byte_end":101967,"line_start":655,"line_end":655,"column_start":12,"column_end":21},"name":"add_event","qualname":"<IbcReceiveResponse<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101732,"byte_end":101808,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101813,"byte_end":101840,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101845,"byte_end":101848,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101853,"byte_end":101928,"line_start":653,"line_end":653,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":101933,"byte_end":101946,"line_start":654,"line_end":654,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102675,"byte_end":102689,"line_start":678,"line_end":678,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<IbcReceiveResponse<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102059,"byte_end":102117,"line_start":660,"line_end":660,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102122,"byte_end":102125,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102130,"byte_end":102199,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102204,"byte_end":102262,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102267,"byte_end":102270,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102275,"byte_end":102290,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102295,"byte_end":102298,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102303,"byte_end":102310,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, IbcReceiveResponse};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102315,"byte_end":102364,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102369,"byte_end":102372,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102377,"byte_end":102398,"line_start":670,"line_end":670,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102403,"byte_end":102434,"line_start":671,"line_end":671,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102439,"byte_end":102464,"line_start":672,"line_end":672,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102469,"byte_end":102502,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102507,"byte_end":102513,"line_start":674,"line_end":674,"column_start":5,"column_end":11}},{"value":"/ let res: IbcReceiveResponse = IbcReceiveResponse::new().add_attributes(attrs.clone());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102518,"byte_end":102608,"line_start":675,"line_end":675,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102613,"byte_end":102651,"line_start":676,"line_end":676,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102656,"byte_end":102663,"line_start":677,"line_end":677,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103239,"byte_end":103251,"line_start":697,"line_end":697,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<IbcReceiveResponse<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102877,"byte_end":102952,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102957,"byte_end":102960,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102965,"byte_end":102980,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102985,"byte_end":102988,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":102993,"byte_end":103000,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, IbcReceiveResponse};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103005,"byte_end":103059,"line_start":691,"line_end":691,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103064,"byte_end":103067,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> IbcReceiveResponse {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103072,"byte_end":103148,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/     IbcReceiveResponse::new().add_messages(msgs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103153,"byte_end":103205,"line_start":694,"line_end":694,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103210,"byte_end":103215,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103220,"byte_end":103227,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103760,"byte_end":103775,"line_start":712,"line_end":712,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<IbcReceiveResponse<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103401,"byte_end":103473,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103478,"byte_end":103481,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103486,"byte_end":103501,"line_start":703,"line_end":703,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103506,"byte_end":103509,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103514,"byte_end":103521,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, IbcReceiveResponse};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103526,"byte_end":103577,"line_start":706,"line_end":706,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103582,"byte_end":103585,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> IbcReceiveResponse {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103590,"byte_end":103666,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/     IbcReceiveResponse::new().add_submessages(msgs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103671,"byte_end":103726,"line_start":709,"line_end":709,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103731,"byte_end":103736,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103741,"byte_end":103748,"line_start":711,"line_end":711,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":104129,"byte_end":104139,"line_start":722,"line_end":722,"column_start":12,"column_end":22},"name":"add_events","qualname":"<IbcReceiveResponse<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103911,"byte_end":103987,"line_start":717,"line_end":717,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":103992,"byte_end":104009,"line_start":718,"line_end":718,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":104014,"byte_end":104017,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":104022,"byte_end":104098,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":104103,"byte_end":104117,"line_start":721,"line_end":721,"column_start":5,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":554},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110042,"byte_end":110048,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Record","qualname":"::iterator::Record","value":"(Vec<u8>, V)","parent":null,"children":[],"decl_id":null,"docs":" A record of a key-value storage that is created through an iterator API.\n The first element (key) is always raw binary data. The second element\n (value) is binary by default but can be changed to a custom type. This\n allows contracts to reuse the type when deserializing database records.\n","sig":null,"attributes":[{"value":"/ A record of a key-value storage that is created through an iterator API.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":109731,"byte_end":109807,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ The first element (key) is always raw binary data. The second element","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":109808,"byte_end":109881,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ (value) is binary by default but can be changed to a custom type. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":109882,"byte_end":109956,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ allows contracts to reuse the type when deserializing database records.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":109957,"byte_end":110032,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110155,"byte_end":110159,"line_start":11,"line_end":11,"column_start":10,"column_end":14},"name":"Pair","qualname":"::iterator::Pair","value":"Record<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to Record, please use this instead\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110079,"byte_end":110145,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5292},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110324,"byte_end":110333,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Ascending","qualname":"::iterator::Order::Ascending","value":"Order::Ascending","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5295},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110343,"byte_end":110353,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"Descending","qualname":"::iterator::Order::Descending","value":"Order::Descending","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5291},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110312,"byte_end":110317,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Order","qualname":"::iterator::Order","value":"pub enum Order { Ascending = , Descending = , }","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5301},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111794,"byte_end":111801,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::math::decimal::Decimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111459,"byte_end":111564,"line_start":16,"line_end":16,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111565,"byte_end":111568,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111569,"byte_end":111699,"line_start":18,"line_end":18,"column_start":1,"column_end":131}}]},{"kind":"Struct","id":{"krate":0,"index":5334},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111923,"byte_end":111943,"line_start":24,"line_end":24,"column_start":12,"column_end":32},"name":"DecimalRangeExceeded","qualname":"::math::decimal::DecimalRangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal range exceeded\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111877,"byte_end":111911,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112300,"byte_end":112303,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal::Decimal::MAX","value":"Self","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112379,"byte_end":112382,"line_start":35,"line_end":35,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112337,"byte_end":112361,"line_start":34,"line_end":34,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112490,"byte_end":112494,"line_start":40,"line_end":40,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112448,"byte_end":112472,"line_start":39,"line_end":39,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112590,"byte_end":112597,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112551,"byte_end":112578,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112744,"byte_end":112752,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112690,"byte_end":112732,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113693,"byte_end":113705,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal>::from_atomics","value":"pub fn from_atomics<impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\n                                                       u32)\n-> Result<Self, DecimalRangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112844,"byte_end":112910,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112915,"byte_end":112985,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":112990,"byte_end":113062,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113067,"byte_end":113088,"line_start":57,"line_end":57,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113093,"byte_end":113096,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113101,"byte_end":113173,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113178,"byte_end":113221,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113226,"byte_end":113229,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113234,"byte_end":113249,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113254,"byte_end":113257,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113262,"byte_end":113269,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113274,"byte_end":113317,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_atomics(Uint128::new(1234), 3).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113322,"byte_end":113388,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113393,"byte_end":113432,"line_start":67,"line_end":67,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113437,"byte_end":113440,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113445,"byte_end":113501,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113506,"byte_end":113544,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113549,"byte_end":113552,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113557,"byte_end":113610,"line_start":72,"line_end":72,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113615,"byte_end":113669,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":113674,"byte_end":113681,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115217,"byte_end":115227,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal>::from_ratio","value":"pub fn from_ratio<impl Into<Uint128>: Into<Uint128>,\n                  impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\n                                                     impl Into<Uint128>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115145,"byte_end":115205,"line_start":106,"line_end":106,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115688,"byte_end":115695,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116481,"byte_end":116488,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"atomics","qualname":"<Decimal>::atomics","value":"pub fn atomics(&Self) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115749,"byte_end":115825,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115830,"byte_end":115910,"line_start":125,"line_end":125,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115915,"byte_end":115918,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115923,"byte_end":115938,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115943,"byte_end":115946,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115951,"byte_end":115958,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":115963,"byte_end":116006,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116011,"byte_end":116039,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116044,"byte_end":116087,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_str(\"1.234\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116092,"byte_end":116140,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116145,"byte_end":116184,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint128::new(1234000000000000000));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116189,"byte_end":116252,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116257,"byte_end":116260,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116265,"byte_end":116295,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116300,"byte_end":116363,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116368,"byte_end":116407,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint128::new(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116412,"byte_end":116457,"line_start":140,"line_end":140,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116462,"byte_end":116469,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116725,"byte_end":116739,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"decimal_places","qualname":"<Decimal>::decimal_places","value":"pub fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116535,"byte_end":116601,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116606,"byte_end":116664,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116669,"byte_end":116672,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal::atomics()`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116677,"byte_end":116713,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116919,"byte_end":116923,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116803,"byte_end":116856,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116861,"byte_end":116864,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":116869,"byte_end":116907,"line_start":156,"line_end":156,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5336},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154287,"byte_end":154297,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"Decimal256","qualname":"::math::decimal256::Decimal256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":153902,"byte_end":154010,"line_start":17,"line_end":17,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154011,"byte_end":154014,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154015,"byte_end":154073,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ 115792089237316195423570985008687907853269984665640564039457.584007913129639935","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154074,"byte_end":154157,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ (which is (2^256 - 1) / 10^18)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154158,"byte_end":154192,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5369},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154422,"byte_end":154445,"line_start":27,"line_end":27,"column_start":12,"column_end":35},"name":"Decimal256RangeExceeded","qualname":"::math::decimal256::Decimal256RangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal256 range exceeded\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154373,"byte_end":154410,"line_start":26,"line_end":26,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":762},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154989,"byte_end":154992,"line_start":42,"line_end":42,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal256::Decimal256::MAX","value":"Self","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155071,"byte_end":155074,"line_start":45,"line_end":45,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal256>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal256","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155026,"byte_end":155053,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155182,"byte_end":155186,"line_start":50,"line_end":50,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal256","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155137,"byte_end":155164,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155282,"byte_end":155289,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal256>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal256","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155240,"byte_end":155270,"line_start":54,"line_end":54,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155451,"byte_end":155459,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal256>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal256","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155394,"byte_end":155439,"line_start":59,"line_end":59,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156530,"byte_end":156542,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal256>::from_atomics","value":"pub fn from_atomics<impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\n                                                       u32)\n-> Result<Self, Decimal256RangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155563,"byte_end":155629,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155634,"byte_end":155704,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155709,"byte_end":155781,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155786,"byte_end":155807,"line_start":67,"line_end":67,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155812,"byte_end":155815,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155820,"byte_end":155892,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155897,"byte_end":155940,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155945,"byte_end":155948,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155953,"byte_end":155968,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155973,"byte_end":155976,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155981,"byte_end":155988,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":155993,"byte_end":156039,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/ let a = Decimal256::from_atomics(1234u64, 3).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156044,"byte_end":156102,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156107,"byte_end":156146,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156151,"byte_end":156154,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156159,"byte_end":156218,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156223,"byte_end":156261,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156266,"byte_end":156269,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156274,"byte_end":156330,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156335,"byte_end":156389,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156394,"byte_end":156397,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(Uint256::MAX, 18).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156402,"byte_end":156466,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a, Decimal256::MAX);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156471,"byte_end":156506,"line_start":86,"line_end":86,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":156511,"byte_end":156518,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158076,"byte_end":158086,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal256>::from_ratio","value":"pub fn from_ratio<impl Into<Uint256>: Into<Uint256>,\n                  impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\n                                                     impl Into<Uint256>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal256\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal256","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158001,"byte_end":158064,"line_start":119,"line_end":119,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158544,"byte_end":158551,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal256>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159356,"byte_end":159363,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"atomics","qualname":"<Decimal256>::atomics","value":"pub fn atomics(&Self) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158605,"byte_end":158681,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158686,"byte_end":158766,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158771,"byte_end":158774,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158779,"byte_end":158794,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158799,"byte_end":158802,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158807,"byte_end":158814,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158819,"byte_end":158865,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158870,"byte_end":158898,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158903,"byte_end":158946,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal256::from_str(\"1.234\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":158951,"byte_end":159002,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159007,"byte_end":159046,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint256::from(1234000000000000000u128));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159051,"byte_end":159119,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159124,"byte_end":159127,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159132,"byte_end":159162,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal256::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159167,"byte_end":159233,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159238,"byte_end":159277,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint256::from(1u128));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159282,"byte_end":159332,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159337,"byte_end":159344,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159603,"byte_end":159617,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"decimal_places","qualname":"<Decimal256>::decimal_places","value":"pub fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159410,"byte_end":159476,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159481,"byte_end":159539,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159544,"byte_end":159547,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal256::atomics()`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159552,"byte_end":159591,"line_start":162,"line_end":162,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159800,"byte_end":159804,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal256>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal256.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal256.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159681,"byte_end":159737,"line_start":167,"line_end":167,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159742,"byte_end":159745,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":159750,"byte_end":159788,"line_start":169,"line_end":169,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":837},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199607,"byte_end":199615,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Fraction","qualname":"::math::fraction::Fraction","value":"Fraction<T>: Sized","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" A fraction `p`/`q` with integers `p` and `q`.","sig":null,"attributes":[{"value":"/ A fraction `p`/`q` with integers `p` and `q`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199476,"byte_end":199525,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199526,"byte_end":199529,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `p` is called the numerator and `q` is called the denominator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199530,"byte_end":199596,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199669,"byte_end":199678,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"numerator","qualname":"::math::fraction::Fraction::numerator","value":"pub fn numerator(&Self) -> T","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Returns the numerator `p`\n","sig":null,"attributes":[{"value":"/ Returns the numerator `p`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199632,"byte_end":199661,"line_start":5,"line_end":5,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199735,"byte_end":199746,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"denominator","qualname":"::math::fraction::Fraction::denominator","value":"pub fn denominator(&Self) -> T","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Returns the denominator `q`\n","sig":null,"attributes":[{"value":"/ Returns the denominator `q`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199696,"byte_end":199727,"line_start":7,"line_end":7,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199887,"byte_end":199890,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"inv","qualname":"::math::fraction::Fraction::inv","value":"pub fn inv(&Self) -> Option<Self>","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse `q/p` for fraction `p/q`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse `q/p` for fraction `p/q`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199765,"byte_end":199829,"line_start":10,"line_end":10,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199834,"byte_end":199837,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If `p` is zero, None is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199842,"byte_end":199879,"line_start":12,"line_end":12,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":863},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200109,"byte_end":200114,"line_start":7,"line_end":7,"column_start":11,"column_end":16},"name":"Isqrt","qualname":"::math::isqrt::Isqrt","value":"Isqrt","parent":null,"children":[{"krate":0,"index":864}],"decl_id":null,"docs":" A trait for calculating the\n [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).\n","sig":null,"attributes":[{"value":"/ A trait for calculating the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":199989,"byte_end":200020,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/ [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200021,"byte_end":200098,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200210,"byte_end":200215,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"isqrt","qualname":"::math::isqrt::Isqrt::isqrt","value":"pub fn isqrt(Self) -> Self","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" The [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).\n","sig":null,"attributes":[{"value":"/ The [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200121,"byte_end":200202,"line_start":8,"line_end":8,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":868},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200950,"byte_end":200958,"line_start":42,"line_end":42,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::math::isqrt::Unsigned","value":"Unsigned","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types that represent unsigned integers.\n","sig":null,"attributes":[{"value":"/ Marker trait for types that represent unsigned integers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200879,"byte_end":200939,"line_start":41,"line_end":41,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5371},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203778,"byte_end":203785,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Uint128","qualname":"::math::uint128::Uint128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u128 that is using strings for JSON encoding/decoding,\n such that the full u128 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u128 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203125,"byte_end":203205,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ such that the full u128 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203206,"byte_end":203300,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203301,"byte_end":203328,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203329,"byte_end":203332,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203333,"byte_end":203347,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203348,"byte_end":203351,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u128` to get the value out:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203352,"byte_end":203427,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203428,"byte_end":203431,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203432,"byte_end":203439,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint128;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203440,"byte_end":203472,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ let a = Uint128::from(123u128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203473,"byte_end":203508,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(a.u128(), 123);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203509,"byte_end":203539,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203540,"byte_end":203543,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let b = Uint128::from(42u64);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203544,"byte_end":203577,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(b.u128(), 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203578,"byte_end":203607,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203608,"byte_end":203611,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let c = Uint128::from(70u32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203612,"byte_end":203645,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(c.u128(), 70);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203646,"byte_end":203675,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203676,"byte_end":203683,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":947},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203852,"byte_end":203855,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint128::Uint128::MAX","value":"Self","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204028,"byte_end":204031,"line_start":40,"line_end":40,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint128>::new","value":"pub const fn new(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(value).","sig":null,"attributes":[{"value":"/ Creates a Uint128(value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203886,"byte_end":203915,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203920,"byte_end":203923,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203928,"byte_end":204010,"line_start":39,"line_end":39,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204131,"byte_end":204135,"line_start":45,"line_end":45,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint128>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint128(0)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204089,"byte_end":204113,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204235,"byte_end":204239,"line_start":50,"line_end":50,"column_start":18,"column_end":22},"name":"u128","qualname":"<Uint128>::u128","value":"pub const fn u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204178,"byte_end":204217,"line_start":49,"line_end":49,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204354,"byte_end":204365,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint128>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204283,"byte_end":204336,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204500,"byte_end":204511,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint128>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204426,"byte_end":204482,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204579,"byte_end":204586,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint128>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204642,"byte_end":204653,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint128>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":204880,"byte_end":204891,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint128>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":205118,"byte_end":205129,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint128>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":205356,"byte_end":205367,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint128>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":205585,"byte_end":205596,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint128>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":205800,"byte_end":205818,"line_start":103,"line_end":103,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint128>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206029,"byte_end":206040,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint128>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206244,"byte_end":206256,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint128>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206347,"byte_end":206359,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint128>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206450,"byte_end":206462,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint128>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206553,"byte_end":206565,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint128>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206653,"byte_end":206667,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint128>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206760,"byte_end":206774,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint128>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206867,"byte_end":206881,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint128>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":206974,"byte_end":206988,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint128>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212723,"byte_end":212737,"line_start":413,"line_end":413,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint128>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u128>, B: Into<u128>>(&Self, A, B) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212667,"byte_end":212711,"line_start":412,"line_end":412,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213535,"byte_end":213543,"line_start":440,"line_end":440,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint128>::full_mul","value":"pub fn full_mul<impl Into<u128>: Into<u128>>(Self, impl Into<u128>) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u128 values without overflow, producing an\n [`Uint256`].","sig":null,"attributes":[{"value":"/ Multiplies two u128 values without overflow, producing an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213187,"byte_end":213248,"line_start":428,"line_end":428,"column_start":5,"column_end":66}},{"value":"/ [`Uint256`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213253,"byte_end":213269,"line_start":429,"line_end":429,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213274,"byte_end":213277,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213282,"byte_end":213296,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213301,"byte_end":213304,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213309,"byte_end":213316,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint128;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213321,"byte_end":213351,"line_start":434,"line_end":434,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213356,"byte_end":213359,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let a = Uint128::MAX;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213364,"byte_end":213389,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213394,"byte_end":213428,"line_start":437,"line_end":437,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"680564733841876926926749214863536422910\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213433,"byte_end":213511,"line_start":438,"line_end":438,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213516,"byte_end":213523,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225436,"byte_end":225440,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"name":"U256","qualname":"::math::uint256::uints::U256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14730981,"byte_end":14731017,"line_start":567,"line_end":567,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14731020,"byte_end":14731030,"line_start":568,"line_end":568,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":5952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226349,"byte_end":226356,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"Uint256","qualname":"::math::uint256::Uint256","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u256 that is using strings for JSON encoding/decoding,\n such that the full u256 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u256 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225586,"byte_end":225665,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ such that the full u256 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225666,"byte_end":225760,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225761,"byte_end":225788,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225789,"byte_end":225792,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225793,"byte_end":225807,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225808,"byte_end":225811,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225812,"byte_end":225898,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225899,"byte_end":225916,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225917,"byte_end":225920,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225921,"byte_end":225928,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint256;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225929,"byte_end":225961,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ let a = Uint256::from(258u128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225962,"byte_end":225997,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ let b = Uint256::new([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":225998,"byte_end":226024,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226025,"byte_end":226072,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226073,"byte_end":226120,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226121,"byte_end":226168,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226169,"byte_end":226216,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226217,"byte_end":226224,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226225,"byte_end":226246,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226247,"byte_end":226254,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226423,"byte_end":226426,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint256::Uint256::MAX","value":"Uint256","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226697,"byte_end":226700,"line_start":57,"line_end":57,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint256>::new","value":"pub const fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(value) from a big endian representation. It's just an alias for\n [`Uint256::from_be_bytes`].","sig":null,"attributes":[{"value":"/ Creates a Uint256(value) from a big endian representation. It's just an alias for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226463,"byte_end":226548,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ [`Uint256::from_be_bytes`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226553,"byte_end":226584,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226589,"byte_end":226592,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226597,"byte_end":226679,"line_start":56,"line_end":56,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226816,"byte_end":226820,"line_start":62,"line_end":62,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint256(0)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226774,"byte_end":226798,"line_start":61,"line_end":61,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226887,"byte_end":226900,"line_start":66,"line_end":66,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint256>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":227590,"byte_end":227603,"line_start":84,"line_end":84,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint256>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":228425,"byte_end":228437,"line_start":104,"line_end":104,"column_start":18,"column_end":30},"name":"from_uint128","qualname":"<Uint256>::from_uint128","value":"pub const fn from_uint128(Uint128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint128` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint128` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":228283,"byte_end":228365,"line_start":102,"line_end":102,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":228370,"byte_end":228407,"line_start":103,"line_end":103,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":228875,"byte_end":228886,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint256>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":228804,"byte_end":228857,"line_start":114,"line_end":114,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":230121,"byte_end":230132,"line_start":161,"line_end":161,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint256>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":230047,"byte_end":230103,"line_start":160,"line_end":160,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":231300,"byte_end":231307,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint256>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":231368,"byte_end":231379,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint256>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":231606,"byte_end":231617,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint256>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":231844,"byte_end":231855,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint256>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":232082,"byte_end":232093,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint256>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":232297,"byte_end":232308,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint256>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":232512,"byte_end":232523,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint256>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":232748,"byte_end":232751,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint256>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":232891,"byte_end":232902,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint256>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233126,"byte_end":233137,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"checked_shl","qualname":"<Uint256>::checked_shl","value":"pub fn checked_shl(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233361,"byte_end":233375,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint256>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233468,"byte_end":233482,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint256>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233575,"byte_end":233589,"line_start":281,"line_end":281,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint256>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239852,"byte_end":239866,"line_start":574,"line_end":574,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint256>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<Uint256>, B: Into<Uint256>>(&Self, A, B)\n-> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239796,"byte_end":239840,"line_start":573,"line_end":573,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240755,"byte_end":240763,"line_start":604,"line_end":604,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint256>::full_mul","value":"pub fn full_mul<impl Into<Uint256>: Into<Uint256>>(Self, impl Into<Uint256>)\n-> Uint512","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u256 values without overflow, producing an\n [`Uint512`].","sig":null,"attributes":[{"value":"/ Multiplies two u256 values without overflow, producing an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240333,"byte_end":240394,"line_start":589,"line_end":589,"column_start":5,"column_end":66}},{"value":"/ [`Uint512`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240399,"byte_end":240415,"line_start":590,"line_end":590,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240420,"byte_end":240423,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240428,"byte_end":240442,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240447,"byte_end":240450,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240455,"byte_end":240462,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint256;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240467,"byte_end":240497,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240502,"byte_end":240505,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Uint256::MAX;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240510,"byte_end":240535,"line_start":597,"line_end":597,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240540,"byte_end":240574,"line_start":598,"line_end":598,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240579,"byte_end":240594,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/     result.to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240599,"byte_end":240626,"line_start":600,"line_end":600,"column_start":5,"column_end":32}},{"value":"/     \"231584178474632390847141970017375815706539969331281128078915168015826259279870\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240631,"byte_end":240720,"line_start":601,"line_end":601,"column_start":5,"column_end":94}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240725,"byte_end":240731,"line_start":602,"line_end":602,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240736,"byte_end":240743,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270051,"byte_end":270055,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"name":"U512","qualname":"::math::uint512::uints::U512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14730981,"byte_end":14731017,"line_start":567,"line_end":567,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14731020,"byte_end":14731030,"line_start":568,"line_end":568,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":6533},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271156,"byte_end":271163,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Uint512","qualname":"::math::uint512::Uint512","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u512 that is using strings for JSON encoding/decoding,\n such that the full u512 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u512 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270201,"byte_end":270280,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ such that the full u512 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270281,"byte_end":270375,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270376,"byte_end":270403,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270404,"byte_end":270407,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270408,"byte_end":270422,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270423,"byte_end":270426,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270427,"byte_end":270513,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270514,"byte_end":270531,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270532,"byte_end":270535,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270536,"byte_end":270543,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint512;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270544,"byte_end":270576,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ let a = Uint512::from(258u128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270577,"byte_end":270612,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ let b = Uint512::new([","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270613,"byte_end":270639,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270640,"byte_end":270687,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270688,"byte_end":270735,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270736,"byte_end":270783,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270784,"byte_end":270831,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270832,"byte_end":270879,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270880,"byte_end":270927,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270928,"byte_end":270975,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":270976,"byte_end":271023,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271024,"byte_end":271031,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271032,"byte_end":271053,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271054,"byte_end":271061,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1411},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271230,"byte_end":271233,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint512::Uint512::MAX","value":"Uint512","parent":{"krate":0,"index":1410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271394,"byte_end":271397,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Uint512>::new","value":"pub fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(value) from a big endian representation. It's just an alias for\n `from_big_endian`.\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(value) from a big endian representation. It's just an alias for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271270,"byte_end":271355,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ `from_big_endian`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271360,"byte_end":271382,"line_start":58,"line_end":58,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271513,"byte_end":271517,"line_start":64,"line_end":64,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint512>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(0)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271471,"byte_end":271495,"line_start":63,"line_end":63,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271584,"byte_end":271597,"line_start":68,"line_end":68,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint512>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":272867,"byte_end":272880,"line_start":98,"line_end":98,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint512>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":274279,"byte_end":274291,"line_start":130,"line_end":130,"column_start":18,"column_end":30},"name":"from_uint256","qualname":"<Uint512>::from_uint256","value":"pub const fn from_uint256(Uint256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint256` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint256` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":274137,"byte_end":274219,"line_start":128,"line_end":128,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":274224,"byte_end":274261,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":274988,"byte_end":274999,"line_start":143,"line_end":143,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint512>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":274917,"byte_end":274970,"line_start":142,"line_end":142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":277198,"byte_end":277209,"line_start":225,"line_end":225,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint512>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":277124,"byte_end":277180,"line_start":224,"line_end":224,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":279341,"byte_end":279348,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint512>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":279409,"byte_end":279420,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint512>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":279647,"byte_end":279658,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint512>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":279885,"byte_end":279896,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint512>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":280123,"byte_end":280134,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint512>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":280338,"byte_end":280349,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint512>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":280553,"byte_end":280564,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint512>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":280788,"byte_end":280802,"line_start":353,"line_end":353,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint512>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":280895,"byte_end":280909,"line_start":357,"line_end":357,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint512>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281002,"byte_end":281016,"line_start":361,"line_end":361,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint512>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6568},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305044,"byte_end":305050,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Uint64","qualname":"::math::uint64::Uint64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u64 that is using strings for JSON encoding/decoding,\n such that the full u64 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u64 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304470,"byte_end":304549,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ such that the full u64 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304550,"byte_end":304643,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304644,"byte_end":304671,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304672,"byte_end":304675,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304676,"byte_end":304690,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304691,"byte_end":304694,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u64` to get the value out:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304695,"byte_end":304769,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304770,"byte_end":304773,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304774,"byte_end":304781,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint64;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304782,"byte_end":304813,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ let a = Uint64::from(42u64);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304814,"byte_end":304846,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.u64(), 42);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304847,"byte_end":304875,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304876,"byte_end":304879,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let b = Uint64::from(70u32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304880,"byte_end":304912,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(b.u64(), 70);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304913,"byte_end":304941,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":304942,"byte_end":304949,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305115,"byte_end":305118,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint64::Uint64::MAX","value":"Self","parent":{"krate":0,"index":1617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305289,"byte_end":305292,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint64>::new","value":"pub const fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(value).","sig":null,"attributes":[{"value":"/ Creates a Uint64(value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305148,"byte_end":305176,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305181,"byte_end":305184,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305189,"byte_end":305271,"line_start":35,"line_end":35,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305389,"byte_end":305393,"line_start":41,"line_end":41,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint64>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint64(0)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305348,"byte_end":305371,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305492,"byte_end":305495,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"u64","qualname":"<Uint64>::u64","value":"pub const fn u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305435,"byte_end":305474,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305609,"byte_end":305620,"line_start":51,"line_end":51,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint64>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305538,"byte_end":305591,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305754,"byte_end":305765,"line_start":56,"line_end":56,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint64>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305680,"byte_end":305736,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305832,"byte_end":305839,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint64>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305895,"byte_end":305906,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint64>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":306133,"byte_end":306144,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint64>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":306371,"byte_end":306382,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint64>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":306609,"byte_end":306620,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint64>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":306824,"byte_end":306842,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint64>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307053,"byte_end":307064,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint64>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307268,"byte_end":307280,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint64>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307371,"byte_end":307383,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint64>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307474,"byte_end":307486,"line_start":114,"line_end":114,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint64>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307577,"byte_end":307589,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint64>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307677,"byte_end":307691,"line_start":122,"line_end":122,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint64>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307784,"byte_end":307798,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint64>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307891,"byte_end":307905,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint64>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":307998,"byte_end":308012,"line_start":134,"line_end":134,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint64>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311689,"byte_end":311703,"line_start":296,"line_end":296,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint64>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u64>, B: Into<u64>>(&Self, A, B) -> Uint64","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311633,"byte_end":311677,"line_start":295,"line_end":295,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312476,"byte_end":312484,"line_start":324,"line_end":324,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint64>::full_mul","value":"pub fn full_mul<impl Into<u64>: Into<u64>>(Self, impl Into<u64>) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two `Uint64`/`u64` values without overflow, producing an\n [`Uint128`].","sig":null,"attributes":[{"value":"/ Multiplies two `Uint64`/`u64` values without overflow, producing an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312139,"byte_end":312210,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/ [`Uint128`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312215,"byte_end":312231,"line_start":313,"line_end":313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312236,"byte_end":312239,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312244,"byte_end":312258,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312263,"byte_end":312266,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312271,"byte_end":312278,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint64;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312283,"byte_end":312312,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312317,"byte_end":312320,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let a = Uint64::MAX;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312325,"byte_end":312349,"line_start":320,"line_end":320,"column_start":5,"column_end":29}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312354,"byte_end":312388,"line_start":321,"line_end":321,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"36893488147419103230\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312393,"byte_end":312452,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312457,"byte_end":312464,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6731},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326079,"byte_end":326086,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Balance","qualname":"::query::bank::BankQuery::Balance","value":"BankQuery::Balance { address, denom }","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":" This calls into the native bank module for one denomination\n Return value is BalanceResponse\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for one denomination","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":325971,"byte_end":326034,"line_start":10,"line_end":10,"column_start":5,"column_end":68}},{"value":"/ Return value is BalanceResponse","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326039,"byte_end":326074,"line_start":11,"line_end":11,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":6734},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326339,"byte_end":326350,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"AllBalances","qualname":"::query::bank::BankQuery::AllBalances","value":"BankQuery::AllBalances { address }","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":" This calls into the native bank module for all denominations.\n Note that this may be much more expensive than Balance and should be avoided if possible.\n Return value is AllBalanceResponse.\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for all denominations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326127,"byte_end":326192,"line_start":13,"line_end":13,"column_start":5,"column_end":70}},{"value":"/ Note that this may be much more expensive than Balance and should be avoided if possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326197,"byte_end":326290,"line_start":14,"line_end":14,"column_start":5,"column_end":98}},{"value":"/ Return value is AllBalanceResponse.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326295,"byte_end":326334,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6730},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":325955,"byte_end":325964,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"BankQuery","qualname":"::query::bank::BankQuery","value":"pub enum BankQuery {\n    Balance {\n        address: String,\n        denom: String,\n    },\n    AllBalances {\n        address: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":6731},{"krate":0,"index":6734}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":325821,"byte_end":325838,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":325910,"byte_end":325945,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6795},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326493,"byte_end":326508,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"BalanceResponse","qualname":"::query::bank::BalanceResponse","value":"BalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":6796}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326446,"byte_end":326481,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6796},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326625,"byte_end":326631,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::BalanceResponse::amount","value":"coins::Coin","parent":{"krate":0,"index":6795},"children":[],"decl_id":null,"docs":" Always returns a Coin with the requested denom.\n This may be of 0 amount if no such funds.\n","sig":null,"attributes":[{"value":"/ Always returns a Coin with the requested denom.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326515,"byte_end":326566,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/ This may be of 0 amount if no such funds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326571,"byte_end":326616,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6856},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326760,"byte_end":326778,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"AllBalanceResponse","qualname":"::query::bank::AllBalanceResponse","value":"AllBalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":6857}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326713,"byte_end":326748,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326846,"byte_end":326852,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::AllBalanceResponse::amount","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":6856},"children":[],"decl_id":null,"docs":" Returns all non-zero coins held by this account.\n","sig":null,"attributes":[{"value":"/ Returns all non-zero coins held by this account.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/bank.rs","byte_start":326785,"byte_end":326837,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":7020},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327410,"byte_end":327416,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"PortId","qualname":"::query::ibc::IbcQuery::PortId","value":"IbcQuery::PortId {  }","parent":{"krate":0,"index":7019},"children":[],"decl_id":null,"docs":" Gets the Port ID the current contract is bound to.","sig":null,"attributes":[{"value":"/ Gets the Port ID the current contract is bound to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327307,"byte_end":327361,"line_start":14,"line_end":14,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327366,"byte_end":327369,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Returns a `PortIdResponse`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327374,"byte_end":327405,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":7021},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327620,"byte_end":327632,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"name":"ListChannels","qualname":"::query::ibc::IbcQuery::ListChannels","value":"IbcQuery::ListChannels { port_id }","parent":{"krate":0,"index":7019},"children":[],"decl_id":null,"docs":" Lists all channels that are bound to a given port.\n If `port_id` is omitted, this list all channels bound to the contract's port.","sig":null,"attributes":[{"value":"/ Lists all channels that are bound to a given port.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327425,"byte_end":327479,"line_start":18,"line_end":18,"column_start":5,"column_end":59}},{"value":"/ If `port_id` is omitted, this list all channels bound to the contract's port.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327484,"byte_end":327565,"line_start":19,"line_end":19,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327570,"byte_end":327573,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Returns a `ListChannelsResponse`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327578,"byte_end":327615,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":7023},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327885,"byte_end":327892,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Channel","qualname":"::query::ibc::IbcQuery::Channel","value":"IbcQuery::Channel { channel_id, port_id }","parent":{"krate":0,"index":7019},"children":[],"decl_id":null,"docs":" Lists all information for a (portID, channelID) pair.\n If port_id is omitted, it will default to the contract's own channel.\n (To save a PortId{} call)","sig":null,"attributes":[{"value":"/ Lists all information for a (portID, channelID) pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327666,"byte_end":327723,"line_start":23,"line_end":23,"column_start":5,"column_end":62}},{"value":"/ If port_id is omitted, it will default to the contract's own channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327728,"byte_end":327801,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ (To save a PortId{} call)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327806,"byte_end":327835,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327840,"byte_end":327843,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Returns a `ChannelResponse`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327848,"byte_end":327880,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":7019},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327292,"byte_end":327300,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"IbcQuery","qualname":"::query::ibc::IbcQuery","value":"pub enum IbcQuery {\n    PortId {\n    },\n    ListChannels {\n        port_id: Option<String>,\n    },\n    Channel {\n        channel_id: String,\n        port_id: Option<String>,\n    },\n}","parent":null,"children":[{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7023}],"decl_id":null,"docs":" These are queries to the various IBC modules to see the state of the contract's\n IBC connection. These will return errors if the contract is not \"ibc enabled\"\n","sig":null,"attributes":[{"value":"/ These are queries to the various IBC modules to see the state of the contract's","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":326992,"byte_end":327075,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ IBC connection. These will return errors if the contract is not \"ibc enabled\"","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327076,"byte_end":327157,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327158,"byte_end":327175,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":327247,"byte_end":327282,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7026},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":328070,"byte_end":328084,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"PortIdResponse","qualname":"::query::ibc::PortIdResponse","value":"PortIdResponse { port_id }","parent":null,"children":[{"krate":0,"index":7027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7027},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":328095,"byte_end":328102,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"port_id","qualname":"::query::ibc::PortIdResponse::port_id","value":"std::string::String","parent":{"krate":0,"index":7026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7087},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":328197,"byte_end":328217,"line_start":41,"line_end":41,"column_start":12,"column_end":32},"name":"ListChannelsResponse","qualname":"::query::ibc::ListChannelsResponse","value":"ListChannelsResponse { channels }","parent":null,"children":[{"krate":0,"index":7088}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7088},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":328228,"byte_end":328236,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"name":"channels","qualname":"::query::ibc::ListChannelsResponse::channels","value":"std::vec::Vec<ibc::IbcChannel>","parent":{"krate":0,"index":7087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":328340,"byte_end":328355,"line_start":46,"line_end":46,"column_start":12,"column_end":27},"name":"ChannelResponse","qualname":"::query::ibc::ChannelResponse","value":"ChannelResponse { channel }","parent":null,"children":[{"krate":0,"index":7149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7149},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/ibc.rs","byte_start":328366,"byte_end":328373,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"channel","qualname":"::query::ibc::ChannelResponse::channel","value":"std::option::Option<ibc::IbcChannel>","parent":{"krate":0,"index":7148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7441},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328783,"byte_end":328794,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"BondedDenom","qualname":"::query::staking::StakingQuery::BondedDenom","value":"StakingQuery::BondedDenom {  }","parent":{"krate":0,"index":7440},"children":[],"decl_id":null,"docs":" Returns the denomination that can be bonded (if there are multiple native tokens on the chain)\n","sig":null,"attributes":[{"value":"/ Returns the denomination that can be bonded (if there are multiple native tokens on the chain)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328680,"byte_end":328778,"line_start":12,"line_end":12,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":7442},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328871,"byte_end":328885,"line_start":15,"line_end":15,"column_start":5,"column_end":19},"name":"AllDelegations","qualname":"::query::staking::StakingQuery::AllDelegations","value":"StakingQuery::AllDelegations { delegator }","parent":{"krate":0,"index":7440},"children":[],"decl_id":null,"docs":" AllDelegations will return all delegations by the delegator\n","sig":null,"attributes":[{"value":"/ AllDelegations will return all delegations by the delegator","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328803,"byte_end":328866,"line_start":14,"line_end":14,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":7444},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329035,"byte_end":329045,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"Delegation","qualname":"::query::staking::StakingQuery::Delegation","value":"StakingQuery::Delegation { delegator, validator }","parent":{"krate":0,"index":7440},"children":[],"decl_id":null,"docs":" Delegation will return more detailed info on a particular\n delegation, defined by delegator/validator pair\n","sig":null,"attributes":[{"value":"/ Delegation will return more detailed info on a particular","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328913,"byte_end":328974,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ delegation, defined by delegator/validator pair","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328979,"byte_end":329030,"line_start":17,"line_end":17,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":7447},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329251,"byte_end":329264,"line_start":25,"line_end":25,"column_start":5,"column_end":18},"name":"AllValidators","qualname":"::query::staking::StakingQuery::AllValidators","value":"StakingQuery::AllValidators {  }","parent":{"krate":0,"index":7440},"children":[],"decl_id":null,"docs":" Returns all validators in the currently active validator set.","sig":null,"attributes":[{"value":"/ Returns all validators in the currently active validator set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329113,"byte_end":329178,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329183,"byte_end":329186,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The query response type is `AllValidatorsResponse`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329191,"byte_end":329246,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":7448},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329478,"byte_end":329487,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"Validator","qualname":"::query::staking::StakingQuery::Validator","value":"StakingQuery::Validator { address }","parent":{"krate":0,"index":7440},"children":[],"decl_id":null,"docs":" Returns the validator at the given address. Returns None if the validator is\n not part of the currently active validator set.","sig":null,"attributes":[{"value":"/ Returns the validator at the given address. Returns None if the validator is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329273,"byte_end":329353,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ not part of the currently active validator set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329358,"byte_end":329409,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329414,"byte_end":329417,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The query response type is `ValidatorResponse`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329422,"byte_end":329473,"line_start":29,"line_end":29,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":7440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328661,"byte_end":328673,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"StakingQuery","qualname":"::query::staking::StakingQuery","value":"pub enum StakingQuery {\n    BondedDenom {\n    },\n    AllDelegations {\n        delegator: String,\n    },\n    Delegation {\n        delegator: String,\n        validator: String,\n    },\n    AllValidators {\n    },\n    Validator {\n        address: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":7441},{"krate":0,"index":7442},{"krate":0,"index":7444},{"krate":0,"index":7447},{"krate":0,"index":7448}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328527,"byte_end":328544,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":328616,"byte_end":328651,"line_start":10,"line_end":10,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7509},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329798,"byte_end":329817,"line_start":39,"line_end":39,"column_start":12,"column_end":31},"name":"BondedDenomResponse","qualname":"::query::staking::BondedDenomResponse","value":"BondedDenomResponse { denom }","parent":null,"children":[{"krate":0,"index":7510}],"decl_id":null,"docs":" BondedDenomResponse is data format returned from StakingRequest::BondedDenom query\n","sig":null,"attributes":[{"value":"/ BondedDenomResponse is data format returned from StakingRequest::BondedDenom query","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329593,"byte_end":329679,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329751,"byte_end":329786,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7510},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329828,"byte_end":329833,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"denom","qualname":"::query::staking::BondedDenomResponse::denom","value":"std::string::String","parent":{"krate":0,"index":7509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7570},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330054,"byte_end":330076,"line_start":46,"line_end":46,"column_start":12,"column_end":34},"name":"AllDelegationsResponse","qualname":"::query::staking::AllDelegationsResponse","value":"AllDelegationsResponse { delegations }","parent":null,"children":[{"krate":0,"index":7571}],"decl_id":null,"docs":" DelegationsResponse is data format returned from StakingRequest::AllDelegations query\n","sig":null,"attributes":[{"value":"/ DelegationsResponse is data format returned from StakingRequest::AllDelegations query","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":329846,"byte_end":329935,"line_start":43,"line_end":43,"column_start":1,"column_end":90}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330007,"byte_end":330042,"line_start":45,"line_end":45,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7571},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330087,"byte_end":330098,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"delegations","qualname":"::query::staking::AllDelegationsResponse::delegations","value":"std::vec::Vec<query::staking::Delegation>","parent":{"krate":0,"index":7570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7572},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330314,"byte_end":330324,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"Delegation","qualname":"::query::staking::Delegation","value":"Delegation { delegator, validator, amount }","parent":null,"children":[{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7575}],"decl_id":null,"docs":" Delegation is basic (cheap to query) data about a delegation.","sig":null,"attributes":[{"value":"/ Delegation is basic (cheap to query) data about a delegation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330120,"byte_end":330185,"line_start":50,"line_end":50,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330186,"byte_end":330189,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Instances are created in the querier.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330190,"byte_end":330231,"line_start":52,"line_end":52,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7573},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330335,"byte_end":330344,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::staking::Delegation::delegator","value":"addresses::Addr","parent":{"krate":0,"index":7572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7574},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330413,"byte_end":330422,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::Delegation::validator","value":"std::string::String","parent":{"krate":0,"index":7572},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330356,"byte_end":330404,"line_start":56,"line_end":56,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7575},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330490,"byte_end":330496,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::staking::Delegation::amount","value":"coins::Coin","parent":{"krate":0,"index":7572},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330436,"byte_end":330481,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7700},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331275,"byte_end":331289,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"FullDelegation","qualname":"::query::staking::FullDelegation","value":"FullDelegation { delegator, validator, amount, can_redelegate, accumulated_rewards }","parent":null,"children":[{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705}],"decl_id":null,"docs":" FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)\n is expensive to query.","sig":null,"attributes":[{"value":"/ FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331016,"byte_end":331119,"line_start":79,"line_end":79,"column_start":1,"column_end":104}},{"value":"/ is expensive to query.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331120,"byte_end":331146,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331147,"byte_end":331150,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created in the querier.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331151,"byte_end":331192,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7701},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331300,"byte_end":331309,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::staking::FullDelegation::delegator","value":"addresses::Addr","parent":{"krate":0,"index":7700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7702},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331378,"byte_end":331387,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::FullDelegation::validator","value":"std::string::String","parent":{"krate":0,"index":7700},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331321,"byte_end":331369,"line_start":86,"line_end":86,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7703},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331455,"byte_end":331461,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::staking::FullDelegation::amount","value":"coins::Coin","parent":{"krate":0,"index":7700},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331401,"byte_end":331446,"line_start":88,"line_end":88,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7704},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331676,"byte_end":331690,"line_start":93,"line_end":93,"column_start":9,"column_end":23},"name":"can_redelegate","qualname":"::query::staking::FullDelegation::can_redelegate","value":"coins::Coin","parent":{"krate":0,"index":7700},"children":[],"decl_id":null,"docs":" can_redelegate captures how much can be immediately redelegated.\n 0 is no redelegation and can_redelegate == amount is redelegate all\n but there are many places between the two\n","sig":null,"attributes":[{"value":"/ can_redelegate captures how much can be immediately redelegated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331473,"byte_end":331541,"line_start":90,"line_end":90,"column_start":5,"column_end":73}},{"value":"/ 0 is no redelegation and can_redelegate == amount is redelegate all","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331546,"byte_end":331617,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ but there are many places between the two","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331622,"byte_end":331667,"line_start":92,"line_end":92,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7705},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331749,"byte_end":331768,"line_start":95,"line_end":95,"column_start":9,"column_end":28},"name":"accumulated_rewards","qualname":"::query::staking::FullDelegation::accumulated_rewards","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":7700},"children":[],"decl_id":null,"docs":" How much we can currently withdraw\n","sig":null,"attributes":[{"value":"/ How much we can currently withdraw","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331702,"byte_end":331740,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331936,"byte_end":331957,"line_start":100,"line_end":100,"column_start":12,"column_end":33},"name":"AllValidatorsResponse","qualname":"::query::staking::AllValidatorsResponse","value":"AllValidatorsResponse { validators }","parent":null,"children":[{"krate":0,"index":7774}],"decl_id":null,"docs":" The data format returned from StakingRequest::AllValidators query\n","sig":null,"attributes":[{"value":"/ The data format returned from StakingRequest::AllValidators query","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331784,"byte_end":331853,"line_start":98,"line_end":98,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":7774},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331968,"byte_end":331978,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"name":"validators","qualname":"::query::staking::AllValidatorsResponse::validators","value":"std::vec::Vec<query::staking::Validator>","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7834},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332147,"byte_end":332164,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"ValidatorResponse","qualname":"::query::staking::ValidatorResponse","value":"ValidatorResponse { validator }","parent":null,"children":[{"krate":0,"index":7835}],"decl_id":null,"docs":" The data format returned from StakingRequest::Validator query\n","sig":null,"attributes":[{"value":"/ The data format returned from StakingRequest::Validator query","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":331999,"byte_end":332064,"line_start":104,"line_end":104,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":7835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332175,"byte_end":332184,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::ValidatorResponse::validator","value":"std::option::Option<query::staking::Validator>","parent":{"krate":0,"index":7834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332332,"byte_end":332341,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"Validator","qualname":"::query::staking::Validator","value":"Validator { address, commission, max_commission, max_change_rate }","parent":null,"children":[{"krate":0,"index":7896},{"krate":0,"index":7897},{"krate":0,"index":7898},{"krate":0,"index":7899}],"decl_id":null,"docs":" Instances are created in the querier.\n","sig":null,"attributes":[{"value":"/ Instances are created in the querier.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332208,"byte_end":332249,"line_start":110,"line_end":110,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7896},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332405,"byte_end":332412,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"address","qualname":"::query::staking::Validator::address","value":"std::string::String","parent":{"krate":0,"index":7895},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332348,"byte_end":332396,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7897},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332430,"byte_end":332440,"line_start":115,"line_end":115,"column_start":9,"column_end":19},"name":"commission","qualname":"::query::staking::Validator::commission","value":"math::decimal::Decimal","parent":{"krate":0,"index":7895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7898},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332459,"byte_end":332473,"line_start":116,"line_end":116,"column_start":9,"column_end":23},"name":"max_commission","qualname":"::query::staking::Validator::max_commission","value":"math::decimal::Decimal","parent":{"krate":0,"index":7895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7899},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332547,"byte_end":332562,"line_start":118,"line_end":118,"column_start":9,"column_end":24},"name":"max_change_rate","qualname":"::query::staking::Validator::max_change_rate","value":"math::decimal::Decimal","parent":{"krate":0,"index":7895},"children":[],"decl_id":null,"docs":" TODO: what units are these (in terms of time)?\n","sig":null,"attributes":[{"value":"/ TODO: what units are these (in terms of time)?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":332488,"byte_end":332538,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":8192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333337,"byte_end":333342,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Smart","qualname":"::query::wasm::WasmQuery::Smart","value":"WasmQuery::Smart { contract_addr, msg }","parent":{"krate":0,"index":8191},"children":[],"decl_id":null,"docs":" this queries the public API of another contract at a known address (with known ABI)\n return value is whatever the contract returns (caller should know)\n","sig":null,"attributes":[{"value":"/ this queries the public API of another contract at a known address (with known ABI)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333170,"byte_end":333257,"line_start":10,"line_end":10,"column_start":5,"column_end":92}},{"value":"/ return value is whatever the contract returns (caller should know)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333262,"byte_end":333332,"line_start":11,"line_end":11,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":8195},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333618,"byte_end":333621,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Raw","qualname":"::query::wasm::WasmQuery::Raw","value":"WasmQuery::Raw { contract_addr, key }","parent":{"krate":0,"index":8191},"children":[],"decl_id":null,"docs":" this queries the raw kv-store of the contract.\n returns the raw, unparsed data stored at that key, which may be an empty vector if not present\n","sig":null,"attributes":[{"value":"/ this queries the raw kv-store of the contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333460,"byte_end":333510,"line_start":17,"line_end":17,"column_start":5,"column_end":55}},{"value":"/ returns the raw, unparsed data stored at that key, which may be an empty vector if not present","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333515,"byte_end":333613,"line_start":18,"line_end":18,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":8198},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333834,"byte_end":333846,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"ContractInfo","qualname":"::query::wasm::WasmQuery::ContractInfo","value":"WasmQuery::ContractInfo { contract_addr }","parent":{"krate":0,"index":8191},"children":[],"decl_id":null,"docs":" returns a ContractInfoResponse with metadata on the contract from the runtime\n","sig":null,"attributes":[{"value":"/ returns a ContractInfoResponse with metadata on the contract from the runtime","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333748,"byte_end":333829,"line_start":24,"line_end":24,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":8191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333154,"byte_end":333163,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"WasmQuery","qualname":"::query::wasm::WasmQuery","value":"pub enum WasmQuery {\n    Smart {\n        contract_addr: String,\n        msg: Binary,\n    },\n    Raw {\n        contract_addr: String,\n        key: Binary,\n    },\n    ContractInfo {\n        contract_addr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":8192},{"krate":0,"index":8195},{"krate":0,"index":8198}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333020,"byte_end":333037,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333109,"byte_end":333144,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333977,"byte_end":333997,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"ContractInfoResponse","qualname":"::query::wasm::ContractInfoResponse","value":"ContractInfoResponse { code_id, creator, admin, pinned, ibc_port }","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202},{"krate":0,"index":8203},{"krate":0,"index":8204},{"krate":0,"index":8205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":333877,"byte_end":333894,"line_start":28,"line_end":28,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":8201},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334008,"byte_end":334015,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"code_id","qualname":"::query::wasm::ContractInfoResponse::code_id","value":"u64","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8202},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334078,"byte_end":334085,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"creator","qualname":"::query::wasm::ContractInfoResponse::creator","value":"std::string::String","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":" address that instantiated this contract\n","sig":null,"attributes":[{"value":"/ address that instantiated this contract","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334026,"byte_end":334069,"line_start":32,"line_end":32,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":8203},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334149,"byte_end":334154,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"admin","qualname":"::query::wasm::ContractInfoResponse::admin","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":" admin who can run migrations (if any)\n","sig":null,"attributes":[{"value":"/ admin who can run migrations (if any)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334099,"byte_end":334140,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":8204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334268,"byte_end":334274,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"pinned","qualname":"::query::wasm::ContractInfoResponse::pinned","value":"bool","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":" if set, the contract is pinned to the cache, and thus uses less gas when called\n","sig":null,"attributes":[{"value":"/ if set, the contract is pinned to the cache, and thus uses less gas when called","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334176,"byte_end":334259,"line_start":36,"line_end":36,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":8205},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334341,"byte_end":334349,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"ibc_port","qualname":"::query::wasm::ContractInfoResponse::ibc_port","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":" set if this contract has bound an IBC port\n","sig":null,"attributes":[{"value":"/ set if this contract has bound an IBC port","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334286,"byte_end":334332,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334478,"byte_end":334481,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractInfoResponse>::new","value":"pub fn new<impl Into<String>: Into<String>>(u64, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor for tests / mocks\n","sig":null,"attributes":[{"value":"/ Convenience constructor for tests / mocks","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334402,"byte_end":334447,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8387},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323339,"byte_end":323343,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Bank","qualname":"::query::QueryRequest::Bank","value":"QueryRequest::Bank(BankQuery)","parent":{"krate":0,"index":8385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8390},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323360,"byte_end":323366,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Custom","qualname":"::query::QueryRequest::Custom","value":"QueryRequest::Custom(C)","parent":{"krate":0,"index":8385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323407,"byte_end":323414,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Staking","qualname":"::query::QueryRequest::Staking","value":"QueryRequest::Staking(StakingQuery)","parent":{"krate":0,"index":8385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323375,"byte_end":323402,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":8396},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323829,"byte_end":323837,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"Stargate","qualname":"::query::QueryRequest::Stargate","value":"QueryRequest::Stargate { path, data }","parent":{"krate":0,"index":8385},"children":[],"decl_id":null,"docs":" A Stargate query encoded the same way as abci_query, with path and protobuf encoded Data.\n The format is defined in [ADR-21](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-021-protobuf-query-encoding.md)\n The response is also protobuf encoded. The caller is responsible for compiling the proper protobuf definitions\n","sig":null,"attributes":[{"value":"/ A Stargate query encoded the same way as abci_query, with path and protobuf encoded Data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323434,"byte_end":323527,"line_start":34,"line_end":34,"column_start":5,"column_end":98}},{"value":"/ The format is defined in [ADR-21](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-021-protobuf-query-encoding.md)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323532,"byte_end":323672,"line_start":35,"line_end":35,"column_start":5,"column_end":145}},{"value":"/ The response is also protobuf encoded. The caller is responsible for compiling the proper protobuf definitions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323677,"byte_end":323791,"line_start":36,"line_end":36,"column_start":5,"column_end":119}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323796,"byte_end":323824,"line_start":37,"line_end":37,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8399},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324143,"byte_end":324146,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Ibc","qualname":"::query::QueryRequest::Ibc","value":"QueryRequest::Ibc(IbcQuery)","parent":{"krate":0,"index":8385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324110,"byte_end":324138,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8402},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324162,"byte_end":324166,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::query::QueryRequest::Wasm","value":"QueryRequest::Wasm(WasmQuery)","parent":{"krate":0,"index":8385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323317,"byte_end":323329,"line_start":29,"line_end":29,"column_start":10,"column_end":22},"name":"QueryRequest","qualname":"::query::QueryRequest","value":"pub enum QueryRequest<C> {\n    Bank(BankQuery),\n    Custom(C),\n    Staking(StakingQuery),\n    Stargate {\n        path: String,\n        data: Binary,\n    },\n    Ibc(IbcQuery),\n    Wasm(WasmQuery),\n}","parent":null,"children":[{"krate":0,"index":8387},{"krate":0,"index":8390},{"krate":0,"index":8393},{"krate":0,"index":8396},{"krate":0,"index":8399},{"krate":0,"index":8402}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323183,"byte_end":323200,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":323272,"byte_end":323307,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1920},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324782,"byte_end":324793,"line_start":69,"line_end":69,"column_start":11,"column_end":22},"name":"CustomQuery","qualname":"::query::CustomQuery","value":"CustomQuery: Serialize + Clone","parent":null,"children":[],"decl_id":null,"docs":" A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery\n in generic implementations.\n You need to implement it in your custom query type.","sig":null,"attributes":[{"value":"/ A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324182,"byte_end":324281,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/ in generic implementations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324282,"byte_end":324313,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ You need to implement it in your custom query type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324314,"byte_end":324369,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324370,"byte_end":324373,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324374,"byte_end":324388,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324389,"byte_end":324392,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324393,"byte_end":324400,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::CustomQuery;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324401,"byte_end":324437,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ # use schemars::JsonSchema;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324438,"byte_end":324469,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324470,"byte_end":324512,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ #[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324513,"byte_end":324587,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ #[serde(rename_all = \"snake_case\")]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324588,"byte_end":324627,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ pub enum MyCustomQuery {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324628,"byte_end":324656,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/     Ping {},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324657,"byte_end":324673,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/     Capitalized { text: String },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324674,"byte_end":324711,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324712,"byte_end":324717,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324718,"byte_end":324721,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl CustomQuery for MyCustomQuery {}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324722,"byte_end":324763,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324764,"byte_end":324771,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8473},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336823,"byte_end":336825,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::contract_result::ContractResult::Ok","value":"ContractResult::Ok(S)","parent":{"krate":0,"index":8471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337043,"byte_end":337046,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::contract_result::ContractResult::Err","value":"ContractResult::Err(String)","parent":{"krate":0,"index":8471},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336834,"byte_end":336927,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336932,"byte_end":337007,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337012,"byte_end":337038,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":8471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336799,"byte_end":336813,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ContractResult","qualname":"::results::contract_result::ContractResult","value":"pub enum ContractResult<S> { Ok(S), Err(String), }","parent":null,"children":[{"krate":0,"index":8473},{"krate":0,"index":8476}],"decl_id":null,"docs":" This is the final result type that is created and serialized in a contract for\n every init/execute/migrate call. The VM then deserializes this type to distinguish\n between successful and failed executions.","sig":null,"attributes":[{"value":"/ This is the final result type that is created and serialized in a contract for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335541,"byte_end":335623,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ every init/execute/migrate call. The VM then deserializes this type to distinguish","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335624,"byte_end":335710,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/ between successful and failed executions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335711,"byte_end":335756,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335757,"byte_end":335760,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335761,"byte_end":335845,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335846,"byte_end":335933,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":335934,"byte_end":336019,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336020,"byte_end":336023,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336024,"byte_end":336038,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336039,"byte_end":336042,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336043,"byte_end":336055,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336056,"byte_end":336059,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336060,"byte_end":336067,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336068,"byte_end":336127,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ let response: Response = Response::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336128,"byte_end":336177,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ let result: ContractResult<Response> = ContractResult::Ok(response);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336178,"byte_end":336250,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"messages\":[],\"attributes\":[],\"events\":[],\"data\":null}}\"#);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336251,"byte_end":336362,"line_start":21,"line_end":21,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336363,"byte_end":336370,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336371,"byte_end":336374,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336375,"byte_end":336387,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336388,"byte_end":336391,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336392,"byte_end":336399,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336400,"byte_end":336459,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336460,"byte_end":336517,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ let result: ContractResult<Response> = ContractResult::Err(error_msg);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336518,"byte_end":336592,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336593,"byte_end":336674,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336675,"byte_end":336682,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":336754,"byte_end":336789,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337348,"byte_end":337359,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ContractResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337218,"byte_end":337297,"line_start":45,"line_end":45,"column_start":5,"column_end":84}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337302,"byte_end":337336,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337447,"byte_end":337453,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ContractResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337521,"byte_end":337526,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<ContractResult<S>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337608,"byte_end":337614,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"is_err","qualname":"<ContractResult<S>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337739,"byte_end":337749,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<ContractResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2000},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342277,"byte_end":342286,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"CustomMsg","qualname":"::results::cosmos_msg::CustomMsg","value":"CustomMsg: Serialize + Clone + fmt::Debug + PartialEq + JsonSchema","parent":null,"children":[],"decl_id":null,"docs":" Like CustomQuery for better type clarity.\n Also makes it shorter to use as a trait bound.\n","sig":null,"attributes":[{"value":"/ Like CustomQuery for better type clarity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342170,"byte_end":342215,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ Also makes it shorter to use as a trait bound.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342216,"byte_end":342266,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8597},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342640,"byte_end":342644,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Bank","qualname":"::results::cosmos_msg::CosmosMsg::Bank","value":"CosmosMsg::Bank(BankMsg)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8600},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342791,"byte_end":342797,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Custom","qualname":"::results::cosmos_msg::CosmosMsg::Custom","value":"CosmosMsg::Custom(T)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8603},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342838,"byte_end":342845,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Staking","qualname":"::results::cosmos_msg::CosmosMsg::Staking","value":"CosmosMsg::Staking(StakingMsg)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342806,"byte_end":342833,"line_start":29,"line_end":29,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8606},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342895,"byte_end":342907,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"Distribution","qualname":"::results::cosmos_msg::CosmosMsg::Distribution","value":"CosmosMsg::Distribution(DistributionMsg)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342863,"byte_end":342890,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":8609},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343302,"byte_end":343310,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Stargate","qualname":"::results::cosmos_msg::CosmosMsg::Stargate","value":"CosmosMsg::Stargate { type_url, value }","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" A Stargate message encoded the same way as a protobuf [Any](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto).\n This is the same structure as messages in `TxBody` from [ADR-020](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-020-protobuf-transaction-encoding.md)\n","sig":null,"attributes":[{"value":"/ A Stargate message encoded the same way as a protobuf [Any](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342930,"byte_end":343081,"line_start":33,"line_end":33,"column_start":5,"column_end":156}},{"value":"/ This is the same structure as messages in `TxBody` from [ADR-020](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-020-protobuf-transaction-encoding.md)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343086,"byte_end":343264,"line_start":34,"line_end":34,"column_start":5,"column_end":183}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343269,"byte_end":343297,"line_start":35,"line_end":35,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8612},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343406,"byte_end":343409,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"Ibc","qualname":"::results::cosmos_msg::CosmosMsg::Ibc","value":"CosmosMsg::Ibc(IbcMsg)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343373,"byte_end":343401,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8615},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343423,"byte_end":343427,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::results::cosmos_msg::CosmosMsg::Wasm","value":"CosmosMsg::Wasm(WasmMsg)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343475,"byte_end":343478,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Gov","qualname":"::results::cosmos_msg::CosmosMsg::Gov","value":"CosmosMsg::Gov(GovMsg)","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343442,"byte_end":343470,"line_start":43,"line_end":43,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":8595},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342613,"byte_end":342622,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"CosmosMsg","qualname":"::results::cosmos_msg::CosmosMsg","value":"pub enum CosmosMsg<T = Empty> {\n    Bank(BankMsg),\n    Custom(T),\n    Staking(StakingMsg),\n    Distribution(DistributionMsg),\n    Stargate {\n        type_url: String,\n        value: Binary,\n    },\n    Ibc(IbcMsg),\n    Wasm(WasmMsg),\n    Gov(GovMsg),\n}","parent":null,"children":[{"krate":0,"index":8597},{"krate":0,"index":8600},{"krate":0,"index":8603},{"krate":0,"index":8606},{"krate":0,"index":8609},{"krate":0,"index":8612},{"krate":0,"index":8615},{"krate":0,"index":8618}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342377,"byte_end":342394,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342466,"byte_end":342501,"line_start":22,"line_end":22,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":8749},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344075,"byte_end":344079,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Send","qualname":"::results::cosmos_msg::BankMsg::Send","value":"BankMsg::Send { to_address, amount }","parent":{"krate":0,"index":8748},"children":[],"decl_id":null,"docs":" Sends native tokens from the contract to the given address.","sig":null,"attributes":[{"value":"/ Sends native tokens from the contract to the given address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343778,"byte_end":343841,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343846,"byte_end":343849,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgSend](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto#L19-L28).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343854,"byte_end":343986,"line_start":56,"line_end":56,"column_start":5,"column_end":137}},{"value":"/ `from_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343991,"byte_end":344070,"line_start":57,"line_end":57,"column_start":5,"column_end":84}}]},{"kind":"StructVariant","id":{"krate":0,"index":8752},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344410,"byte_end":344414,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Burn","qualname":"::results::cosmos_msg::BankMsg::Burn","value":"BankMsg::Burn { amount }","parent":{"krate":0,"index":8748},"children":[],"decl_id":null,"docs":" This will burn the given coins from the contract's account.\n There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.\n Important if a contract controls significant token supply that must be retired.\n","sig":null,"attributes":[{"value":"/ This will burn the given coins from the contract's account.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344148,"byte_end":344211,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344216,"byte_end":344317,"line_start":63,"line_end":63,"column_start":5,"column_end":106}},{"value":"/ Important if a contract controls significant token supply that must be retired.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344322,"byte_end":344405,"line_start":64,"line_end":64,"column_start":5,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":8748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343764,"byte_end":343771,"line_start":53,"line_end":53,"column_start":10,"column_end":17},"name":"BankMsg","qualname":"::results::cosmos_msg::BankMsg","value":"pub enum BankMsg {\n    Send {\n        to_address: String,\n        amount: Vec<Coin>,\n    },\n    Burn {\n        amount: Vec<Coin>,\n    },\n}","parent":null,"children":[{"krate":0,"index":8749},{"krate":0,"index":8752}],"decl_id":null,"docs":" The message types of the bank module.","sig":null,"attributes":[{"value":"/ The message types of the bank module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343491,"byte_end":343532,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343533,"byte_end":343536,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343537,"byte_end":343629,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343630,"byte_end":343647,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":343719,"byte_end":343754,"line_start":52,"line_end":52,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":8924},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344998,"byte_end":345006,"line_start":78,"line_end":78,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::results::cosmos_msg::StakingMsg::Delegate","value":"StakingMsg::Delegate { validator, amount }","parent":{"krate":0,"index":8923},"children":[],"decl_id":null,"docs":" This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344765,"byte_end":344904,"line_start":76,"line_end":76,"column_start":5,"column_end":144}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344909,"byte_end":344993,"line_start":77,"line_end":77,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":8927},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345285,"byte_end":345295,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Undelegate","qualname":"::results::cosmos_msg::StakingMsg::Undelegate","value":"StakingMsg::Undelegate { validator, amount }","parent":{"krate":0,"index":8923},"children":[],"decl_id":null,"docs":" This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345048,"byte_end":345191,"line_start":79,"line_end":79,"column_start":5,"column_end":148}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345196,"byte_end":345280,"line_start":80,"line_end":80,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":8930},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345578,"byte_end":345588,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"Redelegate","qualname":"::results::cosmos_msg::StakingMsg::Redelegate","value":"StakingMsg::Redelegate { src_validator, dst_validator, amount }","parent":{"krate":0,"index":8923},"children":[],"decl_id":null,"docs":" This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345337,"byte_end":345484,"line_start":82,"line_end":82,"column_start":5,"column_end":152}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345489,"byte_end":345573,"line_start":83,"line_end":83,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":8923},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344748,"byte_end":344758,"line_start":75,"line_end":75,"column_start":10,"column_end":20},"name":"StakingMsg","qualname":"::results::cosmos_msg::StakingMsg","value":"pub enum StakingMsg {\n    Delegate {\n        validator: String,\n        amount: Coin,\n    },\n    Undelegate {\n        validator: String,\n        amount: Coin,\n    },\n    Redelegate {\n        src_validator: String,\n        dst_validator: String,\n        amount: Coin,\n    },\n}","parent":null,"children":[{"krate":0,"index":8924},{"krate":0,"index":8927},{"krate":0,"index":8930}],"decl_id":null,"docs":" The message types of the staking module.","sig":null,"attributes":[{"value":"/ The message types of the staking module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344441,"byte_end":344485,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344486,"byte_end":344489,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344490,"byte_end":344585,"line_start":70,"line_end":70,"column_start":1,"column_end":96}},{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344586,"byte_end":344613,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344614,"byte_end":344631,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":344703,"byte_end":344738,"line_start":74,"line_end":74,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":9060},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346272,"byte_end":346290,"line_start":101,"line_end":101,"column_start":5,"column_end":23},"name":"SetWithdrawAddress","qualname":"::results::cosmos_msg::DistributionMsg::SetWithdrawAddress","value":"DistributionMsg::SetWithdrawAddress { address }","parent":{"krate":0,"index":9059},"children":[],"decl_id":null,"docs":" This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346024,"byte_end":346178,"line_start":99,"line_end":99,"column_start":5,"column_end":159}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346183,"byte_end":346267,"line_start":100,"line_end":100,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":9062},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346618,"byte_end":346641,"line_start":107,"line_end":107,"column_start":5,"column_end":28},"name":"WithdrawDelegatorReward","qualname":"::results::cosmos_msg::DistributionMsg::WithdrawDelegatorReward","value":"DistributionMsg::WithdrawDelegatorReward { validator }","parent":{"krate":0,"index":9059},"children":[],"decl_id":null,"docs":" This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346364,"byte_end":346524,"line_start":105,"line_end":105,"column_start":5,"column_end":165}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346529,"byte_end":346613,"line_start":106,"line_end":106,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":9059},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346002,"byte_end":346017,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"name":"DistributionMsg","qualname":"::results::cosmos_msg::DistributionMsg","value":"pub enum DistributionMsg {\n    SetWithdrawAddress {\n        address: String,\n    },\n    WithdrawDelegatorReward {\n        validator: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":9060},{"krate":0,"index":9062}],"decl_id":null,"docs":" The message types of the distribution module.","sig":null,"attributes":[{"value":"/ The message types of the distribution module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345685,"byte_end":345734,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345735,"byte_end":345738,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345739,"byte_end":345839,"line_start":93,"line_end":93,"column_start":1,"column_end":101}},{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345840,"byte_end":345867,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345868,"byte_end":345885,"line_start":95,"line_end":95,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":345957,"byte_end":345992,"line_start":97,"line_end":97,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":9316},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347307,"byte_end":347314,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"Execute","qualname":"::results::cosmos_msg::WasmMsg::Execute","value":"WasmMsg::Execute { contract_addr, msg, funds }","parent":{"krate":0,"index":9315},"children":[],"decl_id":null,"docs":" Dispatches a call to another contract at a known address (with known ABI).","sig":null,"attributes":[{"value":"/ Dispatches a call to another contract at a known address (with known ABI).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346997,"byte_end":347075,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347080,"byte_end":347083,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgExecuteContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L68-L78).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347088,"byte_end":347224,"line_start":122,"line_end":122,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347229,"byte_end":347302,"line_start":123,"line_end":123,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9320},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347787,"byte_end":347798,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Instantiate","qualname":"::results::cosmos_msg::WasmMsg::Instantiate","value":"WasmMsg::Instantiate { admin, code_id, msg, funds, label }","parent":{"krate":0,"index":9315},"children":[],"decl_id":null,"docs":" Instantiates a new contracts from previously uploaded Wasm code.","sig":null,"attributes":[{"value":"/ Instantiates a new contracts from previously uploaded Wasm code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347476,"byte_end":347544,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347549,"byte_end":347552,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgInstantiateContract](https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha1/x/wasm/internal/types/tx.proto#L47-L61).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347557,"byte_end":347704,"line_start":132,"line_end":132,"column_start":5,"column_end":152}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":347709,"byte_end":347782,"line_start":133,"line_end":133,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9326},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348506,"byte_end":348513,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Migrate","qualname":"::results::cosmos_msg::WasmMsg::Migrate","value":"WasmMsg::Migrate { contract_addr, new_code_id, msg }","parent":{"krate":0,"index":9315},"children":[],"decl_id":null,"docs":" Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to\n customize behavior.","sig":null,"attributes":[{"value":"/ Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348061,"byte_end":348148,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/ customize behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348153,"byte_end":348176,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348181,"byte_end":348184,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Only the contract admin (as defined in wasmd), if any, is able to make this call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348189,"byte_end":348274,"line_start":146,"line_end":146,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348279,"byte_end":348282,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgMigrateContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L86-L96).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348287,"byte_end":348423,"line_start":148,"line_end":148,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348428,"byte_end":348501,"line_start":149,"line_end":149,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9330},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348907,"byte_end":348918,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"UpdateAdmin","qualname":"::results::cosmos_msg::WasmMsg::UpdateAdmin","value":"WasmMsg::UpdateAdmin { contract_addr, admin }","parent":{"krate":0,"index":9315},"children":[],"decl_id":null,"docs":" Sets a new admin (for migrate) on the given contract.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Sets a new admin (for migrate) on the given contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348767,"byte_end":348824,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348829,"byte_end":348902,"line_start":158,"line_end":158,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9333},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349143,"byte_end":349153,"line_start":165,"line_end":165,"column_start":5,"column_end":15},"name":"ClearAdmin","qualname":"::results::cosmos_msg::WasmMsg::ClearAdmin","value":"WasmMsg::ClearAdmin { contract_addr }","parent":{"krate":0,"index":9315},"children":[],"decl_id":null,"docs":" Clears the admin on the given contract, so no more migration possible.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Clears the admin on the given contract, so no more migration possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":348986,"byte_end":349060,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349065,"byte_end":349138,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":9315},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346983,"byte_end":346990,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"name":"WasmMsg","qualname":"::results::cosmos_msg::WasmMsg","value":"pub enum WasmMsg {\n    Execute {\n        contract_addr: String,\n        msg: Binary,\n        funds: Vec<Coin>,\n    },\n    Instantiate {\n        admin: Option<String>,\n        code_id: u64,\n        msg: Binary,\n        funds: Vec<Coin>,\n        label: String,\n    },\n    Migrate {\n        contract_addr: String,\n        new_code_id: u64,\n        msg: Binary,\n    },\n    UpdateAdmin {\n        contract_addr: String,\n        admin: String,\n    },\n    ClearAdmin {\n        contract_addr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":9316},{"krate":0,"index":9320},{"krate":0,"index":9326},{"krate":0,"index":9330},{"krate":0,"index":9333}],"decl_id":null,"docs":" The message types of the wasm module.","sig":null,"attributes":[{"value":"/ The message types of the wasm module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346717,"byte_end":346758,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346759,"byte_end":346762,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346763,"byte_end":346848,"line_start":115,"line_end":115,"column_start":1,"column_end":86}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346849,"byte_end":346866,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":346938,"byte_end":346973,"line_start":118,"line_end":118,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":9427},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349533,"byte_end":349537,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"Vote","qualname":"::results::cosmos_msg::GovMsg::Vote","value":"GovMsg::Vote { proposal_id, vote }","parent":{"krate":0,"index":9426},"children":[],"decl_id":null,"docs":" This maps directly to [MsgVote](https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/gov/v1beta1/tx.proto#L46-L56) in the Cosmos SDK with voter set to the contract address.\n","sig":null,"attributes":[{"value":"/ This maps directly to [MsgVote](https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/gov/v1beta1/tx.proto#L46-L56) in the Cosmos SDK with voter set to the contract address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349342,"byte_end":349528,"line_start":172,"line_end":172,"column_start":5,"column_end":191}}]},{"kind":"Enum","id":{"krate":0,"index":9426},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349329,"byte_end":349335,"line_start":171,"line_end":171,"column_start":10,"column_end":16},"name":"GovMsg","qualname":"::results::cosmos_msg::GovMsg","value":"pub enum GovMsg {\n    Vote {\n        proposal_id: u64,\n        vote: VoteOption,\n    },\n}","parent":null,"children":[{"krate":0,"index":9427}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349184,"byte_end":349212,"line_start":168,"line_end":168,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349284,"byte_end":349319,"line_start":170,"line_end":170,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349743,"byte_end":349746,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"Yes","qualname":"::results::cosmos_msg::VoteOption::Yes","value":"VoteOption::Yes","parent":{"krate":0,"index":9490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9493},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349752,"byte_end":349754,"line_start":181,"line_end":181,"column_start":5,"column_end":7},"name":"No","qualname":"::results::cosmos_msg::VoteOption::No","value":"VoteOption::No","parent":{"krate":0,"index":9490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9495},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349760,"byte_end":349767,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Abstain","qualname":"::results::cosmos_msg::VoteOption::Abstain","value":"VoteOption::Abstain","parent":{"krate":0,"index":9490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9497},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349773,"byte_end":349783,"line_start":183,"line_end":183,"column_start":5,"column_end":15},"name":"NoWithVeto","qualname":"::results::cosmos_msg::VoteOption::NoWithVeto","value":"VoteOption::NoWithVeto","parent":{"krate":0,"index":9490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349726,"byte_end":349736,"line_start":179,"line_end":179,"column_start":10,"column_end":20},"name":"VoteOption","qualname":"::results::cosmos_msg::VoteOption","value":"pub enum VoteOption { Yes, No, Abstain, NoWithVeto, }","parent":null,"children":[{"krate":0,"index":9491},{"krate":0,"index":9493},{"krate":0,"index":9495},{"krate":0,"index":9497}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349581,"byte_end":349609,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349681,"byte_end":349716,"line_start":178,"line_end":178,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":2002},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350007,"byte_end":350023,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"wasm_instantiate","qualname":"::results::cosmos_msg::wasm_instantiate","value":"pub fn wasm_instantiate<impl Serialize: Serialize>(u64, &impl Serialize,\n                                                   Vec<Coin>, String)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349788,"byte_end":349890,"line_start":186,"line_end":186,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349891,"byte_end":349894,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ When using this, `admin` is always unset. If you need more flexibility, create the message directly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":349895,"byte_end":349999,"line_start":188,"line_end":188,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":2004},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350410,"byte_end":350422,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"wasm_execute","qualname":"::results::cosmos_msg::wasm_execute","value":"pub fn wasm_execute<impl Into<String>: Into<String>,\n                    impl Serialize: Serialize>(impl Into<String>,\n                                               &impl Serialize, Vec<Coin>)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code\n","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350301,"byte_end":350402,"line_start":205,"line_end":205,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":9499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352504,"byte_end":352509,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::results::empty::Empty","value":"Empty {  }","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that serves as a placeholder in different places,\n such as contracts that don't set a custom message.","sig":null,"attributes":[{"value":"/ An empty struct that serves as a placeholder in different places,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352043,"byte_end":352112,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ such as contracts that don't set a custom message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352113,"byte_end":352167,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352168,"byte_end":352171,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is designed to be expressable in correct JSON and JSON Schema but","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352172,"byte_end":352244,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ contains no meaningful data. Previously we used enums without cases,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352245,"byte_end":352317,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/empty.rs","byte_start":352318,"byte_end":352421,"line_start":9,"line_end":9,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":9556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353710,"byte_end":353715,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Event","qualname":"::results::events::Event","value":"Event { ty, attributes }","parent":null,"children":[{"krate":0,"index":9619},{"krate":0,"index":9557}],"decl_id":null,"docs":" A full [*Cosmos SDK* event].","sig":null,"attributes":[{"value":"/ A full [*Cosmos SDK* event].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353110,"byte_end":353142,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353143,"byte_end":353146,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This version uses string attributes (similar to [*Cosmos SDK* StringEvent]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353147,"byte_end":353227,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ which then get magically converted to bytes for Tendermint somewhere between","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353228,"byte_end":353308,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the Rust-Go interface, JSON deserialization and the `NewEvent` call in Cosmos SDK.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353309,"byte_end":353395,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353396,"byte_end":353399,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [*Cosmos SDK* event]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353400,"byte_end":353477,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ [*Cosmos SDK* StringEvent]: https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/base/abci/v1beta1/abci.proto#L56-L70","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353478,"byte_end":353609,"line_start":11,"line_end":11,"column_start":1,"column_end":132}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353681,"byte_end":353698,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":9619},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353861,"byte_end":353863,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"ty","qualname":"::results::events::Event::ty","value":"std::string::String","parent":{"krate":0,"index":9556},"children":[],"decl_id":null,"docs":" The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.\n","sig":null,"attributes":[{"value":"/ The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353722,"byte_end":353822,"line_start":15,"line_end":15,"column_start":5,"column_end":105}},{"value":"serde(rename = \"type\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353827,"byte_end":353852,"line_start":16,"line_end":16,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":9557},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354095,"byte_end":354105,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::events::Event::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":9556},"children":[],"decl_id":null,"docs":" The attributes to be included in the event.","sig":null,"attributes":[{"value":"/ The attributes to be included in the event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353877,"byte_end":353924,"line_start":18,"line_end":18,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353929,"byte_end":353932,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ You can learn more about these from [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":353937,"byte_end":353997,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354002,"byte_end":354005,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354010,"byte_end":354086,"line_start":22,"line_end":22,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354230,"byte_end":354233,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new event with the given type and an empty list of attributes.\n","sig":null,"attributes":[{"value":"/ Create a new event with the given type and an empty list of attributes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354143,"byte_end":354218,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354425,"byte_end":354438,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Event>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute to the event.\n","sig":null,"attributes":[{"value":"/ Add an attribute to the event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354379,"byte_end":354413,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354842,"byte_end":354856,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Event>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes to the event.","sig":null,"attributes":[{"value":"/ Bulk add attributes to the event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354648,"byte_end":354685,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354690,"byte_end":354693,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354698,"byte_end":354767,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354772,"byte_end":354830,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":9620},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355211,"byte_end":355220,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::results::events::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":9621},{"krate":0,"index":9622}],"decl_id":null,"docs":" An key value pair that is used in the context of event attributes in logs\n","sig":null,"attributes":[{"value":"/ An key value pair that is used in the context of event attributes in logs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355042,"byte_end":355119,"line_start":57,"line_end":57,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":9621},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355231,"byte_end":355234,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"key","qualname":"::results::events::Attribute::key","value":"std::string::String","parent":{"krate":0,"index":9620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9622},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355252,"byte_end":355257,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"value","qualname":"::results::events::Attribute::value","value":"std::string::String","parent":{"krate":0,"index":9620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355365,"byte_end":355368,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `attr` is just an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `attr` is just an alias for this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355291,"byte_end":355353,"line_start":65,"line_end":65,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":2084},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":356927,"byte_end":356931,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"attr","qualname":"::results::events::attr","value":"pub fn attr<impl Into<String>: Into<String>,\n            impl Into<String>: Into<String>>(impl Into<String>,\n                                             impl Into<String>) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `Attribute::new` is an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `Attribute::new` is an alias for this.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":356842,"byte_end":356909,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":356910,"byte_end":356919,"line_start":127,"line_end":127,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":2091},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/query.rs","byte_start":358052,"byte_end":358065,"line_start":3,"line_end":3,"column_start":10,"column_end":23},"name":"QueryResponse","qualname":"::results::query::QueryResponse","value":"Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9686},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359804,"byte_end":359812,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"Response","qualname":"::results::response::Response","value":"Response { messages, attributes, events, data }","parent":null,"children":[{"krate":0,"index":9688},{"krate":0,"index":9689},{"krate":0,"index":9690},{"krate":0,"index":9691}],"decl_id":null,"docs":" A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","sig":null,"attributes":[{"value":"/ A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358219,"byte_end":358307,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358308,"byte_end":358311,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type can be constructed directly at the end of the call. Alternatively a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358312,"byte_end":358393,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ mutable response instance can be created early in the contract's logic and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358394,"byte_end":358472,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ incrementally be updated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358473,"byte_end":358502,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358503,"byte_end":358506,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358507,"byte_end":358522,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358523,"byte_end":358526,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Direct:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358527,"byte_end":358538,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358539,"byte_end":358542,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358543,"byte_end":358550,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{Binary, DepsMut, Env, MessageInfo};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358551,"byte_end":358611,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358612,"byte_end":358643,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358644,"byte_end":358649,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::{attr, Response, StdResult};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358650,"byte_end":358700,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358701,"byte_end":358704,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358705,"byte_end":358728,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358729,"byte_end":358751,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358752,"byte_end":358770,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/     _info: MessageInfo,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358771,"byte_end":358798,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358799,"byte_end":358827,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ ) -> StdResult<Response> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358828,"byte_end":358858,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358859,"byte_end":358873,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358874,"byte_end":358877,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     Ok(Response::new().add_attribute(\"action\", \"instantiate\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358878,"byte_end":358944,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358945,"byte_end":358950,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358951,"byte_end":358958,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358959,"byte_end":358962,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Mutating:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358963,"byte_end":358976,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358977,"byte_end":358980,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358981,"byte_end":358988,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, Binary, DepsMut, Env, MessageInfo, SubMsg};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":358989,"byte_end":359073,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359074,"byte_end":359105,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ # type MyError = ();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359106,"byte_end":359130,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359131,"byte_end":359136,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::Response;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359137,"byte_end":359168,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359169,"byte_end":359172,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359173,"byte_end":359196,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359197,"byte_end":359219,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359220,"byte_end":359238,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/     info: MessageInfo,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359239,"byte_end":359265,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359266,"byte_end":359294,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ ) -> Result<Response, MyError> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359295,"byte_end":359331,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/     let mut response = Response::new()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359332,"byte_end":359374,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         .add_attribute(\"Let the\", \"hacking begin\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359375,"byte_end":359429,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/         .add_message(BankMsg::Send {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359430,"byte_end":359470,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/             to_address: String::from(\"recipient\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359471,"byte_end":359525,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/             amount: coins(128, \"uint\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359526,"byte_end":359569,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359570,"byte_end":359584,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         .add_attribute(\"foo\", \"bar\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359585,"byte_end":359625,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/         .set_data(b\"the result data\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359626,"byte_end":359668,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     Ok(response)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359669,"byte_end":359689,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359690,"byte_end":359695,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359696,"byte_end":359703,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"non_exhaustive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359775,"byte_end":359792,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":9688},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360225,"byte_end":360233,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::response::Response::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":9686},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),\n the runtime will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359830,"byte_end":359901,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359906,"byte_end":359990,"line_start":66,"line_end":66,"column_start":5,"column_end":89}},{"value":"/ the runtime will invoke this contract's `reply` entry point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":359995,"byte_end":360058,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360063,"byte_end":360127,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/ Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360132,"byte_end":360216,"line_start":69,"line_end":69,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":9689},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360518,"byte_end":360528,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::response::Response::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":9686},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360255,"byte_end":360321,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360326,"byte_end":360329,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360334,"byte_end":360420,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360425,"byte_end":360428,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360433,"byte_end":360509,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":9690},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360838,"byte_end":360844,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"events","qualname":"::results::response::Response::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":9686},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360550,"byte_end":360625,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360630,"byte_end":360664,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360669,"byte_end":360672,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360677,"byte_end":360740,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360745,"byte_end":360748,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360753,"byte_end":360829,"line_start":82,"line_end":82,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":9691},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360921,"byte_end":360925,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"data","qualname":"::results::response::Response::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":9686},"children":[],"decl_id":null,"docs":" The binary payload to include in the response.\n","sig":null,"attributes":[{"value":"/ The binary payload to include in the response.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360862,"byte_end":360912,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361192,"byte_end":361195,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361310,"byte_end":361323,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Response<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361243,"byte_end":361298,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361626,"byte_end":361637,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"add_message","qualname":"<Response<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361476,"byte_end":361558,"line_start":110,"line_end":110,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361563,"byte_end":361614,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361894,"byte_end":361908,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<Response<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361758,"byte_end":361826,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361831,"byte_end":361882,"line_start":118,"line_end":118,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362228,"byte_end":362237,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"add_event","qualname":"<Response<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362002,"byte_end":362078,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362083,"byte_end":362110,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362115,"byte_end":362118,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362123,"byte_end":362198,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362203,"byte_end":362216,"line_start":128,"line_end":128,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362915,"byte_end":362929,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Response<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362329,"byte_end":362387,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362392,"byte_end":362395,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362400,"byte_end":362469,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362474,"byte_end":362532,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362537,"byte_end":362540,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362545,"byte_end":362560,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362565,"byte_end":362568,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362573,"byte_end":362580,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362585,"byte_end":362624,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362629,"byte_end":362632,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362637,"byte_end":362658,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362663,"byte_end":362694,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362699,"byte_end":362724,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362729,"byte_end":362762,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362767,"byte_end":362773,"line_start":148,"line_end":148,"column_start":5,"column_end":11}},{"value":"/ let res: Response = Response::new().add_attributes(attrs.clone());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362778,"byte_end":362848,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362853,"byte_end":362891,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":362896,"byte_end":362903,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363449,"byte_end":363461,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<Response<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363117,"byte_end":363192,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363197,"byte_end":363200,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363205,"byte_end":363220,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363225,"byte_end":363228,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363233,"byte_end":363240,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363245,"byte_end":363289,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363294,"byte_end":363297,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> Response {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363302,"byte_end":363368,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_messages(msgs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363373,"byte_end":363415,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363420,"byte_end":363425,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363430,"byte_end":363437,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363940,"byte_end":363955,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<Response<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363611,"byte_end":363683,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363688,"byte_end":363691,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363696,"byte_end":363711,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363716,"byte_end":363719,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363724,"byte_end":363731,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363736,"byte_end":363777,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363782,"byte_end":363785,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> Response {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363790,"byte_end":363856,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_submessages(msgs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363861,"byte_end":363906,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363911,"byte_end":363916,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":363921,"byte_end":363928,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364309,"byte_end":364319,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"add_events","qualname":"<Response<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364091,"byte_end":364167,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364172,"byte_end":364189,"line_start":192,"line_end":192,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364194,"byte_end":364197,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364202,"byte_end":364278,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364283,"byte_end":364297,"line_start":195,"line_end":195,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364514,"byte_end":364522,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Response<T>>::set_data","value":"pub fn set_data<impl Into<Binary>: Into<Binary>>(Self, impl Into<Binary>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the binary data included in the response.\n","sig":null,"attributes":[{"value":"/ Set the binary data included in the response.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":364453,"byte_end":364502,"line_start":201,"line_end":201,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9827},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367154,"byte_end":367160,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Always","qualname":"::results::submessages::ReplyOn::Always","value":"ReplyOn::Always","parent":{"krate":0,"index":9826},"children":[],"decl_id":null,"docs":" Always perform a callback after SubMsg is processed\n","sig":null,"attributes":[{"value":"/ Always perform a callback after SubMsg is processed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367094,"byte_end":367149,"line_start":14,"line_end":14,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9829},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367245,"byte_end":367250,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Error","qualname":"::results::submessages::ReplyOn::Error","value":"ReplyOn::Error","parent":{"krate":0,"index":9826},"children":[],"decl_id":null,"docs":" Only callback if SubMsg returned an error, no callback on success case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg returned an error, no callback on success case","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367166,"byte_end":367240,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9831},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367330,"byte_end":367337,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Success","qualname":"::results::submessages::ReplyOn::Success","value":"ReplyOn::Success","parent":{"krate":0,"index":9826},"children":[],"decl_id":null,"docs":" Only callback if SubMsg was successful, no callback on error case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg was successful, no callback on error case","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367256,"byte_end":367325,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9833},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367421,"byte_end":367426,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Never","qualname":"::results::submessages::ReplyOn::Never","value":"ReplyOn::Never","parent":{"krate":0,"index":9826},"children":[],"decl_id":null,"docs":" Never make a callback - this is like the original CosmosMsg semantics\n","sig":null,"attributes":[{"value":"/ Never make a callback - this is like the original CosmosMsg semantics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367343,"byte_end":367416,"line_start":20,"line_end":20,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":9826},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367080,"byte_end":367087,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"ReplyOn","qualname":"::results::submessages::ReplyOn","value":"pub enum ReplyOn { Always, Error, Success, Never, }","parent":null,"children":[{"krate":0,"index":9827},{"krate":0,"index":9829},{"krate":0,"index":9831},{"krate":0,"index":9833}],"decl_id":null,"docs":" Use this to define when the contract gets a response callback.\n If you only need it for errors or success you can select just those in order\n to save gas.\n","sig":null,"attributes":[{"value":"/ Use this to define when the contract gets a response callback.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":366799,"byte_end":366865,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ If you only need it for errors or success you can select just those in order","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":366866,"byte_end":366946,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ to save gas.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":366947,"byte_end":366963,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367035,"byte_end":367070,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367946,"byte_end":367952,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"SubMsg","qualname":"::results::submessages::SubMsg","value":"SubMsg { id, msg, gas_limit, reply_on }","parent":null,"children":[{"krate":0,"index":9837},{"krate":0,"index":9838},{"krate":0,"index":9839},{"krate":0,"index":9840}],"decl_id":null,"docs":" A submessage that will guarantee a `reply` call on success or error, depending on\n the `reply_on` setting. If you do not need to process the result, use regular messages instead.","sig":null,"attributes":[{"value":"/ A submessage that will guarantee a `reply` call on success or error, depending on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367431,"byte_end":367516,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ the `reply_on` setting. If you do not need to process the result, use regular messages instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367517,"byte_end":367616,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367617,"byte_end":367620,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note: On error the submessage execution will revert any partial state changes due to this message,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367621,"byte_end":367723,"line_start":27,"line_end":27,"column_start":1,"column_end":103}},{"value":"/ but not revert any state changes in the calling contract. If this is required, it must be done","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367724,"byte_end":367822,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ manually in the `reply` entry point.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367823,"byte_end":367863,"line_start":29,"line_end":29,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":9837},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368117,"byte_end":368119,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::SubMsg::id","value":"u64","parent":{"krate":0,"index":9835},"children":[],"decl_id":null,"docs":" An arbitrary ID chosen by the contract.\n This is typically used to match `Reply`s in the `reply` entry point to the submessage.\n","sig":null,"attributes":[{"value":"/ An arbitrary ID chosen by the contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":367970,"byte_end":368013,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/ This is typically used to match `Reply`s in the `reply` entry point to the submessage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368018,"byte_end":368108,"line_start":33,"line_end":33,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":9838},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368134,"byte_end":368137,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"msg","qualname":"::results::submessages::SubMsg::msg","value":"results::cosmos_msg::CosmosMsg<T>","parent":{"krate":0,"index":9835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9839},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368161,"byte_end":368170,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"gas_limit","qualname":"::results::submessages::SubMsg::gas_limit","value":"std::option::Option<u64>","parent":{"krate":0,"index":9835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9840},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368193,"byte_end":368201,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"reply_on","qualname":"::results::submessages::SubMsg::reply_on","value":"results::submessages::ReplyOn","parent":{"krate":0,"index":9835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368437,"byte_end":368440,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<SubMsg<T>>::new","value":"pub fn new<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" new creates a \"fire and forget\" message with the pre-0.14 semantics\n","sig":null,"attributes":[{"value":"/ new creates a \"fire and forget\" message with the pre-0.14 semantics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368354,"byte_end":368425,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368753,"byte_end":368769,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"reply_on_success","qualname":"<SubMsg<T>>::reply_on_success","value":"pub fn reply_on_success<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                     u64)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368646,"byte_end":368741,"line_start":54,"line_end":54,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368995,"byte_end":369009,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"reply_on_error","qualname":"<SubMsg<T>>::reply_on_error","value":"pub fn reply_on_error<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                   u64)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368887,"byte_end":368983,"line_start":59,"line_end":59,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369211,"byte_end":369223,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"reply_always","qualname":"<SubMsg<T>>::reply_always","value":"pub fn reply_always<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                 u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will always provide a `reply` with the given id\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will always provide a `reply` with the given id","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369125,"byte_end":369199,"line_start":64,"line_end":64,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369843,"byte_end":369857,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"with_gas_limit","qualname":"<SubMsg<T>>::with_gas_limit","value":"pub fn with_gas_limit(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a gas limit to the message.","sig":null,"attributes":[{"value":"/ Add a gas limit to the message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369340,"byte_end":369375,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369380,"byte_end":369383,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369388,"byte_end":369403,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369408,"byte_end":369411,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369416,"byte_end":369423,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, ReplyOn, SubMsg};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369428,"byte_end":369486,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/ # let msg = BankMsg::Send { to_address: String::from(\"you\"), amount: coins(1015, \"earth\") };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369491,"byte_end":369587,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ let sub_msg: SubMsg = SubMsg::reply_always(msg, 1234).with_gas_limit(60_000);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369592,"byte_end":369673,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(sub_msg.id, 1234);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369678,"byte_end":369711,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(sub_msg.gas_limit, Some(60_000));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369716,"byte_end":369764,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(sub_msg.reply_on, ReplyOn::Always);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369769,"byte_end":369819,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":369824,"byte_end":369831,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9915},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370372,"byte_end":370377,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Reply","qualname":"::results::submessages::Reply","value":"Reply { id, result }","parent":null,"children":[{"krate":0,"index":9916},{"krate":0,"index":9917}],"decl_id":null,"docs":" The result object returned to `reply`. We always get the ID from the submessage\n back and then must handle success and error cases ourselves.\n","sig":null,"attributes":[{"value":"/ The result object returned to `reply`. We always get the ID from the submessage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370141,"byte_end":370224,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ back and then must handle success and error cases ourselves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370225,"byte_end":370289,"line_start":97,"line_end":97,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":9916},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370522,"byte_end":370524,"line_start":102,"line_end":102,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::Reply::id","value":"u64","parent":{"krate":0,"index":9915},"children":[],"decl_id":null,"docs":" The ID that the contract set when emitting the `SubMsg`.\n Use this to identify which submessage triggered the `reply`.\n","sig":null,"attributes":[{"value":"/ The ID that the contract set when emitting the `SubMsg`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370384,"byte_end":370444,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/ Use this to identify which submessage triggered the `reply`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370449,"byte_end":370513,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9917},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370539,"byte_end":370545,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"result","qualname":"::results::submessages::Reply::result","value":"results::submessages::SubMsgResult","parent":{"krate":0,"index":9915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10037},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372104,"byte_end":372106,"line_start":141,"line_end":141,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::submessages::SubMsgResult::Ok","value":"SubMsgResult::Ok(SubMsgExecutionResponse)","parent":{"krate":0,"index":10036},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10040},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372346,"byte_end":372349,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::submessages::SubMsgResult::Err","value":"SubMsgResult::Err(String)","parent":{"krate":0,"index":10036},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372137,"byte_end":372230,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372235,"byte_end":372310,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372315,"byte_end":372341,"line_start":144,"line_end":144,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":10036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372085,"byte_end":372097,"line_start":140,"line_end":140,"column_start":10,"column_end":22},"name":"SubMsgResult","qualname":"::results::submessages::SubMsgResult","value":"pub enum SubMsgResult { Ok(SubMsgExecutionResponse), Err(String), }","parent":null,"children":[{"krate":0,"index":10037},{"krate":0,"index":10040}],"decl_id":null,"docs":" This is the result type that is returned from a sub message execution.","sig":null,"attributes":[{"value":"/ This is the result type that is returned from a sub message execution.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370564,"byte_end":370638,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370639,"byte_end":370642,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370643,"byte_end":370727,"line_start":108,"line_end":108,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370728,"byte_end":370815,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370816,"byte_end":370901,"line_start":110,"line_end":110,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370902,"byte_end":370905,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Until version 1.0.0-beta5, `ContractResult<SubMsgExecutionResponse>` was used instead","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370906,"byte_end":370995,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ of this type. Once serialized, the two types are the same. However, in the Rust type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":370996,"byte_end":371084,"line_start":113,"line_end":113,"column_start":1,"column_end":89}},{"value":"/ system we want different types for clarity and documenation reasons.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371085,"byte_end":371157,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371158,"byte_end":371161,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371162,"byte_end":371176,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371177,"byte_end":371180,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371181,"byte_end":371193,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371194,"byte_end":371197,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371198,"byte_end":371205,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, Event, SubMsgExecutionResponse, SubMsgResult};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371206,"byte_end":371293,"line_start":121,"line_end":121,"column_start":1,"column_end":88}},{"value":"/ let response = SubMsgExecutionResponse {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371294,"byte_end":371338,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/     data: Some(Binary::from_base64(\"MTIzCg==\").unwrap()),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371339,"byte_end":371400,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"/     events: vec![Event::new(\"wasm\").add_attribute(\"fo\", \"ba\")],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371401,"byte_end":371468,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371469,"byte_end":371475,"line_start":125,"line_end":125,"column_start":1,"column_end":7}},{"value":"/ let result: SubMsgResult = SubMsgResult::Ok(response);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371476,"byte_end":371534,"line_start":126,"line_end":126,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"events\":[{\"type\":\"wasm\",\"attributes\":[{\"key\":\"fo\",\"value\":\"ba\"}]}],\"data\":\"MTIzCg==\"}}\"#);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371535,"byte_end":371678,"line_start":127,"line_end":127,"column_start":1,"column_end":144}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371679,"byte_end":371686,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371687,"byte_end":371690,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371691,"byte_end":371703,"line_start":130,"line_end":130,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371704,"byte_end":371707,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371708,"byte_end":371715,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, SubMsgResult, Response};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371716,"byte_end":371773,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371774,"byte_end":371831,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ let result = SubMsgResult::Err(error_msg);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371832,"byte_end":371878,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371879,"byte_end":371960,"line_start":136,"line_end":136,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":371961,"byte_end":371968,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372040,"byte_end":372075,"line_start":139,"line_end":139,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372641,"byte_end":372652,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SubMsgResult>::into_result","value":"pub fn into_result(Self) -> Result<SubMsgExecutionResponse, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SubMsgResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `SubMsgResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372513,"byte_end":372590,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372595,"byte_end":372629,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372784,"byte_end":372790,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SubMsgResult>::unwrap","value":"pub fn unwrap(Self) -> SubMsgExecutionResponse","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372880,"byte_end":372890,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SubMsgResult>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372967,"byte_end":372972,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<SubMsgResult>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373052,"byte_end":373058,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"is_err","qualname":"<SubMsgResult>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10043},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373919,"byte_end":373942,"line_start":195,"line_end":195,"column_start":12,"column_end":35},"name":"SubMsgExecutionResponse","qualname":"::results::submessages::SubMsgExecutionResponse","value":"SubMsgExecutionResponse { events, data }","parent":null,"children":[{"krate":0,"index":10044},{"krate":0,"index":10045}],"decl_id":null,"docs":" The information we get back from a successful sub message execution,\n with full Cosmos SDK events.\n","sig":null,"attributes":[{"value":"/ The information we get back from a successful sub message execution,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373731,"byte_end":373803,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ with full Cosmos SDK events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373804,"byte_end":373836,"line_start":193,"line_end":193,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":10044},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373953,"byte_end":373959,"line_start":196,"line_end":196,"column_start":9,"column_end":15},"name":"events","qualname":"::results::submessages::SubMsgExecutionResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":10043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10045},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373981,"byte_end":373985,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"data","qualname":"::results::submessages::SubMsgExecutionResponse::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":10043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10175},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380066,"byte_end":380068,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::system_result::SystemResult::Ok","value":"SystemResult::Ok(S)","parent":{"krate":0,"index":10173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380108,"byte_end":380111,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::system_result::SystemResult::Err","value":"SystemResult::Err(SystemError)","parent":{"krate":0,"index":10173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380077,"byte_end":380103,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":10173},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380044,"byte_end":380056,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"SystemResult","qualname":"::results::system_result::SystemResult","value":"pub enum SystemResult<S> { Ok(S), Err(SystemError), }","parent":null,"children":[{"krate":0,"index":10175},{"krate":0,"index":10178}],"decl_id":null,"docs":" This is the outer result type returned by a querier to the contract.","sig":null,"attributes":[{"value":"/ This is the outer result type returned by a querier to the contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":378973,"byte_end":379045,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379046,"byte_end":379049,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379050,"byte_end":379134,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379135,"byte_end":379222,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379223,"byte_end":379308,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379309,"byte_end":379312,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379313,"byte_end":379327,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379328,"byte_end":379331,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379332,"byte_end":379344,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379345,"byte_end":379348,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379349,"byte_end":379356,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379357,"byte_end":379428,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ let data = Binary::from(b\"hello, world\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379429,"byte_end":379474,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ let result = SystemResult::Ok(ContractResult::Ok(data));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379475,"byte_end":379535,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"ok\":\"aGVsbG8sIHdvcmxk\"}}\"#);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379536,"byte_end":379617,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379618,"byte_end":379625,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379626,"byte_end":379629,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379630,"byte_end":379642,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379643,"byte_end":379646,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379647,"byte_end":379654,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult, SystemError};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379655,"byte_end":379739,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ let error = SystemError::Unknown {};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379740,"byte_end":379780,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ let result: SystemResult<Binary> = SystemResult::Err(error);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379781,"byte_end":379845,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":{\"unknown\":{}}}\"#);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379846,"byte_end":379919,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379920,"byte_end":379927,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":379999,"byte_end":380034,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380421,"byte_end":380432,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SystemResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, SystemError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380286,"byte_end":380370,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380375,"byte_end":380409,"line_start":44,"line_end":44,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380530,"byte_end":380536,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SystemResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380644,"byte_end":380654,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SystemResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> SystemError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/serde.rs","byte_start":389467,"byte_end":389477,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::serde::from_slice","value":"pub fn from_slice<T: DeserializeOwned>(&[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/serde.rs","byte_start":389634,"byte_end":389645,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"from_binary","qualname":"::serde::from_binary","value":"pub fn from_binary<T: DeserializeOwned>(&Binary) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2333},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/serde.rs","byte_start":389744,"byte_end":389750,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::serde::to_vec","value":"pub fn to_vec<T>(&T) -> StdResult<Vec<u8>> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2336},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/serde.rs","byte_start":389923,"byte_end":389932,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"to_binary","qualname":"::serde::to_binary","value":"pub fn to_binary<T>(&T) -> StdResult<Binary> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10181},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":392946,"byte_end":392959,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"MemoryStorage","qualname":"::storage::MemoryStorage","value":"MemoryStorage {  }","parent":null,"children":[{"krate":0,"index":10182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":393035,"byte_end":393038,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryStorage>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404237,"byte_end":404246,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::timestamp::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" A point in time in nanosecond precision.","sig":null,"attributes":[{"value":"/ A point in time in nanosecond precision.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403583,"byte_end":403627,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403628,"byte_end":403631,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403632,"byte_end":403716,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403717,"byte_end":403720,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403721,"byte_end":403736,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403737,"byte_end":403740,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403741,"byte_end":403748,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Timestamp;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403749,"byte_end":403783,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ let ts = Timestamp::from_nanos(1_000_000_202);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403784,"byte_end":403834,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(ts.nanos(), 1_000_000_202);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403835,"byte_end":403877,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403878,"byte_end":403910,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403911,"byte_end":403950,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403951,"byte_end":403954,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let ts = ts.plus_seconds(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403955,"byte_end":403987,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.nanos(), 3_000_000_202);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":403988,"byte_end":404030,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404031,"byte_end":404063,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404064,"byte_end":404103,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404104,"byte_end":404111,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404348,"byte_end":404358,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"name":"from_nanos","qualname":"<Timestamp>::from_nanos","value":"pub const fn from_nanos(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from nanoseconds since epoch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404278,"byte_end":404330,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404520,"byte_end":404532,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"name":"from_seconds","qualname":"<Timestamp>::from_seconds","value":"pub const fn from_seconds(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from seconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from seconds since epoch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404454,"byte_end":404502,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404661,"byte_end":404673,"line_start":41,"line_end":41,"column_start":18,"column_end":30},"name":"plus_seconds","qualname":"<Timestamp>::plus_seconds","value":"pub const fn plus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404785,"byte_end":404795,"line_start":45,"line_end":45,"column_start":18,"column_end":28},"name":"plus_nanos","qualname":"<Timestamp>::plus_nanos","value":"pub const fn plus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404940,"byte_end":404953,"line_start":50,"line_end":50,"column_start":18,"column_end":31},"name":"minus_seconds","qualname":"<Timestamp>::minus_seconds","value":"pub const fn minus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405070,"byte_end":405081,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"name":"minus_nanos","qualname":"<Timestamp>::minus_nanos","value":"pub const fn minus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405278,"byte_end":405283,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"nanos","qualname":"<Timestamp>::nanos","value":"pub fn nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since epoch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405217,"byte_end":405252,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405257,"byte_end":405266,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405412,"byte_end":405419,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Timestamp>::seconds","value":"pub fn seconds(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns seconds since epoch (truncate nanoseconds)\n","sig":null,"attributes":[{"value":"/ Returns seconds since epoch (truncate nanoseconds)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405332,"byte_end":405386,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405391,"byte_end":405400,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405610,"byte_end":405622,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"subsec_nanos","qualname":"<Timestamp>::subsec_nanos","value":"pub fn subsec_nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since the last whole second (the remainder truncated\n by `seconds()`)\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since the last whole second (the remainder truncated","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405484,"byte_end":405560,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ by `seconds()`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405565,"byte_end":405584,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405589,"byte_end":405598,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2525},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411761,"byte_end":411768,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"Storage","qualname":"::traits::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2530}],"decl_id":null,"docs":" Storage provides read and write access to a persistent storage.\n If you only want to provide read access, provide `&Storage`\n","sig":null,"attributes":[{"value":"/ Storage provides read and write access to a persistent storage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411619,"byte_end":411686,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ If you only want to provide read access, provide `&Storage`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411687,"byte_end":411750,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412074,"byte_end":412077,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"get","qualname":"::traits::Storage::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":" Returns None when key does not exist.\n Returns Some(Vec<u8>) when key exists.","sig":null,"attributes":[{"value":"/ Returns None when key does not exist.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411775,"byte_end":411816,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/ Returns Some(Vec<u8>) when key exists.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411821,"byte_end":411863,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411868,"byte_end":411871,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note: Support for differentiating between a non-existent key and a key with empty value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411876,"byte_end":411967,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ is not great yet and might not be possible in all backends. But we're trying to get there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":411972,"byte_end":412066,"line_start":29,"line_end":29,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412448,"byte_end":412453,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"range","qualname":"::traits::Storage::range","value":"pub fn range<'a>(&'a Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":" Allows iteration over a set of key/value pairs, either forwards or backwards.","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412122,"byte_end":412150,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ Allows iteration over a set of key/value pairs, either forwards or backwards.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412155,"byte_end":412236,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412241,"byte_end":412244,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The bound `start` is inclusive and `end` is exclusive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412249,"byte_end":412307,"line_start":35,"line_end":35,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412312,"byte_end":412315,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If `start` is lexicographically greater than or equal to `end`, an empty range is described, mo matter of the order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412320,"byte_end":412440,"line_start":37,"line_end":37,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412613,"byte_end":412616,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::Storage::set","value":"pub fn set(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412897,"byte_end":412903,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"remove","qualname":"::traits::Storage::remove","value":"pub fn remove(&mut Self, &[u8])","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":" Removes a database entry at `key`.","sig":null,"attributes":[{"value":"/ Removes a database entry at `key`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412660,"byte_end":412698,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412703,"byte_end":412706,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The current interface does not allow to differentiate between a key that existed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412711,"byte_end":412795,"line_start":49,"line_end":49,"column_start":5,"column_end":89}},{"value":"/ before and one that didn't exist. See https://github.com/CosmWasm/cosmwasm/issues/290","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412800,"byte_end":412889,"line_start":50,"line_end":50,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":2531},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413878,"byte_end":413881,"line_start":68,"line_end":68,"column_start":11,"column_end":14},"name":"Api","qualname":"::traits::Api","value":"Api","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539}],"decl_id":null,"docs":" Api are callbacks to system functions implemented outside of the wasm modules.\n Currently it just supports address conversion but we could add eg. crypto functions here.","sig":null,"attributes":[{"value":"/ Api are callbacks to system functions implemented outside of the wasm modules.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":412931,"byte_end":413013,"line_start":54,"line_end":54,"column_start":1,"column_end":83}},{"value":"/ Currently it just supports address conversion but we could add eg. crypto functions here.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413014,"byte_end":413107,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413108,"byte_end":413111,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is a trait to allow mocks in the test code. Its members have a read-only","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413112,"byte_end":413193,"line_start":57,"line_end":57,"column_start":1,"column_end":82}},{"value":"/ reference to the Api instance to allow accessing configuration.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413194,"byte_end":413261,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"/ Implementations must not have mutable state, such that an instance can freely","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413262,"byte_end":413343,"line_start":59,"line_end":59,"column_start":1,"column_end":82}},{"value":"/ be copied and shared between threads without affecting the behaviour.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413344,"byte_end":413417,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ Given an Api instance, all members should return the same value when called with the same","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413418,"byte_end":413511,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ arguments. In particular this means the result must not depend in the state of the chain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413512,"byte_end":413605,"line_start":62,"line_end":62,"column_start":1,"column_end":94}},{"value":"/ If you need to access chaim state, you probably want to use the Querier.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413606,"byte_end":413682,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ Side effects (such as logging) are allowed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413683,"byte_end":413730,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413731,"byte_end":413734,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ We can use feature flags to opt-in to non-essential methods","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413735,"byte_end":413798,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ for backwards compatibility in systems that don't have them all.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413799,"byte_end":413867,"line_start":67,"line_end":67,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414349,"byte_end":414362,"line_start":82,"line_end":82,"column_start":8,"column_end":21},"name":"addr_validate","qualname":"::traits::Api::addr_validate","value":"pub fn addr_validate(&Self, &str) -> StdResult<Addr>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":" Takes a human readable address and validates if it's correctly formatted.\n If it succeeds, a Addr is returned.","sig":null,"attributes":[{"value":"/ Takes a human readable address and validates if it's correctly formatted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413888,"byte_end":413965,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ If it succeeds, a Addr is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":413970,"byte_end":414009,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414014,"byte_end":414017,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414022,"byte_end":414037,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414042,"byte_end":414045,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414050,"byte_end":414057,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Api, Addr};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414062,"byte_end":414098,"line_start":75,"line_end":75,"column_start":5,"column_end":41}},{"value":"/ # use cosmwasm_std::testing::MockApi;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414103,"byte_end":414144,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ # let api = MockApi::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414149,"byte_end":414184,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ let input = \"what-users-provide\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414189,"byte_end":414226,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ let validated: Addr = api.addr_validate(input).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414231,"byte_end":414291,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(validated, input);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414296,"byte_end":414329,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414334,"byte_end":414341,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414582,"byte_end":414599,"line_start":86,"line_end":86,"column_start":8,"column_end":25},"name":"addr_canonicalize","qualname":"::traits::Api::addr_canonicalize","value":"pub fn addr_canonicalize(&Self, &str) -> StdResult<CanonicalAddr>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":" Takes a human readable address and returns a canonical binary representation of it.\n This can be used when a compact fixed length representation is needed.\n","sig":null,"attributes":[{"value":"/ Takes a human readable address and returns a canonical binary representation of it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414408,"byte_end":414495,"line_start":84,"line_end":84,"column_start":5,"column_end":92}},{"value":"/ This can be used when a compact fixed length representation is needed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414500,"byte_end":414574,"line_start":85,"line_end":85,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414844,"byte_end":414857,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"addr_humanize","qualname":"::traits::Api::addr_humanize","value":"pub fn addr_humanize(&Self, &CanonicalAddr) -> StdResult<Addr>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":" Takes a canonical address and returns a human readble address.\n This is the inverse of [`addr_canonicalize`].","sig":null,"attributes":[{"value":"/ Takes a canonical address and returns a human readble address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414654,"byte_end":414720,"line_start":88,"line_end":88,"column_start":5,"column_end":71}},{"value":"/ This is the inverse of [`addr_canonicalize`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414725,"byte_end":414774,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414779,"byte_end":414782,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`addr_canonicalize`]: Api::addr_canonicalize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414787,"byte_end":414836,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":414920,"byte_end":414936,"line_start":94,"line_end":94,"column_start":8,"column_end":24},"name":"secp256k1_verify","qualname":"::traits::Api::secp256k1_verify","value":"pub fn secp256k1_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415085,"byte_end":415109,"line_start":101,"line_end":101,"column_start":8,"column_end":32},"name":"secp256k1_recover_pubkey","qualname":"::traits::Api::secp256k1_recover_pubkey","value":"pub fn secp256k1_recover_pubkey(&Self, &[u8], &[u8], u8)\n-> Result<Vec<u8>, RecoverPubkeyError>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415263,"byte_end":415277,"line_start":108,"line_end":108,"column_start":8,"column_end":22},"name":"ed25519_verify","qualname":"::traits::Api::ed25519_verify","value":"pub fn ed25519_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415421,"byte_end":415441,"line_start":115,"line_end":115,"column_start":8,"column_end":28},"name":"ed25519_batch_verify","qualname":"::traits::Api::ed25519_batch_verify","value":"pub fn ed25519_batch_verify(&Self, &[&[u8]], &[&[u8]], &[&[u8]])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415770,"byte_end":415775,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"debug","qualname":"::traits::Api::debug","value":"pub fn debug(&Self, &str)","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":" Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).\n Those messages are not persisted to chain.\n","sig":null,"attributes":[{"value":"/ Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415594,"byte_end":415711,"line_start":122,"line_end":122,"column_start":5,"column_end":122}},{"value":"/ Those messages are not persisted to chain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415716,"byte_end":415762,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2540},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415929,"byte_end":415942,"line_start":128,"line_end":128,"column_start":10,"column_end":23},"name":"QuerierResult","qualname":"::traits::QuerierResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)\n","sig":null,"attributes":[{"value":"/ A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415802,"byte_end":415919,"line_start":127,"line_end":127,"column_start":1,"column_end":118}}]},{"kind":"Trait","id":{"krate":0,"index":2541},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":415994,"byte_end":416001,"line_start":130,"line_end":130,"column_start":11,"column_end":18},"name":"Querier","qualname":"::traits::Querier","value":"Querier","parent":null,"children":[{"krate":0,"index":2542}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416367,"byte_end":416376,"line_start":136,"line_end":136,"column_start":8,"column_end":17},"name":"raw_query","qualname":"::traits::Querier::raw_query","value":"pub fn raw_query(&Self, &[u8]) -> QuerierResult","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" raw_query is all that must be implemented for the Querier.\n This allows us to pass through binary queries from one level to another without\n knowing the custom format, or we can decode it, with the knowledge of the allowed\n types. People using the querier probably want one of the simpler auto-generated\n helper methods\n","sig":null,"attributes":[{"value":"/ raw_query is all that must be implemented for the Querier.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416008,"byte_end":416070,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ This allows us to pass through binary queries from one level to another without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416075,"byte_end":416158,"line_start":132,"line_end":132,"column_start":5,"column_end":88}},{"value":"/ knowing the custom format, or we can decode it, with the knowledge of the allowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416163,"byte_end":416248,"line_start":133,"line_end":133,"column_start":5,"column_end":90}},{"value":"/ types. People using the querier probably want one of the simpler auto-generated","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416253,"byte_end":416336,"line_start":134,"line_end":134,"column_start":5,"column_end":88}},{"value":"/ helper methods","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416341,"byte_end":416359,"line_start":135,"line_end":135,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":10235},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416453,"byte_end":416467,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"QuerierWrapper","qualname":"::traits::QuerierWrapper","value":"QuerierWrapper {  }","parent":null,"children":[{"krate":0,"index":10238},{"krate":0,"index":10239}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417280,"byte_end":417283,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<QuerierWrapper>::new","value":"pub fn new(&'a dyn Querier) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417757,"byte_end":417762,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"query","qualname":"<QuerierWrapper>::query","value":"pub fn query<U: DeserializeOwned>(&Self, &QueryRequest<C>) -> StdResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Makes the query and parses the response.","sig":null,"attributes":[{"value":"/ Makes the query and parses the response.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417431,"byte_end":417475,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417480,"byte_end":417483,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Any error (System Error, Error or called contract, or Parse Error) are flattened into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417488,"byte_end":417577,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ one level. Only use this if you don't need to check the SystemError","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417582,"byte_end":417653,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ eg. If you don't differentiate between contract missing and contract returned error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417658,"byte_end":417745,"line_start":173,"line_end":173,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":418491,"byte_end":418504,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"query_balance","qualname":"<QuerierWrapper>::query_balance","value":"pub fn query_balance<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(&Self,\n                                                      impl Into<String>,\n                                                      impl Into<String>)\n-> StdResult<Coin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":418857,"byte_end":418875,"line_start":204,"line_end":204,"column_start":12,"column_end":30},"name":"query_all_balances","qualname":"<QuerierWrapper>::query_all_balances","value":"pub fn query_all_balances<impl Into<String>: Into<String>>(&Self,\n                                                           impl Into<String>)\n-> StdResult<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":419303,"byte_end":419319,"line_start":215,"line_end":215,"column_start":12,"column_end":28},"name":"query_wasm_smart","qualname":"<QuerierWrapper>::query_wasm_smart","value":"pub fn query_wasm_smart<T: DeserializeOwned, impl Into<String>: Into<String>,\n                        impl Serialize: Serialize>(&Self, impl Into<String>,\n                                                   &impl Serialize)\n-> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":420114,"byte_end":420128,"line_start":235,"line_end":235,"column_start":12,"column_end":26},"name":"query_wasm_raw","qualname":"<QuerierWrapper>::query_wasm_raw","value":"pub fn query_wasm_raw<impl Into<String>: Into<String>,\n                      impl Into<Binary>: Into<Binary>>(&Self,\n                                                       impl Into<String>,\n                                                       impl Into<Binary>)\n-> StdResult<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":421404,"byte_end":421424,"line_start":269,"line_end":269,"column_start":12,"column_end":32},"name":"query_all_validators","qualname":"<QuerierWrapper>::query_all_validators","value":"pub fn query_all_validators(&Self) -> StdResult<Vec<Validator>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":421365,"byte_end":421392,"line_start":268,"line_end":268,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":421665,"byte_end":421680,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"query_validator","qualname":"<QuerierWrapper>::query_validator","value":"pub fn query_validator<impl Into<String>: Into<String>>(&Self,\n                                                        impl Into<String>)\n-> StdResult<Option<Validator>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":421626,"byte_end":421653,"line_start":275,"line_end":275,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":421998,"byte_end":422016,"line_start":286,"line_end":286,"column_start":12,"column_end":30},"name":"query_bonded_denom","qualname":"<QuerierWrapper>::query_bonded_denom","value":"pub fn query_bonded_denom(&Self) -> StdResult<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":421959,"byte_end":421986,"line_start":285,"line_end":285,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":422240,"byte_end":422261,"line_start":293,"line_end":293,"column_start":12,"column_end":33},"name":"query_all_delegations","qualname":"<QuerierWrapper>::query_all_delegations","value":"pub fn query_all_delegations<impl Into<String>: Into<String>>(&Self,\n                                                              impl Into<String>)\n-> StdResult<Vec<Delegation>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":422201,"byte_end":422228,"line_start":292,"line_end":292,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":422618,"byte_end":422634,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"query_delegation","qualname":"<QuerierWrapper>::query_delegation","value":"pub fn query_delegation<impl Into<String>: Into<String>,\n                        impl Into<String>: Into<String>>(&Self,\n                                                         impl Into<String>,\n                                                         impl Into<String>)\n-> StdResult<Option<FullDelegation>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":422579,"byte_end":422606,"line_start":305,"line_end":305,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":10244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424604,"byte_end":424607,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Env","qualname":"::types::Env","value":"Env { block, transaction, contract }","parent":null,"children":[{"krate":0,"index":10245},{"krate":0,"index":10246},{"krate":0,"index":10247}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424618,"byte_end":424623,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"block","qualname":"::types::Env::block","value":"types::BlockInfo","parent":{"krate":0,"index":10244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10246},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424866,"byte_end":424877,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"name":"transaction","qualname":"::types::Env::transaction","value":"std::option::Option<types::TransactionInfo>","parent":{"krate":0,"index":10244},"children":[],"decl_id":null,"docs":" Information on the transaction this message was executed in.\n The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`\n is not executed as part of a transaction.\n","sig":null,"attributes":[{"value":"/ Information on the transaction this message was executed in.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424640,"byte_end":424704,"line_start":11,"line_end":11,"column_start":5,"column_end":69}},{"value":"/ The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424709,"byte_end":424807,"line_start":12,"line_end":12,"column_start":5,"column_end":103}},{"value":"/ is not executed as part of a transaction.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424812,"byte_end":424857,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":424912,"byte_end":424920,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"contract","qualname":"::types::Env::contract","value":"types::ContractInfo","parent":{"krate":0,"index":10244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10307},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425009,"byte_end":425024,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"TransactionInfo","qualname":"::types::TransactionInfo","value":"TransactionInfo { index }","parent":null,"children":[{"krate":0,"index":10308}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10308},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425297,"byte_end":425302,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"index","qualname":"::types::TransactionInfo::index","value":"u32","parent":{"krate":0,"index":10307},"children":[],"decl_id":null,"docs":" The position of this transaction in the block. The first\n transaction has index 0.","sig":null,"attributes":[{"value":"/ The position of this transaction in the block. The first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425031,"byte_end":425091,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/ transaction has index 0.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425096,"byte_end":425124,"line_start":21,"line_end":21,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425129,"byte_end":425132,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This allows you to get a unique transaction indentifier in this chain","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425137,"byte_end":425210,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ using the pair (`env.block.height`, `env.transaction.index`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425215,"byte_end":425280,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425285,"byte_end":425288,"line_start":25,"line_end":25,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10364},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425394,"byte_end":425403,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"BlockInfo","qualname":"::types::BlockInfo","value":"BlockInfo { height, time, chain_id }","parent":null,"children":[{"krate":0,"index":10365},{"krate":0,"index":10366},{"krate":0,"index":10367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10365},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425500,"byte_end":425506,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"height","qualname":"::types::BlockInfo::height","value":"u64","parent":{"krate":0,"index":10364},"children":[],"decl_id":null,"docs":" The height of a block is the number of blocks preceding it in the blockchain.\n","sig":null,"attributes":[{"value":"/ The height of a block is the number of blocks preceding it in the blockchain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425410,"byte_end":425491,"line_start":31,"line_end":31,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":10366},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427449,"byte_end":427453,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"time","qualname":"::types::BlockInfo::time","value":"timestamp::Timestamp","parent":{"krate":0,"index":10364},"children":[],"decl_id":null,"docs":" Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","sig":null,"attributes":[{"value":"/ Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425517,"byte_end":425618,"line_start":33,"line_end":33,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425623,"byte_end":425626,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The source of this is the [BFT Time in Tendermint](https://github.com/tendermint/tendermint/blob/58dc1726/spec/consensus/bft-time.md),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425631,"byte_end":425769,"line_start":35,"line_end":35,"column_start":5,"column_end":143}},{"value":"/ which has the same nanosecond precision as the `Timestamp` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425774,"byte_end":425842,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425847,"byte_end":425850,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425855,"byte_end":425869,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425874,"byte_end":425877,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Using chrono:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425882,"byte_end":425899,"line_start":40,"line_end":40,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425904,"byte_end":425907,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425912,"byte_end":425919,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":425924,"byte_end":426026,"line_start":43,"line_end":43,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426031,"byte_end":426052,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426057,"byte_end":426085,"line_start":45,"line_end":45,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426090,"byte_end":426119,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426124,"byte_end":426193,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426198,"byte_end":426257,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426262,"byte_end":426274,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426279,"byte_end":426337,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426342,"byte_end":426376,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426381,"byte_end":426432,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426437,"byte_end":426449,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426454,"byte_end":426462,"line_start":54,"line_end":54,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426467,"byte_end":426493,"line_start":55,"line_end":55,"column_start":5,"column_end":31}},{"value":"/ use chrono::NaiveDateTime;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426498,"byte_end":426528,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/ let seconds = env.block.time.seconds();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426533,"byte_end":426576,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ let nsecs = env.block.time.subsec_nanos();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426581,"byte_end":426627,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/ let dt = NaiveDateTime::from_timestamp(seconds as i64, nsecs as u32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426632,"byte_end":426705,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426710,"byte_end":426717,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426722,"byte_end":426725,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Creating a simple millisecond-precision timestamp (as used in JavaScript):","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426730,"byte_end":426808,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426813,"byte_end":426816,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426821,"byte_end":426828,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426833,"byte_end":426935,"line_start":65,"line_end":65,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426940,"byte_end":426961,"line_start":66,"line_end":66,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426966,"byte_end":426994,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":426999,"byte_end":427028,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427033,"byte_end":427102,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427107,"byte_end":427166,"line_start":70,"line_end":70,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427171,"byte_end":427183,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427188,"byte_end":427246,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427251,"byte_end":427285,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427290,"byte_end":427341,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427346,"byte_end":427358,"line_start":75,"line_end":75,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427363,"byte_end":427371,"line_start":76,"line_end":76,"column_start":5,"column_end":13}},{"value":"/ let millis = env.block.time.nanos() / 1_000_000;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427376,"byte_end":427428,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427433,"byte_end":427440,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":10367},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427474,"byte_end":427482,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"chain_id","qualname":"::types::BlockInfo::chain_id","value":"std::string::String","parent":{"krate":0,"index":10364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10431},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428087,"byte_end":428098,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"MessageInfo","qualname":"::types::MessageInfo","value":"MessageInfo { sender, funds }","parent":null,"children":[{"krate":0,"index":10432},{"krate":0,"index":10433}],"decl_id":null,"docs":" Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed\n along with the contract execution message into the `instantiate` and `execute` entry points.","sig":null,"attributes":[{"value":"/ Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427495,"byte_end":427593,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"/ along with the contract execution message into the `instantiate` and `execute` entry points.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427594,"byte_end":427690,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427691,"byte_end":427694,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ It contains the essential info for authorization - identity of the call, and payment.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427695,"byte_end":427784,"line_start":86,"line_end":86,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427785,"byte_end":427788,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [MsgInstantiateContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L47-L61","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427789,"byte_end":427904,"line_start":88,"line_end":88,"column_start":1,"column_end":116}},{"value":"/ [MsgExecuteContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L68-L78","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":427905,"byte_end":428016,"line_start":89,"line_end":89,"column_start":1,"column_end":112}}]},{"kind":"Field","id":{"krate":0,"index":10432},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428672,"byte_end":428678,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"sender","qualname":"::types::MessageInfo::sender","value":"addresses::Addr","parent":{"krate":0,"index":10431},"children":[],"decl_id":null,"docs":" The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.\n You can think of this as the address that initiated the action (i.e. the message). What that\n means exactly heavily depends on the application.","sig":null,"attributes":[{"value":"/ The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428105,"byte_end":428183,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/ You can think of this as the address that initiated the action (i.e. the message). What that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428188,"byte_end":428284,"line_start":93,"line_end":93,"column_start":5,"column_end":101}},{"value":"/ means exactly heavily depends on the application.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428289,"byte_end":428342,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428347,"byte_end":428350,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The x/wasm module ensures that the sender address signed the transaction or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428355,"byte_end":428434,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ is otherwise authorized to send the message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428439,"byte_end":428487,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428492,"byte_end":428495,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Additional signers of the transaction that are either needed for other messages or contain unnecessary","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428500,"byte_end":428606,"line_start":99,"line_end":99,"column_start":5,"column_end":111}},{"value":"/ signatures are not propagated into the contract.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428611,"byte_end":428663,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":10433},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428949,"byte_end":428954,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"funds","qualname":"::types::MessageInfo::funds","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":10431},"children":[],"decl_id":null,"docs":" The funds that are sent to the contract as part of `MsgInstantiateContract`\n or `MsgExecuteContract`. The transfer is processed in bank before the contract\n is executed such that the new balance is visible during contract execution.\n","sig":null,"attributes":[{"value":"/ The funds that are sent to the contract as part of `MsgInstantiateContract`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428690,"byte_end":428769,"line_start":102,"line_end":102,"column_start":5,"column_end":84}},{"value":"/ or `MsgExecuteContract`. The transfer is processed in bank before the contract","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428774,"byte_end":428856,"line_start":103,"line_end":103,"column_start":5,"column_end":87}},{"value":"/ is executed such that the new balance is visible during contract execution.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":428861,"byte_end":428940,"line_start":104,"line_end":104,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":429040,"byte_end":429052,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"ContractInfo","qualname":"::types::ContractInfo","value":"ContractInfo { address }","parent":null,"children":[{"krate":0,"index":10492}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/types.rs","byte_start":429063,"byte_end":429070,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"name":"address","qualname":"::types::ContractInfo::address","value":"addresses::Addr","parent":{"krate":0,"index":10491},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3112},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430363,"byte_end":430381,"line_start":34,"line_end":34,"column_start":11,"column_end":29},"name":"MOCK_CONTRACT_ADDR","qualname":"::mock::MOCK_CONTRACT_ADDR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430637,"byte_end":430654,"line_start":40,"line_end":40,"column_start":8,"column_end":25},"name":"mock_dependencies","qualname":"::mock::mock_dependencies","value":"pub fn mock_dependencies()\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" Creates all external requirements that can be injected for unit tests.","sig":null,"attributes":[{"value":"/ Creates all external requirements that can be injected for unit tests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430410,"byte_end":430484,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430485,"byte_end":430488,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See also [`mock_dependencies_with_balance`] and [`mock_dependencies_with_balances`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430489,"byte_end":430576,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"/ if you want to start with some initial balances.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430577,"byte_end":430629,"line_start":39,"line_end":39,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":3114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":431049,"byte_end":431079,"line_start":52,"line_end":52,"column_start":8,"column_end":38},"name":"mock_dependencies_with_balance","qualname":"::mock::mock_dependencies_with_balance","value":"pub fn mock_dependencies_with_balance(&[Coin])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" Creates all external requirements that can be injected for unit tests.","sig":null,"attributes":[{"value":"/ Creates all external requirements that can be injected for unit tests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430894,"byte_end":430968,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430969,"byte_end":430972,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It sets the given balance for the contract itself, nothing else.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":430973,"byte_end":431041,"line_start":51,"line_end":51,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":3115},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":431408,"byte_end":431439,"line_start":60,"line_end":60,"column_start":8,"column_end":39},"name":"mock_dependencies_with_balances","qualname":"::mock::mock_dependencies_with_balances","value":"pub fn mock_dependencies_with_balances(&[(&str, &[Coin])])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the querier along with the mock_dependencies.\n Sets all balances provided (you must explicitly set contract balance if desired).\n","sig":null,"attributes":[{"value":"/ Initializes the querier along with the mock_dependencies.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":431253,"byte_end":431314,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/ Sets all balances provided (you must explicitly set contract balance if desired).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":431315,"byte_end":431400,"line_start":59,"line_end":59,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":3116},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":431841,"byte_end":431852,"line_start":73,"line_end":73,"column_start":10,"column_end":21},"name":"MockStorage","qualname":"::mock::MockStorage","value":"MemoryStorage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":432468,"byte_end":432475,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"MockApi","qualname":"::mock::MockApi","value":"MockApi {  }","parent":null,"children":[{"krate":0,"index":10549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436481,"byte_end":436489,"line_start":214,"line_end":214,"column_start":8,"column_end":16},"name":"mock_env","qualname":"::mock::mock_env","value":"pub fn mock_env() -> Env","parent":null,"children":[],"decl_id":null,"docs":" Returns a default enviroment with height, time, chain_id, and contract address\n You can submit as is to most contracts, or modify height/time if you want to\n test for expiration.","sig":null,"attributes":[{"value":"/ Returns a default enviroment with height, time, chain_id, and contract address","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436233,"byte_end":436315,"line_start":209,"line_end":209,"column_start":1,"column_end":83}},{"value":"/ You can submit as is to most contracts, or modify height/time if you want to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436316,"byte_end":436396,"line_start":210,"line_end":210,"column_start":1,"column_end":81}},{"value":"/ test for expiration.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436397,"byte_end":436421,"line_start":211,"line_end":211,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436422,"byte_end":436425,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436426,"byte_end":436473,"line_start":213,"line_end":213,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":3134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436973,"byte_end":436982,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"mock_info","qualname":"::mock::mock_info","value":"pub fn mock_info(&str, &[Coin]) -> MessageInfo","parent":null,"children":[],"decl_id":null,"docs":" Just set sender and funds for the message.\n This is intended for use in test code only.\n","sig":null,"attributes":[{"value":"/ Just set sender and funds for the message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436871,"byte_end":436917,"line_start":228,"line_end":228,"column_start":1,"column_end":47}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":436918,"byte_end":436965,"line_start":229,"line_end":229,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":3135},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437325,"byte_end":437341,"line_start":240,"line_end":240,"column_start":8,"column_end":24},"name":"mock_ibc_channel","qualname":"::mock::mock_ibc_channel","value":"pub fn mock_ibc_channel(&str, IbcOrder, &str) -> IbcChannel","parent":null,"children":[],"decl_id":null,"docs":" Creates an IbcChannel for testing. You set a few key parameters for handshaking,\n If you want to set more, use this as a default and mutate other fields\n","sig":null,"attributes":[{"value":"/ Creates an IbcChannel for testing. You set a few key parameters for handshaking,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437129,"byte_end":437213,"line_start":237,"line_end":237,"column_start":1,"column_end":85}},{"value":"/ If you want to set more, use this as a default and mutate other fields","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437214,"byte_end":437288,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437289,"byte_end":437317,"line_start":239,"line_end":239,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437939,"byte_end":437965,"line_start":258,"line_end":258,"column_start":8,"column_end":34},"name":"mock_ibc_channel_open_init","qualname":"::mock::mock_ibc_channel_open_init","value":"pub fn mock_ibc_channel_open_init(&str, IbcOrder, &str) -> IbcChannelOpenMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelOpenMsg::OpenInit for testing ibc_channel_open.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelOpenMsg::OpenInit for testing ibc_channel_open.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437831,"byte_end":437902,"line_start":256,"line_end":256,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":437903,"byte_end":437931,"line_start":257,"line_end":257,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3137},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438248,"byte_end":438273,"line_start":268,"line_end":268,"column_start":8,"column_end":33},"name":"mock_ibc_channel_open_try","qualname":"::mock::mock_ibc_channel_open_try","value":"pub fn mock_ibc_channel_open_try(&str, IbcOrder, &str) -> IbcChannelOpenMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelOpenMsg::OpenTry for testing ibc_channel_open.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelOpenMsg::OpenTry for testing ibc_channel_open.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438141,"byte_end":438211,"line_start":266,"line_end":266,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438212,"byte_end":438240,"line_start":267,"line_end":267,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438573,"byte_end":438601,"line_start":278,"line_end":278,"column_start":8,"column_end":36},"name":"mock_ibc_channel_connect_ack","qualname":"::mock::mock_ibc_channel_connect_ack","value":"pub fn mock_ibc_channel_connect_ack(&str, IbcOrder, &str)\n-> IbcChannelConnectMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelConnectMsg::ConnectAck for testing ibc_channel_connect.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelConnectMsg::ConnectAck for testing ibc_channel_connect.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438457,"byte_end":438536,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438537,"byte_end":438565,"line_start":277,"line_end":277,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3139},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438911,"byte_end":438943,"line_start":288,"line_end":288,"column_start":8,"column_end":40},"name":"mock_ibc_channel_connect_confirm","qualname":"::mock::mock_ibc_channel_connect_confirm","value":"pub fn mock_ibc_channel_connect_confirm(&str, IbcOrder, &str)\n-> IbcChannelConnectMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelConnectMsg::ConnectConfirm for testing ibc_channel_connect.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelConnectMsg::ConnectConfirm for testing ibc_channel_connect.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438791,"byte_end":438874,"line_start":286,"line_end":286,"column_start":1,"column_end":84}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":438875,"byte_end":438903,"line_start":287,"line_end":287,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439239,"byte_end":439266,"line_start":298,"line_end":298,"column_start":8,"column_end":35},"name":"mock_ibc_channel_close_init","qualname":"::mock::mock_ibc_channel_close_init","value":"pub fn mock_ibc_channel_close_init(&str, IbcOrder, &str) -> IbcChannelCloseMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelCloseMsg::CloseInit for testing ibc_channel_close.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelCloseMsg::CloseInit for testing ibc_channel_close.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439128,"byte_end":439202,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439203,"byte_end":439231,"line_start":297,"line_end":297,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3141},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439558,"byte_end":439588,"line_start":308,"line_end":308,"column_start":8,"column_end":38},"name":"mock_ibc_channel_close_confirm","qualname":"::mock::mock_ibc_channel_close_confirm","value":"pub fn mock_ibc_channel_close_confirm(&str, IbcOrder, &str)\n-> IbcChannelCloseMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelCloseMsg::CloseConfirm for testing ibc_channel_close.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelCloseMsg::CloseConfirm for testing ibc_channel_close.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439444,"byte_end":439521,"line_start":306,"line_end":306,"column_start":1,"column_end":78}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439522,"byte_end":439550,"line_start":307,"line_end":307,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3142},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439998,"byte_end":440018,"line_start":319,"line_end":319,"column_start":8,"column_end":28},"name":"mock_ibc_packet_recv","qualname":"::mock::mock_ibc_packet_recv","value":"pub fn mock_ibc_packet_recv<impl Serialize: Serialize>(&str, &impl Serialize)\n-> StdResult<IbcPacketReceiveMsg>","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcPacketReceiveMsg for testing ibc_packet_receive. You set a few key parameters that are\n often parsed. If you want to set more, use this as a default and mutate other fields\n","sig":null,"attributes":[{"value":"/ Creates a IbcPacketReceiveMsg for testing ibc_packet_receive. You set a few key parameters that are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439769,"byte_end":439872,"line_start":316,"line_end":316,"column_start":1,"column_end":104}},{"value":"/ often parsed. If you want to set more, use this as a default and mutate other fields","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439873,"byte_end":439961,"line_start":317,"line_end":317,"column_start":1,"column_end":89}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":439962,"byte_end":439990,"line_start":318,"line_end":318,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3146},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":441767,"byte_end":441786,"line_start":370,"line_end":370,"column_start":8,"column_end":27},"name":"mock_ibc_packet_ack","qualname":"::mock::mock_ibc_packet_ack","value":"pub fn mock_ibc_packet_ack<impl Serialize: Serialize>(&str, &impl Serialize,\n                                                      IbcAcknowledgement)\n-> StdResult<IbcPacketAckMsg>","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcPacketAckMsg for testing ibc_packet_ack. You set a few key parameters that are\n often parsed. If you want to set more, use this as a default and mutate other fields.\n The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest.\n","sig":null,"attributes":[{"value":"/ Creates a IbcPacketAckMsg for testing ibc_packet_ack. You set a few key parameters that are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":441462,"byte_end":441557,"line_start":366,"line_end":366,"column_start":1,"column_end":96}},{"value":"/ often parsed. If you want to set more, use this as a default and mutate other fields.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":441558,"byte_end":441647,"line_start":367,"line_end":367,"column_start":1,"column_end":90}},{"value":"/ The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":441648,"byte_end":441730,"line_start":368,"line_end":368,"column_start":1,"column_end":83}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":441731,"byte_end":441759,"line_start":369,"line_end":369,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442319,"byte_end":442342,"line_start":384,"line_end":384,"column_start":8,"column_end":31},"name":"mock_ibc_packet_timeout","qualname":"::mock::mock_ibc_packet_timeout","value":"pub fn mock_ibc_packet_timeout<impl Serialize: Serialize>(&str,\n                                                          &impl Serialize)\n-> StdResult<IbcPacketTimeoutMsg>","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcPacketTimeoutMsg for testing ibc_packet_timeout. You set a few key parameters that are\n often parsed. If you want to set more, use this as a default and mutate other fields.\n The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest./\n","sig":null,"attributes":[{"value":"/ Creates a IbcPacketTimeoutMsg for testing ibc_packet_timeout. You set a few key parameters that are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442005,"byte_end":442108,"line_start":380,"line_end":380,"column_start":1,"column_end":104}},{"value":"/ often parsed. If you want to set more, use this as a default and mutate other fields.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442109,"byte_end":442198,"line_start":381,"line_end":381,"column_start":1,"column_end":90}},{"value":"/ The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest./","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442199,"byte_end":442282,"line_start":382,"line_end":382,"column_start":1,"column_end":84}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442283,"byte_end":442311,"line_start":383,"line_end":383,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3150},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442659,"byte_end":442689,"line_start":393,"line_end":393,"column_start":10,"column_end":40},"name":"MockQuerierCustomHandlerResult","qualname":"::mock::MockQuerierCustomHandlerResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" The same type as cosmwasm-std's QuerierResult, but easier to reuse in\n cosmwasm-vm. It might diverge from QuerierResult at some point.\n","sig":null,"attributes":[{"value":"/ The same type as cosmwasm-std's QuerierResult, but easier to reuse in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442508,"byte_end":442581,"line_start":391,"line_end":391,"column_start":1,"column_end":74}},{"value":"/ cosmwasm-vm. It might diverge from QuerierResult at some point.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442582,"byte_end":442649,"line_start":392,"line_end":392,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442840,"byte_end":442851,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"MockQuerier","qualname":"::mock::MockQuerier","value":"MockQuerier {  }","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156}],"decl_id":null,"docs":" MockQuerier holds an immutable table of bank balances\n TODO: also allow querying contracts\n","sig":null,"attributes":[{"value":"/ MockQuerier holds an immutable table of bank balances","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442731,"byte_end":442788,"line_start":395,"line_end":395,"column_start":1,"column_end":58}},{"value":"/ TODO: also allow querying contracts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":442789,"byte_end":442828,"line_start":396,"line_end":396,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":443388,"byte_end":443391,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<MockQuerier<C>>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444102,"byte_end":444116,"line_start":427,"line_end":427,"column_start":12,"column_end":26},"name":"update_balance","qualname":"<MockQuerier<C>>::update_balance","value":"pub fn update_balance<impl Into<String>: Into<String>>(&mut Self,\n                                                       impl Into<String>,\n                                                       Vec<Coin>)\n-> Option<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444333,"byte_end":444347,"line_start":436,"line_end":436,"column_start":12,"column_end":26},"name":"update_staking","qualname":"<MockQuerier<C>>::update_staking","value":"pub fn update_staking(&mut Self, &str, &[crate::query::Validator],\n                      &[crate::query::FullDelegation])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444294,"byte_end":444321,"line_start":435,"line_end":435,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444593,"byte_end":444612,"line_start":445,"line_end":445,"column_start":12,"column_end":31},"name":"with_custom_handler","qualname":"<MockQuerier<C>>::with_custom_handler","value":"pub fn with_custom_handler<CH: 'static>(Self, CH) -> Self where CH: Fn(&C) ->\nMockQuerierCustomHandlerResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":445492,"byte_end":445504,"line_start":476,"line_end":476,"column_start":12,"column_end":24},"name":"handle_query","qualname":"<MockQuerier<C>>::handle_query","value":"pub fn handle_query(&Self, &QueryRequest<C>) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10558},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":446906,"byte_end":446917,"line_start":513,"line_end":513,"column_start":12,"column_end":23},"name":"BankQuerier","qualname":"::mock::BankQuerier","value":"BankQuerier {  }","parent":null,"children":[{"krate":0,"index":10559}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":446995,"byte_end":446998,"line_start":518,"line_end":518,"column_start":12,"column_end":15},"name":"new","qualname":"<BankQuerier>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":447248,"byte_end":447253,"line_start":526,"line_end":526,"column_start":12,"column_end":17},"name":"query","qualname":"<BankQuerier>::query","value":"pub fn query(&Self, &BankQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10564},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":448524,"byte_end":448538,"line_start":558,"line_end":558,"column_start":12,"column_end":26},"name":"StakingQuerier","qualname":"::mock::StakingQuerier","value":"StakingQuerier {  }","parent":null,"children":[{"krate":0,"index":10565},{"krate":0,"index":10566},{"krate":0,"index":10567}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":448459,"byte_end":448486,"line_start":556,"line_end":556,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":448694,"byte_end":448697,"line_start":566,"line_end":566,"column_start":12,"column_end":15},"name":"new","qualname":"<StakingQuerier>::new","value":"pub fn new(&str, &[Validator], &[FullDelegation]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":448962,"byte_end":448967,"line_start":574,"line_end":574,"column_start":12,"column_end":17},"name":"query","qualname":"<StakingQuerier>::query","value":"pub fn query(&Self, &StakingQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451685,"byte_end":451699,"line_start":674,"line_end":674,"column_start":8,"column_end":22},"name":"riffle_shuffle","qualname":"::mock::riffle_shuffle","value":"pub fn riffle_shuffle<T: Clone>(&[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Performs a perfect shuffle (in shuffle)","sig":null,"attributes":[{"value":"/ Performs a perfect shuffle (in shuffle)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":450969,"byte_end":451012,"line_start":627,"line_end":627,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451013,"byte_end":451016,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ https://en.wikipedia.org/wiki/Riffle_shuffle_permutation#Perfect_shuffles","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451017,"byte_end":451094,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ https://en.wikipedia.org/wiki/In_shuffle","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451095,"byte_end":451139,"line_start":630,"line_end":630,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451140,"byte_end":451143,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ The number of shuffles required to restore the original order are listed in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451144,"byte_end":451223,"line_start":632,"line_end":632,"column_start":1,"column_end":80}},{"value":"/ https://oeis.org/A002326, e.g.:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451224,"byte_end":451259,"line_start":633,"line_end":633,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451260,"byte_end":451263,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451264,"byte_end":451277,"line_start":635,"line_end":635,"column_start":1,"column_end":14}},{"value":"/ 2: 2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451278,"byte_end":451286,"line_start":636,"line_end":636,"column_start":1,"column_end":9}},{"value":"/ 4: 4","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451287,"byte_end":451295,"line_start":637,"line_end":637,"column_start":1,"column_end":9}},{"value":"/ 6: 3","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451296,"byte_end":451304,"line_start":638,"line_end":638,"column_start":1,"column_end":9}},{"value":"/ 8: 6","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451305,"byte_end":451313,"line_start":639,"line_end":639,"column_start":1,"column_end":9}},{"value":"/ 10: 10","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451314,"byte_end":451324,"line_start":640,"line_end":640,"column_start":1,"column_end":11}},{"value":"/ 12: 12","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451325,"byte_end":451335,"line_start":641,"line_end":641,"column_start":1,"column_end":11}},{"value":"/ 14: 4","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451336,"byte_end":451345,"line_start":642,"line_end":642,"column_start":1,"column_end":10}},{"value":"/ 16: 8","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451346,"byte_end":451355,"line_start":643,"line_end":643,"column_start":1,"column_end":10}},{"value":"/ 18: 18","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451356,"byte_end":451366,"line_start":644,"line_end":644,"column_start":1,"column_end":11}},{"value":"/ 20: 6","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451367,"byte_end":451376,"line_start":645,"line_end":645,"column_start":1,"column_end":10}},{"value":"/ 22: 11","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451377,"byte_end":451387,"line_start":646,"line_end":646,"column_start":1,"column_end":11}},{"value":"/ 24: 20","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451388,"byte_end":451398,"line_start":647,"line_end":647,"column_start":1,"column_end":11}},{"value":"/ 26: 18","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451399,"byte_end":451409,"line_start":648,"line_end":648,"column_start":1,"column_end":11}},{"value":"/ 28: 28","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451410,"byte_end":451420,"line_start":649,"line_end":649,"column_start":1,"column_end":11}},{"value":"/ 30: 5","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451421,"byte_end":451430,"line_start":650,"line_end":650,"column_start":1,"column_end":10}},{"value":"/ 32: 10","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451431,"byte_end":451441,"line_start":651,"line_end":651,"column_start":1,"column_end":11}},{"value":"/ 34: 12","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451442,"byte_end":451452,"line_start":652,"line_end":652,"column_start":1,"column_end":11}},{"value":"/ 36: 36","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451453,"byte_end":451463,"line_start":653,"line_end":653,"column_start":1,"column_end":11}},{"value":"/ 38: 12","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451464,"byte_end":451474,"line_start":654,"line_end":654,"column_start":1,"column_end":11}},{"value":"/ 40: 20","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451475,"byte_end":451485,"line_start":655,"line_end":655,"column_start":1,"column_end":11}},{"value":"/ 42: 14","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451486,"byte_end":451496,"line_start":656,"line_end":656,"column_start":1,"column_end":11}},{"value":"/ 44: 12","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451497,"byte_end":451507,"line_start":657,"line_end":657,"column_start":1,"column_end":11}},{"value":"/ 46: 23","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451508,"byte_end":451518,"line_start":658,"line_end":658,"column_start":1,"column_end":11}},{"value":"/ 48: 21","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451519,"byte_end":451529,"line_start":659,"line_end":659,"column_start":1,"column_end":11}},{"value":"/ 50: 8","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451530,"byte_end":451539,"line_start":660,"line_end":660,"column_start":1,"column_end":10}},{"value":"/ 52: 52","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451540,"byte_end":451550,"line_start":661,"line_end":661,"column_start":1,"column_end":11}},{"value":"/ 54: 20","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451551,"byte_end":451561,"line_start":662,"line_end":662,"column_start":1,"column_end":11}},{"value":"/ 56: 18","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451562,"byte_end":451572,"line_start":663,"line_end":663,"column_start":1,"column_end":11}},{"value":"/ 58: 58","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451573,"byte_end":451583,"line_start":664,"line_end":664,"column_start":1,"column_end":11}},{"value":"/ 60: 60","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451584,"byte_end":451594,"line_start":665,"line_end":665,"column_start":1,"column_end":11}},{"value":"/ 62: 6","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451595,"byte_end":451604,"line_start":666,"line_end":666,"column_start":1,"column_end":10}},{"value":"/ 64: 12","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451605,"byte_end":451615,"line_start":667,"line_end":667,"column_start":1,"column_end":11}},{"value":"/ 66: 66","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451616,"byte_end":451626,"line_start":668,"line_end":668,"column_start":1,"column_end":11}},{"value":"/ 68: 22","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451627,"byte_end":451637,"line_start":669,"line_end":669,"column_start":1,"column_end":11}},{"value":"/ 70: 35","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451638,"byte_end":451648,"line_start":670,"line_end":670,"column_start":1,"column_end":11}},{"value":"/ 72: 9","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451649,"byte_end":451658,"line_start":671,"line_end":671,"column_start":1,"column_end":10}},{"value":"/ 74: 20","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451659,"byte_end":451669,"line_start":672,"line_end":672,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":451670,"byte_end":451677,"line_start":673,"line_end":673,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":452092,"byte_end":452101,"line_start":689,"line_end":689,"column_start":8,"column_end":17},"name":"digit_sum","qualname":"::mock::digit_sum","value":"pub fn digit_sum(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":452335,"byte_end":452350,"line_start":695,"line_end":695,"column_start":8,"column_end":23},"name":"mock_wasmd_attr","qualname":"::mock::mock_wasmd_attr","value":"pub fn mock_wasmd_attr<impl Into<String>: Into<String>,\n                       impl Into<String>: Into<String>>(impl Into<String>,\n                                                        impl Into<String>)\n-> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Only for test code. This bypasses assertions in new, allowing us to create _*\n Attributes to simulate responses from the blockchain\n","sig":null,"attributes":[{"value":"/ Only for test code. This bypasses assertions in new, allowing us to create _*","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":452189,"byte_end":452270,"line_start":693,"line_end":693,"column_start":1,"column_end":82}},{"value":"/ Attributes to simulate responses from the blockchain","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":452271,"byte_end":452327,"line_start":694,"line_end":694,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3197},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3542,"byte_end":3549,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"name":"testing","qualname":"::testing","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3229},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/lib.rs","byte_start":3498,"byte_end":3533,"line_start":99,"line_end":99,"column_start":1,"column_end":36}}]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5558,"byte_end":5562,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6764,"byte_end":6768,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6892,"byte_end":6896,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7029,"byte_end":7033,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7297,"byte_end":7301,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7433,"byte_end":7439,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7646,"byte_end":7652,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7734,"byte_end":7740,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7830,"byte_end":7833,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7942,"byte_end":7945,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8174,"byte_end":8187,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8287,"byte_end":8300,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8408,"byte_end":8411,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8916,"byte_end":8929,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":9034,"byte_end":9047,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":9145,"byte_end":9158,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23392,"byte_end":23398,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":25292,"byte_end":25298,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":25431,"byte_end":25437,"line_start":78,"line_end":78,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":25904,"byte_end":25910,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26359,"byte_end":26365,"line_start":102,"line_end":102,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26528,"byte_end":26534,"line_start":111,"line_end":111,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26679,"byte_end":26685,"line_start":118,"line_end":118,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26792,"byte_end":26798,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26886,"byte_end":26889,"line_start":130,"line_end":130,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27049,"byte_end":27055,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27247,"byte_end":27250,"line_start":145,"line_end":145,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27422,"byte_end":27428,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27774,"byte_end":27780,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":28024,"byte_end":28030,"line_start":179,"line_end":179,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":28261,"byte_end":28274,"line_start":190,"line_end":190,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39793,"byte_end":39797,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39996,"byte_end":40000,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45698,"byte_end":45702,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45767,"byte_end":45776,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":46228,"byte_end":46235,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49175,"byte_end":49193,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49457,"byte_end":49475,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":50432,"byte_end":50450,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54495,"byte_end":54503,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":57279,"byte_end":57287,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":63699,"byte_end":63707,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":63847,"byte_end":63855,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":63993,"byte_end":64001,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64135,"byte_end":64143,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64275,"byte_end":64283,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64404,"byte_end":64412,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65026,"byte_end":65043,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65372,"byte_end":65385,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66155,"byte_end":66178,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66581,"byte_end":66598,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75707,"byte_end":75718,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75750,"byte_end":75761,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77416,"byte_end":77433,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77695,"byte_end":77712,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":78978,"byte_end":78995,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82783,"byte_end":82793,"line_start":69,"line_end":69,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83486,"byte_end":83496,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83635,"byte_end":83645,"line_start":106,"line_end":106,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84349,"byte_end":84359,"line_start":128,"line_end":128,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85863,"byte_end":85878,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85993,"byte_end":86008,"line_start":178,"line_end":178,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86125,"byte_end":86140,"line_start":184,"line_end":184,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86846,"byte_end":86855,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87526,"byte_end":87544,"line_start":234,"line_end":234,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88456,"byte_end":88473,"line_start":260,"line_end":260,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89254,"byte_end":89264,"line_start":290,"line_end":290,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90149,"byte_end":90169,"line_start":313,"line_end":313,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90962,"byte_end":90972,"line_start":343,"line_end":343,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91848,"byte_end":91866,"line_start":363,"line_end":363,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92287,"byte_end":92297,"line_start":380,"line_end":380,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92741,"byte_end":92760,"line_start":396,"line_end":396,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93100,"byte_end":93115,"line_start":410,"line_end":410,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93514,"byte_end":93533,"line_start":426,"line_end":426,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95180,"byte_end":95196,"line_start":463,"line_end":463,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95373,"byte_end":95389,"line_start":473,"line_end":473,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100468,"byte_end":100486,"line_start":608,"line_end":608,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100710,"byte_end":100728,"line_start":619,"line_end":619,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110384,"byte_end":110389,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111951,"byte_end":111958,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":118251,"byte_end":118258,"line_start":187,"line_end":187,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":118983,"byte_end":118990,"line_start":213,"line_end":213,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121056,"byte_end":121063,"line_start":263,"line_end":263,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121674,"byte_end":121681,"line_start":281,"line_end":281,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121820,"byte_end":121827,"line_start":289,"line_end":289,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121960,"byte_end":121967,"line_start":297,"line_end":297,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":122096,"byte_end":122103,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123130,"byte_end":123137,"line_start":327,"line_end":327,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123489,"byte_end":123496,"line_start":340,"line_end":340,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123631,"byte_end":123638,"line_start":348,"line_end":348,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123787,"byte_end":123794,"line_start":356,"line_end":356,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123904,"byte_end":123911,"line_start":362,"line_end":362,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":124121,"byte_end":124128,"line_start":372,"line_end":372,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":124372,"byte_end":124379,"line_start":382,"line_end":382,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":124610,"byte_end":124624,"line_start":393,"line_end":393,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154453,"byte_end":154463,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":161141,"byte_end":161151,"line_start":200,"line_end":200,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":161873,"byte_end":161883,"line_start":226,"line_end":226,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":163949,"byte_end":163959,"line_start":276,"line_end":276,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164570,"byte_end":164580,"line_start":294,"line_end":294,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164719,"byte_end":164729,"line_start":302,"line_end":302,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164862,"byte_end":164872,"line_start":310,"line_end":310,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164998,"byte_end":165008,"line_start":318,"line_end":318,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166050,"byte_end":166057,"line_start":340,"line_end":340,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166415,"byte_end":166425,"line_start":353,"line_end":353,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166560,"byte_end":166570,"line_start":361,"line_end":361,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166716,"byte_end":166726,"line_start":369,"line_end":369,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166836,"byte_end":166846,"line_start":375,"line_end":375,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":167056,"byte_end":167066,"line_start":385,"line_end":385,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":167310,"byte_end":167320,"line_start":395,"line_end":395,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":167557,"byte_end":167574,"line_start":406,"line_end":406,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200252,"byte_end":200253,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201105,"byte_end":201111,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201133,"byte_end":201140,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201162,"byte_end":201169,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201191,"byte_end":201198,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203828,"byte_end":203835,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207396,"byte_end":207403,"line_start":155,"line_end":155,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207495,"byte_end":207502,"line_start":161,"line_end":161,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207587,"byte_end":207594,"line_start":167,"line_end":167,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207685,"byte_end":207692,"line_start":173,"line_end":173,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207783,"byte_end":207790,"line_start":179,"line_end":179,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207880,"byte_end":207887,"line_start":185,"line_end":185,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207984,"byte_end":207990,"line_start":191,"line_end":191,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208282,"byte_end":208289,"line_start":201,"line_end":201,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208432,"byte_end":208439,"line_start":209,"line_end":209,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208717,"byte_end":208723,"line_start":220,"line_end":220,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208926,"byte_end":208933,"line_start":232,"line_end":232,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209053,"byte_end":209060,"line_start":238,"line_end":238,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209319,"byte_end":209326,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209455,"byte_end":209462,"line_start":258,"line_end":258,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209726,"byte_end":209733,"line_start":270,"line_end":270,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209862,"byte_end":209869,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210138,"byte_end":210145,"line_start":290,"line_end":290,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210285,"byte_end":210292,"line_start":298,"line_end":298,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210553,"byte_end":210560,"line_start":310,"line_end":310,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210693,"byte_end":210700,"line_start":318,"line_end":318,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210960,"byte_end":210967,"line_start":330,"line_end":330,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211107,"byte_end":211114,"line_start":338,"line_end":338,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211241,"byte_end":211248,"line_start":344,"line_end":344,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211371,"byte_end":211378,"line_start":350,"line_end":350,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211505,"byte_end":211512,"line_start":356,"line_end":356,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211635,"byte_end":211642,"line_start":362,"line_end":362,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211766,"byte_end":211773,"line_start":368,"line_end":368,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211896,"byte_end":211903,"line_start":374,"line_end":374,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212027,"byte_end":212034,"line_start":380,"line_end":380,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212137,"byte_end":212144,"line_start":386,"line_end":386,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212427,"byte_end":212434,"line_start":399,"line_end":399,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212554,"byte_end":212561,"line_start":405,"line_end":405,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212653,"byte_end":212660,"line_start":411,"line_end":411,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213722,"byte_end":213729,"line_start":447,"line_end":447,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213991,"byte_end":213998,"line_start":457,"line_end":457,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":214290,"byte_end":214304,"line_start":469,"line_end":469,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":214769,"byte_end":214776,"line_start":487,"line_end":487,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226399,"byte_end":226406,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233696,"byte_end":233703,"line_start":286,"line_end":286,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233799,"byte_end":233806,"line_start":292,"line_end":292,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233898,"byte_end":233905,"line_start":298,"line_end":298,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233997,"byte_end":234004,"line_start":304,"line_end":304,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234095,"byte_end":234102,"line_start":310,"line_end":310,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234193,"byte_end":234200,"line_start":316,"line_end":316,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234290,"byte_end":234297,"line_start":322,"line_end":322,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234394,"byte_end":234401,"line_start":328,"line_end":328,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234695,"byte_end":234702,"line_start":338,"line_end":338,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234845,"byte_end":234852,"line_start":346,"line_end":346,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235257,"byte_end":235263,"line_start":361,"line_end":361,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235367,"byte_end":235374,"line_start":367,"line_end":367,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235660,"byte_end":235667,"line_start":377,"line_end":377,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235913,"byte_end":235920,"line_start":389,"line_end":389,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236049,"byte_end":236056,"line_start":397,"line_end":397,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236307,"byte_end":236314,"line_start":409,"line_end":409,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236443,"byte_end":236450,"line_start":417,"line_end":417,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236701,"byte_end":236708,"line_start":429,"line_end":429,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236831,"byte_end":236838,"line_start":437,"line_end":437,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237119,"byte_end":237126,"line_start":450,"line_end":450,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237385,"byte_end":237392,"line_start":462,"line_end":462,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237528,"byte_end":237535,"line_start":470,"line_end":470,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237860,"byte_end":237867,"line_start":483,"line_end":483,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237999,"byte_end":238006,"line_start":491,"line_end":491,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238330,"byte_end":238337,"line_start":504,"line_end":504,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238479,"byte_end":238486,"line_start":512,"line_end":512,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238613,"byte_end":238620,"line_start":518,"line_end":518,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238743,"byte_end":238750,"line_start":524,"line_end":524,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238877,"byte_end":238884,"line_start":530,"line_end":530,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239007,"byte_end":239014,"line_start":536,"line_end":536,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239138,"byte_end":239145,"line_start":542,"line_end":542,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239268,"byte_end":239275,"line_start":548,"line_end":548,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239399,"byte_end":239406,"line_start":554,"line_end":554,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239525,"byte_end":239532,"line_start":560,"line_end":560,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239667,"byte_end":239674,"line_start":566,"line_end":566,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239782,"byte_end":239789,"line_start":572,"line_end":572,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240938,"byte_end":240945,"line_start":611,"line_end":611,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":241207,"byte_end":241214,"line_start":621,"line_end":621,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":241506,"byte_end":241520,"line_start":633,"line_end":633,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":241918,"byte_end":241925,"line_start":648,"line_end":648,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271206,"byte_end":271213,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281123,"byte_end":281130,"line_start":366,"line_end":366,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281318,"byte_end":281325,"line_start":374,"line_end":374,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281421,"byte_end":281428,"line_start":380,"line_end":380,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281520,"byte_end":281527,"line_start":386,"line_end":386,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281619,"byte_end":281626,"line_start":392,"line_end":392,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281717,"byte_end":281724,"line_start":398,"line_end":398,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281815,"byte_end":281822,"line_start":404,"line_end":404,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281912,"byte_end":281919,"line_start":410,"line_end":410,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282016,"byte_end":282023,"line_start":416,"line_end":416,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282540,"byte_end":282547,"line_start":435,"line_end":435,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282841,"byte_end":282848,"line_start":445,"line_end":445,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282991,"byte_end":282998,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283277,"byte_end":283283,"line_start":464,"line_end":464,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283387,"byte_end":283394,"line_start":470,"line_end":470,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283680,"byte_end":283687,"line_start":480,"line_end":480,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283849,"byte_end":283856,"line_start":488,"line_end":488,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284017,"byte_end":284024,"line_start":496,"line_end":496,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284186,"byte_end":284193,"line_start":504,"line_end":504,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284354,"byte_end":284361,"line_start":512,"line_end":512,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284528,"byte_end":284535,"line_start":520,"line_end":520,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284687,"byte_end":284694,"line_start":528,"line_end":528,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284975,"byte_end":284982,"line_start":541,"line_end":541,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285149,"byte_end":285156,"line_start":549,"line_end":549,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285318,"byte_end":285325,"line_start":557,"line_end":557,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285650,"byte_end":285657,"line_start":570,"line_end":570,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285812,"byte_end":285819,"line_start":578,"line_end":578,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285970,"byte_end":285977,"line_start":584,"line_end":584,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286124,"byte_end":286131,"line_start":590,"line_end":590,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286282,"byte_end":286289,"line_start":596,"line_end":596,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286436,"byte_end":286443,"line_start":602,"line_end":602,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286591,"byte_end":286598,"line_start":608,"line_end":608,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286745,"byte_end":286752,"line_start":614,"line_end":614,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286900,"byte_end":286907,"line_start":620,"line_end":620,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287050,"byte_end":287057,"line_start":626,"line_end":626,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287192,"byte_end":287199,"line_start":632,"line_end":632,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287321,"byte_end":287328,"line_start":638,"line_end":638,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287590,"byte_end":287597,"line_start":648,"line_end":648,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287889,"byte_end":287903,"line_start":660,"line_end":660,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":288301,"byte_end":288308,"line_start":675,"line_end":675,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305092,"byte_end":305098,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308415,"byte_end":308421,"line_start":144,"line_end":144,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308504,"byte_end":308510,"line_start":150,"line_end":150,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308600,"byte_end":308606,"line_start":156,"line_end":156,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308695,"byte_end":308701,"line_start":162,"line_end":162,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308794,"byte_end":308800,"line_start":168,"line_end":168,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309082,"byte_end":309088,"line_start":179,"line_end":179,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309287,"byte_end":309293,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309412,"byte_end":309418,"line_start":197,"line_end":197,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309586,"byte_end":309592,"line_start":205,"line_end":205,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309758,"byte_end":309764,"line_start":213,"line_end":213,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309938,"byte_end":309944,"line_start":221,"line_end":221,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310103,"byte_end":310109,"line_start":229,"line_end":229,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310384,"byte_end":310390,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310554,"byte_end":310560,"line_start":250,"line_end":250,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310730,"byte_end":310736,"line_start":258,"line_end":258,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310889,"byte_end":310895,"line_start":264,"line_end":264,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311044,"byte_end":311050,"line_start":270,"line_end":270,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311201,"byte_end":311207,"line_start":276,"line_end":276,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311353,"byte_end":311359,"line_start":282,"line_end":282,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311500,"byte_end":311506,"line_start":288,"line_end":288,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311620,"byte_end":311626,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312661,"byte_end":312667,"line_start":331,"line_end":331,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312929,"byte_end":312935,"line_start":341,"line_end":341,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":313224,"byte_end":313237,"line_start":353,"line_end":353,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":313698,"byte_end":313704,"line_start":371,"line_end":371,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330537,"byte_end":330547,"line_start":62,"line_end":62,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334375,"byte_end":334395,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324990,"byte_end":324995,"line_start":73,"line_end":73,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325041,"byte_end":325053,"line_start":75,"line_end":75,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325171,"byte_end":325183,"line_start":81,"line_end":81,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325334,"byte_end":325346,"line_start":88,"line_end":88,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325478,"byte_end":325490,"line_start":94,"line_end":94,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325644,"byte_end":325656,"line_start":101,"line_end":101,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337194,"byte_end":337208,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337708,"byte_end":337722,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337861,"byte_end":337875,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":338134,"byte_end":338140,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342367,"byte_end":342372,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350715,"byte_end":350724,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350861,"byte_end":350870,"line_start":226,"line_end":226,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351018,"byte_end":351027,"line_start":233,"line_end":233,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351149,"byte_end":351158,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351292,"byte_end":351301,"line_start":246,"line_end":246,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2021}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351433,"byte_end":351442,"line_start":253,"line_end":253,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354131,"byte_end":354136,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355275,"byte_end":355284,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355830,"byte_end":355839,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355975,"byte_end":355984,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":356755,"byte_end":356764,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360966,"byte_end":360974,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361167,"byte_end":361175,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368338,"byte_end":368344,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372494,"byte_end":372506,"line_start":150,"line_end":150,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373193,"byte_end":373205,"line_start":174,"line_end":174,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373466,"byte_end":373472,"line_start":183,"line_end":183,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380264,"byte_end":380276,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380615,"byte_end":380627,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380768,"byte_end":380780,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":381029,"byte_end":381035,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":393008,"byte_end":393021,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":393110,"byte_end":393123,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":395187,"byte_end":395200,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404262,"byte_end":404271,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405707,"byte_end":405716,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416899,"byte_end":416913,"line_start":149,"line_end":149,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417090,"byte_end":417104,"line_start":153,"line_end":153,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417245,"byte_end":417259,"line_start":161,"line_end":161,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2567},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":432657,"byte_end":432664,"line_start":93,"line_end":93,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":432792,"byte_end":432799,"line_start":101,"line_end":101,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":443360,"byte_end":443371,"line_start":410,"line_end":410,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444816,"byte_end":444827,"line_start":454,"line_end":454,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444948,"byte_end":444959,"line_start":460,"line_end":460,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":445464,"byte_end":445475,"line_start":475,"line_end":475,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":446445,"byte_end":446458,"line_start":500,"line_end":500,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":446970,"byte_end":446981,"line_start":517,"line_end":517,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3178},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":448666,"byte_end":448680,"line_start":565,"line_end":565,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":5558,"byte_end":5562,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6764,"byte_end":6768,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":6892,"byte_end":6896,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7029,"byte_end":7033,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7297,"byte_end":7301,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7433,"byte_end":7439,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7646,"byte_end":7652,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7734,"byte_end":7740,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7830,"byte_end":7833,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":7942,"byte_end":7945,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8174,"byte_end":8187,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8287,"byte_end":8300,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8408,"byte_end":8411,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":8916,"byte_end":8929,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":9034,"byte_end":9047,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/addresses.rs","byte_start":9145,"byte_end":9158,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":23392,"byte_end":23398,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":25292,"byte_end":25298,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":25431,"byte_end":25437,"line_start":78,"line_end":78,"column_start":21,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":25904,"byte_end":25910,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26359,"byte_end":26365,"line_start":102,"line_end":102,"column_start":16,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26528,"byte_end":26534,"line_start":111,"line_end":111,"column_start":51,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26679,"byte_end":26685,"line_start":118,"line_end":118,"column_start":50,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26792,"byte_end":26798,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":26886,"byte_end":26889,"line_start":130,"line_end":130,"column_start":23,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27049,"byte_end":27055,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27247,"byte_end":27250,"line_start":145,"line_end":145,"column_start":28,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27422,"byte_end":27428,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":27774,"byte_end":27780,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3374},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":28024,"byte_end":28030,"line_start":179,"line_end":179,"column_start":32,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3374},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/binary.rs","byte_start":28261,"byte_end":28274,"line_start":190,"line_end":190,"column_start":32,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":150},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39793,"byte_end":39797,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/coins.rs","byte_start":39996,"byte_end":40000,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3399},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45698,"byte_end":45702,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3465},"to":{"krate":2,"index":3027}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":45767,"byte_end":45776,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/deps.rs","byte_start":46228,"byte_end":46235,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49175,"byte_end":49193,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":49457,"byte_end":49475,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/recover_pubkey_error.rs","byte_start":50432,"byte_end":50450,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":54495,"byte_end":54503,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":57279,"byte_end":57287,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":63699,"byte_end":63707,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":63847,"byte_end":63855,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":63993,"byte_end":64001,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64135,"byte_end":64143,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64275,"byte_end":64283,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":64404,"byte_end":64412,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3496},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65026,"byte_end":65043,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":65372,"byte_end":65385,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66155,"byte_end":66178,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/std_error.rs","byte_start":66581,"byte_end":66598,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75707,"byte_end":75718,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3866},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/system_error.rs","byte_start":75750,"byte_end":75761,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77416,"byte_end":77433,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":77695,"byte_end":77712,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3878},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/errors/verification_error.rs","byte_start":78978,"byte_end":78995,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3878},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":82783,"byte_end":82793,"line_start":69,"line_end":69,"column_start":6,"column_end":16},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83486,"byte_end":83496,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4213},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":83635,"byte_end":83645,"line_start":106,"line_end":106,"column_start":32,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4213},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":84349,"byte_end":84359,"line_start":128,"line_end":128,"column_start":6,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85863,"byte_end":85878,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":85993,"byte_end":86008,"line_start":178,"line_end":178,"column_start":21,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86125,"byte_end":86140,"line_start":184,"line_end":184,"column_start":14,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":86846,"byte_end":86855,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":87526,"byte_end":87544,"line_start":234,"line_end":234,"column_start":6,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":88456,"byte_end":88473,"line_start":260,"line_end":260,"column_start":6,"column_end":23},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":89254,"byte_end":89264,"line_start":290,"line_end":290,"column_start":34,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4216},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90149,"byte_end":90169,"line_start":313,"line_end":313,"column_start":6,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":90962,"byte_end":90972,"line_start":343,"line_end":343,"column_start":37,"column_end":47},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4216},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":91848,"byte_end":91866,"line_start":363,"line_end":363,"column_start":6,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92287,"byte_end":92297,"line_start":380,"line_end":380,"column_start":35,"column_end":45},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4216},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":92741,"byte_end":92760,"line_start":396,"line_end":396,"column_start":6,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93100,"byte_end":93115,"line_start":410,"line_end":410,"column_start":6,"column_end":21},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":93514,"byte_end":93533,"line_start":426,"line_end":426,"column_start":6,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95180,"byte_end":95196,"line_start":463,"line_end":463,"column_start":21,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5134},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":95373,"byte_end":95389,"line_start":473,"line_end":473,"column_start":9,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100468,"byte_end":100486,"line_start":608,"line_end":608,"column_start":21,"column_end":39},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5211},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/ibc.rs","byte_start":100710,"byte_end":100728,"line_start":619,"line_end":619,"column_start":9,"column_end":27},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/iterator.rs","byte_start":110384,"byte_end":110389,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5291},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":111951,"byte_end":111958,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":118251,"byte_end":118258,"line_start":187,"line_end":187,"column_start":28,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5301},"to":{"krate":0,"index":837}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":118983,"byte_end":118990,"line_start":213,"line_end":213,"column_start":18,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121056,"byte_end":121063,"line_start":263,"line_end":263,"column_start":23,"column_end":30},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121674,"byte_end":121681,"line_start":281,"line_end":281,"column_start":19,"column_end":26},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121820,"byte_end":121827,"line_start":289,"line_end":289,"column_start":29,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":121960,"byte_end":121967,"line_start":297,"line_end":297,"column_start":19,"column_end":26},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":122096,"byte_end":122103,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123130,"byte_end":123137,"line_start":327,"line_end":327,"column_start":28,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123489,"byte_end":123496,"line_start":340,"line_end":340,"column_start":28,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123631,"byte_end":123638,"line_start":348,"line_end":348,"column_start":28,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123787,"byte_end":123794,"line_start":356,"line_end":356,"column_start":34,"column_end":41},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":123904,"byte_end":123911,"line_start":362,"line_end":362,"column_start":31,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":124121,"byte_end":124128,"line_start":372,"line_end":372,"column_start":20,"column_end":27},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5301},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":124372,"byte_end":124379,"line_start":382,"line_end":382,"column_start":32,"column_end":39},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5301},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal.rs","byte_start":124610,"byte_end":124624,"line_start":393,"line_end":393,"column_start":32,"column_end":46},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":693},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":154453,"byte_end":154463,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":161141,"byte_end":161151,"line_start":200,"line_end":200,"column_start":28,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5336},"to":{"krate":0,"index":837}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":161873,"byte_end":161883,"line_start":226,"line_end":226,"column_start":18,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":163949,"byte_end":163959,"line_start":276,"line_end":276,"column_start":23,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164570,"byte_end":164580,"line_start":294,"line_end":294,"column_start":19,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164719,"byte_end":164729,"line_start":302,"line_end":302,"column_start":32,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164862,"byte_end":164872,"line_start":310,"line_end":310,"column_start":19,"column_end":29},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":164998,"byte_end":165008,"line_start":318,"line_end":318,"column_start":19,"column_end":29},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166050,"byte_end":166057,"line_start":340,"line_end":340,"column_start":31,"column_end":38},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166415,"byte_end":166425,"line_start":353,"line_end":353,"column_start":28,"column_end":38},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166560,"byte_end":166570,"line_start":361,"line_end":361,"column_start":28,"column_end":38},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166716,"byte_end":166726,"line_start":369,"line_end":369,"column_start":34,"column_end":44},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":166836,"byte_end":166846,"line_start":375,"line_end":375,"column_start":31,"column_end":41},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":167056,"byte_end":167066,"line_start":385,"line_end":385,"column_start":20,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5336},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":167310,"byte_end":167320,"line_start":395,"line_end":395,"column_start":32,"column_end":42},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5336},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/decimal256.rs","byte_start":167557,"byte_end":167574,"line_start":406,"line_end":406,"column_start":32,"column_end":49},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":828},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/fraction.rs","byte_start":199620,"byte_end":199625,"line_start":4,"line_end":4,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3022},"to":{"krate":0,"index":837}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":200252,"byte_end":200253,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":863}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201105,"byte_end":201111,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6568},"to":{"krate":0,"index":868}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201133,"byte_end":201140,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":868}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201162,"byte_end":201169,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5952},"to":{"krate":0,"index":868}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/isqrt.rs","byte_start":201191,"byte_end":201198,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6533},"to":{"krate":0,"index":868}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":203828,"byte_end":203835,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207396,"byte_end":207403,"line_start":155,"line_end":155,"column_start":23,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207495,"byte_end":207502,"line_start":161,"line_end":161,"column_start":21,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207587,"byte_end":207594,"line_start":167,"line_end":167,"column_start":20,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207685,"byte_end":207692,"line_start":173,"line_end":173,"column_start":20,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207783,"byte_end":207790,"line_start":179,"line_end":179,"column_start":20,"column_end":27},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207880,"byte_end":207887,"line_start":185,"line_end":185,"column_start":19,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":207984,"byte_end":207990,"line_start":191,"line_end":191,"column_start":27,"column_end":33},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208282,"byte_end":208289,"line_start":201,"line_end":201,"column_start":24,"column_end":31},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208432,"byte_end":208439,"line_start":209,"line_end":209,"column_start":18,"column_end":25},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208717,"byte_end":208723,"line_start":220,"line_end":220,"column_start":24,"column_end":30},"kind":{"Impl":{"id":215}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":208926,"byte_end":208933,"line_start":232,"line_end":232,"column_start":23,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209053,"byte_end":209060,"line_start":238,"line_end":238,"column_start":28,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209319,"byte_end":209326,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209455,"byte_end":209462,"line_start":258,"line_end":258,"column_start":28,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209726,"byte_end":209733,"line_start":270,"line_end":270,"column_start":36,"column_end":43},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":209862,"byte_end":209869,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210138,"byte_end":210145,"line_start":290,"line_end":290,"column_start":36,"column_end":43},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210285,"byte_end":210292,"line_start":298,"line_end":298,"column_start":28,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210553,"byte_end":210560,"line_start":310,"line_end":310,"column_start":36,"column_end":43},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210693,"byte_end":210700,"line_start":318,"line_end":318,"column_start":24,"column_end":31},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":210960,"byte_end":210967,"line_start":330,"line_end":330,"column_start":32,"column_end":39},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211107,"byte_end":211114,"line_start":338,"line_end":338,"column_start":34,"column_end":41},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211241,"byte_end":211248,"line_start":344,"line_end":344,"column_start":42,"column_end":49},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211371,"byte_end":211378,"line_start":350,"line_end":350,"column_start":34,"column_end":41},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211505,"byte_end":211512,"line_start":356,"line_end":356,"column_start":42,"column_end":49},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211635,"byte_end":211642,"line_start":362,"line_end":362,"column_start":34,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3123}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211766,"byte_end":211773,"line_start":368,"line_end":368,"column_start":42,"column_end":49},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3123}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":211896,"byte_end":211903,"line_start":374,"line_end":374,"column_start":34,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212027,"byte_end":212034,"line_start":380,"line_end":380,"column_start":42,"column_end":49},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212137,"byte_end":212144,"line_start":386,"line_end":386,"column_start":14,"column_end":21},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3105}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212427,"byte_end":212434,"line_start":399,"line_end":399,"column_start":30,"column_end":37},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212554,"byte_end":212561,"line_start":405,"line_end":405,"column_start":38,"column_end":45},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":212653,"byte_end":212660,"line_start":411,"line_end":411,"column_start":6,"column_end":13},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213722,"byte_end":213729,"line_start":447,"line_end":447,"column_start":20,"column_end":27},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5371},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":213991,"byte_end":213998,"line_start":457,"line_end":457,"column_start":32,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5371},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":214290,"byte_end":214304,"line_start":469,"line_end":469,"column_start":32,"column_end":46},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1082},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint128.rs","byte_start":214769,"byte_end":214776,"line_start":487,"line_end":487,"column_start":31,"column_end":38},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":226399,"byte_end":226406,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233696,"byte_end":233703,"line_start":286,"line_end":286,"column_start":24,"column_end":31},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233799,"byte_end":233806,"line_start":292,"line_end":292,"column_start":23,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233898,"byte_end":233905,"line_start":298,"line_end":298,"column_start":21,"column_end":28},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":233997,"byte_end":234004,"line_start":304,"line_end":304,"column_start":20,"column_end":27},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234095,"byte_end":234102,"line_start":310,"line_end":310,"column_start":20,"column_end":27},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234193,"byte_end":234200,"line_start":316,"line_end":316,"column_start":20,"column_end":27},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234290,"byte_end":234297,"line_start":322,"line_end":322,"column_start":19,"column_end":26},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234394,"byte_end":234401,"line_start":328,"line_end":328,"column_start":27,"column_end":34},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234695,"byte_end":234702,"line_start":338,"line_end":338,"column_start":24,"column_end":31},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":234845,"byte_end":234852,"line_start":346,"line_end":346,"column_start":18,"column_end":25},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235257,"byte_end":235263,"line_start":361,"line_end":361,"column_start":24,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235367,"byte_end":235374,"line_start":367,"line_end":367,"column_start":23,"column_end":30},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235660,"byte_end":235667,"line_start":377,"line_end":377,"column_start":28,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":235913,"byte_end":235920,"line_start":389,"line_end":389,"column_start":36,"column_end":43},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236049,"byte_end":236056,"line_start":397,"line_end":397,"column_start":28,"column_end":35},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236307,"byte_end":236314,"line_start":409,"line_end":409,"column_start":36,"column_end":43},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236443,"byte_end":236450,"line_start":417,"line_end":417,"column_start":28,"column_end":35},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236701,"byte_end":236708,"line_start":429,"line_end":429,"column_start":36,"column_end":43},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":236831,"byte_end":236838,"line_start":437,"line_end":437,"column_start":14,"column_end":21},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3105}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237119,"byte_end":237126,"line_start":450,"line_end":450,"column_start":28,"column_end":35},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237385,"byte_end":237392,"line_start":462,"line_end":462,"column_start":36,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237528,"byte_end":237535,"line_start":470,"line_end":470,"column_start":24,"column_end":31},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237860,"byte_end":237867,"line_start":483,"line_end":483,"column_start":32,"column_end":39},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":237999,"byte_end":238006,"line_start":491,"line_end":491,"column_start":24,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238330,"byte_end":238337,"line_start":504,"line_end":504,"column_start":32,"column_end":39},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238479,"byte_end":238486,"line_start":512,"line_end":512,"column_start":34,"column_end":41},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238613,"byte_end":238620,"line_start":518,"line_end":518,"column_start":42,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238743,"byte_end":238750,"line_start":524,"line_end":524,"column_start":34,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":238877,"byte_end":238884,"line_start":530,"line_end":530,"column_start":42,"column_end":49},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239007,"byte_end":239014,"line_start":536,"line_end":536,"column_start":34,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3123}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239138,"byte_end":239145,"line_start":542,"line_end":542,"column_start":42,"column_end":49},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3123}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239268,"byte_end":239275,"line_start":548,"line_end":548,"column_start":34,"column_end":41},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239399,"byte_end":239406,"line_start":554,"line_end":554,"column_start":42,"column_end":49},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239525,"byte_end":239532,"line_start":560,"line_end":560,"column_start":30,"column_end":37},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239667,"byte_end":239674,"line_start":566,"line_end":566,"column_start":38,"column_end":45},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":239782,"byte_end":239789,"line_start":572,"line_end":572,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":240938,"byte_end":240945,"line_start":611,"line_end":611,"column_start":20,"column_end":27},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5952},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":241207,"byte_end":241214,"line_start":621,"line_end":621,"column_start":32,"column_end":39},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5952},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":241506,"byte_end":241520,"line_start":633,"line_end":633,"column_start":32,"column_end":46},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":1321},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint256.rs","byte_start":241918,"byte_end":241925,"line_start":648,"line_end":648,"column_start":31,"column_end":38},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":271206,"byte_end":271213,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281123,"byte_end":281130,"line_start":366,"line_end":366,"column_start":24,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281318,"byte_end":281325,"line_start":374,"line_end":374,"column_start":24,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281421,"byte_end":281428,"line_start":380,"line_end":380,"column_start":23,"column_end":30},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281520,"byte_end":281527,"line_start":386,"line_end":386,"column_start":21,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281619,"byte_end":281626,"line_start":392,"line_end":392,"column_start":20,"column_end":27},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281717,"byte_end":281724,"line_start":398,"line_end":398,"column_start":20,"column_end":27},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281815,"byte_end":281822,"line_start":404,"line_end":404,"column_start":20,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":281912,"byte_end":281919,"line_start":410,"line_end":410,"column_start":19,"column_end":26},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282016,"byte_end":282023,"line_start":416,"line_end":416,"column_start":27,"column_end":34},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282540,"byte_end":282547,"line_start":435,"line_end":435,"column_start":27,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282841,"byte_end":282848,"line_start":445,"line_end":445,"column_start":24,"column_end":31},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":282991,"byte_end":282998,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":12139}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283277,"byte_end":283283,"line_start":464,"line_end":464,"column_start":24,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283387,"byte_end":283394,"line_start":470,"line_end":470,"column_start":23,"column_end":30},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283680,"byte_end":283687,"line_start":480,"line_end":480,"column_start":28,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":283849,"byte_end":283856,"line_start":488,"line_end":488,"column_start":36,"column_end":43},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284017,"byte_end":284024,"line_start":496,"line_end":496,"column_start":28,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284186,"byte_end":284193,"line_start":504,"line_end":504,"column_start":36,"column_end":43},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284354,"byte_end":284361,"line_start":512,"line_end":512,"column_start":28,"column_end":35},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284528,"byte_end":284535,"line_start":520,"line_end":520,"column_start":36,"column_end":43},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284687,"byte_end":284694,"line_start":528,"line_end":528,"column_start":14,"column_end":21},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3105}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":284975,"byte_end":284982,"line_start":541,"line_end":541,"column_start":28,"column_end":35},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285149,"byte_end":285156,"line_start":549,"line_end":549,"column_start":36,"column_end":43},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3094}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285318,"byte_end":285325,"line_start":557,"line_end":557,"column_start":24,"column_end":31},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285650,"byte_end":285657,"line_start":570,"line_end":570,"column_start":32,"column_end":39},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285812,"byte_end":285819,"line_start":578,"line_end":578,"column_start":34,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":285970,"byte_end":285977,"line_start":584,"line_end":584,"column_start":42,"column_end":49},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286124,"byte_end":286131,"line_start":590,"line_end":590,"column_start":34,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286282,"byte_end":286289,"line_start":596,"line_end":596,"column_start":42,"column_end":49},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286436,"byte_end":286443,"line_start":602,"line_end":602,"column_start":34,"column_end":41},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286591,"byte_end":286598,"line_start":608,"line_end":608,"column_start":42,"column_end":49},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286745,"byte_end":286752,"line_start":614,"line_end":614,"column_start":34,"column_end":41},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3123}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":286900,"byte_end":286907,"line_start":620,"line_end":620,"column_start":42,"column_end":49},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3123}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287050,"byte_end":287057,"line_start":626,"line_end":626,"column_start":30,"column_end":37},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287192,"byte_end":287199,"line_start":632,"line_end":632,"column_start":38,"column_end":45},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287321,"byte_end":287328,"line_start":638,"line_end":638,"column_start":20,"column_end":27},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6533},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287590,"byte_end":287597,"line_start":648,"line_end":648,"column_start":32,"column_end":39},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6533},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":287889,"byte_end":287903,"line_start":660,"line_end":660,"column_start":32,"column_end":46},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":1547},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint512.rs","byte_start":288301,"byte_end":288308,"line_start":675,"line_end":675,"column_start":31,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":305092,"byte_end":305098,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308415,"byte_end":308421,"line_start":144,"line_end":144,"column_start":20,"column_end":26},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308504,"byte_end":308510,"line_start":150,"line_end":150,"column_start":20,"column_end":26},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308600,"byte_end":308606,"line_start":156,"line_end":156,"column_start":20,"column_end":26},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308695,"byte_end":308701,"line_start":162,"line_end":162,"column_start":19,"column_end":25},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":308794,"byte_end":308800,"line_start":168,"line_end":168,"column_start":24,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309082,"byte_end":309088,"line_start":179,"line_end":179,"column_start":23,"column_end":29},"kind":{"Impl":{"id":337}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309287,"byte_end":309293,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309412,"byte_end":309418,"line_start":197,"line_end":197,"column_start":27,"column_end":33},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309586,"byte_end":309592,"line_start":205,"line_end":205,"column_start":35,"column_end":41},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309758,"byte_end":309764,"line_start":213,"line_end":213,"column_start":27,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":309938,"byte_end":309944,"line_start":221,"line_end":221,"column_start":35,"column_end":41},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3099}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310103,"byte_end":310109,"line_start":229,"line_end":229,"column_start":14,"column_end":20},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3105}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310384,"byte_end":310390,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310554,"byte_end":310560,"line_start":250,"line_end":250,"column_start":32,"column_end":38},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3161}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310730,"byte_end":310736,"line_start":258,"line_end":258,"column_start":33,"column_end":39},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":310889,"byte_end":310895,"line_start":264,"line_end":264,"column_start":41,"column_end":47},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311044,"byte_end":311050,"line_start":270,"line_end":270,"column_start":33,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311201,"byte_end":311207,"line_start":276,"line_end":276,"column_start":41,"column_end":47},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311353,"byte_end":311359,"line_start":282,"line_end":282,"column_start":30,"column_end":36},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311500,"byte_end":311506,"line_start":288,"line_end":288,"column_start":38,"column_end":44},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":311620,"byte_end":311626,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312661,"byte_end":312667,"line_start":331,"line_end":331,"column_start":20,"column_end":26},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6568},"to":{"krate":23,"index":2134}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":312929,"byte_end":312935,"line_start":341,"line_end":341,"column_start":32,"column_end":38},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6568},"to":{"krate":23,"index":1585}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":313224,"byte_end":313237,"line_start":353,"line_end":353,"column_start":32,"column_end":45},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":1716},"to":{"krate":23,"index":1671}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/math/uint64.rs","byte_start":313698,"byte_end":313704,"line_start":371,"line_end":371,"column_start":31,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/staking.rs","byte_start":330537,"byte_end":330547,"line_start":62,"line_end":62,"column_start":31,"column_end":41},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7572},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/wasm.rs","byte_start":334375,"byte_end":334395,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":8200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324795,"byte_end":324804,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":23,"index":2134},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324807,"byte_end":324812,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2638},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":324990,"byte_end":324995,"line_start":73,"line_end":73,"column_start":22,"column_end":27},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":9499},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325041,"byte_end":325053,"line_start":75,"line_end":75,"column_start":42,"column_end":54},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8385},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325171,"byte_end":325183,"line_start":81,"line_end":81,"column_start":34,"column_end":46},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8385},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325334,"byte_end":325346,"line_start":88,"line_end":88,"column_start":45,"column_end":57},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8385},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325478,"byte_end":325490,"line_start":94,"line_end":94,"column_start":42,"column_end":54},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":8385},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/query/mod.rs","byte_start":325644,"byte_end":325656,"line_start":101,"line_end":101,"column_start":41,"column_end":53},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":8385},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337194,"byte_end":337208,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":8471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337708,"byte_end":337722,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":8471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":337861,"byte_end":337875,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":8471},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/contract_result.rs","byte_start":338134,"byte_end":338140,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"kind":{"Impl":{"id":433}},"from":{"krate":2,"index":46845},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342288,"byte_end":342297,"line_start":16,"line_end":16,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":23,"index":2134},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342300,"byte_end":342305,"line_start":16,"line_end":16,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2638},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342313,"byte_end":342318,"line_start":16,"line_end":16,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":9548},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342321,"byte_end":342330,"line_start":16,"line_end":16,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2668},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342333,"byte_end":342343,"line_start":16,"line_end":16,"column_start":67,"column_end":77},"kind":"SuperTrait","from":{"krate":20,"index":645},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":342367,"byte_end":342372,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":9499},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350715,"byte_end":350724,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":350861,"byte_end":350870,"line_start":226,"line_end":226,"column_start":30,"column_end":39},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351018,"byte_end":351027,"line_start":233,"line_end":233,"column_start":35,"column_end":44},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351149,"byte_end":351158,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351292,"byte_end":351301,"line_start":246,"line_end":246,"column_start":26,"column_end":35},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/cosmos_msg.rs","byte_start":351433,"byte_end":351442,"line_start":253,"line_end":253,"column_start":26,"column_end":35},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8595},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":354131,"byte_end":354136,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":9556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355275,"byte_end":355284,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":9620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355830,"byte_end":355839,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":9620},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":355975,"byte_end":355984,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":9620},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/events.rs","byte_start":356755,"byte_end":356764,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":9620},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":360966,"byte_end":360974,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":9686},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/response.rs","byte_start":361167,"byte_end":361175,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":9686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":368338,"byte_end":368344,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":9835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":372494,"byte_end":372506,"line_start":150,"line_end":150,"column_start":6,"column_end":18},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":10036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373193,"byte_end":373205,"line_start":174,"line_end":174,"column_start":64,"column_end":76},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":10036},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/submessages.rs","byte_start":373466,"byte_end":373472,"line_start":183,"line_end":183,"column_start":29,"column_end":35},"kind":{"Impl":{"id":496}},"from":{"krate":2,"index":46845},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380264,"byte_end":380276,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":10173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380615,"byte_end":380627,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":10173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":380768,"byte_end":380780,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":10173},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/results/system_result.rs","byte_start":381029,"byte_end":381035,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"kind":{"Impl":{"id":506}},"from":{"krate":2,"index":46845},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":393008,"byte_end":393021,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":10181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":393110,"byte_end":393123,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":10181},"to":{"krate":0,"index":2525}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/storage.rs","byte_start":395187,"byte_end":395200,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":10181},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":404262,"byte_end":404271,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":10185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/timestamp.rs","byte_start":405707,"byte_end":405716,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":10185},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":416899,"byte_end":416913,"line_start":149,"line_end":149,"column_start":35,"column_end":49},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":10235},"to":{"krate":2,"index":3027}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417090,"byte_end":417104,"line_start":153,"line_end":153,"column_start":36,"column_end":50},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":10235},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/traits.rs","byte_start":417245,"byte_end":417259,"line_start":161,"line_end":161,"column_start":26,"column_end":40},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":10235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":432657,"byte_end":432664,"line_start":93,"line_end":93,"column_start":18,"column_end":25},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":10548},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":432792,"byte_end":432799,"line_start":101,"line_end":101,"column_start":14,"column_end":21},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":10548},"to":{"krate":0,"index":2531}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":443360,"byte_end":443371,"line_start":410,"line_end":410,"column_start":27,"column_end":38},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":3151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444816,"byte_end":444827,"line_start":454,"line_end":454,"column_start":18,"column_end":29},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":3151},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":444948,"byte_end":444959,"line_start":460,"line_end":460,"column_start":53,"column_end":64},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":2541}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":445464,"byte_end":445475,"line_start":475,"line_end":475,"column_start":41,"column_end":52},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":3151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":446445,"byte_end":446458,"line_start":500,"line_end":500,"column_start":6,"column_end":19},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":10553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":446970,"byte_end":446981,"line_start":517,"line_end":517,"column_start":6,"column_end":17},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":10558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta6/src/mock.rs","byte_start":448666,"byte_end":448680,"line_start":565,"line_end":565,"column_start":6,"column_end":20},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":10564},"to":{"krate":4294967295,"index":4294967295}}]}