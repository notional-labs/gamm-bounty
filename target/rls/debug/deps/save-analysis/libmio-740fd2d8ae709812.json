{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","mio","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","-C","metadata=740fd2d8ae709812","-C","extra-filename=-740fd2d8ae709812","--out-dir","/home/pegasus/gamm-bounty/target/rls/debug/deps","-L","dependency=/home/pegasus/gamm-bounty/target/rls/debug/deps","--extern","libc=/home/pegasus/gamm-bounty/target/rls/debug/deps/liblibc-6a685a183885f2de.rmeta","--extern","log=/home/pegasus/gamm-bounty/target/rls/debug/deps/liblog-e724a7b6173dd03e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/gamm-bounty/target/rls/debug/deps/libmio-740fd2d8ae709812.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[2667326390228875891,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","num":20,"id":{"name":"log","disambiguator":[4330912491964922859,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","num":21,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","num":22,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":0,"byte_end":9450,"line_start":1,"line_end":264,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/mod.rs","byte_start":13564950,"byte_end":13564958,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/mod.rs","byte_start":13564950,"byte_end":13564958,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/mod.rs","byte_start":13595664,"byte_end":13595674,"line_start":2,"line_end":2,"column_start":27,"column_end":37},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/mod.rs","byte_start":13565160,"byte_end":13565170,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":283}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/mod.rs","byte_start":45240,"byte_end":45241,"line_start":57,"line_end":57,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"pipe, uds, Event, IoSourceState, tcp, SocketAddr, SourceFd, Waker, Events, udp, Selector, event","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","byte_start":53825,"byte_end":53830,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","byte_start":53855,"byte_end":53861,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":993},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","byte_start":53863,"byte_end":53867,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","byte_start":53892,"byte_end":53898,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":1148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/mod.rs","byte_start":13634285,"byte_end":13634296,"line_start":2,"line_end":2,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":1241},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/mod.rs","byte_start":13634333,"byte_end":13634342,"line_start":5,"line_end":5,"column_start":23,"column_end":32},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":1148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634072,"byte_end":13634083,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":1241},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634085,"byte_end":13634094,"line_start":29,"line_end":29,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634126,"byte_end":13634135,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/mod.rs","byte_start":13674067,"byte_end":13674079,"line_start":2,"line_end":2,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1406}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/mod.rs","byte_start":13674120,"byte_end":13674132,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1406}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/mod.rs","byte_start":13674169,"byte_end":13674179,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1406}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/mod.rs","byte_start":13674202,"byte_end":13674212,"line_start":10,"line_end":10,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1406}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634193,"byte_end":13634203,"line_start":37,"line_end":37,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634205,"byte_end":13634217,"line_start":37,"line_end":37,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634219,"byte_end":13634231,"line_start":37,"line_end":37,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13634233,"byte_end":13634243,"line_start":37,"line_end":37,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1083}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1433,"byte_end":1439,"line_start":64,"line_end":64,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1459,"byte_end":1467,"line_start":65,"line_end":65,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1484,"byte_end":1488,"line_start":66,"line_end":66,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1490,"byte_end":1498,"line_start":66,"line_end":66,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":963},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1516,"byte_end":1521,"line_start":67,"line_end":67,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1516,"byte_end":1521,"line_start":67,"line_end":67,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":985},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1538,"byte_end":1543,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":898},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1837,"byte_end":1840,"line_start":80,"line_end":80,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":959},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1842,"byte_end":1850,"line_start":80,"line_end":80,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1852,"byte_end":1858,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1892,"byte_end":1900,"line_start":83,"line_end":83,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1892,"byte_end":1900,"line_start":83,"line_end":83,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":245}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":0,"byte_end":9450,"line_start":1,"line_end":264,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":41},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":126},{"krate":0,"index":1003},{"krate":0,"index":1083},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":0,"byte_end":120,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":307,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":387,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":468,"byte_end":518,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":519,"byte_end":522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":523,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":535,"byte_end":538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":539,"byte_end":618,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":619,"byte_end":696,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":697,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":701,"byte_end":735,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":736,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":740,"byte_end":777,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":778,"byte_end":825,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":826,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":830,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":850,"byte_end":927,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":928,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":941,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":945,"byte_end":1014,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1019,"byte_end":1031,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1036,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1106,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1132,"byte_end":1135,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1136,"byte_end":1204,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11889,"byte_end":11897,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11250,"byte_end":11283,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11284,"byte_end":11287,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11288,"byte_end":11365,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11366,"byte_end":11445,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11446,"byte_end":11522,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11523,"byte_end":11574,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11575,"byte_end":11578,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11579,"byte_end":11634,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11635,"byte_end":11683,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11684,"byte_end":11714,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11715,"byte_end":11779,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":11780,"byte_end":11822,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":12426,"byte_end":12434,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":12350,"byte_end":12411,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":12585,"byte_end":12593,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":12509,"byte_end":12570,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13605,"byte_end":13608,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13154,"byte_end":13186,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13191,"byte_end":13194,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13199,"byte_end":13267,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13272,"byte_end":13294,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13299,"byte_end":13302,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13307,"byte_end":13314,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13319,"byte_end":13341,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13346,"byte_end":13349,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13354,"byte_end":13429,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13434,"byte_end":13484,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13489,"byte_end":13530,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13535,"byte_end":13542,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13547,"byte_end":13587,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14539,"byte_end":14545,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13741,"byte_end":13784,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13789,"byte_end":13792,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13797,"byte_end":13865,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13870,"byte_end":13873,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13878,"byte_end":13885,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13890,"byte_end":13912,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13917,"byte_end":13920,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":13925,"byte_end":14003,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14008,"byte_end":14011,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14016,"byte_end":14077,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14082,"byte_end":14152,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14157,"byte_end":14196,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14201,"byte_end":14239,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14244,"byte_end":14247,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14252,"byte_end":14314,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14319,"byte_end":14379,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14384,"byte_end":14387,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14392,"byte_end":14454,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14459,"byte_end":14515,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14520,"byte_end":14527,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14746,"byte_end":14757,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14670,"byte_end":14728,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14900,"byte_end":14911,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14824,"byte_end":14882,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15049,"byte_end":15055,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":14978,"byte_end":15031,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15188,"byte_end":15194,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15117,"byte_end":15170,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26491,"byte_end":26495,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":16893,"byte_end":16949,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":16950,"byte_end":16953,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":16954,"byte_end":17030,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17031,"byte_end":17110,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17111,"byte_end":17189,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17190,"byte_end":17260,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17261,"byte_end":17275,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17276,"byte_end":17279,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17280,"byte_end":17358,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17359,"byte_end":17431,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17432,"byte_end":17507,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17508,"byte_end":17584,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17585,"byte_end":17662,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17663,"byte_end":17737,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17738,"byte_end":17780,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17781,"byte_end":17784,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17785,"byte_end":17833,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17834,"byte_end":17887,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17888,"byte_end":17943,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17944,"byte_end":17998,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":17999,"byte_end":18002,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18003,"byte_end":18017,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18018,"byte_end":18021,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18022,"byte_end":18083,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18084,"byte_end":18087,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18235,"byte_end":18263,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18264,"byte_end":18311,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18312,"byte_end":18357,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18358,"byte_end":18386,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18387,"byte_end":18390,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18391,"byte_end":18428,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18429,"byte_end":18432,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18433,"byte_end":18475,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18476,"byte_end":18526,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18527,"byte_end":18574,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18575,"byte_end":18578,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18579,"byte_end":18656,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18657,"byte_end":18689,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18690,"byte_end":18739,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18740,"byte_end":18743,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18744,"byte_end":18769,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18770,"byte_end":18833,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18834,"byte_end":18837,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18838,"byte_end":18876,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18877,"byte_end":18971,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18972,"byte_end":18975,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":18976,"byte_end":19052,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19053,"byte_end":19084,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19085,"byte_end":19095,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19096,"byte_end":19134,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19135,"byte_end":19138,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19139,"byte_end":19169,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19170,"byte_end":19235,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19236,"byte_end":19315,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19316,"byte_end":19342,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19343,"byte_end":19373,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19374,"byte_end":19387,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19388,"byte_end":19397,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19398,"byte_end":19403,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19404,"byte_end":19411,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19412,"byte_end":19419,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19420,"byte_end":19423,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19424,"byte_end":19441,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19442,"byte_end":19445,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19446,"byte_end":19522,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19523,"byte_end":19585,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19586,"byte_end":19589,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19590,"byte_end":19613,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19614,"byte_end":19617,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19618,"byte_end":19687,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19688,"byte_end":19757,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19758,"byte_end":19836,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19837,"byte_end":19911,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19912,"byte_end":19947,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19948,"byte_end":19951,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":19952,"byte_end":20028,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20029,"byte_end":20107,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20108,"byte_end":20121,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20122,"byte_end":20125,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20126,"byte_end":20152,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20153,"byte_end":20156,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20157,"byte_end":20232,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20233,"byte_end":20311,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20312,"byte_end":20390,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20391,"byte_end":20444,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20445,"byte_end":20448,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20449,"byte_end":20499,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20500,"byte_end":20503,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20504,"byte_end":20532,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20533,"byte_end":20536,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20537,"byte_end":20611,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20612,"byte_end":20690,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20691,"byte_end":20763,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20764,"byte_end":20838,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20839,"byte_end":20916,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20917,"byte_end":20988,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":20989,"byte_end":21060,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21061,"byte_end":21139,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21140,"byte_end":21214,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21215,"byte_end":21248,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21249,"byte_end":21252,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21253,"byte_end":21333,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21334,"byte_end":21403,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21404,"byte_end":21481,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21482,"byte_end":21528,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21529,"byte_end":21532,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21533,"byte_end":21595,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21596,"byte_end":21658,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21659,"byte_end":21715,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21716,"byte_end":21784,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21785,"byte_end":21855,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21856,"byte_end":21859,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21860,"byte_end":21887,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21888,"byte_end":21891,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21892,"byte_end":21964,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":21965,"byte_end":22042,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22043,"byte_end":22054,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22055,"byte_end":22058,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22059,"byte_end":22075,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22076,"byte_end":22079,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22227,"byte_end":22255,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22256,"byte_end":22275,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22276,"byte_end":22323,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22324,"byte_end":22361,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22362,"byte_end":22390,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22391,"byte_end":22420,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22421,"byte_end":22449,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22450,"byte_end":22470,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22471,"byte_end":22474,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22475,"byte_end":22528,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22529,"byte_end":22581,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22582,"byte_end":22645,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22646,"byte_end":22649,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22650,"byte_end":22692,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22693,"byte_end":22696,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22697,"byte_end":22725,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22726,"byte_end":22729,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22730,"byte_end":22808,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22809,"byte_end":22826,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22827,"byte_end":22919,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22920,"byte_end":22936,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22937,"byte_end":22944,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22945,"byte_end":22952,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22953,"byte_end":22956,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22957,"byte_end":22980,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22981,"byte_end":22984,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":22985,"byte_end":23063,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23064,"byte_end":23143,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23144,"byte_end":23224,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23225,"byte_end":23302,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23303,"byte_end":23347,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23348,"byte_end":23351,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23352,"byte_end":23398,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23399,"byte_end":23402,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Accessing raw fd/socket/handle","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23403,"byte_end":23441,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23442,"byte_end":23445,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Mio makes it possible for many types to be converted into a raw file","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23446,"byte_end":23518,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ descriptor (fd, Unix), socket (Windows) or handle (Windows). This makes it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23519,"byte_end":23597,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ possible to support more operations on the type than Mio supports, for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23598,"byte_end":23672,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ example it makes [mio-aio] possible. However accessing the raw fd is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23673,"byte_end":23749,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ without it's pitfalls.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23750,"byte_end":23776,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23777,"byte_end":23780,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Specifically performing I/O operations outside of Mio on these types (via","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23781,"byte_end":23858,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ the raw fd) has unspecified behaviour. It could cause no more events to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23859,"byte_end":23937,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ generated for the type even though it returned `WouldBlock` (in an operation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":23938,"byte_end":24018,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ directly accessing the fd). The behaviour is OS specific and Mio can only","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24019,"byte_end":24096,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ guarantee cross-platform behaviour if it can control the I/O.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24097,"byte_end":24162,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24163,"byte_end":24166,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [mio-aio]: https://github.com/asomers/mio-aio","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24167,"byte_end":24216,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24217,"byte_end":24220,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24221,"byte_end":24296,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being considered","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24297,"byte_end":24379,"line_start":183,"line_end":183,"column_start":1,"column_end":83}},{"value":"/ a breaking change, don't depend on this, it's just here to inform the user.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24380,"byte_end":24459,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ Currently the kqueue and epoll implementation support direct I/O operations","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24460,"byte_end":24539,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ on the fd without Mio's knowledge. Windows however needs **all** I/O","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24540,"byte_end":24612,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ operations to go through Mio otherwise it is not able to update it's","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24613,"byte_end":24685,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ internal state properly and won't generate events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24686,"byte_end":24740,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24741,"byte_end":24744,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24745,"byte_end":24771,"line_start":190,"line_end":190,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24772,"byte_end":24775,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24776,"byte_end":24846,"line_start":192,"line_end":192,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24847,"byte_end":24850,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24851,"byte_end":24884,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24885,"byte_end":24918,"line_start":195,"line_end":195,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24919,"byte_end":24952,"line_start":196,"line_end":196,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24953,"byte_end":24986,"line_start":197,"line_end":197,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":24987,"byte_end":25020,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25021,"byte_end":25054,"line_start":199,"line_end":199,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25055,"byte_end":25088,"line_start":200,"line_end":200,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25089,"byte_end":25122,"line_start":201,"line_end":201,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25123,"byte_end":25156,"line_start":202,"line_end":202,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25157,"byte_end":25190,"line_start":203,"line_end":203,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25191,"byte_end":25224,"line_start":204,"line_end":204,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25225,"byte_end":25258,"line_start":205,"line_end":205,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25259,"byte_end":25262,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25263,"byte_end":25337,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25338,"byte_end":25413,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25414,"byte_end":25487,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25488,"byte_end":25568,"line_start":210,"line_end":210,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25569,"byte_end":25597,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25598,"byte_end":25601,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25602,"byte_end":25680,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25681,"byte_end":25760,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25761,"byte_end":25841,"line_start":215,"line_end":215,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25842,"byte_end":25913,"line_start":216,"line_end":216,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25914,"byte_end":25994,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":25995,"byte_end":26071,"line_start":218,"line_end":218,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26072,"byte_end":26083,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26084,"byte_end":26087,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26088,"byte_end":26150,"line_start":221,"line_end":221,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26151,"byte_end":26223,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26224,"byte_end":26315,"line_start":223,"line_end":223,"column_start":1,"column_end":92}},{"value":"/ [`signalfd`]: http://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26316,"byte_end":26386,"line_start":224,"line_end":224,"column_start":1,"column_end":71}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26387,"byte_end":26430,"line_start":225,"line_end":225,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26431,"byte_end":26479,"line_start":226,"line_end":226,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26565,"byte_end":26573,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26525,"byte_end":26553,"line_start":231,"line_end":231,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26724,"byte_end":26732,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26624,"byte_end":26686,"line_start":237,"line_end":237,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26691,"byte_end":26712,"line_start":238,"line_end":238,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30652,"byte_end":30656,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26789,"byte_end":26818,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26823,"byte_end":26826,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26831,"byte_end":26906,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26911,"byte_end":26986,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26991,"byte_end":27064,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27069,"byte_end":27145,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27150,"byte_end":27214,"line_start":249,"line_end":249,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27219,"byte_end":27222,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27227,"byte_end":27304,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27309,"byte_end":27384,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27389,"byte_end":27462,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27467,"byte_end":27507,"line_start":254,"line_end":254,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27512,"byte_end":27515,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27520,"byte_end":27593,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27598,"byte_end":27674,"line_start":257,"line_end":257,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27679,"byte_end":27752,"line_start":258,"line_end":258,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27757,"byte_end":27831,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27836,"byte_end":27909,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27914,"byte_end":27948,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27953,"byte_end":27956,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":27961,"byte_end":28027,"line_start":263,"line_end":263,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28032,"byte_end":28101,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28106,"byte_end":28165,"line_start":265,"line_end":265,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28170,"byte_end":28173,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28178,"byte_end":28251,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28256,"byte_end":28268,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28273,"byte_end":28276,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28281,"byte_end":28329,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28334,"byte_end":28400,"line_start":271,"line_end":271,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28405,"byte_end":28471,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28476,"byte_end":28506,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28511,"byte_end":28563,"line_start":274,"line_end":274,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28568,"byte_end":28571,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28576,"byte_end":28587,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28592,"byte_end":28595,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28600,"byte_end":28674,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28679,"byte_end":28751,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28756,"byte_end":28786,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28791,"byte_end":28794,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28799,"byte_end":28813,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28818,"byte_end":28821,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28826,"byte_end":28887,"line_start":284,"line_end":284,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":28892,"byte_end":28895,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29055,"byte_end":29083,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29088,"byte_end":29135,"line_start":289,"line_end":289,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29140,"byte_end":29185,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29190,"byte_end":29218,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29223,"byte_end":29226,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29231,"byte_end":29275,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29280,"byte_end":29300,"line_start":294,"line_end":294,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29305,"byte_end":29308,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29313,"byte_end":29355,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29360,"byte_end":29410,"line_start":297,"line_end":297,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29415,"byte_end":29457,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29462,"byte_end":29506,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29511,"byte_end":29514,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29519,"byte_end":29561,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29566,"byte_end":29593,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29598,"byte_end":29630,"line_start":303,"line_end":303,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29635,"byte_end":29642,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29647,"byte_end":29650,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29655,"byte_end":29732,"line_start":306,"line_end":306,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29737,"byte_end":29769,"line_start":307,"line_end":307,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29774,"byte_end":29823,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29828,"byte_end":29831,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29836,"byte_end":29861,"line_start":310,"line_end":310,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29866,"byte_end":29913,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29918,"byte_end":29921,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29926,"byte_end":29964,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":29969,"byte_end":29998,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30003,"byte_end":30023,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30028,"byte_end":30045,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30050,"byte_end":30100,"line_start":317,"line_end":317,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30105,"byte_end":30108,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30113,"byte_end":30189,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30194,"byte_end":30225,"line_start":320,"line_end":320,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30230,"byte_end":30240,"line_start":321,"line_end":321,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30245,"byte_end":30283,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30288,"byte_end":30291,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30296,"byte_end":30326,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30331,"byte_end":30396,"line_start":325,"line_end":325,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30401,"byte_end":30480,"line_start":326,"line_end":326,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30485,"byte_end":30511,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30516,"byte_end":30546,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30551,"byte_end":30564,"line_start":329,"line_end":329,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30569,"byte_end":30578,"line_start":330,"line_end":330,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30583,"byte_end":30588,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30593,"byte_end":30600,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30605,"byte_end":30612,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30617,"byte_end":30620,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30625,"byte_end":30640,"line_start":335,"line_end":335,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32086,"byte_end":32089,"line_start":376,"line_end":376,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36526,"byte_end":36534,"line_start":497,"line_end":497,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32530,"byte_end":32589,"line_start":398,"line_end":398,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32594,"byte_end":32597,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32602,"byte_end":32676,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32681,"byte_end":32756,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32761,"byte_end":32831,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32836,"byte_end":32839,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32844,"byte_end":32892,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32897,"byte_end":32900,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32905,"byte_end":32920,"line_start":406,"line_end":406,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32925,"byte_end":32928,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ `source: &mut S: event::Source`: This is the source of events that the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32933,"byte_end":33007,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33012,"byte_end":33075,"line_start":409,"line_end":409,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33080,"byte_end":33083,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33088,"byte_end":33162,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33167,"byte_end":33241,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33246,"byte_end":33314,"line_start":413,"line_end":413,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33319,"byte_end":33388,"line_start":414,"line_end":414,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33393,"byte_end":33420,"line_start":415,"line_end":415,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33425,"byte_end":33428,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33433,"byte_end":33502,"line_start":417,"line_end":417,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33507,"byte_end":33528,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33533,"byte_end":33536,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33541,"byte_end":33615,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33620,"byte_end":33694,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33699,"byte_end":33730,"line_start":422,"line_end":422,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33735,"byte_end":33738,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33743,"byte_end":33818,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33823,"byte_end":33877,"line_start":425,"line_end":425,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33882,"byte_end":33885,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33890,"byte_end":33966,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":33971,"byte_end":34001,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34006,"byte_end":34009,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34014,"byte_end":34025,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34030,"byte_end":34033,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34038,"byte_end":34109,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34114,"byte_end":34186,"line_start":433,"line_end":433,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34191,"byte_end":34260,"line_start":434,"line_end":434,"column_start":5,"column_end":74}},{"value":"/ `register` is unspecified behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34265,"byte_end":34304,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34309,"byte_end":34312,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34317,"byte_end":34392,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34397,"byte_end":34472,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34477,"byte_end":34550,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34555,"byte_end":34623,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34628,"byte_end":34647,"line_start":441,"line_end":441,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34652,"byte_end":34655,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34660,"byte_end":34708,"line_start":443,"line_end":443,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34713,"byte_end":34755,"line_start":444,"line_end":444,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34760,"byte_end":34818,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34823,"byte_end":34881,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34886,"byte_end":34918,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34923,"byte_end":34926,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34931,"byte_end":34945,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":34950,"byte_end":34953,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35113,"byte_end":35141,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35146,"byte_end":35165,"line_start":454,"line_end":454,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35170,"byte_end":35217,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35222,"byte_end":35267,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35272,"byte_end":35300,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35305,"byte_end":35334,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35339,"byte_end":35378,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35383,"byte_end":35386,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35391,"byte_end":35423,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35428,"byte_end":35431,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35436,"byte_end":35489,"line_start":463,"line_end":463,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35494,"byte_end":35546,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35551,"byte_end":35616,"line_start":465,"line_end":465,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35621,"byte_end":35624,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35629,"byte_end":35667,"line_start":467,"line_end":467,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35672,"byte_end":35701,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35706,"byte_end":35726,"line_start":469,"line_end":469,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35731,"byte_end":35748,"line_start":470,"line_end":470,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35753,"byte_end":35803,"line_start":471,"line_end":471,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35808,"byte_end":35811,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35816,"byte_end":35865,"line_start":473,"line_end":473,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35870,"byte_end":35901,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35906,"byte_end":35951,"line_start":475,"line_end":475,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35956,"byte_end":35959,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35964,"byte_end":35974,"line_start":477,"line_end":477,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":35979,"byte_end":36017,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36022,"byte_end":36025,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36030,"byte_end":36061,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36066,"byte_end":36101,"line_start":481,"line_end":481,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36106,"byte_end":36132,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36137,"byte_end":36146,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36151,"byte_end":36154,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36159,"byte_end":36201,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36206,"byte_end":36255,"line_start":486,"line_end":486,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36260,"byte_end":36263,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36268,"byte_end":36298,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36303,"byte_end":36345,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36350,"byte_end":36413,"line_start":490,"line_end":490,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36418,"byte_end":36448,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36453,"byte_end":36466,"line_start":492,"line_end":492,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36471,"byte_end":36480,"line_start":493,"line_end":493,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36485,"byte_end":36490,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36495,"byte_end":36502,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36507,"byte_end":36514,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39202,"byte_end":39212,"line_start":565,"line_end":565,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36872,"byte_end":36934,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36939,"byte_end":36942,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":36947,"byte_end":37016,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37021,"byte_end":37094,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37099,"byte_end":37175,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37180,"byte_end":37183,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37188,"byte_end":37263,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37268,"byte_end":37344,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37349,"byte_end":37424,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37429,"byte_end":37458,"line_start":518,"line_end":518,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37463,"byte_end":37466,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37471,"byte_end":37547,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37552,"byte_end":37605,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37610,"byte_end":37613,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37618,"byte_end":37687,"line_start":523,"line_end":523,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37692,"byte_end":37762,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37767,"byte_end":37779,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37784,"byte_end":37787,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37792,"byte_end":37806,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37811,"byte_end":37814,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":37974,"byte_end":38002,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38007,"byte_end":38026,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38031,"byte_end":38078,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38083,"byte_end":38120,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38125,"byte_end":38153,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38158,"byte_end":38187,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38192,"byte_end":38195,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38200,"byte_end":38228,"line_start":538,"line_end":538,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38233,"byte_end":38236,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38241,"byte_end":38294,"line_start":540,"line_end":540,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38299,"byte_end":38351,"line_start":541,"line_end":541,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38356,"byte_end":38421,"line_start":542,"line_end":542,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38426,"byte_end":38429,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38434,"byte_end":38493,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38498,"byte_end":38527,"line_start":545,"line_end":545,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38532,"byte_end":38552,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38557,"byte_end":38574,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38579,"byte_end":38608,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38613,"byte_end":38616,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38621,"byte_end":38696,"line_start":550,"line_end":550,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38701,"byte_end":38751,"line_start":551,"line_end":551,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38756,"byte_end":38787,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38792,"byte_end":38812,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38817,"byte_end":38834,"line_start":554,"line_end":554,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38839,"byte_end":38868,"line_start":555,"line_end":555,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38873,"byte_end":38889,"line_start":556,"line_end":556,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38894,"byte_end":38901,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38906,"byte_end":38913,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38918,"byte_end":38921,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38926,"byte_end":38974,"line_start":560,"line_end":560,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":38979,"byte_end":39011,"line_start":561,"line_end":561,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39016,"byte_end":39070,"line_start":562,"line_end":562,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39075,"byte_end":39130,"line_start":563,"line_end":563,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39135,"byte_end":39190,"line_start":564,"line_end":564,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41683,"byte_end":41693,"line_start":628,"line_end":628,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S>(&Self, &mut S) -> io::Result<()> where S: event::Source +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39554,"byte_end":39615,"line_start":577,"line_end":577,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39620,"byte_end":39623,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39628,"byte_end":39704,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39709,"byte_end":39780,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39785,"byte_end":39859,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39864,"byte_end":39936,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":39941,"byte_end":40017,"line_start":583,"line_end":583,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40022,"byte_end":40095,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40100,"byte_end":40113,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40118,"byte_end":40121,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40126,"byte_end":40202,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40207,"byte_end":40260,"line_start":588,"line_end":588,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40265,"byte_end":40268,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40273,"byte_end":40336,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40341,"byte_end":40413,"line_start":591,"line_end":591,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is unspecified.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40418,"byte_end":40470,"line_start":592,"line_end":592,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40475,"byte_end":40478,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40483,"byte_end":40497,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40502,"byte_end":40505,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40665,"byte_end":40693,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40698,"byte_end":40717,"line_start":599,"line_end":599,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40722,"byte_end":40769,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40774,"byte_end":40819,"line_start":601,"line_end":601,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40824,"byte_end":40852,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40857,"byte_end":40886,"line_start":603,"line_end":603,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40891,"byte_end":40919,"line_start":604,"line_end":604,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40924,"byte_end":40927,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40932,"byte_end":40964,"line_start":606,"line_end":606,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40969,"byte_end":40972,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":40977,"byte_end":41030,"line_start":608,"line_end":608,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41035,"byte_end":41087,"line_start":609,"line_end":609,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41092,"byte_end":41157,"line_start":610,"line_end":610,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41162,"byte_end":41165,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41170,"byte_end":41208,"line_start":612,"line_end":612,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41213,"byte_end":41242,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41247,"byte_end":41267,"line_start":614,"line_end":614,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41272,"byte_end":41289,"line_start":615,"line_end":615,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41294,"byte_end":41323,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41328,"byte_end":41331,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41336,"byte_end":41381,"line_start":618,"line_end":618,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41386,"byte_end":41389,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41394,"byte_end":41443,"line_start":620,"line_end":620,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41448,"byte_end":41451,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41456,"byte_end":41527,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41532,"byte_end":41590,"line_start":623,"line_end":623,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41595,"byte_end":41626,"line_start":624,"line_end":624,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41631,"byte_end":41647,"line_start":625,"line_end":625,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41652,"byte_end":41659,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41664,"byte_end":41671,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":42090,"byte_end":42099,"line_start":640,"line_end":640,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41890,"byte_end":41939,"line_start":636,"line_end":636,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41944,"byte_end":41947,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":41952,"byte_end":42025,"line_start":638,"line_end":638,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":42030,"byte_end":42078,"line_start":639,"line_end":639,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":499},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577421,"byte_end":13577429,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13574697,"byte_end":13574769,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13574770,"byte_end":13574773,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13574774,"byte_end":13574843,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13574844,"byte_end":13574847,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13574848,"byte_end":13574921,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13574922,"byte_end":13575000,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575001,"byte_end":13575046,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575047,"byte_end":13575050,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575051,"byte_end":13575127,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575128,"byte_end":13575200,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575201,"byte_end":13575281,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575282,"byte_end":13575343,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575344,"byte_end":13575405,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575406,"byte_end":13575409,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575410,"byte_end":13575459,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575460,"byte_end":13575493,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575494,"byte_end":13575561,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575562,"byte_end":13575565,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575566,"byte_end":13575580,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575581,"byte_end":13575584,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575585,"byte_end":13575601,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575602,"byte_end":13575605,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575813,"byte_end":13575841,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575842,"byte_end":13575889,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575890,"byte_end":13575927,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575928,"byte_end":13575956,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575957,"byte_end":13575960,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575961,"byte_end":13575996,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13575997,"byte_end":13576027,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576028,"byte_end":13576031,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576032,"byte_end":13576058,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576059,"byte_end":13576112,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576113,"byte_end":13576116,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576117,"byte_end":13576145,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576146,"byte_end":13576149,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576150,"byte_end":13576178,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576179,"byte_end":13576208,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576209,"byte_end":13576254,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576255,"byte_end":13576272,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576273,"byte_end":13576302,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576303,"byte_end":13576319,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576320,"byte_end":13576327,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576328,"byte_end":13576335,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576336,"byte_end":13576339,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576340,"byte_end":13576415,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576416,"byte_end":13576419,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576573,"byte_end":13576621,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576622,"byte_end":13576650,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576651,"byte_end":13576654,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576655,"byte_end":13576688,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576689,"byte_end":13576705,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576706,"byte_end":13576709,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576710,"byte_end":13576735,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576736,"byte_end":13576757,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576758,"byte_end":13576776,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576777,"byte_end":13576782,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576783,"byte_end":13576786,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576787,"byte_end":13576820,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576821,"byte_end":13576907,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576908,"byte_end":13576937,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576938,"byte_end":13576947,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13576948,"byte_end":13577015,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577016,"byte_end":13577025,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577026,"byte_end":13577029,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577030,"byte_end":13577118,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577119,"byte_end":13577148,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577149,"byte_end":13577158,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577159,"byte_end":13577228,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577229,"byte_end":13577238,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577239,"byte_end":13577242,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577243,"byte_end":13577316,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577317,"byte_end":13577368,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577369,"byte_end":13577378,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577379,"byte_end":13577384,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577385,"byte_end":13577392,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577434,"byte_end":13577447,"line_start":92,"line_end":92,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":499},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601790,"byte_end":13601800,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601424,"byte_end":13601484,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601485,"byte_end":13601488,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601489,"byte_end":13601565,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601566,"byte_end":13601642,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601643,"byte_end":13601687,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601688,"byte_end":13601691,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601692,"byte_end":13601747,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601748,"byte_end":13601778,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13603959,"byte_end":13603969,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13604289,"byte_end":13604300,"line_start":90,"line_end":90,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13604742,"byte_end":13604763,"line_start":102,"line_end":102,"column_start":16,"column_end":37},"name":"as_abstract_namespace","qualname":"<SocketAddr>::as_abstract_namespace","value":"pub fn as_abstract_namespace(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is an abstract namespace\n without the leading null byte.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":898},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616853,"byte_end":13616856,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"pub fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612216,"byte_end":13612256,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612257,"byte_end":13612260,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612261,"byte_end":13612339,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612340,"byte_end":13612390,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612391,"byte_end":13612394,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612395,"byte_end":13612475,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612476,"byte_end":13612556,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612557,"byte_end":13612582,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612583,"byte_end":13612586,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612587,"byte_end":13612672,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612673,"byte_end":13612676,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612677,"byte_end":13612689,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612690,"byte_end":13612693,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612694,"byte_end":13612768,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612769,"byte_end":13612849,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612850,"byte_end":13612926,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612927,"byte_end":13612930,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13612931,"byte_end":13613011,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613012,"byte_end":13613084,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613085,"byte_end":13613160,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613161,"byte_end":13613238,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613239,"byte_end":13613318,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613319,"byte_end":13613322,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613323,"byte_end":13613359,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613360,"byte_end":13613408,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613409,"byte_end":13613445,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613446,"byte_end":13613493,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613494,"byte_end":13613546,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613547,"byte_end":13613601,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613602,"byte_end":13613605,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613606,"byte_end":13613625,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613626,"byte_end":13613629,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613630,"byte_end":13613703,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613704,"byte_end":13613773,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613774,"byte_end":13613777,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613778,"byte_end":13613861,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613862,"byte_end":13613865,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613866,"byte_end":13613880,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613881,"byte_end":13613884,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613885,"byte_end":13613962,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613963,"byte_end":13613981,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613982,"byte_end":13613985,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613986,"byte_end":13613993,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13613994,"byte_end":13614031,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614032,"byte_end":13614035,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614036,"byte_end":13614081,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614082,"byte_end":13614106,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614107,"byte_end":13614110,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614111,"byte_end":13614164,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614165,"byte_end":13614203,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614204,"byte_end":13614242,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614243,"byte_end":13614246,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614247,"byte_end":13614282,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614283,"byte_end":13614344,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614345,"byte_end":13614377,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614378,"byte_end":13614424,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614425,"byte_end":13614428,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614429,"byte_end":13614454,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614455,"byte_end":13614505,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614506,"byte_end":13614509,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614510,"byte_end":13614551,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614552,"byte_end":13614628,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614629,"byte_end":13614703,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614704,"byte_end":13614707,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614708,"byte_end":13614750,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614751,"byte_end":13614754,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614755,"byte_end":13614765,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614766,"byte_end":13614804,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614805,"byte_end":13614808,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614809,"byte_end":13614845,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614846,"byte_end":13614879,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614880,"byte_end":13614926,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614927,"byte_end":13614980,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13614981,"byte_end":13615057,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615058,"byte_end":13615133,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615134,"byte_end":13615182,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615183,"byte_end":13615247,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615248,"byte_end":13615280,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615281,"byte_end":13615315,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615316,"byte_end":13615344,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615345,"byte_end":13615375,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615376,"byte_end":13615418,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615419,"byte_end":13615472,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615473,"byte_end":13615532,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615533,"byte_end":13615578,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615579,"byte_end":13615623,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615624,"byte_end":13615658,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615659,"byte_end":13615677,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615678,"byte_end":13615714,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615715,"byte_end":13615728,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615729,"byte_end":13615738,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615739,"byte_end":13615744,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615745,"byte_end":13615752,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615753,"byte_end":13615760,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615761,"byte_end":13615764,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615765,"byte_end":13615829,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615830,"byte_end":13615833,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615834,"byte_end":13615841,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615842,"byte_end":13615860,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615861,"byte_end":13615866,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615867,"byte_end":13615914,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615915,"byte_end":13615941,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615942,"byte_end":13615947,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615948,"byte_end":13615988,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13615989,"byte_end":13616029,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616030,"byte_end":13616035,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616036,"byte_end":13616071,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616072,"byte_end":13616114,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616115,"byte_end":13616147,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616148,"byte_end":13616194,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616195,"byte_end":13616198,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616199,"byte_end":13616249,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616250,"byte_end":13616253,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616254,"byte_end":13616330,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616331,"byte_end":13616405,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616406,"byte_end":13616409,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616410,"byte_end":13616433,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616434,"byte_end":13616451,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616452,"byte_end":13616455,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616456,"byte_end":13616490,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616491,"byte_end":13616494,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616495,"byte_end":13616527,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616528,"byte_end":13616557,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616558,"byte_end":13616610,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616611,"byte_end":13616667,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616668,"byte_end":13616712,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616713,"byte_end":13616743,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616744,"byte_end":13616758,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616759,"byte_end":13616791,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616792,"byte_end":13616801,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616802,"byte_end":13616807,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616808,"byte_end":13616829,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616830,"byte_end":13616837,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13616838,"byte_end":13616845,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618776,"byte_end":13618782,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":956}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618656,"byte_end":13618688,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618689,"byte_end":13618692,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618693,"byte_end":13618747,"line_start":207,"line_end":207,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618899,"byte_end":13618914,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618833,"byte_end":13618887,"line_start":214,"line_end":214,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":959},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621217,"byte_end":13621225,"line_start":306,"line_end":306,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":960}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621095,"byte_end":13621129,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621130,"byte_end":13621133,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621134,"byte_end":13621188,"line_start":304,"line_end":304,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621346,"byte_end":13621361,"line_start":312,"line_end":312,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621278,"byte_end":13621334,"line_start":311,"line_end":311,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50529,"byte_end":50534,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45580,"byte_end":45636,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45637,"byte_end":45640,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45641,"byte_end":45710,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45711,"byte_end":45767,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45768,"byte_end":45771,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45772,"byte_end":45823,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45824,"byte_end":45827,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45828,"byte_end":45876,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45877,"byte_end":45907,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45908,"byte_end":45972,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":45973,"byte_end":46041,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46042,"byte_end":46045,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46046,"byte_end":46059,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46060,"byte_end":46063,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46064,"byte_end":46141,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46142,"byte_end":46211,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46212,"byte_end":46215,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46216,"byte_end":46259,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46260,"byte_end":46263,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46411,"byte_end":46439,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46440,"byte_end":46487,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46488,"byte_end":46533,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46534,"byte_end":46564,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46565,"byte_end":46568,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46569,"byte_end":46589,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46590,"byte_end":46620,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46621,"byte_end":46655,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46656,"byte_end":46659,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46660,"byte_end":46734,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46735,"byte_end":46769,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46770,"byte_end":46773,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46774,"byte_end":46852,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46853,"byte_end":46877,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46878,"byte_end":46918,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46919,"byte_end":46922,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46923,"byte_end":46956,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46957,"byte_end":46994,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46995,"byte_end":46998,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":46999,"byte_end":47058,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47059,"byte_end":47093,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47094,"byte_end":47097,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47098,"byte_end":47124,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47125,"byte_end":47157,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47158,"byte_end":47161,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47162,"byte_end":47181,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47182,"byte_end":47248,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47249,"byte_end":47252,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47253,"byte_end":47281,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47282,"byte_end":47357,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47358,"byte_end":47361,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47362,"byte_end":47436,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47437,"byte_end":47475,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47476,"byte_end":47503,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47504,"byte_end":47536,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47537,"byte_end":47540,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47541,"byte_end":47619,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47620,"byte_end":47657,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47658,"byte_end":47701,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47702,"byte_end":47756,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47757,"byte_end":47766,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47767,"byte_end":47774,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47775,"byte_end":47778,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47779,"byte_end":47799,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47800,"byte_end":47849,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47850,"byte_end":47853,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47854,"byte_end":47909,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47910,"byte_end":47937,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47938,"byte_end":47941,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47942,"byte_end":47968,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47969,"byte_end":47979,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":47980,"byte_end":48006,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48007,"byte_end":48045,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48046,"byte_end":48049,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48050,"byte_end":48080,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48081,"byte_end":48114,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48115,"byte_end":48144,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48145,"byte_end":48218,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48219,"byte_end":48254,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48255,"byte_end":48281,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48282,"byte_end":48331,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48332,"byte_end":48384,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48385,"byte_end":48439,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48440,"byte_end":48509,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48510,"byte_end":48560,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48561,"byte_end":48594,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48595,"byte_end":48598,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48599,"byte_end":48662,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48663,"byte_end":48732,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48733,"byte_end":48788,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48789,"byte_end":48792,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48793,"byte_end":48859,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48860,"byte_end":48958,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48959,"byte_end":48962,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":48963,"byte_end":49014,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49015,"byte_end":49077,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49078,"byte_end":49107,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49108,"byte_end":49192,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49193,"byte_end":49271,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49272,"byte_end":49310,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49311,"byte_end":49340,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49341,"byte_end":49416,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49417,"byte_end":49442,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49443,"byte_end":49464,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49465,"byte_end":49482,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49483,"byte_end":49509,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49510,"byte_end":49557,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49558,"byte_end":49584,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49585,"byte_end":49664,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49665,"byte_end":49703,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49704,"byte_end":49779,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49780,"byte_end":49835,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49836,"byte_end":49874,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49875,"byte_end":49904,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49905,"byte_end":49977,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":49978,"byte_end":50030,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50031,"byte_end":50115,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50116,"byte_end":50192,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50193,"byte_end":50231,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50232,"byte_end":50261,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50262,"byte_end":50337,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50338,"byte_end":50363,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50364,"byte_end":50385,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50386,"byte_end":50403,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50404,"byte_end":50417,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50418,"byte_end":50427,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50428,"byte_end":50433,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50434,"byte_end":50441,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50442,"byte_end":50449,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":965},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/token.rs","byte_start":50535,"byte_end":50544,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53205,"byte_end":53210,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":986}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50685,"byte_end":50734,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50735,"byte_end":50738,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50739,"byte_end":50812,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50813,"byte_end":50886,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50887,"byte_end":50890,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50891,"byte_end":50921,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50922,"byte_end":50984,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":50985,"byte_end":51028,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51029,"byte_end":51032,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51033,"byte_end":51044,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51045,"byte_end":51048,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51049,"byte_end":51127,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51128,"byte_end":51141,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51142,"byte_end":51145,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51146,"byte_end":51224,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51225,"byte_end":51298,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51299,"byte_end":51370,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ unspecified.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51371,"byte_end":51387,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51388,"byte_end":51391,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51392,"byte_end":51418,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51419,"byte_end":51422,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51423,"byte_end":51497,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51498,"byte_end":51576,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51577,"byte_end":51616,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51617,"byte_end":51620,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51621,"byte_end":51696,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: http://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51697,"byte_end":51763,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51764,"byte_end":51767,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51768,"byte_end":51782,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51783,"byte_end":51786,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51787,"byte_end":51836,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51837,"byte_end":51840,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":51944,"byte_end":52003,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52004,"byte_end":52024,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52025,"byte_end":52053,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52054,"byte_end":52077,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52078,"byte_end":52081,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52082,"byte_end":52124,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52125,"byte_end":52128,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52129,"byte_end":52169,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52170,"byte_end":52173,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52174,"byte_end":52206,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52207,"byte_end":52253,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52254,"byte_end":52257,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52258,"byte_end":52325,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52326,"byte_end":52329,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52330,"byte_end":52401,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52402,"byte_end":52432,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52433,"byte_end":52464,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52465,"byte_end":52505,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52506,"byte_end":52549,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52550,"byte_end":52600,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52601,"byte_end":52604,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52605,"byte_end":52661,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52662,"byte_end":52709,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52710,"byte_end":52717,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52718,"byte_end":52721,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52722,"byte_end":52792,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52793,"byte_end":52827,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52828,"byte_end":52831,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52832,"byte_end":52911,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52912,"byte_end":52938,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52939,"byte_end":52971,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":52972,"byte_end":53024,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53025,"byte_end":53064,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53065,"byte_end":53113,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53114,"byte_end":53143,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53144,"byte_end":53160,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53161,"byte_end":53168,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53169,"byte_end":53176,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53293,"byte_end":53296,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53256,"byte_end":53281,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53624,"byte_end":53628,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53515,"byte_end":53569,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53574,"byte_end":53577,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53582,"byte_end":53612,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":158},{"krate":0,"index":190},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/mod.rs","byte_start":53691,"byte_end":53731,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54308,"byte_end":54313,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":990}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":53942,"byte_end":53964,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":53965,"byte_end":53968,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":53969,"byte_end":54044,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54045,"byte_end":54064,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54065,"byte_end":54068,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54069,"byte_end":54132,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54133,"byte_end":54136,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54137,"byte_end":54188,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54189,"byte_end":54222,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54223,"byte_end":54258,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54276,"byte_end":54296,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54401,"byte_end":54406,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54359,"byte_end":54389,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55058,"byte_end":55069,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54475,"byte_end":54533,"line_start":27,"line_end":27,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54538,"byte_end":54541,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54546,"byte_end":54557,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54562,"byte_end":54565,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Out-of-band (OOB) data also triggers readable events. But must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54570,"byte_end":54636,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ application don't actually read OOB data, this could leave an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54641,"byte_end":54706,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ application open to a Denial-of-Service (Dos) attack, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54711,"byte_end":54772,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ <https://github.com/sandstorm-io/sandstorm-website/blob/58f93346028c0576e8147627667328eaaf4be9fa/_posts/2015-04-08-osx-security-bug.md>.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54777,"byte_end":54917,"line_start":34,"line_end":34,"column_start":5,"column_end":145}},{"value":"/ However because Mio uses edge-triggers it will not result in an infinite","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54922,"byte_end":54998,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ loop as described in the article above.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55003,"byte_end":55046,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55213,"byte_end":55224,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55143,"byte_end":55201,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56226,"byte_end":56234,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55298,"byte_end":55353,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55358,"byte_end":55361,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55366,"byte_end":55441,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55446,"byte_end":55519,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55524,"byte_end":55574,"line_start":50,"line_end":50,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55579,"byte_end":55582,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55587,"byte_end":55598,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55603,"byte_end":55606,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55611,"byte_end":55686,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55691,"byte_end":55707,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55712,"byte_end":55715,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55720,"byte_end":55780,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55785,"byte_end":55788,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55793,"byte_end":55832,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55837,"byte_end":55876,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55881,"byte_end":55920,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":55925,"byte_end":55998,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56003,"byte_end":56006,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56011,"byte_end":56070,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56075,"byte_end":56137,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56142,"byte_end":56214,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57547,"byte_end":57561,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56305,"byte_end":56366,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56371,"byte_end":56374,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56379,"byte_end":56390,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56395,"byte_end":56398,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56403,"byte_end":56476,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56481,"byte_end":56494,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56499,"byte_end":56562,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56567,"byte_end":56640,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56645,"byte_end":56664,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56669,"byte_end":56743,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56748,"byte_end":56809,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56814,"byte_end":56817,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56822,"byte_end":56894,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56899,"byte_end":56967,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":56972,"byte_end":57007,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57012,"byte_end":57015,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57020,"byte_end":57080,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57085,"byte_end":57088,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57093,"byte_end":57132,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57137,"byte_end":57176,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57181,"byte_end":57220,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57225,"byte_end":57275,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57280,"byte_end":57319,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57324,"byte_end":57327,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57332,"byte_end":57391,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57396,"byte_end":57458,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57463,"byte_end":57535,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58792,"byte_end":58807,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57638,"byte_end":57700,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57705,"byte_end":57708,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57713,"byte_end":57724,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57729,"byte_end":57732,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57737,"byte_end":57806,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57811,"byte_end":57885,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57890,"byte_end":57893,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57898,"byte_end":57966,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":57971,"byte_end":58006,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58011,"byte_end":58014,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58019,"byte_end":58091,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58096,"byte_end":58165,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58170,"byte_end":58205,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58210,"byte_end":58213,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58218,"byte_end":58278,"line_start":116,"line_end":116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58283,"byte_end":58286,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58291,"byte_end":58330,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58335,"byte_end":58374,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58379,"byte_end":58418,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58423,"byte_end":58466,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58471,"byte_end":58520,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58525,"byte_end":58564,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58569,"byte_end":58572,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58577,"byte_end":58636,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58641,"byte_end":58703,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58708,"byte_end":58780,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59578,"byte_end":59589,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58885,"byte_end":58943,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58948,"byte_end":58951,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58956,"byte_end":58967,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58972,"byte_end":58975,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":58980,"byte_end":59055,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59060,"byte_end":59079,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59084,"byte_end":59087,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59092,"byte_end":59152,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59157,"byte_end":59160,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59165,"byte_end":59204,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59209,"byte_end":59248,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59253,"byte_end":59292,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59297,"byte_end":59336,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59341,"byte_end":59344,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59349,"byte_end":59408,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59413,"byte_end":59475,"line_start":147,"line_end":147,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59480,"byte_end":59552,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59557,"byte_end":59566,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60394,"byte_end":60400,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59663,"byte_end":59716,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59721,"byte_end":59724,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59729,"byte_end":59740,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59745,"byte_end":59748,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59753,"byte_end":59829,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59834,"byte_end":59837,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59842,"byte_end":59902,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59907,"byte_end":59910,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59915,"byte_end":59954,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":59959,"byte_end":59998,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60003,"byte_end":60042,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60047,"byte_end":60090,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60095,"byte_end":60098,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60103,"byte_end":60166,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60171,"byte_end":60174,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60179,"byte_end":60238,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60243,"byte_end":60305,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60310,"byte_end":60382,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60704,"byte_end":60710,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60469,"byte_end":60522,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60527,"byte_end":60530,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60535,"byte_end":60546,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60551,"byte_end":60554,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60559,"byte_end":60634,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":60639,"byte_end":60692,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63707,"byte_end":63713,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62597,"byte_end":62634,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62635,"byte_end":62638,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62639,"byte_end":62714,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62715,"byte_end":62792,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62793,"byte_end":62867,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62868,"byte_end":62910,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62911,"byte_end":62914,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62915,"byte_end":62966,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62967,"byte_end":62970,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":62971,"byte_end":63022,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63023,"byte_end":63056,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63057,"byte_end":63060,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63061,"byte_end":63075,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63076,"byte_end":63079,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63183,"byte_end":63211,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63212,"byte_end":63259,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63260,"byte_end":63288,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63289,"byte_end":63317,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63318,"byte_end":63321,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63322,"byte_end":63371,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63372,"byte_end":63404,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63405,"byte_end":63410,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63411,"byte_end":63444,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63445,"byte_end":63448,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63449,"byte_end":63494,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63495,"byte_end":63498,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63499,"byte_end":63561,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63562,"byte_end":63565,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63566,"byte_end":63598,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63599,"byte_end":63656,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63657,"byte_end":63662,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63663,"byte_end":63679,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63680,"byte_end":63687,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63688,"byte_end":63695,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":993},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64546,"byte_end":64550,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63743,"byte_end":63767,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63768,"byte_end":63771,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63772,"byte_end":63836,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63837,"byte_end":63840,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63841,"byte_end":63875,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63876,"byte_end":63920,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63921,"byte_end":63924,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63925,"byte_end":63939,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":63940,"byte_end":63943,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64047,"byte_end":64075,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64076,"byte_end":64123,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64124,"byte_end":64152,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64153,"byte_end":64181,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64182,"byte_end":64185,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64186,"byte_end":64235,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64236,"byte_end":64268,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64269,"byte_end":64272,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64273,"byte_end":64309,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64310,"byte_end":64313,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64314,"byte_end":64376,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64377,"byte_end":64380,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64381,"byte_end":64413,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64414,"byte_end":64471,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64472,"byte_end":64477,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64478,"byte_end":64494,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64495,"byte_end":64502,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64503,"byte_end":64510,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64885,"byte_end":64898,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64617,"byte_end":64686,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64691,"byte_end":64694,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64699,"byte_end":64713,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64718,"byte_end":64721,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64726,"byte_end":64733,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64738,"byte_end":64758,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64763,"byte_end":64766,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64771,"byte_end":64816,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64821,"byte_end":64861,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64866,"byte_end":64873,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65257,"byte_end":65265,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65023,"byte_end":65085,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65090,"byte_end":65093,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65098,"byte_end":65105,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65110,"byte_end":65130,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65135,"byte_end":65138,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65143,"byte_end":65188,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65193,"byte_end":65233,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65238,"byte_end":65245,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65571,"byte_end":65579,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65325,"byte_end":65381,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65386,"byte_end":65389,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65394,"byte_end":65408,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65413,"byte_end":65416,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65421,"byte_end":65428,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65433,"byte_end":65453,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65458,"byte_end":65461,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65466,"byte_end":65511,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65516,"byte_end":65547,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65552,"byte_end":65559,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66380,"byte_end":66384,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65638,"byte_end":65686,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65691,"byte_end":65694,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65699,"byte_end":65713,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65718,"byte_end":65721,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65837,"byte_end":65865,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65870,"byte_end":65917,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65922,"byte_end":65950,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65955,"byte_end":65983,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65988,"byte_end":65991,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":65996,"byte_end":66045,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66050,"byte_end":66082,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66087,"byte_end":66090,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66095,"byte_end":66131,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66136,"byte_end":66139,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66144,"byte_end":66206,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66211,"byte_end":66214,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66219,"byte_end":66251,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66256,"byte_end":66313,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66318,"byte_end":66323,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66328,"byte_end":66344,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66349,"byte_end":66356,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66361,"byte_end":66368,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67352,"byte_end":67357,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66487,"byte_end":66545,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66550,"byte_end":66553,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66558,"byte_end":66569,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66574,"byte_end":66577,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66582,"byte_end":66655,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66660,"byte_end":66678,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66683,"byte_end":66686,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66691,"byte_end":66705,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66710,"byte_end":66713,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66829,"byte_end":66857,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66862,"byte_end":66909,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66914,"byte_end":66942,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66947,"byte_end":66975,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66980,"byte_end":66983,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":66988,"byte_end":67037,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67042,"byte_end":67074,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67079,"byte_end":67082,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67087,"byte_end":67123,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67128,"byte_end":67131,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67136,"byte_end":67198,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67203,"byte_end":67206,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67211,"byte_end":67235,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67240,"byte_end":67259,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67264,"byte_end":67295,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67300,"byte_end":67316,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67321,"byte_end":67328,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67333,"byte_end":67340,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70935,"byte_end":70941,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68388,"byte_end":68449,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68450,"byte_end":68453,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68454,"byte_end":68517,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68518,"byte_end":68591,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68592,"byte_end":68670,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68671,"byte_end":68683,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68684,"byte_end":68687,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68688,"byte_end":68726,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68727,"byte_end":68730,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68731,"byte_end":68772,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68773,"byte_end":68776,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68777,"byte_end":68811,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68812,"byte_end":68815,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68816,"byte_end":68895,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68896,"byte_end":68970,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":68971,"byte_end":69048,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69049,"byte_end":69128,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69129,"byte_end":69146,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69147,"byte_end":69150,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69151,"byte_end":69198,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69199,"byte_end":69245,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69246,"byte_end":69249,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69250,"byte_end":69281,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69282,"byte_end":69285,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69286,"byte_end":69365,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69366,"byte_end":69444,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69445,"byte_end":69524,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69525,"byte_end":69600,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69601,"byte_end":69658,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69659,"byte_end":69662,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69663,"byte_end":69724,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69725,"byte_end":69728,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69729,"byte_end":69743,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69744,"byte_end":69747,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69748,"byte_end":69806,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69807,"byte_end":69810,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":69958,"byte_end":69999,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70000,"byte_end":70027,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70028,"byte_end":70056,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70057,"byte_end":70060,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70061,"byte_end":70077,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70078,"byte_end":70081,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70082,"byte_end":70107,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70108,"byte_end":70133,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70134,"byte_end":70160,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70161,"byte_end":70166,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70167,"byte_end":70170,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70171,"byte_end":70201,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70202,"byte_end":70288,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70289,"byte_end":70318,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70319,"byte_end":70328,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70329,"byte_end":70384,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70385,"byte_end":70445,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70446,"byte_end":70455,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70456,"byte_end":70459,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70460,"byte_end":70548,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70549,"byte_end":70578,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70579,"byte_end":70588,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70589,"byte_end":70646,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70647,"byte_end":70709,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70710,"byte_end":70719,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70720,"byte_end":70723,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70724,"byte_end":70797,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70798,"byte_end":70855,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70856,"byte_end":70900,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70901,"byte_end":70910,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70911,"byte_end":70916,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70917,"byte_end":70924,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71293,"byte_end":71301,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":70948,"byte_end":71003,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71008,"byte_end":71011,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71016,"byte_end":71091,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71096,"byte_end":71171,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71176,"byte_end":71205,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71210,"byte_end":71213,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71218,"byte_end":71285,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71796,"byte_end":71806,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71432,"byte_end":71490,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71495,"byte_end":71498,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71503,"byte_end":71555,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71560,"byte_end":71624,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71629,"byte_end":71704,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71709,"byte_end":71712,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71717,"byte_end":71788,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72292,"byte_end":72302,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71937,"byte_end":71994,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":71999,"byte_end":72002,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72007,"byte_end":72059,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72064,"byte_end":72128,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72133,"byte_end":72200,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72205,"byte_end":72208,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72213,"byte_end":72284,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1083},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/macros.rs","byte_start":10374,"byte_end":10397,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632674,"byte_end":13632700,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632701,"byte_end":13632704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632705,"byte_end":13632778,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632779,"byte_end":13632857,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632858,"byte_end":13632936,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632937,"byte_end":13632968,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632969,"byte_end":13632972,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13632973,"byte_end":13633034,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633035,"byte_end":13633038,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633039,"byte_end":13633050,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633051,"byte_end":13633054,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When using a datagram based socket, i.e. [`UdpSocket`] or [`UnixDatagram`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633055,"byte_end":13633134,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ its only possible to receive a packet once. This means that if you provide a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633135,"byte_end":13633215,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ buffer that is too small you won't be able to receive the data anymore. How","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633216,"byte_end":13633295,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ OSs deal with this situation is different for each OS:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633296,"byte_end":13633354,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/  * Unixes, such as Linux, FreeBSD and macOS, will simply fill the buffer and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633355,"byte_end":13633435,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/    return the amount of bytes written. This means that if the returned value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633436,"byte_end":13633516,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/    is equal to the size of the buffer it may have only written a part of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633517,"byte_end":13633597,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/    packet (or the packet has the same size as the buffer).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633598,"byte_end":13633660,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/  * Windows returns an `WSAEMSGSIZE` error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633661,"byte_end":13633707,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633708,"byte_end":13633711,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Mio does not change the value (either ok or error) returned by the OS, it's","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633712,"byte_end":13633791,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ up to the user handle this. How to deal with these difference is still up","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633792,"byte_end":13633869,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ for debate, specifically in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633870,"byte_end":13633901,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ <https://github.com/rust-lang/rust/issues/55794>. The best advice we can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633902,"byte_end":13633978,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ give is to always call receive with a large enough buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/mod.rs","byte_start":13633979,"byte_end":13634041,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635585,"byte_end":13635596,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1149}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13634786,"byte_end":13634830,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13634831,"byte_end":13634834,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13634835,"byte_end":13634849,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13634850,"byte_end":13634853,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13634957,"byte_end":13634985,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13634986,"byte_end":13635033,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635034,"byte_end":13635079,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635080,"byte_end":13635110,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635111,"byte_end":13635139,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635140,"byte_end":13635143,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635144,"byte_end":13635214,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635215,"byte_end":13635218,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635219,"byte_end":13635251,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635252,"byte_end":13635300,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635301,"byte_end":13635304,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635305,"byte_end":13635343,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635344,"byte_end":13635419,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635420,"byte_end":13635423,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635424,"byte_end":13635486,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635487,"byte_end":13635490,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635491,"byte_end":13635540,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635541,"byte_end":13635557,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635558,"byte_end":13635565,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635566,"byte_end":13635573,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13636090,"byte_end":13636094,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635664,"byte_end":13635738,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635743,"byte_end":13635774,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635779,"byte_end":13635782,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635787,"byte_end":13635835,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635840,"byte_end":13635843,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635848,"byte_end":13635879,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635884,"byte_end":13635943,"line_start":52,"line_end":52,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635948,"byte_end":13635996,"line_start":53,"line_end":53,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13636001,"byte_end":13636078,"line_start":54,"line_end":54,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637378,"byte_end":13637386,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637028,"byte_end":13637095,"line_start":77,"line_end":77,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637100,"byte_end":13637103,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637108,"byte_end":13637180,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637185,"byte_end":13637259,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637264,"byte_end":13637336,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637341,"byte_end":13637366,"line_start":82,"line_end":82,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637901,"byte_end":13637907,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637519,"byte_end":13637549,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637554,"byte_end":13637557,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637562,"byte_end":13637613,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637618,"byte_end":13637694,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637699,"byte_end":13637772,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637777,"byte_end":13637780,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637785,"byte_end":13637857,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13637862,"byte_end":13637889,"line_start":96,"line_end":96,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638173,"byte_end":13638183,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638107,"byte_end":13638161,"line_start":103,"line_end":103,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638447,"byte_end":13638454,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638262,"byte_end":13638320,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638325,"byte_end":13638328,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638333,"byte_end":13638409,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638414,"byte_end":13638435,"line_start":111,"line_end":111,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638724,"byte_end":13638727,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638535,"byte_end":13638593,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638598,"byte_end":13638601,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638606,"byte_end":13638672,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638677,"byte_end":13638680,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638685,"byte_end":13638712,"line_start":120,"line_end":120,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639045,"byte_end":13639055,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638792,"byte_end":13638850,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638855,"byte_end":13638858,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638863,"byte_end":13638937,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13638942,"byte_end":13639018,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639023,"byte_end":13639033,"line_start":129,"line_end":129,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642556,"byte_end":13642565,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1242}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641524,"byte_end":13641597,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641598,"byte_end":13641601,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641602,"byte_end":13641658,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641659,"byte_end":13641662,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641663,"byte_end":13641677,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641678,"byte_end":13641681,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641785,"byte_end":13641831,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641832,"byte_end":13641860,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641861,"byte_end":13641866,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641867,"byte_end":13641914,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641915,"byte_end":13641968,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13641969,"byte_end":13642016,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642017,"byte_end":13642062,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642063,"byte_end":13642091,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642092,"byte_end":13642120,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642121,"byte_end":13642124,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642125,"byte_end":13642190,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642191,"byte_end":13642194,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642195,"byte_end":13642227,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642228,"byte_end":13642276,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642277,"byte_end":13642280,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642281,"byte_end":13642319,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642320,"byte_end":13642393,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642394,"byte_end":13642397,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642398,"byte_end":13642460,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642461,"byte_end":13642464,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642465,"byte_end":13642511,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642512,"byte_end":13642528,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642529,"byte_end":13642536,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642537,"byte_end":13642544,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643983,"byte_end":13643990,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642629,"byte_end":13642696,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642701,"byte_end":13642723,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642728,"byte_end":13642731,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642736,"byte_end":13642747,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642752,"byte_end":13642755,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` may not be connected (and thus usable), unlike","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642760,"byte_end":13642835,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ the API found in `std::net::TcpStream`. Because Mio issues a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642840,"byte_end":13642904,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/ *non-blocking* connect it will not block the thread and instead return","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642909,"byte_end":13642983,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ an unconnected `TcpStream`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642988,"byte_end":13643019,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643024,"byte_end":13643027,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Ensuring the returned stream is connected is surprisingly complex when","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643032,"byte_end":13643106,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ considering cross-platform support. Doing this properly should follow","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643111,"byte_end":13643184,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ the steps below, an example implementation can be found","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643189,"byte_end":13643248,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/ [here](https://github.com/Thomasdezeeuw/heph/blob/0c4f1ab3eaf08bea1d65776528bfd6114c9f8374/src/net/tcp/stream.rs#L560-L622).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643253,"byte_end":13643381,"line_start":63,"line_end":63,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643386,"byte_end":13643389,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/  1. Call `TcpStream::connect`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643394,"byte_end":13643427,"line_start":65,"line_end":65,"column_start":5,"column_end":38}},{"value":"/  2. Register the returned stream with at least [read interest].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643432,"byte_end":13643499,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/  3. Wait for a (readable) event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643504,"byte_end":13643540,"line_start":67,"line_end":67,"column_start":5,"column_end":41}},{"value":"/  4. Check `TcpStream::peer_addr`. If it returns `libc::EINPROGRESS` or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643545,"byte_end":13643619,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/     `ErrorKind::NotConnected` it means the stream is not yet connected,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643624,"byte_end":13643699,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/     go back to step 3. If it returns an address it means the stream is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643704,"byte_end":13643778,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/     connected, go to step 5. If another error is returned something","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643783,"byte_end":13643854,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/     whent wrong.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643859,"byte_end":13643879,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"/  5. Now the stream can be used.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643884,"byte_end":13643919,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643924,"byte_end":13643927,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [read interest]: Interest::READABLE","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13643932,"byte_end":13643971,"line_start":75,"line_end":75,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644880,"byte_end":13644888,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644329,"byte_end":13644392,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644397,"byte_end":13644400,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644405,"byte_end":13644475,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644480,"byte_end":13644554,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644559,"byte_end":13644630,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644635,"byte_end":13644657,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644662,"byte_end":13644665,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644670,"byte_end":13644680,"line_start":93,"line_end":93,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644685,"byte_end":13644688,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644693,"byte_end":13644760,"line_start":95,"line_end":95,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644765,"byte_end":13644837,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13644842,"byte_end":13644868,"line_start":97,"line_end":97,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645096,"byte_end":13645105,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645011,"byte_end":13645084,"line_start":104,"line_end":104,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645267,"byte_end":13645277,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645183,"byte_end":13645255,"line_start":109,"line_end":109,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645631,"byte_end":13645639,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645356,"byte_end":13645422,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645427,"byte_end":13645430,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645435,"byte_end":13645507,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645512,"byte_end":13645581,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645586,"byte_end":13645619,"line_start":118,"line_end":118,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646383,"byte_end":13646394,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645726,"byte_end":13645788,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645793,"byte_end":13645796,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645801,"byte_end":13645870,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645875,"byte_end":13645948,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13645953,"byte_end":13646026,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646031,"byte_end":13646106,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646111,"byte_end":13646129,"line_start":129,"line_end":129,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646134,"byte_end":13646137,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646142,"byte_end":13646153,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646158,"byte_end":13646161,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646166,"byte_end":13646242,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646247,"byte_end":13646314,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646319,"byte_end":13646371,"line_start":135,"line_end":135,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646931,"byte_end":13646938,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646488,"byte_end":13646550,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646555,"byte_end":13646558,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646563,"byte_end":13646633,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646638,"byte_end":13646641,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646646,"byte_end":13646677,"line_start":144,"line_end":144,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646682,"byte_end":13646685,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646690,"byte_end":13646701,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646706,"byte_end":13646709,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646714,"byte_end":13646790,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646795,"byte_end":13646862,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13646867,"byte_end":13646919,"line_start":150,"line_end":150,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647431,"byte_end":13647438,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647008,"byte_end":13647066,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647071,"byte_end":13647074,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647079,"byte_end":13647155,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647160,"byte_end":13647181,"line_start":158,"line_end":158,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647186,"byte_end":13647189,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647194,"byte_end":13647205,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647210,"byte_end":13647213,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647218,"byte_end":13647294,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647299,"byte_end":13647362,"line_start":163,"line_end":163,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647367,"byte_end":13647419,"line_start":164,"line_end":164,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647946,"byte_end":13647949,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647519,"byte_end":13647577,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647582,"byte_end":13647585,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647590,"byte_end":13647656,"line_start":171,"line_end":171,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647661,"byte_end":13647664,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647669,"byte_end":13647680,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647685,"byte_end":13647688,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647693,"byte_end":13647769,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647774,"byte_end":13647837,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647842,"byte_end":13647894,"line_start":177,"line_end":177,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647899,"byte_end":13647902,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13647907,"byte_end":13647934,"line_start":179,"line_end":179,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648267,"byte_end":13648277,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648014,"byte_end":13648072,"line_start":184,"line_end":184,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648077,"byte_end":13648080,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648085,"byte_end":13648159,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648164,"byte_end":13648240,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648245,"byte_end":13648255,"line_start":188,"line_end":188,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648715,"byte_end":13648719,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648363,"byte_end":13648433,"line_start":193,"line_end":193,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648438,"byte_end":13648507,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648512,"byte_end":13648551,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648556,"byte_end":13648559,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648564,"byte_end":13648638,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648643,"byte_end":13648703,"line_start":198,"line_end":198,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1355},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655540,"byte_end":13655549,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1356}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13652902,"byte_end":13652938,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13652939,"byte_end":13652942,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13652943,"byte_end":13653023,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653024,"byte_end":13653104,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653105,"byte_end":13653132,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653133,"byte_end":13653136,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653137,"byte_end":13653151,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653152,"byte_end":13653155,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653259,"byte_end":13653287,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653288,"byte_end":13653293,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653294,"byte_end":13653341,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653342,"byte_end":13653365,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653366,"byte_end":13653399,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653400,"byte_end":13653457,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653458,"byte_end":13653461,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653462,"byte_end":13653490,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653491,"byte_end":13653536,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653537,"byte_end":13653565,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653566,"byte_end":13653569,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653570,"byte_end":13653605,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653606,"byte_end":13653641,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653642,"byte_end":13653645,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653646,"byte_end":13653741,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653742,"byte_end":13653756,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653757,"byte_end":13653826,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653827,"byte_end":13653896,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653897,"byte_end":13653900,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653901,"byte_end":13653997,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13653998,"byte_end":13654018,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654019,"byte_end":13654075,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654076,"byte_end":13654079,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654080,"byte_end":13654178,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654179,"byte_end":13654196,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654197,"byte_end":13654229,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654230,"byte_end":13654233,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654234,"byte_end":13654328,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654329,"byte_end":13654407,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654408,"byte_end":13654486,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654487,"byte_end":13654490,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654491,"byte_end":13654520,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654521,"byte_end":13654549,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654550,"byte_end":13654553,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654554,"byte_end":13654602,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654603,"byte_end":13654613,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654614,"byte_end":13654680,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654681,"byte_end":13654717,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654718,"byte_end":13654751,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654752,"byte_end":13654810,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654811,"byte_end":13654838,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654839,"byte_end":13654910,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654911,"byte_end":13654957,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13654958,"byte_end":13655039,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655040,"byte_end":13655058,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655059,"byte_end":13655114,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655115,"byte_end":13655142,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655143,"byte_end":13655211,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655212,"byte_end":13655280,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655281,"byte_end":13655317,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655318,"byte_end":13655391,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655392,"byte_end":13655428,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655429,"byte_end":13655446,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655447,"byte_end":13655482,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655483,"byte_end":13655496,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655497,"byte_end":13655506,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655507,"byte_end":13655512,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655513,"byte_end":13655520,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655521,"byte_end":13655528,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656523,"byte_end":13656527,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655613,"byte_end":13655661,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655666,"byte_end":13655669,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655674,"byte_end":13655688,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655693,"byte_end":13655696,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655812,"byte_end":13655840,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655845,"byte_end":13655850,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655855,"byte_end":13655902,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655907,"byte_end":13655935,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655940,"byte_end":13655943,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655948,"byte_end":13655990,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655995,"byte_end":13656059,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656064,"byte_end":13656101,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656106,"byte_end":13656128,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656133,"byte_end":13656218,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656223,"byte_end":13656279,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656284,"byte_end":13656293,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656298,"byte_end":13656304,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656309,"byte_end":13656312,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656317,"byte_end":13656404,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656409,"byte_end":13656467,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656472,"byte_end":13656487,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656492,"byte_end":13656499,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656504,"byte_end":13656511,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656978,"byte_end":13656986,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656638,"byte_end":13656701,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656706,"byte_end":13656709,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656714,"byte_end":13656784,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656789,"byte_end":13656863,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656868,"byte_end":13656939,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13656944,"byte_end":13656966,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657940,"byte_end":13657950,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657109,"byte_end":13657174,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657179,"byte_end":13657182,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657187,"byte_end":13657201,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657206,"byte_end":13657209,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657607,"byte_end":13657635,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657640,"byte_end":13657645,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657650,"byte_end":13657697,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657702,"byte_end":13657730,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657735,"byte_end":13657738,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657743,"byte_end":13657781,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657786,"byte_end":13657826,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657831,"byte_end":13657884,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657889,"byte_end":13657904,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657909,"byte_end":13657916,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13657921,"byte_end":13657928,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658684,"byte_end":13658693,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658029,"byte_end":13658108,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658113,"byte_end":13658116,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658121,"byte_end":13658135,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658140,"byte_end":13658143,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658259,"byte_end":13658287,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658292,"byte_end":13658297,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658302,"byte_end":13658349,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658354,"byte_end":13658382,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658387,"byte_end":13658390,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658395,"byte_end":13658433,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ let peer_addr = \"127.0.0.1:11100\".parse()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658438,"byte_end":13658485,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658490,"byte_end":13658530,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ socket.connect(peer_addr)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658535,"byte_end":13658566,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(socket.peer_addr()?.ip(), peer_addr.ip());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658571,"byte_end":13658628,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658633,"byte_end":13658648,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658653,"byte_end":13658660,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658665,"byte_end":13658672,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659574,"byte_end":13659581,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658771,"byte_end":13658845,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658850,"byte_end":13658878,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658883,"byte_end":13658886,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658891,"byte_end":13658964,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13658969,"byte_end":13659009,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659014,"byte_end":13659017,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659022,"byte_end":13659036,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659041,"byte_end":13659044,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659049,"byte_end":13659062,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659067,"byte_end":13659095,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659100,"byte_end":13659147,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659152,"byte_end":13659180,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659185,"byte_end":13659188,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659193,"byte_end":13659251,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659256,"byte_end":13659259,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659264,"byte_end":13659334,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659339,"byte_end":13659386,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659391,"byte_end":13659394,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659399,"byte_end":13659473,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659478,"byte_end":13659508,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659513,"byte_end":13659518,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659523,"byte_end":13659538,"line_start":208,"line_end":208,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659543,"byte_end":13659550,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659555,"byte_end":13659562,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660882,"byte_end":13660891,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659716,"byte_end":13659790,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659795,"byte_end":13659846,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659851,"byte_end":13659854,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659859,"byte_end":13659870,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659875,"byte_end":13659878,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659883,"byte_end":13659958,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13659963,"byte_end":13660041,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660046,"byte_end":13660094,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660099,"byte_end":13660166,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660171,"byte_end":13660239,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660244,"byte_end":13660247,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660252,"byte_end":13660266,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660271,"byte_end":13660274,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660279,"byte_end":13660292,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660297,"byte_end":13660325,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660330,"byte_end":13660335,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660340,"byte_end":13660387,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660392,"byte_end":13660420,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660425,"byte_end":13660428,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660433,"byte_end":13660491,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660496,"byte_end":13660499,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660504,"byte_end":13660576,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660581,"byte_end":13660628,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660633,"byte_end":13660636,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660641,"byte_end":13660666,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660671,"byte_end":13660731,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660736,"byte_end":13660816,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660821,"byte_end":13660826,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660831,"byte_end":13660846,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660851,"byte_end":13660858,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13660863,"byte_end":13660870,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662234,"byte_end":13662243,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661018,"byte_end":13661094,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661099,"byte_end":13661175,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661180,"byte_end":13661198,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661203,"byte_end":13661206,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661211,"byte_end":13661222,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661227,"byte_end":13661230,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661235,"byte_end":13661310,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661315,"byte_end":13661393,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661398,"byte_end":13661446,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661451,"byte_end":13661518,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661523,"byte_end":13661591,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661596,"byte_end":13661599,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661604,"byte_end":13661618,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661623,"byte_end":13661626,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661631,"byte_end":13661644,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661649,"byte_end":13661677,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661682,"byte_end":13661687,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661692,"byte_end":13661739,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661744,"byte_end":13661772,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661777,"byte_end":13661780,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661785,"byte_end":13661843,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661848,"byte_end":13661851,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661856,"byte_end":13661928,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661933,"byte_end":13661980,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661985,"byte_end":13661988,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13661993,"byte_end":13662018,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662023,"byte_end":13662083,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662088,"byte_end":13662168,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662173,"byte_end":13662178,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662183,"byte_end":13662198,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662203,"byte_end":13662210,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662215,"byte_end":13662222,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662514,"byte_end":13662518,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662370,"byte_end":13662457,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662462,"byte_end":13662502,"line_start":287,"line_end":287,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663142,"byte_end":13663146,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662622,"byte_end":13662708,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662713,"byte_end":13662742,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662747,"byte_end":13662750,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662755,"byte_end":13662766,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662771,"byte_end":13662774,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662779,"byte_end":13662854,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662859,"byte_end":13662932,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662937,"byte_end":13662985,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13662990,"byte_end":13663057,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663062,"byte_end":13663130,"line_start":301,"line_end":301,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663784,"byte_end":13663788,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663254,"byte_end":13663330,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663335,"byte_end":13663384,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663389,"byte_end":13663392,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663397,"byte_end":13663408,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663413,"byte_end":13663416,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663421,"byte_end":13663496,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663501,"byte_end":13663574,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663579,"byte_end":13663627,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663632,"byte_end":13663699,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663704,"byte_end":13663772,"line_start":315,"line_end":315,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664080,"byte_end":13664087,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663896,"byte_end":13663968,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13663973,"byte_end":13664049,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664054,"byte_end":13664068,"line_start":322,"line_end":322,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664941,"byte_end":13664954,"line_start":351,"line_end":351,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664177,"byte_end":13664241,"line_start":327,"line_end":327,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664246,"byte_end":13664249,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664254,"byte_end":13664325,"line_start":329,"line_end":329,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664330,"byte_end":13664342,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664347,"byte_end":13664350,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664355,"byte_end":13664369,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664374,"byte_end":13664377,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664493,"byte_end":13664521,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664526,"byte_end":13664531,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664536,"byte_end":13664583,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664588,"byte_end":13664616,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664621,"byte_end":13664624,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664629,"byte_end":13664697,"line_start":341,"line_end":341,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664702,"byte_end":13664749,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664754,"byte_end":13664800,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664805,"byte_end":13664810,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664815,"byte_end":13664818,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664823,"byte_end":13664875,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664880,"byte_end":13664885,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664890,"byte_end":13664905,"line_start":348,"line_end":348,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664910,"byte_end":13664917,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13664922,"byte_end":13664929,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665722,"byte_end":13665731,"line_start":377,"line_end":377,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665040,"byte_end":13665104,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665109,"byte_end":13665112,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665117,"byte_end":13665164,"line_start":357,"line_end":357,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665169,"byte_end":13665197,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665202,"byte_end":13665205,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665210,"byte_end":13665243,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665248,"byte_end":13665251,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665256,"byte_end":13665270,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665275,"byte_end":13665278,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665394,"byte_end":13665422,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665427,"byte_end":13665432,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665437,"byte_end":13665484,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665489,"byte_end":13665517,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665522,"byte_end":13665525,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665530,"byte_end":13665598,"line_start":371,"line_end":371,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665603,"byte_end":13665656,"line_start":372,"line_end":372,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665661,"byte_end":13665666,"line_start":373,"line_end":373,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665671,"byte_end":13665686,"line_start":374,"line_end":374,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665691,"byte_end":13665698,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665703,"byte_end":13665710,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666035,"byte_end":13666056,"line_start":385,"line_end":385,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665803,"byte_end":13665872,"line_start":381,"line_end":381,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665877,"byte_end":13665880,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665885,"byte_end":13665959,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13665964,"byte_end":13666023,"line_start":384,"line_end":384,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666386,"byte_end":13666403,"line_start":395,"line_end":395,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666150,"byte_end":13666219,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666224,"byte_end":13666227,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666232,"byte_end":13666279,"line_start":391,"line_end":391,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666284,"byte_end":13666320,"line_start":392,"line_end":392,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666325,"byte_end":13666328,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666333,"byte_end":13666374,"line_start":394,"line_end":394,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666864,"byte_end":13666884,"line_start":406,"line_end":406,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666483,"byte_end":13666551,"line_start":399,"line_end":399,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666556,"byte_end":13666559,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666564,"byte_end":13666634,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666639,"byte_end":13666713,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666718,"byte_end":13666780,"line_start":403,"line_end":403,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666785,"byte_end":13666788,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666793,"byte_end":13666852,"line_start":405,"line_end":405,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667211,"byte_end":13667227,"line_start":416,"line_end":416,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13666978,"byte_end":13667046,"line_start":410,"line_end":410,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667051,"byte_end":13667054,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667059,"byte_end":13667106,"line_start":412,"line_end":412,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667111,"byte_end":13667146,"line_start":413,"line_end":413,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667151,"byte_end":13667154,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667159,"byte_end":13667199,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667541,"byte_end":13667562,"line_start":424,"line_end":424,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667305,"byte_end":13667376,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667381,"byte_end":13667384,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667389,"byte_end":13667465,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667470,"byte_end":13667529,"line_start":423,"line_end":423,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667894,"byte_end":13667911,"line_start":434,"line_end":434,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667656,"byte_end":13667727,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667732,"byte_end":13667735,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667740,"byte_end":13667787,"line_start":430,"line_end":430,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667792,"byte_end":13667828,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667833,"byte_end":13667836,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667841,"byte_end":13667882,"line_start":433,"line_end":433,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668700,"byte_end":13668707,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13667991,"byte_end":13668049,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668054,"byte_end":13668057,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668062,"byte_end":13668138,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668143,"byte_end":13668164,"line_start":441,"line_end":441,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668169,"byte_end":13668172,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668177,"byte_end":13668191,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668196,"byte_end":13668199,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668315,"byte_end":13668343,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668348,"byte_end":13668353,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668358,"byte_end":13668405,"line_start":449,"line_end":449,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668410,"byte_end":13668438,"line_start":450,"line_end":450,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668443,"byte_end":13668446,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668451,"byte_end":13668509,"line_start":452,"line_end":452,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668514,"byte_end":13668542,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668547,"byte_end":13668576,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668581,"byte_end":13668586,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668591,"byte_end":13668594,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668599,"byte_end":13668634,"line_start":457,"line_end":457,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668639,"byte_end":13668644,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668649,"byte_end":13668664,"line_start":459,"line_end":459,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668669,"byte_end":13668676,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668681,"byte_end":13668688,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669454,"byte_end":13669457,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668788,"byte_end":13668846,"line_start":466,"line_end":466,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668851,"byte_end":13668854,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668859,"byte_end":13668925,"line_start":468,"line_end":468,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668930,"byte_end":13668933,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668938,"byte_end":13668965,"line_start":470,"line_end":470,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668970,"byte_end":13668973,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668978,"byte_end":13668992,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13668997,"byte_end":13669000,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669116,"byte_end":13669144,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669149,"byte_end":13669154,"line_start":477,"line_end":477,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669159,"byte_end":13669206,"line_start":478,"line_end":478,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669211,"byte_end":13669239,"line_start":479,"line_end":479,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669244,"byte_end":13669247,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669252,"byte_end":13669310,"line_start":481,"line_end":481,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669315,"byte_end":13669340,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669345,"byte_end":13669348,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669353,"byte_end":13669388,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669393,"byte_end":13669398,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669403,"byte_end":13669418,"line_start":486,"line_end":486,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669423,"byte_end":13669430,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669435,"byte_end":13669442,"line_start":488,"line_end":488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670001,"byte_end":13670018,"line_start":501,"line_end":501,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669522,"byte_end":13669580,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669585,"byte_end":13669588,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669593,"byte_end":13669667,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669672,"byte_end":13669745,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669750,"byte_end":13669822,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669827,"byte_end":13669897,"line_start":498,"line_end":498,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669902,"byte_end":13669940,"line_start":499,"line_end":499,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13669945,"byte_end":13669989,"line_start":500,"line_end":500,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670525,"byte_end":13670542,"line_start":511,"line_end":511,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670160,"byte_end":13670220,"line_start":505,"line_end":505,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670225,"byte_end":13670228,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670233,"byte_end":13670307,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670312,"byte_end":13670385,"line_start":508,"line_end":508,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670390,"byte_end":13670464,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670469,"byte_end":13670513,"line_start":510,"line_end":510,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670945,"byte_end":13670963,"line_start":522,"line_end":522,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670678,"byte_end":13670737,"line_start":515,"line_end":515,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670742,"byte_end":13670745,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670750,"byte_end":13670797,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670802,"byte_end":13670834,"line_start":518,"line_end":518,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670839,"byte_end":13670842,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670847,"byte_end":13670884,"line_start":520,"line_end":520,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13670889,"byte_end":13670933,"line_start":521,"line_end":521,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671375,"byte_end":13671393,"line_start":533,"line_end":533,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671106,"byte_end":13671167,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671172,"byte_end":13671175,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671180,"byte_end":13671227,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671232,"byte_end":13671264,"line_start":529,"line_end":529,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671269,"byte_end":13671272,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671277,"byte_end":13671314,"line_start":531,"line_end":531,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671319,"byte_end":13671363,"line_start":532,"line_end":532,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671652,"byte_end":13671659,"line_start":539,"line_end":539,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671530,"byte_end":13671591,"line_start":537,"line_end":537,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671596,"byte_end":13671640,"line_start":538,"line_end":538,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671992,"byte_end":13672002,"line_start":548,"line_end":548,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671739,"byte_end":13671797,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671802,"byte_end":13671805,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671810,"byte_end":13671884,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671889,"byte_end":13671965,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13671970,"byte_end":13671980,"line_start":547,"line_end":547,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674492,"byte_end":13674504,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1457}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674453,"byte_end":13674480,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674645,"byte_end":13674649,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674574,"byte_end":13674633,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675145,"byte_end":13675153,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674792,"byte_end":13674861,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674866,"byte_end":13674869,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674874,"byte_end":13674947,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674952,"byte_end":13675026,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; ; it is left up to the user to set it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675031,"byte_end":13675103,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675108,"byte_end":13675133,"line_start":26,"line_end":26,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675346,"byte_end":13675353,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675285,"byte_end":13675334,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675531,"byte_end":13675538,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675450,"byte_end":13675519,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675708,"byte_end":13675712,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675648,"byte_end":13675696,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676022,"byte_end":13676032,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13675971,"byte_end":13676010,"line_start":53,"line_end":53,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676266,"byte_end":13676275,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676136,"byte_end":13676182,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676187,"byte_end":13676190,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676195,"byte_end":13676254,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676536,"byte_end":13676545,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676378,"byte_end":13676412,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676417,"byte_end":13676420,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676425,"byte_end":13676494,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676499,"byte_end":13676524,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676819,"byte_end":13676823,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676711,"byte_end":13676745,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676750,"byte_end":13676753,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676758,"byte_end":13676807,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677062,"byte_end":13677069,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676931,"byte_end":13676985,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676990,"byte_end":13676993,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13676998,"byte_end":13677050,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677494,"byte_end":13677498,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677207,"byte_end":13677257,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677262,"byte_end":13677265,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677270,"byte_end":13677342,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677347,"byte_end":13677417,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677422,"byte_end":13677425,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677430,"byte_end":13677482,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677661,"byte_end":13677671,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677602,"byte_end":13677649,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678037,"byte_end":13678045,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677757,"byte_end":13677822,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677827,"byte_end":13677830,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677835,"byte_end":13677903,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677908,"byte_end":13677978,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13677983,"byte_end":13678025,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13679712,"byte_end":13679724,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1549}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13679655,"byte_end":13679700,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13679869,"byte_end":13679873,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13679794,"byte_end":13679857,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680367,"byte_end":13680375,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680016,"byte_end":13680085,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680090,"byte_end":13680093,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680098,"byte_end":13680171,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680176,"byte_end":13680250,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680255,"byte_end":13680328,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680333,"byte_end":13680355,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680690,"byte_end":13680696,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680511,"byte_end":13680566,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680571,"byte_end":13680574,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680579,"byte_end":13680651,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680656,"byte_end":13680678,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680871,"byte_end":13680881,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680805,"byte_end":13680859,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681044,"byte_end":13681054,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13680985,"byte_end":13681032,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13682744,"byte_end":13682754,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1634}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13682694,"byte_end":13682732,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13682875,"byte_end":13682882,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.\n","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13682820,"byte_end":13682863,"line_start":17,"line_end":17,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683577,"byte_end":13683585,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683022,"byte_end":13683087,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683092,"byte_end":13683095,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683100,"byte_end":13683171,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683176,"byte_end":13683250,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683255,"byte_end":13683326,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683331,"byte_end":13683353,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683358,"byte_end":13683361,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683366,"byte_end":13683376,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683381,"byte_end":13683384,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683389,"byte_end":13683457,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683462,"byte_end":13683534,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683539,"byte_end":13683565,"line_start":33,"line_end":33,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683849,"byte_end":13683853,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683711,"byte_end":13683760,"line_start":40,"line_end":40,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683765,"byte_end":13683768,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13683773,"byte_end":13683837,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684135,"byte_end":13684145,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684055,"byte_end":13684123,"line_start":49,"line_end":49,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684328,"byte_end":13684337,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684247,"byte_end":13684316,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684497,"byte_end":13684507,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684438,"byte_end":13684485,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684874,"byte_end":13684882,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684593,"byte_end":13684659,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684664,"byte_end":13684667,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684672,"byte_end":13684740,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684745,"byte_end":13684815,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684820,"byte_end":13684862,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1653,"byte_end":1657,"line_start":72,"line_end":72,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1546,"byte_end":1583,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1664,"byte_end":1689,"line_start":73,"line_end":73,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1703,"byte_end":1707,"line_start":75,"line_end":75,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1718,"byte_end":1732,"line_start":76,"line_end":76,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1741,"byte_end":1744,"line_start":77,"line_end":77,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1753,"byte_end":1800,"line_start":78,"line_end":78,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":260},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2120,"byte_end":2128,"line_start":94,"line_end":94,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2135,"byte_end":2165,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2170,"byte_end":2173,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2178,"byte_end":2236,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2241,"byte_end":2244,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2395,"byte_end":2398,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation, that `panic!`s the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2403,"byte_end":2478,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2483,"byte_end":2552,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2557,"byte_end":2605,"line_start":104,"line_end":104,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2610,"byte_end":2613,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2618,"byte_end":2675,"line_start":106,"line_end":106,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2680,"byte_end":2683,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2830,"byte_end":2833,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2838,"byte_end":2914,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2919,"byte_end":2967,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":2972,"byte_end":2975,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3126,"byte_end":3129,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3134,"byte_end":3206,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3218,"byte_end":3223,"line_start":120,"line_end":120,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3230,"byte_end":3258,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3263,"byte_end":3266,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3271,"byte_end":3312,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3317,"byte_end":3320,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3325,"byte_end":3382,"line_start":125,"line_end":125,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3387,"byte_end":3421,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3426,"byte_end":3454,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3459,"byte_end":3462,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3467,"byte_end":3542,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3547,"byte_end":3597,"line_start":130,"line_end":130,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3602,"byte_end":3605,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3610,"byte_end":3646,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3651,"byte_end":3654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3659,"byte_end":3734,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3739,"byte_end":3815,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3820,"byte_end":3870,"line_start":136,"line_end":136,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3883,"byte_end":3916,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3921,"byte_end":3964,"line_start":139,"line_end":139,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":3969,"byte_end":3972,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4090,"byte_end":4120,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4125,"byte_end":4165,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4170,"byte_end":4223,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4228,"byte_end":4256,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4261,"byte_end":4333,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4338,"byte_end":4366,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4371,"byte_end":4415,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4420,"byte_end":4447,"line_start":150,"line_end":150,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4452,"byte_end":4464,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4469,"byte_end":4476,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4481,"byte_end":4488,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4493,"byte_end":4496,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4501,"byte_end":4570,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4575,"byte_end":4645,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4650,"byte_end":4724,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4729,"byte_end":4755,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4760,"byte_end":4763,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4768,"byte_end":4819,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4824,"byte_end":4827,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4832,"byte_end":4866,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4879,"byte_end":4955,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":4960,"byte_end":5034,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5039,"byte_end":5119,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5124,"byte_end":5199,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5204,"byte_end":5272,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5277,"byte_end":5289,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5294,"byte_end":5297,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5302,"byte_end":5378,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5383,"byte_end":5454,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5459,"byte_end":5462,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5467,"byte_end":5513,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5518,"byte_end":5521,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5683,"byte_end":5715,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5720,"byte_end":5759,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5764,"byte_end":5804,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5809,"byte_end":5839,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5844,"byte_end":5895,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5900,"byte_end":5955,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":5960,"byte_end":6011,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6016,"byte_end":6019,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6024,"byte_end":6101,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6106,"byte_end":6184,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6189,"byte_end":6205,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6210,"byte_end":6245,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6250,"byte_end":6323,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6328,"byte_end":6340,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6345,"byte_end":6352,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6357,"byte_end":6364,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6369,"byte_end":6372,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6377,"byte_end":6449,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6454,"byte_end":6493,"line_start":196,"line_end":196,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6498,"byte_end":6501,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6506,"byte_end":6563,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6568,"byte_end":6571,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6576,"byte_end":6609,"line_start":200,"line_end":200,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6614,"byte_end":6617,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6622,"byte_end":6692,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6697,"byte_end":6773,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6778,"byte_end":6853,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6858,"byte_end":6932,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":6937,"byte_end":7012,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7017,"byte_end":7026,"line_start":207,"line_end":207,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7031,"byte_end":7034,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7039,"byte_end":7113,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7118,"byte_end":7133,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7138,"byte_end":7141,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7146,"byte_end":7189,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7194,"byte_end":7241,"line_start":213,"line_end":213,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7246,"byte_end":7249,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7411,"byte_end":7429,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7434,"byte_end":7464,"line_start":218,"line_end":218,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7469,"byte_end":7501,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7506,"byte_end":7553,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7558,"byte_end":7593,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7598,"byte_end":7632,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7637,"byte_end":7687,"line_start":223,"line_end":223,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7692,"byte_end":7743,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7748,"byte_end":7801,"line_start":225,"line_end":225,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7806,"byte_end":7843,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7848,"byte_end":7923,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7928,"byte_end":7956,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7961,"byte_end":7971,"line_start":229,"line_end":229,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":7976,"byte_end":8044,"line_start":230,"line_end":230,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8049,"byte_end":8115,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8120,"byte_end":8123,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8128,"byte_end":8158,"line_start":233,"line_end":233,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8163,"byte_end":8199,"line_start":234,"line_end":234,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8204,"byte_end":8279,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8284,"byte_end":8337,"line_start":236,"line_end":236,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8342,"byte_end":8375,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8380,"byte_end":8412,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8417,"byte_end":8494,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8499,"byte_end":8546,"line_start":240,"line_end":240,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8551,"byte_end":8596,"line_start":241,"line_end":241,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8601,"byte_end":8655,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8660,"byte_end":8735,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8740,"byte_end":8785,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8790,"byte_end":8816,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8821,"byte_end":8898,"line_start":246,"line_end":246,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8903,"byte_end":8974,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":8979,"byte_end":9018,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9023,"byte_end":9089,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9094,"byte_end":9146,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9151,"byte_end":9172,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9177,"byte_end":9194,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9199,"byte_end":9235,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9240,"byte_end":9253,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9258,"byte_end":9267,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9272,"byte_end":9294,"line_start":256,"line_end":256,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9299,"byte_end":9304,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9309,"byte_end":9312,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9317,"byte_end":9362,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9367,"byte_end":9414,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9419,"byte_end":9424,"line_start":261,"line_end":261,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9429,"byte_end":9436,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":9441,"byte_end":9448,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":12335,"byte_end":12343,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15274,"byte_end":15282,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15425,"byte_end":15433,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15561,"byte_end":15569,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26613,"byte_end":26617,"line_start":236,"line_end":236,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30830,"byte_end":30834,"line_start":342,"line_end":342,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32282,"byte_end":32286,"line_start":385,"line_end":385,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32387,"byte_end":32391,"line_start":391,"line_end":391,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32515,"byte_end":32523,"line_start":397,"line_end":397,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":42704,"byte_end":42712,"line_start":662,"line_end":662,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":42865,"byte_end":42873,"line_start":669,"line_end":669,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13567629,"byte_end":13567637,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13570797,"byte_end":13570805,"line_start":110,"line_end":110,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13570933,"byte_end":13570941,"line_start":118,"line_end":118,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13571018,"byte_end":13571026,"line_start":124,"line_end":124,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577478,"byte_end":13577486,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/waker.rs","byte_start":13578686,"byte_end":13578691,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/net.rs","byte_start":13586709,"byte_end":13586724,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601997,"byte_end":13602007,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13602936,"byte_end":13602946,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13604978,"byte_end":13604988,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13605368,"byte_end":13605380,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/mod.rs","byte_start":13565355,"byte_end":13565368,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618820,"byte_end":13618826,"line_start":213,"line_end":213,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13619054,"byte_end":13619060,"line_start":220,"line_end":220,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13619611,"byte_end":13619617,"line_start":244,"line_end":244,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620507,"byte_end":13620513,"line_start":275,"line_end":275,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620724,"byte_end":13620730,"line_start":282,"line_end":282,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620892,"byte_end":13620898,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620995,"byte_end":13621001,"line_start":296,"line_end":296,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621263,"byte_end":13621271,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621501,"byte_end":13621509,"line_start":317,"line_end":317,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13622059,"byte_end":13622067,"line_start":341,"line_end":341,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13622763,"byte_end":13622771,"line_start":364,"line_end":364,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623070,"byte_end":13623078,"line_start":374,"line_end":374,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623297,"byte_end":13623305,"line_start":381,"line_end":381,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623471,"byte_end":13623479,"line_start":389,"line_end":389,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623576,"byte_end":13623584,"line_start":395,"line_end":395,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53244,"byte_end":53249,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54347,"byte_end":54352,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":61515,"byte_end":61520,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":62229,"byte_end":62241,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64604,"byte_end":64610,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67726,"byte_end":67730,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":68206,"byte_end":68212,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72376,"byte_end":72379,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13626300,"byte_end":13626308,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13627608,"byte_end":13627616,"line_start":112,"line_end":112,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13627883,"byte_end":13627891,"line_start":124,"line_end":124,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13628020,"byte_end":13628028,"line_start":131,"line_end":131,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13629897,"byte_end":13629905,"line_start":203,"line_end":203,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13630210,"byte_end":13630220,"line_start":220,"line_end":220,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13632518,"byte_end":13632528,"line_start":288,"line_end":288,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635646,"byte_end":13635657,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639162,"byte_end":13639173,"line_start":135,"line_end":135,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639729,"byte_end":13639740,"line_start":159,"line_end":159,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639873,"byte_end":13639884,"line_start":166,"line_end":166,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13640008,"byte_end":13640019,"line_start":173,"line_end":173,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13640129,"byte_end":13640140,"line_start":180,"line_end":180,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642613,"byte_end":13642622,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648818,"byte_end":13648827,"line_start":204,"line_end":204,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13649439,"byte_end":13649448,"line_start":224,"line_end":224,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13650261,"byte_end":13650270,"line_start":252,"line_end":252,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13650826,"byte_end":13650835,"line_start":276,"line_end":276,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13650968,"byte_end":13650977,"line_start":283,"line_end":283,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13651101,"byte_end":13651110,"line_start":290,"line_end":290,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13651220,"byte_end":13651229,"line_start":297,"line_end":297,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655597,"byte_end":13655606,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672109,"byte_end":13672118,"line_start":553,"line_end":553,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672674,"byte_end":13672683,"line_start":577,"line_end":577,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672816,"byte_end":13672825,"line_start":584,"line_end":584,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672949,"byte_end":13672958,"line_start":591,"line_end":591,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13673068,"byte_end":13673077,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674555,"byte_end":13674567,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678153,"byte_end":13678165,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678721,"byte_end":13678733,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678853,"byte_end":13678865,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678976,"byte_end":13678988,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13679085,"byte_end":13679097,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13679775,"byte_end":13679787,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681161,"byte_end":13681173,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681729,"byte_end":13681741,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681861,"byte_end":13681873,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681984,"byte_end":13681996,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13682093,"byte_end":13682105,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13682803,"byte_end":13682813,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684981,"byte_end":13684991,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13685604,"byte_end":13685614,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13686428,"byte_end":13686438,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13686994,"byte_end":13687004,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13687124,"byte_end":13687134,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13687245,"byte_end":13687255,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13687352,"byte_end":13687362,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1322,"byte_end":1327,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/lib.rs","byte_start":1392,"byte_end":1395,"line_start":60,"line_end":60,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1083}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":12335,"byte_end":12343,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15274,"byte_end":15282,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":3145}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15425,"byte_end":15433,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/interest.rs","byte_start":15561,"byte_end":15569,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":26613,"byte_end":26617,"line_start":236,"line_end":236,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":30830,"byte_end":30834,"line_start":342,"line_end":342,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32282,"byte_end":32286,"line_start":385,"line_end":385,"column_start":18,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":78},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32387,"byte_end":32391,"line_start":391,"line_end":391,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":32515,"byte_end":32523,"line_start":397,"line_end":397,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":42704,"byte_end":42712,"line_start":662,"line_end":662,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/poll.rs","byte_start":42865,"byte_end":42873,"line_start":669,"line_end":669,"column_start":18,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13567629,"byte_end":13567637,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13570797,"byte_end":13570805,"line_start":110,"line_end":110,"column_start":10,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13570933,"byte_end":13570941,"line_start":118,"line_end":118,"column_start":18,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":486},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/selector/epoll.rs","byte_start":13571018,"byte_end":13571026,"line_start":124,"line_end":124,"column_start":15,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/sourcefd.rs","byte_start":13577478,"byte_end":13577486,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":499},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/waker.rs","byte_start":13578686,"byte_end":13578691,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/net.rs","byte_start":13586709,"byte_end":13586724,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13601997,"byte_end":13602007,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13602936,"byte_end":13602946,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13604978,"byte_end":13604988,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/uds/socketaddr.rs","byte_start":13605368,"byte_end":13605380,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":646},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/mod.rs","byte_start":13565355,"byte_end":13565368,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13618820,"byte_end":13618826,"line_start":213,"line_end":213,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13619054,"byte_end":13619060,"line_start":220,"line_end":220,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":955},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13619611,"byte_end":13619617,"line_start":244,"line_end":244,"column_start":16,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":4509}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620507,"byte_end":13620513,"line_start":275,"line_end":275,"column_start":27,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620724,"byte_end":13620730,"line_start":282,"line_end":282,"column_start":20,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620892,"byte_end":13620898,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13620995,"byte_end":13621001,"line_start":296,"line_end":296,"column_start":20,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621263,"byte_end":13621271,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13621501,"byte_end":13621509,"line_start":317,"line_end":317,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":959},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13622059,"byte_end":13622067,"line_start":341,"line_end":341,"column_start":15,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":4452}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13622763,"byte_end":13622771,"line_start":364,"line_end":364,"column_start":28,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":959},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623070,"byte_end":13623078,"line_start":374,"line_end":374,"column_start":28,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":959},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623297,"byte_end":13623305,"line_start":381,"line_end":381,"column_start":20,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623471,"byte_end":13623479,"line_start":389,"line_end":389,"column_start":18,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/sys/unix/pipe.rs","byte_start":13623576,"byte_end":13623584,"line_start":395,"line_end":395,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":959},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/waker.rs","byte_start":53244,"byte_end":53249,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":54347,"byte_end":54352,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":61515,"byte_end":61520,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/event.rs","byte_start":62229,"byte_end":62241,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":64604,"byte_end":64610,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":67726,"byte_end":67730,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":993},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/events.rs","byte_start":68206,"byte_end":68212,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/event/source.rs","byte_start":72376,"byte_end":72379,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13626300,"byte_end":13626308,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13627608,"byte_end":13627616,"line_start":112,"line_end":112,"column_start":19,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13627883,"byte_end":13627891,"line_start":124,"line_end":124,"column_start":22,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13628020,"byte_end":13628028,"line_start":131,"line_end":131,"column_start":27,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1044},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13629897,"byte_end":13629905,"line_start":203,"line_end":203,"column_start":24,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13630210,"byte_end":13630220,"line_start":220,"line_end":220,"column_start":6,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/io_source.rs","byte_start":13632518,"byte_end":13632528,"line_start":288,"line_end":288,"column_start":16,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13635646,"byte_end":13635657,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639162,"byte_end":13639173,"line_start":135,"line_end":135,"column_start":24,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1148},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639729,"byte_end":13639740,"line_start":159,"line_end":159,"column_start":21,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13639873,"byte_end":13639884,"line_start":166,"line_end":166,"column_start":20,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1148},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13640008,"byte_end":13640019,"line_start":173,"line_end":173,"column_start":18,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1148},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/listener.rs","byte_start":13640129,"byte_end":13640140,"line_start":180,"line_end":180,"column_start":20,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1148},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13642613,"byte_end":13642622,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13648818,"byte_end":13648827,"line_start":204,"line_end":204,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1241},"to":{"krate":1,"index":4452}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13649439,"byte_end":13649448,"line_start":224,"line_end":224,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1241},"to":{"krate":1,"index":4509}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13650261,"byte_end":13650270,"line_start":252,"line_end":252,"column_start":24,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1241},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13650826,"byte_end":13650835,"line_start":276,"line_end":276,"column_start":21,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13650968,"byte_end":13650977,"line_start":283,"line_end":283,"column_start":20,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1241},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13651101,"byte_end":13651110,"line_start":290,"line_end":290,"column_start":18,"column_end":27},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1241},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/tcp/stream.rs","byte_start":13651220,"byte_end":13651229,"line_start":297,"line_end":297,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1241},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13655597,"byte_end":13655606,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672109,"byte_end":13672118,"line_start":553,"line_end":553,"column_start":24,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1355},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672674,"byte_end":13672683,"line_start":577,"line_end":577,"column_start":21,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672816,"byte_end":13672825,"line_start":584,"line_end":584,"column_start":20,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1355},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13672949,"byte_end":13672958,"line_start":591,"line_end":591,"column_start":18,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1355},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/udp.rs","byte_start":13673068,"byte_end":13673077,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1355},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13674555,"byte_end":13674567,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678153,"byte_end":13678165,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1456},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678721,"byte_end":13678733,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678853,"byte_end":13678865,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1456},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13678976,"byte_end":13678988,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1456},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/datagram.rs","byte_start":13679085,"byte_end":13679097,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1456},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13679775,"byte_end":13679787,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681161,"byte_end":13681173,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1548},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681729,"byte_end":13681741,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1548},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681861,"byte_end":13681873,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1548},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13681984,"byte_end":13681996,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1548},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/listener.rs","byte_start":13682093,"byte_end":13682105,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1548},"to":{"krate":1,"index":6698}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13682803,"byte_end":13682813,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13684981,"byte_end":13684991,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1633},"to":{"krate":1,"index":4452}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13685604,"byte_end":13685614,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1633},"to":{"krate":1,"index":4509}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13686428,"byte_end":13686438,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1633},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13686994,"byte_end":13687004,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1633},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13687124,"byte_end":13687134,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1633},"to":{"krate":1,"index":6700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13687245,"byte_end":13687255,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1633},"to":{"krate":1,"index":6696}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.0/src/net/uds/stream.rs","byte_start":13687352,"byte_end":13687362,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1633},"to":{"krate":1,"index":6698}}]}