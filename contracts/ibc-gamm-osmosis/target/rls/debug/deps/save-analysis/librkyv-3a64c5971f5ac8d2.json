{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rkyv","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bytecheck\"","--cfg","feature=\"default\"","--cfg","feature=\"hashbrown\"","--cfg","feature=\"rend\"","--cfg","feature=\"size_32\"","--cfg","feature=\"std\"","-C","metadata=3a64c5971f5ac8d2","-C","extra-filename=-3a64c5971f5ac8d2","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","--extern","bytecheck=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libbytecheck-e19b46a67c2bd481.rmeta","--extern","hashbrown=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libhashbrown-0eb80296a58426c0.rmeta","--extern","ptr_meta=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libptr_meta-e2f59660819e0646.rmeta","--extern","rend=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/librend-c57b7354e0a8a8fc.rmeta","--extern","rkyv_derive=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/librkyv_derive-f640bdc0b8e64d5c.so","--extern","seahash=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libseahash-8f3df5afb13535f7.rmeta","--cap-lints","allow","--cfg","has_atomics_64","--cfg","has_atomics","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/librkyv-3a64c5971f5ac8d2.rmeta"},"prelude":{"crate_id":{"name":"rkyv","disambiguator":[2967812899277353472,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","num":20,"id":{"name":"ptr_meta","disambiguator":[6125517202723969929,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","num":21,"id":{"name":"ptr_meta_derive","disambiguator":[9191551484565979,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","num":22,"id":{"name":"seahash","disambiguator":[2210998738040360748,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":23,"id":{"name":"rend","disambiguator":[5188831723343066761,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","num":24,"id":{"name":"rkyv_derive","disambiguator":[9886870610338682402,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":0,"byte_end":30931,"line_start":1,"line_end":738,"column_start":1,"column_end":72}},"imports":[{"kind":"Use","ref_id":{"krate":22,"index":92},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72166,"byte_end":72175,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"alias_span":null,"name":"HashBuilder","value":"","parent":{"krate":0,"index":492}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43161,"byte_end":43177,"line_start":13,"line_end":13,"column_start":26,"column_end":42},"alias_span":null,"name":"ArchivedBTreeMap","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43205,"byte_end":43222,"line_start":14,"line_end":14,"column_start":27,"column_end":44},"alias_span":null,"name":"ArchivedHashIndex","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43248,"byte_end":43263,"line_start":15,"line_end":15,"column_start":25,"column_end":40},"alias_span":null,"name":"ArchivedHashMap","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43289,"byte_end":43304,"line_start":16,"line_end":16,"column_start":25,"column_end":40},"alias_span":null,"name":"ArchivedHashSet","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43405,"byte_end":43421,"line_start":18,"line_end":18,"column_start":26,"column_end":42},"alias_span":null,"name":"ArchivedIndexMap","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43448,"byte_end":43464,"line_start":19,"line_end":19,"column_start":26,"column_end":42},"alias_span":null,"name":"ArchivedIndexSet","value":"","parent":{"krate":0,"index":124}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/mod.rs","byte_start":118547,"byte_end":118548,"line_start":8,"line_end":8,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1234}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284007,"byte_end":284008,"line_start":19,"line_end":19,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"AllocScratch, AlignedSerializer, HeapScratch, SharedSerializeMap","parent":{"krate":0,"index":3626}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284045,"byte_end":284046,"line_start":21,"line_end":21,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"BufferSerializer, BufferScratch, FallbackScratch","parent":{"krate":0,"index":3626}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284106,"byte_end":284107,"line_start":24,"line_end":24,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3626}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329516,"byte_end":329517,"line_start":25,"line_end":25,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"AlignedVec","parent":{"krate":0,"index":4199}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329561,"byte_end":329562,"line_start":27,"line_end":27,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"ScratchVec","parent":{"krate":0,"index":4199}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382039,"byte_end":382040,"line_start":15,"line_end":15,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4665}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382085,"byte_end":382086,"line_start":17,"line_end":17,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4665}},{"kind":"Use","ref_id":{"krate":23,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7883,"byte_end":7887,"line_start":171,"line_end":171,"column_start":9,"column_end":13},"alias_span":null,"name":"rend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":636},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7960,"byte_end":7967,"line_start":175,"line_end":175,"column_start":23,"column_end":30},"alias_span":null,"name":"Archive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":638},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7969,"byte_end":7980,"line_start":175,"line_end":175,"column_start":32,"column_end":43},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":637},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7982,"byte_end":7991,"line_start":175,"line_end":175,"column_start":45,"column_end":54},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8008,"byte_end":8009,"line_start":176,"line_end":176,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"AlignedBytes, AlignedVec, ScratchVec","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":0,"byte_end":30931,"line_start":1,"line_end":738,"column_start":1,"column_end":72},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":10},{"krate":0,"index":124},{"krate":0,"index":1233},{"krate":0,"index":1299},{"krate":0,"index":1386},{"krate":0,"index":2935},{"krate":0,"index":2960},{"krate":0,"index":3092},{"krate":0,"index":3164},{"krate":0,"index":3261},{"krate":0,"index":3423},{"krate":0,"index":3525},{"krate":0,"index":3625},{"krate":0,"index":4035},{"krate":0,"index":4176},{"krate":0,"index":4199},{"krate":0,"index":4510},{"krate":0,"index":4665},{"krate":0,"index":5379},{"krate":0,"index":5382},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":7444},{"krate":0,"index":7446},{"krate":0,"index":5401},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5409},{"krate":0,"index":5412},{"krate":0,"index":5416},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5428},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5439},{"krate":0,"index":5441},{"krate":0,"index":5443},{"krate":0,"index":5445}],"decl_id":null,"docs":" # rkyv","sig":null,"attributes":[{"value":"/ # rkyv","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11,"byte_end":14,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ rkyv (*archive*) is a zero-copy deserialization framework for Rust.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15,"byte_end":86,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":87,"byte_end":90,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It's similar to other zero-copy deserialization frameworks such as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":91,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ [Cap'n Proto](https://capnproto.org) and [FlatBuffers](https://google.github.io/flatbuffers).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":162,"byte_end":259,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ However, while the former have external schemas and heavily restricted data types, rkyv allows","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":260,"byte_end":358,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ all serialized types to be defined in code and can serialize a wide variety of types that the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":359,"byte_end":456,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ others cannot. Additionally, rkyv is designed to have little to no overhead, and in most cases","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":457,"byte_end":555,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ will perform exactly the same as native types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":556,"byte_end":606,"line_start":10,"line_end":10,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":607,"byte_end":610,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Design","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":611,"byte_end":624,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":625,"byte_end":628,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Like [serde](https://serde.rs), rkyv uses Rust's powerful trait system to serialize data without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":629,"byte_end":729,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ the need for reflection. Despite having a wide array of features, you also only pay for what you","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":730,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":101}},{"value":"/ use. If your data checks out, the serialization process can be as simple as a `memcpy`! Like","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":831,"byte_end":927,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ serde, this allows rkyv to perform at speeds similar to handwritten serializers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":928,"byte_end":1012,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1013,"byte_end":1016,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Unlike serde, rkyv produces data that is guaranteed deserialization free. If you wrote your data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1017,"byte_end":1117,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/ to disk, you can just `mmap` your file into memory, cast a pointer, and your data is ready to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1118,"byte_end":1215,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ use. This makes it ideal for high-performance and IO-bound applications.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1216,"byte_end":1292,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1293,"byte_end":1296,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Limited data mutation is supported through `Pin` APIs, and archived values can be truly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1297,"byte_end":1388,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ deserialized with [`Deserialize`] if full mutation capabilities are needed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1389,"byte_end":1468,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1469,"byte_end":1472,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [The book](https://rkyv.org) has more details on the design and capabilities of rkyv.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1473,"byte_end":1562,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1563,"byte_end":1566,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Type support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1567,"byte_end":1586,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1587,"byte_end":1590,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ rkyv has a hashmap implementation that is built for zero-copy deserialization, so you can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1591,"byte_end":1684,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ serialize your hashmaps with abandon. The implementation performs perfect hashing with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1685,"byte_end":1779,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ compress, hash and displace algorithm to use as little memory as possible while still performing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1780,"byte_end":1880,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ fast lookups.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1881,"byte_end":1898,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1899,"byte_end":1902,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It also comes with a B+ tree implementation that is built for maximum performance by splitting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":1903,"byte_end":2001,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ data into easily-pageable 4KB segments. This makes it perfect for building immutable databases","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2002,"byte_end":2100,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and structures for bulk data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2101,"byte_end":2134,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2135,"byte_end":2138,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ rkyv also has support for contextual serialization, deserialization, and validation. It can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2139,"byte_end":2234,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ properly serialize and deserialize shared pointers like `Rc` and `Arc`, and can be extended to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2235,"byte_end":2333,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ support custom contextual types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2334,"byte_end":2370,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2371,"byte_end":2374,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Finally, rkyv makes it possible to serialize trait objects and use them *as trait objects*","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2375,"byte_end":2469,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ without deserialization. See the `archive_dyn` crate for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2470,"byte_end":2544,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Tradeoffs","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2549,"byte_end":2565,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2566,"byte_end":2569,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ While rkyv is a great format for final data, it lacks a full schema system and isn't well","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2570,"byte_end":2663,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ equipped for data migration and schema upgrades. If your use case requires these capabilities,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2664,"byte_end":2762,"line_start":49,"line_end":49,"column_start":1,"column_end":99}},{"value":"/ you may need additional libraries the build these features on top of rkyv. You can use other","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2763,"byte_end":2859,"line_start":50,"line_end":50,"column_start":1,"column_end":97}},{"value":"/ serialization frameworks like serde with the same types as rkyv conflict-free.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2860,"byte_end":2942,"line_start":51,"line_end":51,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2943,"byte_end":2946,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2947,"byte_end":2962,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2963,"byte_end":2966,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `alloc`: Enables types that require the `alloc` crate. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":2967,"byte_end":3047,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ - `arbitrary_enum_discriminant`: Enables the `arbitrary_enum_discriminant` feature for stable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3048,"byte_end":3145,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/   multibyte enum discriminants using `archive_le` and `archive_be`. Requires nightly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3146,"byte_end":3235,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"/ - `archive_be`: Forces archives into a big-endian format. This guarantees cross-endian","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3236,"byte_end":3326,"line_start":58,"line_end":58,"column_start":1,"column_end":91}},{"value":"/   compatibility optimized for big-endian architectures.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3327,"byte_end":3386,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/ - `archive_le`: Forces archives into a little-endian format. This guarantees cross-endian","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3387,"byte_end":3480,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/   compatibility optimized for little-endian architectures.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3481,"byte_end":3543,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/ - `copy`: Enables copy optimizations for packed copyable data types. Requires nightly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3544,"byte_end":3634,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"/ - `copy_unsafe`: Automatically opts all potentially copyable types into copy optimization. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3635,"byte_end":3734,"line_start":63,"line_end":63,"column_start":1,"column_end":100}},{"value":"/   broadly improves performance but may cause uninitialized bytes to be copied to the output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3735,"byte_end":3831,"line_start":64,"line_end":64,"column_start":1,"column_end":97}},{"value":"/   Requires nightly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3832,"byte_end":3855,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ - `size_16`: Archives integral `*size` types as 16-bit integers. This is intended to be used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3856,"byte_end":3952,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/   only for small archives and may not handle large, more general data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":3953,"byte_end":4027,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ - `size_32`: Archives integral `*size` types as 32-bit integers. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4028,"byte_end":4116,"line_start":68,"line_end":68,"column_start":1,"column_end":89}},{"value":"/ - `size_64`: Archives integral `*size` types as 64-bit integers. This is intended to be used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4117,"byte_end":4213,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/   only for very large archives and may cause unnecessary data bloat.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4214,"byte_end":4286,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/ - `std`: Enables standard library support. Enabled by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4287,"byte_end":4353,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/ - `strict`: Guarantees that types will have the same representations across platforms and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4354,"byte_end":4447,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/   compilations. This is already the case in practice, but this feature provides a guarantee","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4448,"byte_end":4543,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/   along with C type compatibility.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4544,"byte_end":4582,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4583,"byte_end":4586,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/   *Note*: Enabling `strict` will disable [`Archive`] implementations for tuples, as tuples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4587,"byte_end":4681,"line_start":76,"line_end":76,"column_start":1,"column_end":95}},{"value":"/   do not have a C type layout. Making a generic `Tuple<T1, T2>` and deriving [`Archive`] for it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4682,"byte_end":4781,"line_start":77,"line_end":77,"column_start":1,"column_end":100}},{"value":"/   should provide similar functionality.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4782,"byte_end":4825,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/ - `validation`: Enables validation support through `bytecheck`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4826,"byte_end":4893,"line_start":79,"line_end":79,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4894,"byte_end":4897,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ## Crate support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4898,"byte_end":4918,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4919,"byte_end":4922,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Some common crates need to be supported by rkyv before an official integration has been made.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":4923,"byte_end":5020,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/ Support is provided by rkyv for these crates, but in the future crates should depend on rkyv and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5021,"byte_end":5121,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"/ provide their own implementations. The crates that already have support provided by rkyv should","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5122,"byte_end":5221,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ work toward integrating the implementations into themselves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5222,"byte_end":5286,"line_start":86,"line_end":86,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5287,"byte_end":5290,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Crates supported by rkyv:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5291,"byte_end":5320,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5321,"byte_end":5324,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - [`indexmap`](https://docs.rs/indexmap)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5325,"byte_end":5369,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"/ - [`rend`](https://docs.rs/rend) *Enabled automatically when using endian-specific archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5370,"byte_end":5464,"line_start":91,"line_end":91,"column_start":1,"column_end":95}},{"value":"/   features.*","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5465,"byte_end":5481,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ - [`tinyvec`](https://docs.rs/tinyvec)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5482,"byte_end":5524,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/ - [`uuid`](https://docs.rs/uuid)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5525,"byte_end":5561,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5562,"byte_end":5565,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Support for each of these crates can be enabled with a feature of the same name. Additionally,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5566,"byte_end":5664,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/ the following external crate features are available:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5665,"byte_end":5721,"line_start":97,"line_end":97,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5722,"byte_end":5725,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ - `tinyvec_alloc`: Supports types behind the `alloc` feature in `tinyvec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5726,"byte_end":5804,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ - `uuid_std`: Enables the `std` feature in `uuid`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5805,"byte_end":5859,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5860,"byte_end":5863,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5864,"byte_end":5879,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5880,"byte_end":5883,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - See [`Archive`] for examples of how to use rkyv through the derive macro and manual","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5884,"byte_end":5973,"line_start":104,"line_end":104,"column_start":1,"column_end":90}},{"value":"/   implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5974,"byte_end":5995,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/ - For more details on the derive macro and its capabilities, see","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":5996,"byte_end":6064,"line_start":106,"line_end":106,"column_start":1,"column_end":69}},{"value":"/   [`Archive`](macro@Archive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":6065,"byte_end":6098,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ - Fully worked examples using rkyv are available in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":6099,"byte_end":6158,"line_start":108,"line_end":108,"column_start":1,"column_end":60}},{"value":"/   [`examples` directory](https://github.com/rkyv/rkyv/tree/master/examples) of the source repo.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":6159,"byte_end":6258,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"deny(rustdoc :: broken_intra_doc_links, missing_docs, rustdoc ::\n       missing_crate_level_docs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":6260,"byte_end":6364,"line_start":111,"line_end":115,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/macros.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7259,"byte_end":7271,"line_start":141,"line_end":141,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boxed","qualname":"::boxed","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":70},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" An archived version of `Box`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Box`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":35984,"byte_end":36017,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36354,"byte_end":36365,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"ArchivedBox","qualname":"::boxed::ArchivedBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived [`Box`].","sig":null,"attributes":[{"value":"/ An archived [`Box`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36224,"byte_end":36248,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36249,"byte_end":36252,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a thin wrapper around a [`RelPtr`] to the archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36253,"byte_end":36321,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36322,"byte_end":36342,"line_start":12,"line_end":12,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36545,"byte_end":36548,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedBox<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value of this archived box.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value of this archived box.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36461,"byte_end":36519,"line_start":16,"line_end":16,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36524,"byte_end":36533,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36710,"byte_end":36721,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ArchivedBox<T>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the value of this archived box\n","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the value of this archived box","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36612,"byte_end":36684,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36689,"byte_end":36698,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37101,"byte_end":37117,"line_start":35,"line_end":35,"column_start":19,"column_end":35},"name":"resolve_from_ref","qualname":"<ArchivedBox<T>>::resolve_from_ref","value":"pub unsafe fn resolve_from_ref<U: ArchiveUnsized<Archived = T> +\n                               ?Sized>(&U, usize,\n                                       BoxResolver<U::MetadataResolver>,\n                                       *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived box from the given value and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived box from the given value and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36842,"byte_end":36907,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36912,"byte_end":36915,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36920,"byte_end":36932,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36937,"byte_end":36940,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36945,"byte_end":37005,"line_start":32,"line_end":32,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37010,"byte_end":37068,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37073,"byte_end":37082,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37517,"byte_end":37535,"line_start":47,"line_end":47,"column_start":12,"column_end":30},"name":"serialize_from_ref","qualname":"<ArchivedBox<T>>::serialize_from_ref","value":"pub fn serialize_from_ref<U, S>(&U, &mut S)\n-> Result<BoxResolver<U::MetadataResolver>, S::Error> where\nU: SerializeUnsized<S, Archived = T> + ?Sized, S: Fallible + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived box from the given value and serializer.\n","sig":null,"attributes":[{"value":"/ Serializes an archived box from the given value and serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37424,"byte_end":37491,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37496,"byte_end":37505,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37963,"byte_end":37970,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"is_null","qualname":"<ArchivedBox<T>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":37942,"byte_end":37951,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38542,"byte_end":38567,"line_start":78,"line_end":78,"column_start":19,"column_end":44},"name":"serialize_copy_from_slice","qualname":"<ArchivedBox<[T]>>::serialize_copy_from_slice","value":"pub unsafe fn serialize_copy_from_slice<U, S>(&[U], &mut S)\n-> Result<BoxResolver<MetadataResolver<[U]>>, S::Error> where U: Serialize<S,\nArchived = T>, S: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Box` from a given slice by directly copying bytes.","sig":null,"attributes":[{"value":"/ Serializes an archived `Box` from a given slice by directly copying bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38053,"byte_end":38131,"line_start":69,"line_end":69,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38136,"byte_end":38139,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38144,"byte_end":38156,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38161,"byte_end":38164,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The type being serialized must be copy-safe. Copy-safe types must be trivially copyable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38169,"byte_end":38260,"line_start":73,"line_end":73,"column_start":5,"column_end":96}},{"value":"/ (have the same archived and unarchived representations) and contain no padding bytes. In","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38265,"byte_end":38357,"line_start":74,"line_end":74,"column_start":5,"column_end":97}},{"value":"/ situations where copying uninitialized bytes the output is acceptable, this function may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38362,"byte_end":38457,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ used with types that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38462,"byte_end":38509,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38514,"byte_end":38523,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39250,"byte_end":39262,"line_start":106,"line_end":106,"column_start":19,"column_end":31},"name":"emplace_null","qualname":"<ArchivedBox<T>>::emplace_null","value":"pub unsafe fn emplace_null(usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39222,"byte_end":39231,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":41416,"byte_end":41427,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"BoxResolver","qualname":"::boxed::BoxResolver","value":"BoxResolver {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":" The resolver for `Box`.\n","sig":null,"attributes":[{"value":"/ The resolver for `Box`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":41377,"byte_end":41404,"line_start":192,"line_end":192,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":435},{"krate":0,"index":492},{"krate":0,"index":569},{"krate":0,"index":838},{"krate":0,"index":903},{"krate":0,"index":1102},{"krate":0,"index":1187},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230}],"decl_id":null,"docs":" Archived versions of standard library containers.\n","sig":null,"attributes":[{"value":"/ Archived versions of standard library containers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":42860,"byte_end":42913,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":231},{"krate":0,"index":241},{"krate":0,"index":255},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":285},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":353},{"krate":0,"index":358},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":419},{"krate":0,"index":427},{"krate":0,"index":431}],"decl_id":null,"docs":" [`Archive`](crate::Archive) implementation for B-tree maps.\n","sig":null,"attributes":[{"value":"/ [`Archive`](crate::Archive) implementation for B-tree maps.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":43486,"byte_end":43549,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48271,"byte_end":48287,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"ArchivedBTreeMap","qualname":"::collections::btree_map::ArchivedBTreeMap","value":"ArchivedBTreeMap {  }","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" An archived [`BTreeMap`](std::collections::BTreeMap).\n","sig":null,"attributes":[{"value":"/ An archived [`BTreeMap`](std::collections::BTreeMap).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48161,"byte_end":48218,"line_start":186,"line_end":186,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48447,"byte_end":48463,"line_start":195,"line_end":195,"column_start":12,"column_end":28},"name":"BTreeMapResolver","qualname":"::collections::btree_map::BTreeMapResolver","value":"BTreeMapResolver {  }","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" The resolver for an [`ArchivedBTreeMap`].\n","sig":null,"attributes":[{"value":"/ The resolver for an [`ArchivedBTreeMap`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48390,"byte_end":48435,"line_start":194,"line_end":194,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":263},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48601,"byte_end":48626,"line_start":202,"line_end":202,"column_start":11,"column_end":36},"name":"MIN_ENTRIES_PER_LEAF_NODE","qualname":"::collections::btree_map::MIN_ENTRIES_PER_LEAF_NODE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of entries to place in a leaf node.","sig":null,"attributes":[{"value":"/ The minimum number of entries to place in a leaf node.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48490,"byte_end":48548,"line_start":199,"line_end":199,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48549,"byte_end":48552,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ This value must be greater than 0","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48553,"byte_end":48590,"line_start":201,"line_end":201,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":264},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48753,"byte_end":48779,"line_start":207,"line_end":207,"column_start":11,"column_end":37},"name":"MIN_ENTRIES_PER_INNER_NODE","qualname":"::collections::btree_map::MIN_ENTRIES_PER_INNER_NODE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of entries to place in an inner node.","sig":null,"attributes":[{"value":"/ The minimum number of entries to place in an inner node.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48640,"byte_end":48700,"line_start":204,"line_end":204,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48701,"byte_end":48704,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ This value must be greater than 1","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48705,"byte_end":48742,"line_start":206,"line_end":206,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50026,"byte_end":50038,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedBTreeMap<K, V>>::contains_key","value":"pub fn contains_key<Q: Ord + ?Sized>(&Self, &Q) -> bool where K: Borrow<Q> +\nOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":49770,"byte_end":49839,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":49844,"byte_end":49847,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":49852,"byte_end":49944,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ form _must_ match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":49949,"byte_end":50000,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50005,"byte_end":50014,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50426,"byte_end":50429,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedBTreeMap<K, V>>::get","value":"pub fn get<Q: Ord + ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q> + Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50177,"byte_end":50239,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50244,"byte_end":50247,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map’s key type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50252,"byte_end":50346,"line_start":253,"line_end":253,"column_start":5,"column_end":97}},{"value":"/ form must match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50351,"byte_end":50400,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50405,"byte_end":50414,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50827,"byte_end":50840,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ArchivedBTreeMap<K, V>>::get_key_value","value":"pub fn get_key_value<Q: Ord + ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q> + Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50580,"byte_end":50645,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50650,"byte_end":50653,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map’s key type, but the ordering on the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50658,"byte_end":50752,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ borrowed form must match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":50757,"byte_end":50815,"line_start":266,"line_end":266,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52560,"byte_end":52568,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedBTreeMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52483,"byte_end":52534,"line_start":310,"line_end":310,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52539,"byte_end":52548,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52711,"byte_end":52715,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedBTreeMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map, sorted by key.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map, sorted by key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52621,"byte_end":52685,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52690,"byte_end":52699,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52930,"byte_end":52934,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"keys","qualname":"<ArchivedBTreeMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map, in sorted order.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map, in sorted order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52841,"byte_end":52904,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":52909,"byte_end":52918,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53145,"byte_end":53148,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedBTreeMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in the archived B-tree map.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in the archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53060,"byte_end":53119,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53124,"byte_end":53133,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53311,"byte_end":53317,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"values","qualname":"<ArchivedBTreeMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map, in order by key.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map, in order by key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53220,"byte_end":53285,"line_start":338,"line_end":338,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53290,"byte_end":53299,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53756,"byte_end":53772,"line_start":354,"line_end":354,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedBTreeMap<K, V>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, BTreeMapResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves a B-tree map from its length.","sig":null,"attributes":[{"value":"/ Resolves a B-tree map from its length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53447,"byte_end":53489,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53494,"byte_end":53497,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53502,"byte_end":53514,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53519,"byte_end":53522,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53527,"byte_end":53590,"line_start":350,"line_end":350,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53595,"byte_end":53655,"line_start":351,"line_end":351,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a B-tree map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53660,"byte_end":53723,"line_start":352,"line_end":352,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":53728,"byte_end":53737,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54558,"byte_end":54585,"line_start":382,"line_end":382,"column_start":23,"column_end":50},"name":"serialize_from_reverse_iter","qualname":"<ArchivedBTreeMap<K, V>>::serialize_from_reverse_iter","value":"pub unsafe fn serialize_from_reverse_iter<'a, UK, UV, S, I>(I, &mut S)\n-> Result<BTreeMapResolver, S::Error> where UK: 'a + Serialize<S, Archived =\nK>, UV: 'a + Serialize<S, Archived = V>, S: Serializer + ?Sized,\nI: ExactSizeIterator<Item = (&'a UK, &'a UV)>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an ordered iterator of key-value pairs as a B-tree map.","sig":null,"attributes":[{"value":"/ Serializes an ordered iterator of key-value pairs as a B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54291,"byte_end":54361,"line_start":376,"line_end":376,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54370,"byte_end":54373,"line_start":377,"line_end":377,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54382,"byte_end":54394,"line_start":378,"line_end":378,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54403,"byte_end":54406,"line_start":379,"line_end":379,"column_start":9,"column_end":12}},{"value":"/ - Keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54415,"byte_end":54465,"line_start":380,"line_end":380,"column_start":9,"column_end":59}},{"value":"/ - Keys must be in reverse sorted order from last to first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54474,"byte_end":54535,"line_start":381,"line_end":381,"column_start":9,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65846,"byte_end":65850,"line_start":675,"line_end":675,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" An iterator over the key-value pairs of an archived B-tree map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key-value pairs of an archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65767,"byte_end":65834,"line_start":674,"line_end":674,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66349,"byte_end":66353,"line_start":697,"line_end":697,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::btree_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":" An iterator over the keys of an archived B-tree map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of an archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66281,"byte_end":66337,"line_start":696,"line_end":696,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66861,"byte_end":66867,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::btree_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":418}],"decl_id":null,"docs":" An iterator over the values of an archived B-tree map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of an archived B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66791,"byte_end":66849,"line_start":718,"line_end":718,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":5447},{"krate":0,"index":5451},{"krate":0,"index":5453},{"krate":0,"index":5456},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":5465},{"krate":0,"index":5469},{"krate":0,"index":453},{"krate":0,"index":464},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":489}],"decl_id":null,"docs":" [`Archive`](crate::Archive) implementation for B-tree sets.\n","sig":null,"attributes":[{"value":"/ [`Archive`](crate::Archive) implementation for B-tree sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68049,"byte_end":68112,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5447},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68483,"byte_end":68499,"line_start":11,"line_end":11,"column_start":12,"column_end":28},"name":"ArchivedBTreeSet","qualname":"::collections::btree_set::ArchivedBTreeSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived `BTreeSet`. This is a wrapper around a B-tree map with the same key and a value of\n `()`.\n","sig":null,"attributes":[{"value":"/ An archived `BTreeSet`. This is a wrapper around a B-tree map with the same key and a value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68227,"byte_end":68325,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/ `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68326,"byte_end":68335,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68451,"byte_end":68471,"line_start":10,"line_end":10,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68820,"byte_end":68832,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedBTreeSet<K>>::contains_key","value":"pub fn contains_key<Q: Ord + ?Sized>(&Self, &Q) -> bool where K: Borrow<Q> +\nOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value for the specified key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68564,"byte_end":68633,"line_start":14,"line_end":14,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68638,"byte_end":68641,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the set's key type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68646,"byte_end":68738,"line_start":16,"line_end":16,"column_start":5,"column_end":97}},{"value":"/ form _must_ match the ordering on the key type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68743,"byte_end":68794,"line_start":17,"line_end":17,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68799,"byte_end":68808,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69245,"byte_end":69248,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedBTreeSet<K>>::get","value":"pub fn get<Q: Ord + ?Sized>(&Self, &Q) -> Option<&K> where K: Borrow<Q> + Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value int he set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value int he set, if any, that is equal to the given value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68962,"byte_end":69052,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69057,"byte_end":69060,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but the ordering on the borrowed","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69065,"byte_end":69161,"line_start":28,"line_end":28,"column_start":5,"column_end":101}},{"value":"/ form _must_ match the ordering on the value type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69166,"byte_end":69219,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69224,"byte_end":69233,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69486,"byte_end":69494,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedBTreeSet<K>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69409,"byte_end":69460,"line_start":38,"line_end":38,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69465,"byte_end":69474,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69638,"byte_end":69642,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedBTreeSet<K>>::iter","value":"pub fn iter(&Self) -> Keys<, K, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the set, in sorted order.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the set, in sorted order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69549,"byte_end":69612,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69617,"byte_end":69626,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69785,"byte_end":69788,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedBTreeSet<K>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in the archived B-tree set.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in the archived B-tree set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69700,"byte_end":69759,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69764,"byte_end":69773,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70148,"byte_end":70164,"line_start":64,"line_end":64,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedBTreeSet<K>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, BTreeSetResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves a B-tree set from its length.","sig":null,"attributes":[{"value":"/ Resolves a B-tree set from its length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69839,"byte_end":69881,"line_start":56,"line_end":56,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69886,"byte_end":69889,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69894,"byte_end":69906,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69911,"byte_end":69914,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69919,"byte_end":69982,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":69987,"byte_end":70047,"line_start":61,"line_end":61,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a B-tree set","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70052,"byte_end":70115,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70120,"byte_end":70129,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70797,"byte_end":70824,"line_start":86,"line_end":86,"column_start":23,"column_end":50},"name":"serialize_from_reverse_iter","qualname":"<ArchivedBTreeSet<K>>::serialize_from_reverse_iter","value":"pub unsafe fn serialize_from_reverse_iter<'a, UK, S, I>(I, &mut S)\n-> Result<BTreeSetResolver, S::Error> where UK: 'a + Serialize<S, Archived =\nK>, S: Serializer + ?Sized, I: ExactSizeIterator<Item = &'a UK>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an ordered iterator of key-value pairs as a B-tree map.","sig":null,"attributes":[{"value":"/ Serializes an ordered iterator of key-value pairs as a B-tree map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70530,"byte_end":70600,"line_start":80,"line_end":80,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70609,"byte_end":70612,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70621,"byte_end":70633,"line_start":82,"line_end":82,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70642,"byte_end":70645,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"/ - Keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70654,"byte_end":70704,"line_start":84,"line_end":84,"column_start":9,"column_end":59}},{"value":"/ - Keys must be in reverse sorted order from last to first","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70713,"byte_end":70774,"line_start":85,"line_end":85,"column_start":9,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":71690,"byte_end":71706,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"BTreeSetResolver","qualname":"::collections::btree_set::BTreeSetResolver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resolver for archived B-tree sets.\n","sig":null,"attributes":[{"value":"/ The resolver for archived B-tree sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":71636,"byte_end":71678,"line_start":117,"line_end":117,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_index","qualname":"::collections::hash_index","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":533},{"krate":0,"index":565},{"krate":0,"index":567}],"decl_id":null,"docs":" A helper type that archives index data for hashed collections using\n [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).\n","sig":null,"attributes":[{"value":"/ A helper type that archives index data for hashed collections using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":71845,"byte_end":71916,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":71917,"byte_end":71997,"line_start":2,"line_end":2,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72325,"byte_end":72342,"line_start":19,"line_end":19,"column_start":12,"column_end":29},"name":"ArchivedHashIndex","qualname":"::collections::hash_index::ArchivedHashIndex","value":"ArchivedHashIndex {  }","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"decl_id":null,"docs":" An archived hash index.\n","sig":null,"attributes":[{"value":"/ An archived hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72245,"byte_end":72272,"line_start":17,"line_end":17,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72519,"byte_end":72522,"line_start":27,"line_end":27,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedHashIndex>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the hash index.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72440,"byte_end":72487,"line_start":25,"line_end":25,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72492,"byte_end":72501,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72972,"byte_end":72978,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedHashIndex>::hasher","value":"pub fn hasher(&Self) -> HashBuilder","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this hash index. The hasher for all archived hash indexes is the same\n for reproducibility.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this hash index. The hasher for all archived hash indexes is the same","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72824,"byte_end":72917,"line_start":41,"line_end":41,"column_start":5,"column_end":98}},{"value":"/ for reproducibility.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72922,"byte_end":72946,"line_start":42,"line_end":42,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72951,"byte_end":72960,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":73557,"byte_end":73562,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"index","qualname":"<ArchivedHashIndex>::index","value":"pub fn index<K: Hash + ?Sized>(&Self, &K) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index where a key may be located in the hash index.","sig":null,"attributes":[{"value":"/ Returns the index where a key may be located in the hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":73311,"byte_end":73378,"line_start":58,"line_end":58,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":73383,"byte_end":73386,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The hash index does not have access to the keys used to build it, so the key at the returned","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":73391,"byte_end":73487,"line_start":60,"line_end":60,"column_start":5,"column_end":101}},{"value":"/ index must be checked for equality.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":73492,"byte_end":73531,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":73536,"byte_end":73545,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74288,"byte_end":74296,"line_start":84,"line_end":84,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedHashIndex>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no items in the hash index.\n","sig":null,"attributes":[{"value":"/ Returns whether there are no items in the hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74199,"byte_end":74256,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74261,"byte_end":74270,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74697,"byte_end":74713,"line_start":96,"line_end":96,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedHashIndex>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, HashIndexResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived hash index from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived hash index from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74349,"byte_end":74420,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74425,"byte_end":74428,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74433,"byte_end":74445,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74450,"byte_end":74453,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements in the hash index","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74458,"byte_end":74518,"line_start":92,"line_end":92,"column_start":5,"column_end":65}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74523,"byte_end":74583,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of building and serializing a hash index","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74588,"byte_end":74664,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":74669,"byte_end":74678,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75652,"byte_end":75671,"line_start":131,"line_end":131,"column_start":23,"column_end":42},"name":"build_and_serialize","qualname":"<ArchivedHashIndex>::build_and_serialize","value":"pub unsafe fn build_and_serialize<'a, K, V, S,\n                                  I>(I, &mut S,\n                                     &mut ScratchVec<MaybeUninit<(&'a K,\n                                                                  &'a V)>>)\n-> Result<HashIndexResolver, S::Error> where K: 'a + Hash, V: 'a,\nS: Serializer + ScratchSpace + ?Sized, I: ExactSizeIterator<Item =\n(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Builds and serializes a hash index from an iterator of key-value pairs.","sig":null,"attributes":[{"value":"/ Builds and serializes a hash index from an iterator of key-value pairs.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75333,"byte_end":75408,"line_start":124,"line_end":124,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75417,"byte_end":75420,"line_start":125,"line_end":125,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75429,"byte_end":75441,"line_start":126,"line_end":126,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75450,"byte_end":75453,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ - The keys returned by the iterator must be unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75462,"byte_end":75517,"line_start":128,"line_end":128,"column_start":9,"column_end":64}},{"value":"/ - `entries` must have a capacity of `iter.len()` entries.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75526,"byte_end":75587,"line_start":129,"line_end":129,"column_start":9,"column_end":70}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75596,"byte_end":75629,"line_start":130,"line_end":130,"column_start":9,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":80133,"byte_end":80150,"line_start":249,"line_end":249,"column_start":12,"column_end":29},"name":"HashIndexResolver","qualname":"::collections::hash_index::HashIndexResolver","value":"HashIndexResolver {  }","parent":null,"children":[{"krate":0,"index":568}],"decl_id":null,"docs":" The resolver for an archived hash index.\n","sig":null,"attributes":[{"value":"/ The resolver for an archived hash index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":80077,"byte_end":80121,"line_start":248,"line_end":248,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":569},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":623},{"krate":0,"index":656},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":682},{"krate":0,"index":688},{"krate":0,"index":695},{"krate":0,"index":700},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":745},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":764},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":783},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":802},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":821},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835}],"decl_id":null,"docs":" [`Archive`](crate::Archive) implementation for hashmaps.","sig":null,"attributes":[{"value":"/ [`Archive`](crate::Archive) implementation for hashmaps.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":80432,"byte_end":80492,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":80493,"byte_end":80496,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ During archiving, hashmaps are built into minimal perfect hashmaps using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":80497,"byte_end":80573,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":80574,"byte_end":80654,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81133,"byte_end":81148,"line_start":27,"line_end":27,"column_start":12,"column_end":27},"name":"ArchivedHashMap","qualname":"::collections::hash_map::ArchivedHashMap","value":"ArchivedHashMap {  }","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"decl_id":null,"docs":" An archived `HashMap`.\n","sig":null,"attributes":[{"value":"/ An archived `HashMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81054,"byte_end":81080,"line_start":25,"line_end":25,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81340,"byte_end":81343,"line_start":35,"line_end":35,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedHashMap<K, V>>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81263,"byte_end":81308,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81313,"byte_end":81322,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81539,"byte_end":81545,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedHashMap<K, V>>::hasher","value":"pub fn hasher(&Self) -> seahash::SeaHasher","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this hashmap. The hasher for all archived hashmaps is the same for\n reproducibility.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this hashmap. The hasher for all archived hashmaps is the same for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81398,"byte_end":81488,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/ reproducibility.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81493,"byte_end":81513,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81518,"byte_end":81527,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":82308,"byte_end":82321,"line_start":74,"line_end":74,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ArchivedHashMap<K, V>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Finds the key-value entry for a key.\n","sig":null,"attributes":[{"value":"/ Finds the key-value entry for a key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":82242,"byte_end":82282,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":82287,"byte_end":82296,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":82656,"byte_end":82673,"line_start":87,"line_end":87,"column_start":12,"column_end":29},"name":"get_key_value_pin","qualname":"<ArchivedHashMap<K, V>>::get_key_value_pin","value":"pub fn get_key_value_pin<Q: ?Sized>(Pin<&mut Self>, &Q)\n-> Option<(&K, Pin<&mut V>)> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Finds the mutable key-value entry for a key.\n","sig":null,"attributes":[{"value":"/ Finds the mutable key-value entry for a key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":82582,"byte_end":82630,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":82635,"byte_end":82644,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83158,"byte_end":83170,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedHashMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a key is present in the hash map.\n","sig":null,"attributes":[{"value":"/ Returns whether a key is present in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83079,"byte_end":83132,"line_start":101,"line_end":101,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83137,"byte_end":83146,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83381,"byte_end":83384,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedHashMap<K, V>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Gets the value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83306,"byte_end":83355,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83360,"byte_end":83369,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83661,"byte_end":83668,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ArchivedHashMap<K, V>>::get_pin","value":"pub fn get_pin<Q: ?Sized>(Pin<&mut Self>, &Q) -> Option<Pin<&mut V>> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the mutable value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83578,"byte_end":83635,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":83640,"byte_end":83649,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84104,"byte_end":84112,"line_start":139,"line_end":139,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedHashMap<K, V>>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84021,"byte_end":84072,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84077,"byte_end":84086,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84628,"byte_end":84632,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedHashMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the key-value entries in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the key-value entries in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84538,"byte_end":84602,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84607,"byte_end":84616,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84826,"byte_end":84834,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"iter_pin","qualname":"<ArchivedHashMap<K, V>>::iter_pin","value":"pub fn iter_pin(Pin<&mut Self>) -> IterPin<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the mutable key-value entries in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the mutable key-value entries in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84728,"byte_end":84800,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84805,"byte_end":84814,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85032,"byte_end":85036,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"keys","qualname":"<ArchivedHashMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":84955,"byte_end":85006,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85011,"byte_end":85020,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85211,"byte_end":85217,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"values","qualname":"<ArchivedHashMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85132,"byte_end":85185,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85190,"byte_end":85199,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85404,"byte_end":85414,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"values_pin","qualname":"<ArchivedHashMap<K, V>>::values_pin","value":"pub fn values_pin(Pin<&mut Self>) -> ValuesPin<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the mutable values in the hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the mutable values in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85317,"byte_end":85378,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85383,"byte_end":85392,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85873,"byte_end":85889,"line_start":204,"line_end":204,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedHashMap<K, V>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, HashMapResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived hash map from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived hash map from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85539,"byte_end":85608,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85613,"byte_end":85616,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85621,"byte_end":85633,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85638,"byte_end":85641,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85646,"byte_end":85709,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85714,"byte_end":85774,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85779,"byte_end":85840,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":85845,"byte_end":85854,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86531,"byte_end":86550,"line_start":226,"line_end":226,"column_start":23,"column_end":42},"name":"serialize_from_iter","qualname":"<ArchivedHashMap<K, V>>::serialize_from_iter","value":"pub unsafe fn serialize_from_iter<'a, KU, VU, S, I>(I, &mut S)\n-> Result<HashMapResolver, S::Error> where KU: 'a + Serialize<S, Archived =\nK> + Hash + Eq, VU: 'a + Serialize<S, Archived = V>, S: Serializer +\nScratchSpace + ?Sized, I: ExactSizeIterator<Item = (&'a KU, &'a VU)>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of key-value pairs as a hash map.","sig":null,"attributes":[{"value":"/ Serializes an iterator of key-value pairs as a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86341,"byte_end":86401,"line_start":221,"line_end":221,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86410,"byte_end":86413,"line_start":222,"line_end":222,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86422,"byte_end":86434,"line_start":223,"line_end":223,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86443,"byte_end":86446,"line_start":224,"line_end":224,"column_start":9,"column_end":12}},{"value":"/ The keys returned by the iterator must be unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86455,"byte_end":86508,"line_start":225,"line_end":225,"column_start":9,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91073,"byte_end":91077,"line_start":390,"line_end":390,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":744}],"decl_id":null,"docs":" An iterator over the key-value pairs of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key-value pairs of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90985,"byte_end":91040,"line_start":388,"line_end":388,"column_start":1,"column_end":56}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91041,"byte_end":91061,"line_start":389,"line_end":389,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91689,"byte_end":91696,"line_start":416,"line_end":416,"column_start":12,"column_end":19},"name":"IterPin","qualname":"::collections::hash_map::IterPin","value":"IterPin {  }","parent":null,"children":[{"krate":0,"index":763}],"decl_id":null,"docs":" An iterator over the mutable key-value pairs of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the mutable key-value pairs of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91593,"byte_end":91656,"line_start":414,"line_end":414,"column_start":1,"column_end":64}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91657,"byte_end":91677,"line_start":415,"line_end":415,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92338,"byte_end":92342,"line_start":442,"line_end":442,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::hash_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":782}],"decl_id":null,"docs":" An iterator over the keys of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92261,"byte_end":92305,"line_start":440,"line_end":440,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92306,"byte_end":92326,"line_start":441,"line_end":441,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92913,"byte_end":92919,"line_start":468,"line_end":468,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::hash_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":" An iterator over the values of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92834,"byte_end":92880,"line_start":466,"line_end":466,"column_start":1,"column_end":47}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92881,"byte_end":92901,"line_start":467,"line_end":467,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":816},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93506,"byte_end":93515,"line_start":494,"line_end":494,"column_start":12,"column_end":21},"name":"ValuesPin","qualname":"::collections::hash_map::ValuesPin","value":"ValuesPin {  }","parent":null,"children":[{"krate":0,"index":820}],"decl_id":null,"docs":" An iterator over the mutable values of a hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over the mutable values of a hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93419,"byte_end":93473,"line_start":492,"line_end":492,"column_start":1,"column_end":55}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93474,"byte_end":93494,"line_start":493,"line_end":493,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":94116,"byte_end":94131,"line_start":519,"line_end":519,"column_start":12,"column_end":27},"name":"HashMapResolver","qualname":"::collections::hash_map::HashMapResolver","value":"HashMapResolver {  }","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" The resolver for archived hash maps.\n","sig":null,"attributes":[{"value":"/ The resolver for archived hash maps.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":94064,"byte_end":94104,"line_start":518,"line_end":518,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":838},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":874},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901}],"decl_id":null,"docs":" [`Archive`](crate::Archive) implementation for hashsets.","sig":null,"attributes":[{"value":"/ [`Archive`](crate::Archive) implementation for hashsets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":94722,"byte_end":94782,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":94783,"byte_end":94786,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ During archiving, hashsets are built into minimal perfect hashsets using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":94787,"byte_end":94863,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ [compress, hash and displace](http://cmph.sourceforge.net/papers/esa09.pdf).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":94864,"byte_end":94944,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95367,"byte_end":95382,"line_start":18,"line_end":18,"column_start":12,"column_end":27},"name":"ArchivedHashSet","qualname":"::collections::hash_set::ArchivedHashSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived `HashSet`. This is a wrapper around a hash map with the same key and a value of\n `()`.\n","sig":null,"attributes":[{"value":"/ An archived `HashSet`. This is a wrapper around a hash map with the same key and a value of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95162,"byte_end":95257,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95258,"byte_end":95267,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95335,"byte_end":95355,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95522,"byte_end":95525,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedHashSet<K>>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the hash set.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95445,"byte_end":95490,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95495,"byte_end":95504,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95666,"byte_end":95669,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedHashSet<K>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&K> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Gets the key corresponding to the given key in the hash set.\n","sig":null,"attributes":[{"value":"/ Gets the key corresponding to the given key in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95576,"byte_end":95640,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95645,"byte_end":95654,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95907,"byte_end":95915,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedHashSet<K>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the given key is in the hash set.\n","sig":null,"attributes":[{"value":"/ Returns whether the given key is in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95828,"byte_end":95881,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95886,"byte_end":95895,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96155,"byte_end":96161,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedHashSet<K>>::hasher","value":"pub fn hasher(&Self) -> seahash::SeaHasher","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for the underlying hash map.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for the underlying hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96051,"byte_end":96099,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96104,"byte_end":96129,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96134,"byte_end":96143,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96315,"byte_end":96323,"line_start":56,"line_end":56,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedHashSet<K>>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no items in the hash set.\n","sig":null,"attributes":[{"value":"/ Returns whether there are no items in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96228,"byte_end":96283,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96288,"byte_end":96297,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96466,"byte_end":96470,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedHashSet<K>>::iter","value":"pub fn iter(&Self) -> Keys<, K, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the underlying hash map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the underlying hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96378,"byte_end":96440,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96445,"byte_end":96454,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96864,"byte_end":96880,"line_start":74,"line_end":74,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedHashSet<K>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, HashSetResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived hash set from the given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived hash set from the given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96528,"byte_end":96599,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96604,"byte_end":96607,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96612,"byte_end":96624,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96629,"byte_end":96632,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96637,"byte_end":96700,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96705,"byte_end":96765,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96770,"byte_end":96831,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":96836,"byte_end":96845,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97319,"byte_end":97338,"line_start":91,"line_end":91,"column_start":19,"column_end":38},"name":"serialize_from_iter","qualname":"<ArchivedHashSet<K>>::serialize_from_iter","value":"pub unsafe fn serialize_from_iter<'a, KU, S, I>(I, &mut S)\n-> Result<HashSetResolver, S::Error> where KU: 'a + Serialize<S, Archived =\nK> + Hash + Eq, S: Serializer + ScratchSpace + ?Sized,\nI: ExactSizeIterator<Item = &'a KU>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of keys as a hash set.","sig":null,"attributes":[{"value":"/ Serializes an iterator of keys as a hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97116,"byte_end":97165,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97170,"byte_end":97173,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97178,"byte_end":97190,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97195,"byte_end":97198,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The keys returned by the iterator must be unique.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97203,"byte_end":97256,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97261,"byte_end":97286,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97291,"byte_end":97300,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97986,"byte_end":98001,"line_start":114,"line_end":114,"column_start":12,"column_end":27},"name":"HashSetResolver","qualname":"::collections::hash_set::HashSetResolver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resolver for archived hash sets.\n","sig":null,"attributes":[{"value":"/ The resolver for archived hash sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97934,"byte_end":97974,"line_start":113,"line_end":113,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":903},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"index_map","qualname":"::collections::index_map","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":950},{"krate":0,"index":982},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1022},{"krate":0,"index":1027},{"krate":0,"index":1034},{"krate":0,"index":1038},{"krate":0,"index":1042},{"krate":0,"index":1047},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1065},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1084},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098}],"decl_id":null,"docs":" Archived index map implementation.\n","sig":null,"attributes":[{"value":"/ Archived index map implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":98337,"byte_end":98375,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":944},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":98714,"byte_end":98730,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"ArchivedIndexMap","qualname":"::collections::index_map::ArchivedIndexMap","value":"ArchivedIndexMap {  }","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"decl_id":null,"docs":" An archived `IndexMap`.\n","sig":null,"attributes":[{"value":"/ An archived `IndexMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":98634,"byte_end":98661,"line_start":12,"line_end":12,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":99662,"byte_end":99674,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<ArchivedIndexMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a key is present in the hash map.\n","sig":null,"attributes":[{"value":"/ Returns whether a key is present in the hash map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":99583,"byte_end":99636,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":99641,"byte_end":99650,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":99873,"byte_end":99878,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"first","qualname":"<ArchivedIndexMap<K, V>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first key-value pair.\n","sig":null,"attributes":[{"value":"/ Returns the first key-value pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":99810,"byte_end":99847,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":99852,"byte_end":99861,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100163,"byte_end":100166,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedIndexMap<K, V>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Gets the value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100088,"byte_end":100137,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100142,"byte_end":100151,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100451,"byte_end":100459,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"get_full","qualname":"<ArchivedIndexMap<K, V>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the index, key, and value associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the index, key, and value associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100360,"byte_end":100425,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100430,"byte_end":100439,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100791,"byte_end":100800,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"get_index","qualname":"<ArchivedIndexMap<K, V>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Gets a key-value pair by index.\n","sig":null,"attributes":[{"value":"/ Gets a key-value pair by index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100730,"byte_end":100765,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":100770,"byte_end":100779,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101109,"byte_end":101121,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<ArchivedIndexMap<K, V>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the index of a key if it exists in the map.\n","sig":null,"attributes":[{"value":"/ Gets the index of a key if it exists in the map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101031,"byte_end":101083,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101088,"byte_end":101097,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101344,"byte_end":101357,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<ArchivedIndexMap<K, V>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the key-value pair associated with the given key.\n","sig":null,"attributes":[{"value":"/ Gets the key-value pair associated with the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101260,"byte_end":101318,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101323,"byte_end":101332,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101679,"byte_end":101685,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedIndexMap<K, V>>::hasher","value":"pub fn hasher(&Self) -> HashBuilder","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this index map.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101614,"byte_end":101653,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101658,"byte_end":101667,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101832,"byte_end":101840,"line_start":135,"line_end":135,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<ArchivedIndexMap<K, V>>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101749,"byte_end":101800,"line_start":133,"line_end":133,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":101805,"byte_end":101814,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102113,"byte_end":102117,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedIndexMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the key-value pairs of the map in order\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the key-value pairs of the map in order","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102019,"byte_end":102087,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102092,"byte_end":102101,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102296,"byte_end":102300,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"keys","qualname":"<ArchivedIndexMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys of the map in order\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys of the map in order","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102213,"byte_end":102270,"line_start":152,"line_end":152,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102275,"byte_end":102284,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102458,"byte_end":102462,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"last","qualname":"<ArchivedIndexMap<K, V>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last key-value pair.\n","sig":null,"attributes":[{"value":"/ Returns the last key-value pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102396,"byte_end":102432,"line_start":160,"line_end":160,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102437,"byte_end":102446,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102763,"byte_end":102766,"line_start":173,"line_end":173,"column_start":18,"column_end":21},"name":"len","qualname":"<ArchivedIndexMap<K, V>>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of items in the index map.\n","sig":null,"attributes":[{"value":"/ Gets the number of items in the index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102685,"byte_end":102731,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102736,"byte_end":102745,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102907,"byte_end":102913,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"values","qualname":"<ArchivedIndexMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values of the map in order.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the values of the map in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102821,"byte_end":102881,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":102886,"byte_end":102895,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103334,"byte_end":103350,"line_start":192,"line_end":192,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedIndexMap<K, V>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, IndexMapResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived index map from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived index map from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103013,"byte_end":103083,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103088,"byte_end":103091,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103096,"byte_end":103108,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103113,"byte_end":103116,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103121,"byte_end":103184,"line_start":189,"line_end":189,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103189,"byte_end":103249,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103254,"byte_end":103315,"line_start":191,"line_end":191,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":104282,"byte_end":104307,"line_start":223,"line_end":223,"column_start":23,"column_end":48},"name":"serialize_from_iter_index","qualname":"<ArchivedIndexMap<K, V>>::serialize_from_iter_index","value":"pub unsafe fn serialize_from_iter_index<'a, UK, UV, I, F, S>(I, F, &mut S)\n-> Result<IndexMapResolver, S::Error> where UK: 'a + Serialize<S, Archived =\nK> + Hash + Eq, UV: 'a + Serialize<S, Archived = V>, I: Clone +\nExactSizeIterator<Item = (&'a UK, &'a UV)>, F: Fn(&UK) -> usize,\nS: Serializer + ScratchSpace + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of key-value pairs as an index map.","sig":null,"attributes":[{"value":"/ Serializes an iterator of key-value pairs as an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103997,"byte_end":104059,"line_start":217,"line_end":217,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":104068,"byte_end":104071,"line_start":218,"line_end":218,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":104080,"byte_end":104092,"line_start":219,"line_end":219,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":104101,"byte_end":104104,"line_start":220,"line_end":220,"column_start":9,"column_end":12}},{"value":"/ - The keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":104113,"byte_end":104167,"line_start":221,"line_end":221,"column_start":9,"column_end":63}},{"value":"/ - The index function must return the index of the given key within the iterator","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":104176,"byte_end":104259,"line_start":222,"line_end":222,"column_start":9,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107699,"byte_end":107703,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::index_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1046}],"decl_id":null,"docs":" An iterator over the key-value pairs of an index map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key-value pairs of an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107609,"byte_end":107666,"line_start":332,"line_end":332,"column_start":1,"column_end":58}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107667,"byte_end":107687,"line_start":333,"line_end":333,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108205,"byte_end":108209,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::index_map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":1064}],"decl_id":null,"docs":" An iterator over the keys of an index map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108126,"byte_end":108172,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108173,"byte_end":108193,"line_start":356,"line_end":356,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108720,"byte_end":108726,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::index_map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":1083}],"decl_id":null,"docs":" An iterator over the values of an index map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of an index map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108639,"byte_end":108687,"line_start":378,"line_end":378,"column_start":1,"column_end":49}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108688,"byte_end":108708,"line_start":379,"line_end":379,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":109237,"byte_end":109253,"line_start":404,"line_end":404,"column_start":12,"column_end":28},"name":"IndexMapResolver","qualname":"::collections::index_map::IndexMapResolver","value":"IndexMapResolver {  }","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":" The resolver for an `IndexMap`.\n","sig":null,"attributes":[{"value":"/ The resolver for an `IndexMap`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":109190,"byte_end":109225,"line_start":403,"line_end":403,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1102},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"index_set","qualname":"::collections::index_set","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1157},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184}],"decl_id":null,"docs":" Archived index set implementation.\n","sig":null,"attributes":[{"value":"/ Archived index set implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":109753,"byte_end":109791,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110052,"byte_end":110068,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"ArchivedIndexSet","qualname":"::collections::index_set::ArchivedIndexSet","value":"ArchivedIndexSet {  }","parent":null,"children":[{"krate":0,"index":1133}],"decl_id":null,"docs":" An archived `IndexSet`.\n","sig":null,"attributes":[{"value":"/ An archived `IndexSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":109992,"byte_end":110019,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110020,"byte_end":110040,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110226,"byte_end":110234,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedIndexSet<K>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a key is present in the hash set.\n","sig":null,"attributes":[{"value":"/ Returns whether a key is present in the hash set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110147,"byte_end":110200,"line_start":19,"line_end":19,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110205,"byte_end":110214,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110426,"byte_end":110431,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"first","qualname":"<ArchivedIndexSet<K>>::first","value":"pub fn first(&Self) -> Option<&K>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first key.\n","sig":null,"attributes":[{"value":"/ Returns the first key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110374,"byte_end":110400,"line_start":29,"line_end":29,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110405,"byte_end":110414,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110583,"byte_end":110586,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedIndexSet<K>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&K> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns the value stored in the set, if any.\n","sig":null,"attributes":[{"value":"/ Returns the value stored in the set, if any.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110509,"byte_end":110557,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110562,"byte_end":110571,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110836,"byte_end":110844,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"get_full","qualname":"<ArchivedIndexSet<K>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the item index and value stored in the set, if any.\n","sig":null,"attributes":[{"value":"/ Returns the item index and value stored in the set, if any.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110747,"byte_end":110810,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110815,"byte_end":110824,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111069,"byte_end":111078,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"get_index","qualname":"<ArchivedIndexSet<K>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&K>","parent":null,"children":[],"decl_id":null,"docs":" Gets a key by index.\n","sig":null,"attributes":[{"value":"/ Gets a key by index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111019,"byte_end":111043,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111048,"byte_end":111057,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111260,"byte_end":111272,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<ArchivedIndexSet<K>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a key if it exists in the set.\n","sig":null,"attributes":[{"value":"/ Returns the index of a key if it exists in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111179,"byte_end":111234,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111239,"byte_end":111248,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111490,"byte_end":111496,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"hasher","qualname":"<ArchivedIndexSet<K>>::hasher","value":"pub fn hasher(&Self) -> HashBuilder","parent":null,"children":[],"decl_id":null,"docs":" Gets the hasher for this index set.\n","sig":null,"attributes":[{"value":"/ Gets the hasher for this index set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111425,"byte_end":111464,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111469,"byte_end":111478,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111639,"byte_end":111647,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedIndexSet<K>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the index set contains no values.\n","sig":null,"attributes":[{"value":"/ Returns whether the index set contains no values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111560,"byte_end":111613,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111618,"byte_end":111627,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111796,"byte_end":111800,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedIndexSet<K>>::iter","value":"pub fn iter(&Self) -> Keys<, K, ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys of the index set in order.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys of the index set in order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111706,"byte_end":111770,"line_start":83,"line_end":83,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111775,"byte_end":111784,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111913,"byte_end":111917,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"last","qualname":"<ArchivedIndexSet<K>>::last","value":"pub fn last(&Self) -> Option<&K>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last key.\n","sig":null,"attributes":[{"value":"/ Returns the last key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111862,"byte_end":111887,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111892,"byte_end":111901,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112072,"byte_end":112075,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedIndexSet<K>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the index set.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the index set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":111994,"byte_end":112046,"line_start":95,"line_end":95,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112051,"byte_end":112060,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112465,"byte_end":112481,"line_start":109,"line_end":109,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedIndexSet<K>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, IndexSetResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived index map from a given length and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived index map from a given length and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112130,"byte_end":112200,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112205,"byte_end":112208,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112213,"byte_end":112225,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112230,"byte_end":112233,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ - `len` must be the number of elements that were serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112238,"byte_end":112301,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112306,"byte_end":112366,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a hash map","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112371,"byte_end":112432,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112437,"byte_end":112446,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":113182,"byte_end":113207,"line_start":135,"line_end":135,"column_start":23,"column_end":48},"name":"serialize_from_iter_index","qualname":"<ArchivedIndexSet<K>>::serialize_from_iter_index","value":"pub unsafe fn serialize_from_iter_index<'a, UK, I, F, S>(I, F, &mut S)\n-> Result<IndexSetResolver, S::Error> where UK: 'a + Hash + Eq + Serialize<S,\nArchived = K>, I: Clone + ExactSizeIterator<Item = &'a UK>, F: Fn(&UK) ->\nusize, S: ScratchSpace + Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an iterator of keys as an index set.","sig":null,"attributes":[{"value":"/ Serializes an iterator of keys as an index set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112890,"byte_end":112941,"line_start":128,"line_end":128,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112950,"byte_end":112953,"line_start":129,"line_end":129,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112962,"byte_end":112974,"line_start":130,"line_end":130,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112983,"byte_end":112986,"line_start":131,"line_end":131,"column_start":9,"column_end":12}},{"value":"/ - The keys returned by the iterator must be unique","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112995,"byte_end":113049,"line_start":132,"line_end":132,"column_start":9,"column_end":63}},{"value":"/ - The index function must return the index of the given key within the iterator","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":113058,"byte_end":113141,"line_start":133,"line_end":133,"column_start":9,"column_end":92}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":113150,"byte_end":113159,"line_start":134,"line_end":134,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1184},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":114194,"byte_end":114210,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"IndexSetResolver","qualname":"::collections::index_set::IndexSetResolver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The resolver for `IndexSet`.\n","sig":null,"attributes":[{"value":"/ The resolver for `IndexSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":114150,"byte_end":114182,"line_start":169,"line_end":169,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::collections::util","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":5472},{"krate":0,"index":5477},{"krate":0,"index":5481},{"krate":0,"index":5484},{"krate":0,"index":1198},{"krate":0,"index":1204},{"krate":0,"index":1209}],"decl_id":null,"docs":" Utilities for archived collections.\n","sig":null,"attributes":[{"value":"/ Utilities for archived collections.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114401,"byte_end":114440,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5472},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114682,"byte_end":114687,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Entry","qualname":"::collections::util::Entry","value":"Entry { key, value }","parent":null,"children":[{"krate":0,"index":5475},{"krate":0,"index":5476}],"decl_id":null,"docs":" A simple key-value pair.","sig":null,"attributes":[{"value":"/ A simple key-value pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114486,"byte_end":114514,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114515,"byte_end":114518,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is typically used by associative containers that store keys and values together.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114519,"byte_end":114608,"line_start":7,"line_end":7,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":5475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114733,"byte_end":114736,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"key","qualname":"::collections::util::Entry::key","value":"K","parent":{"krate":0,"index":5472},"children":[],"decl_id":null,"docs":" The key of the pair.\n","sig":null,"attributes":[{"value":"/ The key of the pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114700,"byte_end":114724,"line_start":11,"line_end":11,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114780,"byte_end":114785,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"value","qualname":"::collections::util::Entry::value","value":"V","parent":{"krate":0,"index":5472},"children":[],"decl_id":null,"docs":" The value of the pair.\n","sig":null,"attributes":[{"value":"/ The value of the pair.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114745,"byte_end":114771,"line_start":13,"line_end":13,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1233},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1291}],"decl_id":null,"docs":" Deserialization traits, deserializers, and adapters.\n","sig":null,"attributes":[{"value":"/ Deserialization traits, deserializers, and adapters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":115892,"byte_end":115948,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1234},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deserializers","qualname":"::de::deserializers","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/mod.rs","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1275}],"decl_id":null,"docs":" Deserializers that can be used standalone and provide basic capabilities.\n","sig":null,"attributes":[{"value":"/ Deserializers that can be used standalone and provide basic capabilities.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/mod.rs","byte_start":118368,"byte_end":118445,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5489},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119066,"byte_end":119088,"line_start":19,"line_end":19,"column_start":5,"column_end":27},"name":"DuplicateSharedPointer","qualname":"::de::deserializers::alloc::SharedDeserializeMapError::DuplicateSharedPointer","value":"SharedDeserializeMapError::DuplicateSharedPointer(*const u8)","parent":{"krate":0,"index":5488},"children":[],"decl_id":null,"docs":" A shared pointer was added multiple times\n","sig":null,"attributes":[{"value":"/ A shared pointer was added multiple times","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119016,"byte_end":119061,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":5488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":118984,"byte_end":119009,"line_start":17,"line_end":17,"column_start":10,"column_end":35},"name":"SharedDeserializeMapError","qualname":"::de::deserializers::alloc::SharedDeserializeMapError","value":"pub enum SharedDeserializeMapError { DuplicateSharedPointer(*const u8), }","parent":null,"children":[{"krate":0,"index":5489}],"decl_id":null,"docs":" An error that can occur while deserializing shared pointers.\n","sig":null,"attributes":[{"value":"/ An error that can occur while deserializing shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":118893,"byte_end":118957,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119558,"byte_end":119578,"line_start":38,"line_end":38,"column_start":12,"column_end":32},"name":"SharedDeserializeMap","qualname":"::de::deserializers::alloc::SharedDeserializeMap","value":"SharedDeserializeMap {  }","parent":null,"children":[{"krate":0,"index":1261}],"decl_id":null,"docs":" An adapter that adds shared deserialization support to a deserializer.\n","sig":null,"attributes":[{"value":"/ An adapter that adds shared deserialization support to a deserializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119472,"byte_end":119546,"line_start":37,"line_end":37,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119781,"byte_end":119784,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedDeserializeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given deserializer and adds shared memory support.\n","sig":null,"attributes":[{"value":"/ Wraps the given deserializer and adds shared memory support.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119691,"byte_end":119755,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119760,"byte_end":119769,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1289},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116269,"byte_end":116282,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"SharedPointer","qualname":"::de::SharedPointer","value":"SharedPointer","parent":null,"children":[{"krate":0,"index":1290}],"decl_id":null,"docs":" A deserializable shared pointer type.\n","sig":null,"attributes":[{"value":"/ A deserializable shared pointer type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116191,"byte_end":116232,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116233,"byte_end":116258,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116350,"byte_end":116362,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"data_address","qualname":"::de::SharedPointer::data_address","value":"pub fn data_address(&Self) -> *const ()","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Returns the data address for this shared pointer.\n","sig":null,"attributes":[{"value":"/ Returns the data address for this shared pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116289,"byte_end":116342,"line_start":15,"line_end":15,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1291},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116541,"byte_end":116566,"line_start":23,"line_end":23,"column_start":11,"column_end":36},"name":"SharedDeserializeRegistry","qualname":"::de::SharedDeserializeRegistry","value":"SharedDeserializeRegistry: Fallible","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"decl_id":null,"docs":" A registry that tracks deserialized shared memory.","sig":null,"attributes":[{"value":"/ A registry that tracks deserialized shared memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116387,"byte_end":116441,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116442,"byte_end":116445,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This trait is required to deserialize shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116446,"byte_end":116504,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116505,"byte_end":116530,"line_start":22,"line_end":22,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116661,"byte_end":116675,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"get_shared_ptr","qualname":"::de::SharedDeserializeRegistry::get_shared_ptr","value":"pub fn get_shared_ptr(&mut Self, *const u8) -> Option<&dyn SharedPointer>","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" Gets the data pointer of a previously-deserialized shared pointer.\n","sig":null,"attributes":[{"value":"/ Gets the data pointer of a previously-deserialized shared pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116583,"byte_end":116653,"line_start":24,"line_end":24,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116822,"byte_end":116836,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"add_shared_ptr","qualname":"::de::SharedDeserializeRegistry::add_shared_ptr","value":"pub fn add_shared_ptr(&mut Self, *const u8, Box<dyn SharedPointer>)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" Adds the data address of a deserialized shared pointer to the registry.\n","sig":null,"attributes":[{"value":"/ Adds the data address of a deserialized shared pointer to the registry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116739,"byte_end":116814,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":117174,"byte_end":117192,"line_start":37,"line_end":37,"column_start":8,"column_end":26},"name":"deserialize_shared","qualname":"::de::SharedDeserializeRegistry::deserialize_shared","value":"pub fn deserialize_shared<T, P, F, A>(&mut Self, &T::Archived, F, A)\n-> Result<*const T, Self::Error> where T: ArchiveUnsized + ?Sized,\nP: SharedPointer + 'static, F: FnOnce(*mut T) -> P, A: FnMut(Layout) ->\n*mut u8, T::Archived: DeserializeUnsized<T, Self>","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" Checks whether the given reference has been deserialized and either uses the existing shared\n pointer to it, or deserializes it and converts it to a shared pointer with `to_shared`.\n","sig":null,"attributes":[{"value":"/ Checks whether the given reference has been deserialized and either uses the existing shared","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116960,"byte_end":117056,"line_start":34,"line_end":34,"column_start":5,"column_end":101}},{"value":"/ pointer to it, or deserializes it and converts it to a shared pointer with `to_shared`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":117061,"byte_end":117152,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":117157,"byte_end":117166,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1299},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffi","qualname":"::ffi","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383}],"decl_id":null,"docs":" Archived versions of FFI types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7564,"byte_end":7587,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ Archived versions of FFI types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121161,"byte_end":121196,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121548,"byte_end":121563,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"ArchivedCString","qualname":"::ffi::ArchivedCString","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived [`CString`](std::ffi::CString).","sig":null,"attributes":[{"value":"/ An archived [`CString`](std::ffi::CString).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121414,"byte_end":121461,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121462,"byte_end":121465,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Uses a [`RelPtr`] to a `CStr` under the hood.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121466,"byte_end":121515,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121516,"byte_end":121536,"line_start":15,"line_end":15,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121957,"byte_end":121965,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ArchivedCString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this CString as a slice of bytes.","sig":null,"attributes":[{"value":"/ Returns the contents of this CString as a slice of bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121607,"byte_end":121668,"line_start":19,"line_end":19,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121673,"byte_end":121676,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ The returned slice does **not** contain the trailing nul terminator, and it is guaranteed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121681,"byte_end":121777,"line_start":21,"line_end":21,"column_start":5,"column_end":101}},{"value":"/ not have any interior nul bytes. If you need the nul terminator, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121782,"byte_end":121854,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ [`as_bytes_with_nul`][ArchivedCString::as_bytes_with_nul()] instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121859,"byte_end":121931,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121936,"byte_end":121945,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122192,"byte_end":122209,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"as_bytes_with_nul","qualname":"<ArchivedCString>::as_bytes_with_nul","value":"pub fn as_bytes_with_nul(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`as_bytes`][ArchivedCString::as_bytes()] except that the returned slice\n includes the trailing nul terminator.\n","sig":null,"attributes":[{"value":"/ Equivalent to [`as_bytes`][ArchivedCString::as_bytes()] except that the returned slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122030,"byte_end":122120,"line_start":29,"line_end":29,"column_start":5,"column_end":95}},{"value":"/ includes the trailing nul terminator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122125,"byte_end":122166,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122171,"byte_end":122180,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122366,"byte_end":122374,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"as_c_str","qualname":"<ArchivedCString>::as_c_str","value":"pub fn as_c_str(&Self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":" Extracts a `CStr` slice containing the entire string.\n","sig":null,"attributes":[{"value":"/ Extracts a `CStr` slice containing the entire string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122283,"byte_end":122340,"line_start":36,"line_end":36,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122345,"byte_end":122354,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122539,"byte_end":122552,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"pin_mut_c_str","qualname":"<ArchivedCString>::pin_mut_c_str","value":"pub fn pin_mut_c_str(Pin<&mut Self>) -> Pin<&mut CStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a pinned mutable `CStr` slice containing the entire string.\n","sig":null,"attributes":[{"value":"/ Extracts a pinned mutable `CStr` slice containing the entire string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122441,"byte_end":122513,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122518,"byte_end":122527,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122946,"byte_end":122964,"line_start":55,"line_end":55,"column_start":19,"column_end":37},"name":"resolve_from_c_str","qualname":"<ArchivedCString>::resolve_from_c_str","value":"pub unsafe fn resolve_from_c_str(&CStr, usize, CStringResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived C string from the given C string and parameters.","sig":null,"attributes":[{"value":"/ Resolves an archived C string from the given C string and parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122676,"byte_end":122749,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122754,"byte_end":122757,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122762,"byte_end":122774,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122779,"byte_end":122782,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122787,"byte_end":122847,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing a C string","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122852,"byte_end":122913,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":122918,"byte_end":122927,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123395,"byte_end":123415,"line_start":69,"line_end":69,"column_start":12,"column_end":32},"name":"serialize_from_c_str","qualname":"<ArchivedCString>::serialize_from_c_str","value":"pub fn serialize_from_c_str<S: Serializer + ?Sized>(&CStr, &mut S)\n-> Result<CStringResolver, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a C string.\n","sig":null,"attributes":[{"value":"/ Serializes a C string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123343,"byte_end":123369,"line_start":67,"line_end":67,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123374,"byte_end":123383,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":125434,"byte_end":125449,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"CStringResolver","qualname":"::ffi::CStringResolver","value":"CStringResolver {  }","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" The resolver for `CString`.\n","sig":null,"attributes":[{"value":"/ The resolver for `CString`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":125391,"byte_end":125422,"line_start":162,"line_end":162,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134051,"byte_end":134059,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"RcFlavor","qualname":"::impls::alloc::rc::RcFlavor","value":"","parent":null,"children":[],"decl_id":null,"docs":" The flavor type for `Rc`.\n","sig":null,"attributes":[{"value":"/ The flavor type for `Rc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134010,"byte_end":134039,"line_start":16,"line_end":16,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1673},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137342,"byte_end":137351,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"ArcFlavor","qualname":"::impls::alloc::rc::ArcFlavor","value":"","parent":null,"children":[],"decl_id":null,"docs":" The flavor type for `Arc`.\n","sig":null,"attributes":[{"value":"/ The flavor type for `Arc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137300,"byte_end":137330,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":198864,"byte_end":198871,"line_start":19,"line_end":19,"column_start":18,"column_end":25},"name":"as_ipv4","qualname":"<ArchivedIpv4Addr>::as_ipv4","value":"pub const fn as_ipv4(&Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Ipv4Addr`](std::net::Ipv4Addr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns an [`Ipv4Addr`](std::net::Ipv4Addr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":198764,"byte_end":198832,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":198837,"byte_end":198846,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199209,"byte_end":199221,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"name":"is_broadcast","qualname":"<ArchivedIpv4Addr>::is_broadcast","value":"pub const fn is_broadcast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a broadcast address (255.255.255.255).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a broadcast address (255.255.255.255).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199006,"byte_end":199074,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199079,"byte_end":199082,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_broadcast()`](std::net::Ipv4Addr::is_broadcast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199087,"byte_end":199177,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199182,"byte_end":199191,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199509,"byte_end":199525,"line_start":36,"line_end":36,"column_start":18,"column_end":34},"name":"is_documentation","qualname":"<ArchivedIpv4Addr>::is_documentation","value":"pub const fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this address is in a range designated for documentation.","sig":null,"attributes":[{"value":"/ Returns `true` if this address is in a range designated for documentation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199288,"byte_end":199366,"line_start":32,"line_end":32,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199371,"byte_end":199374,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_documentation()`](std::net::Ipv4Addr::is_documentation()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199379,"byte_end":199477,"line_start":34,"line_end":34,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199482,"byte_end":199491,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199798,"byte_end":199811,"line_start":44,"line_end":44,"column_start":18,"column_end":31},"name":"is_link_local","qualname":"<ArchivedIpv4Addr>::is_link_local","value":"pub const fn is_link_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is link-local (169.254.0.0/16).","sig":null,"attributes":[{"value":"/ Returns `true` if the address is link-local (169.254.0.0/16).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199596,"byte_end":199661,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199666,"byte_end":199669,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_link_local()`](std::net::Ipv4Addr::is_link_local()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199674,"byte_end":199766,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199771,"byte_end":199780,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200075,"byte_end":200086,"line_start":52,"line_end":52,"column_start":18,"column_end":29},"name":"is_loopback","qualname":"<ArchivedIpv4Addr>::is_loopback","value":"pub const fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a loopback address (127.0.0.0/8).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a loopback address (127.0.0.0/8).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199879,"byte_end":199942,"line_start":48,"line_end":48,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199947,"byte_end":199950,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_loopback()`](std::net::Ipv4Addr::is_loopback()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":199955,"byte_end":200043,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200048,"byte_end":200057,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200351,"byte_end":200363,"line_start":60,"line_end":60,"column_start":18,"column_end":30},"name":"is_multicast","qualname":"<ArchivedIpv4Addr>::is_multicast","value":"pub const fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a multicast address (224.0.0.0/4).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a multicast address (224.0.0.0/4).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200152,"byte_end":200216,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200221,"byte_end":200224,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_multicast()`](std::net::Ipv4Addr::is_multicast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200229,"byte_end":200319,"line_start":58,"line_end":58,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200324,"byte_end":200333,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200609,"byte_end":200619,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"name":"is_private","qualname":"<ArchivedIpv4Addr>::is_private","value":"pub const fn is_private(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a private address.","sig":null,"attributes":[{"value":"/ Returns `true` if this is a private address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200430,"byte_end":200478,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200483,"byte_end":200486,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_private()`](std::net::Ipv4Addr::is_private()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200491,"byte_end":200577,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200582,"byte_end":200591,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200890,"byte_end":200904,"line_start":76,"line_end":76,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<ArchivedIpv4Addr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` for the special 'unspecified' address (0.0.0.0).","sig":null,"attributes":[{"value":"/ Returns `true` for the special 'unspecified' address (0.0.0.0).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200684,"byte_end":200751,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200756,"byte_end":200759,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::is_unspecified()`](std::net::Ipv4Addr::is_unspecified()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200764,"byte_end":200858,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200863,"byte_end":200872,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201257,"byte_end":201275,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"to_ipv6_compatible","qualname":"<ArchivedIpv4Addr>::to_ipv6_compatible","value":"pub const fn to_ipv6_compatible(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an IPv4-compatible [`IPv6` address](std::net::Ipv6Addr).","sig":null,"attributes":[{"value":"/ Converts this address to an IPv4-compatible [`IPv6` address](std::net::Ipv6Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":200973,"byte_end":201058,"line_start":80,"line_end":80,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201063,"byte_end":201066,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::to_ipv6_compatible()`](std::net::Ipv4Addr::to_ipv6_compatible()) for more","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201071,"byte_end":201164,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201169,"byte_end":201181,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201186,"byte_end":201195,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201200,"byte_end":201239,"line_start":85,"line_end":85,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201616,"byte_end":201630,"line_start":95,"line_end":95,"column_start":18,"column_end":32},"name":"to_ipv6_mapped","qualname":"<ArchivedIpv4Addr>::to_ipv6_mapped","value":"pub const fn to_ipv6_mapped(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an IPv4-mapped [`IPv6` address](std::net::Ipv6Addr).","sig":null,"attributes":[{"value":"/ Converts this address to an IPv4-mapped [`IPv6` address](std::net::Ipv6Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201352,"byte_end":201433,"line_start":90,"line_end":90,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201438,"byte_end":201441,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv4Addr::to_ipv6_mapped()`](std::net::Ipv4Addr::to_ipv6_mapped()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201446,"byte_end":201540,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201545,"byte_end":201554,"line_start":93,"line_end":93,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201559,"byte_end":201598,"line_start":94,"line_end":94,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203118,"byte_end":203125,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"name":"as_ipv6","qualname":"<ArchivedIpv6Addr>::as_ipv6","value":"pub const fn as_ipv6(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Ipv6Addr`](std::net::Ipv6Addr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns an [`Ipv6Addr`](std::net::Ipv6Addr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203018,"byte_end":203086,"line_start":155,"line_end":155,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203091,"byte_end":203100,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203619,"byte_end":203630,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"name":"is_loopback","qualname":"<ArchivedIpv6Addr>::is_loopback","value":"pub const fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a loopback address (::1).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a loopback address (::1).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203431,"byte_end":203486,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203491,"byte_end":203494,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv6Addr::is_loopback()`](std::net::Ipv6Addr::is_loopback()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203499,"byte_end":203587,"line_start":173,"line_end":173,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203592,"byte_end":203601,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203892,"byte_end":203904,"line_start":183,"line_end":183,"column_start":18,"column_end":30},"name":"is_multicast","qualname":"<ArchivedIpv6Addr>::is_multicast","value":"pub const fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a multicast address (ff00::/8).","sig":null,"attributes":[{"value":"/ Returns `true` if this is a multicast address (ff00::/8).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203696,"byte_end":203757,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203762,"byte_end":203765,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv6Addr::is_multicast()`](std::net::Ipv6Addr::is_multicast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203770,"byte_end":203860,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203865,"byte_end":203874,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204172,"byte_end":204186,"line_start":191,"line_end":191,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<ArchivedIpv6Addr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` for the special 'unspecified' address (::).","sig":null,"attributes":[{"value":"/ Returns `true` for the special 'unspecified' address (::).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":203971,"byte_end":204033,"line_start":187,"line_end":187,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204038,"byte_end":204041,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ See [`Ipv6Addr::is_unspecified()`](std::net::Ipv6Addr::is_unspecified()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204046,"byte_end":204140,"line_start":189,"line_end":189,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204145,"byte_end":204154,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204359,"byte_end":204365,"line_start":197,"line_end":197,"column_start":18,"column_end":24},"name":"octets","qualname":"<ArchivedIpv6Addr>::octets","value":"pub const fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the sixteen eight-bit integers the IPv6 address consists of.\n","sig":null,"attributes":[{"value":"/ Returns the sixteen eight-bit integers the IPv6 address consists of.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204255,"byte_end":204327,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204332,"byte_end":204341,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204694,"byte_end":204701,"line_start":206,"line_end":206,"column_start":18,"column_end":25},"name":"to_ipv4","qualname":"<ArchivedIpv6Addr>::to_ipv4","value":"pub const fn to_ipv4(&Self) -> Option<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an [`IPv4` address](std::net::Ipv4Addr). Returns\n [`None`](std::option::Option::None) if this address is neither IPv4-compatible or\n IPv4-mapped.\n","sig":null,"attributes":[{"value":"/ Converts this address to an [`IPv4` address](std::net::Ipv4Addr). Returns","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204430,"byte_end":204507,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/ [`None`](std::option::Option::None) if this address is neither IPv4-compatible or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204512,"byte_end":204597,"line_start":202,"line_end":202,"column_start":5,"column_end":90}},{"value":"/ IPv4-mapped.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204602,"byte_end":204618,"line_start":203,"line_end":203,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204623,"byte_end":204632,"line_start":204,"line_end":204,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204637,"byte_end":204676,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206183,"byte_end":206192,"line_start":268,"line_end":268,"column_start":18,"column_end":27},"name":"as_ipaddr","qualname":"<ArchivedIpAddr>::as_ipaddr","value":"pub const fn as_ipaddr(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`IpAddr`](std::net::IpAddr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns an [`IpAddr`](std::net::IpAddr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206087,"byte_end":206151,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206156,"byte_end":206165,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206568,"byte_end":206579,"line_start":279,"line_end":279,"column_start":18,"column_end":29},"name":"is_loopback","qualname":"<ArchivedIpAddr>::is_loopback","value":"pub const fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a loopback address.","sig":null,"attributes":[{"value":"/ Returns `true` if this is a loopback address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206390,"byte_end":206439,"line_start":275,"line_end":275,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206444,"byte_end":206447,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ See [`IpAddr::is_loopback()`](std::net::IpAddr::is_loopback()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206452,"byte_end":206536,"line_start":277,"line_end":277,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206541,"byte_end":206550,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206932,"byte_end":206944,"line_start":290,"line_end":290,"column_start":18,"column_end":30},"name":"is_multicast","qualname":"<ArchivedIpAddr>::is_multicast","value":"pub const fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a multicast address.","sig":null,"attributes":[{"value":"/ Returns `true` if this is a multicast address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206751,"byte_end":206801,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206806,"byte_end":206809,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ See [`IpAddr::is_multicast()`](std::net::IpAddr::is_multicast()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206814,"byte_end":206900,"line_start":288,"line_end":288,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206905,"byte_end":206914,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207310,"byte_end":207324,"line_start":301,"line_end":301,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<ArchivedIpAddr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` for the special 'unspecified' address.","sig":null,"attributes":[{"value":"/ Returns `true` for the special 'unspecified' address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207118,"byte_end":207175,"line_start":297,"line_end":297,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207180,"byte_end":207183,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See [`IpAddr::is_unspecified()`](std::net::IpAddr::is_unspecified()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207188,"byte_end":207278,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207283,"byte_end":207292,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210814,"byte_end":210831,"line_start":419,"line_end":419,"column_start":12,"column_end":29},"name":"as_socket_addr_v4","qualname":"<ArchivedSocketAddrV4>::as_socket_addr_v4","value":"pub fn as_socket_addr_v4(&Self) -> SocketAddrV4","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SocketAddrV4`](std::net::SocketAddrV4) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns a [`SocketAddrV4`](std::net::SocketAddrV4) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210713,"byte_end":210788,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210793,"byte_end":210802,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212880,"byte_end":212897,"line_start":493,"line_end":493,"column_start":12,"column_end":29},"name":"as_socket_addr_v6","qualname":"<ArchivedSocketAddrV6>::as_socket_addr_v6","value":"pub fn as_socket_addr_v6(&Self) -> SocketAddrV6","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SocketAddrV6`](std::net::SocketAddrV6) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns a [`SocketAddrV6`](std::net::SocketAddrV6) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212779,"byte_end":212854,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212859,"byte_end":212868,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215324,"byte_end":215338,"line_start":581,"line_end":581,"column_start":12,"column_end":26},"name":"as_socket_addr","qualname":"<ArchivedSocketAddr>::as_socket_addr","value":"pub fn as_socket_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SocketAddr`](std::net::SocketAddr) with the same value.\n","sig":null,"attributes":[{"value":"/ Returns a [`SocketAddr`](std::net::SocketAddr) with the same value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215227,"byte_end":215298,"line_start":579,"line_end":579,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215303,"byte_end":215312,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215665,"byte_end":215667,"line_start":590,"line_end":590,"column_start":12,"column_end":14},"name":"ip","qualname":"<ArchivedSocketAddr>::ip","value":"pub fn ip(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215576,"byte_end":215639,"line_start":588,"line_end":588,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215644,"byte_end":215653,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":2935},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":6734},{"krate":0,"index":6737},{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6743},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":2939},{"krate":0,"index":6760},{"krate":0,"index":6763},{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6769},{"krate":0,"index":6771},{"krate":0,"index":6772},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6784},{"krate":0,"index":2942},{"krate":0,"index":6786},{"krate":0,"index":6793},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6801},{"krate":0,"index":6804},{"krate":0,"index":6806},{"krate":0,"index":6807},{"krate":0,"index":6810},{"krate":0,"index":2945},{"krate":0,"index":6812},{"krate":0,"index":6815},{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6820},{"krate":0,"index":6822},{"krate":0,"index":6823},{"krate":0,"index":6825},{"krate":0,"index":6828},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6834},{"krate":0,"index":2948},{"krate":0,"index":6836},{"krate":0,"index":6841},{"krate":0,"index":6843},{"krate":0,"index":6844},{"krate":0,"index":6846},{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6851},{"krate":0,"index":6854},{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":6860},{"krate":0,"index":2951},{"krate":0,"index":6862},{"krate":0,"index":6869},{"krate":0,"index":6871},{"krate":0,"index":6872},{"krate":0,"index":6874},{"krate":0,"index":6875},{"krate":0,"index":6877},{"krate":0,"index":6880},{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6886},{"krate":0,"index":2956}],"decl_id":null,"docs":" Archived versions of network types.\n","sig":null,"attributes":[{"value":"/ Archived versions of network types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":219758,"byte_end":219797,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6734},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220047,"byte_end":220063,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"ArchivedIpv4Addr","qualname":"::net::ArchivedIpv4Addr","value":"ArchivedIpv4Addr {  }","parent":null,"children":[{"krate":0,"index":6735}],"decl_id":null,"docs":" An archived [`Ipv4Addr`](std::net::Ipv4Addr).\n","sig":null,"attributes":[{"value":"/ An archived [`Ipv4Addr`](std::net::Ipv4Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":219821,"byte_end":219870,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220015,"byte_end":220035,"line_start":8,"line_end":8,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220226,"byte_end":220232,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"name":"octets","qualname":"<ArchivedIpv4Addr>::octets","value":"pub const fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the four eight-bit integers that make up this address.\n","sig":null,"attributes":[{"value":"/ Returns the four eight-bit integers that make up this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220128,"byte_end":220194,"line_start":14,"line_end":14,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220199,"byte_end":220208,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6760},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220508,"byte_end":220524,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"ArchivedIpv6Addr","qualname":"::net::ArchivedIpv6Addr","value":"ArchivedIpv6Addr {  }","parent":null,"children":[{"krate":0,"index":6761}],"decl_id":null,"docs":" An archived [`Ipv6Addr`](std::net::Ipv6Addr).\n","sig":null,"attributes":[{"value":"/ An archived [`Ipv6Addr`](std::net::Ipv6Addr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220282,"byte_end":220331,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220476,"byte_end":220496,"line_start":24,"line_end":24,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220686,"byte_end":220694,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"name":"segments","qualname":"<ArchivedIpv6Addr>::segments","value":"pub const fn segments(&Self) -> [u16; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the eight 16-bit segments that make up this address.\n","sig":null,"attributes":[{"value":"/ Returns the eight 16-bit segments that make up this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220590,"byte_end":220654,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220659,"byte_end":220668,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6787},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221527,"byte_end":221529,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"V4","qualname":"::net::ArchivedIpAddr::V4","value":"ArchivedIpAddr::V4(ArchivedIpv4Addr)","parent":{"krate":0,"index":6786},"children":[],"decl_id":null,"docs":" An IPv4 address.\n","sig":null,"attributes":[{"value":"/ An IPv4 address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221502,"byte_end":221522,"line_start":51,"line_end":51,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6790},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221578,"byte_end":221580,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"V6","qualname":"::net::ArchivedIpAddr::V6","value":"ArchivedIpAddr::V6(ArchivedIpv6Addr)","parent":{"krate":0,"index":6786},"children":[],"decl_id":null,"docs":" An IPv6 address.\n","sig":null,"attributes":[{"value":"/ An IPv6 address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221553,"byte_end":221573,"line_start":53,"line_end":53,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":6786},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221481,"byte_end":221495,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"ArchivedIpAddr","qualname":"::net::ArchivedIpAddr","value":"pub enum ArchivedIpAddr { V4(ArchivedIpv4Addr), V6(ArchivedIpv6Addr), }","parent":null,"children":[{"krate":0,"index":6787},{"krate":0,"index":6790}],"decl_id":null,"docs":" An archived [`IpAddr`](std::net::IpAddr).\n","sig":null,"attributes":[{"value":"/ An archived [`IpAddr`](std::net::IpAddr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221279,"byte_end":221324,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221460,"byte_end":221471,"line_start":49,"line_end":49,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221772,"byte_end":221779,"line_start":61,"line_end":61,"column_start":18,"column_end":25},"name":"is_ipv4","qualname":"<ArchivedIpAddr>::is_ipv4","value":"pub const fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this address is an [`IPv4` address](std::net::IpAddr::V4), and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this address is an [`IPv4` address](std::net::IpAddr::V4), and `false`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221629,"byte_end":221721,"line_start":58,"line_end":58,"column_start":5,"column_end":97}},{"value":"/ otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221726,"byte_end":221740,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221745,"byte_end":221754,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221997,"byte_end":222004,"line_start":68,"line_end":68,"column_start":18,"column_end":25},"name":"is_ipv6","qualname":"<ArchivedIpAddr>::is_ipv6","value":"pub const fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this address is an [`IPv6` address](std::net::IpAddr::V6), and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this address is an [`IPv6` address](std::net::IpAddr::V6), and `false`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221854,"byte_end":221946,"line_start":65,"line_end":65,"column_start":5,"column_end":97}},{"value":"/ otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221951,"byte_end":221965,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221970,"byte_end":221979,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6812},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222331,"byte_end":222351,"line_start":77,"line_end":77,"column_start":12,"column_end":32},"name":"ArchivedSocketAddrV4","qualname":"::net::ArchivedSocketAddrV4","value":"ArchivedSocketAddrV4 {  }","parent":null,"children":[{"krate":0,"index":6813},{"krate":0,"index":6814}],"decl_id":null,"docs":" An archived [`SocketAddrV4`](std::net::SocketAddrV4).\n","sig":null,"attributes":[{"value":"/ An archived [`SocketAddrV4`](std::net::SocketAddrV4).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222077,"byte_end":222134,"line_start":73,"line_end":73,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222557,"byte_end":222559,"line_start":85,"line_end":85,"column_start":18,"column_end":20},"name":"ip","qualname":"<ArchivedSocketAddrV4>::ip","value":"pub const fn ip(&Self) -> &ArchivedIpv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222462,"byte_end":222525,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222530,"byte_end":222539,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222714,"byte_end":222718,"line_start":91,"line_end":91,"column_start":18,"column_end":22},"name":"port","qualname":"<ArchivedSocketAddrV4>::port","value":"pub const fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222618,"byte_end":222682,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222687,"byte_end":222696,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6836},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223032,"byte_end":223052,"line_start":100,"line_end":100,"column_start":12,"column_end":32},"name":"ArchivedSocketAddrV6","qualname":"::net::ArchivedSocketAddrV6","value":"ArchivedSocketAddrV6 {  }","parent":null,"children":[{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":6839},{"krate":0,"index":6840}],"decl_id":null,"docs":" An archived [`SocketAddrV6`](std::net::SocketAddrV6).\n","sig":null,"attributes":[{"value":"/ An archived [`SocketAddrV6`](std::net::SocketAddrV6).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222778,"byte_end":222835,"line_start":96,"line_end":96,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223440,"byte_end":223448,"line_start":112,"line_end":112,"column_start":18,"column_end":26},"name":"flowinfo","qualname":"<ArchivedSocketAddrV6>::flowinfo","value":"pub const fn flowinfo(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the flow information associated with this address.","sig":null,"attributes":[{"value":"/ Returns the flow information associated with this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223243,"byte_end":223305,"line_start":108,"line_end":108,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223310,"byte_end":223313,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ See [`SocketAddrV6::flowinfo()`](std::net::SocketAddrV6::flowinfo()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223318,"byte_end":223408,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223413,"byte_end":223422,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223609,"byte_end":223611,"line_start":118,"line_end":118,"column_start":18,"column_end":20},"name":"ip","qualname":"<ArchivedSocketAddrV6>::ip","value":"pub const fn ip(&Self) -> &ArchivedIpv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223514,"byte_end":223577,"line_start":116,"line_end":116,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223582,"byte_end":223591,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223766,"byte_end":223770,"line_start":124,"line_end":124,"column_start":18,"column_end":22},"name":"port","qualname":"<ArchivedSocketAddrV6>::port","value":"pub const fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223670,"byte_end":223734,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223739,"byte_end":223748,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224021,"byte_end":224029,"line_start":132,"line_end":132,"column_start":18,"column_end":26},"name":"scope_id","qualname":"<ArchivedSocketAddrV6>::scope_id","value":"pub const fn scope_id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scope ID associated with this address.","sig":null,"attributes":[{"value":"/ Returns the scope ID associated with this address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223832,"byte_end":223886,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223891,"byte_end":223894,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ See [`SocketAddrV6::scope_id()`](std::net::SocketAddrV6::scope_id()) for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223899,"byte_end":223989,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223994,"byte_end":224003,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6863},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224360,"byte_end":224362,"line_start":143,"line_end":143,"column_start":5,"column_end":7},"name":"V4","qualname":"::net::ArchivedSocketAddr::V4","value":"ArchivedSocketAddr::V4(ArchivedSocketAddrV4)","parent":{"krate":0,"index":6862},"children":[],"decl_id":null,"docs":" An IPv4 socket address.\n","sig":null,"attributes":[{"value":"/ An IPv4 socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224328,"byte_end":224355,"line_start":142,"line_end":142,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224422,"byte_end":224424,"line_start":145,"line_end":145,"column_start":5,"column_end":7},"name":"V6","qualname":"::net::ArchivedSocketAddr::V6","value":"ArchivedSocketAddr::V6(ArchivedSocketAddrV6)","parent":{"krate":0,"index":6862},"children":[],"decl_id":null,"docs":" An IPv6 socket address.\n","sig":null,"attributes":[{"value":"/ An IPv6 socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224390,"byte_end":224417,"line_start":144,"line_end":144,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":6862},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224303,"byte_end":224321,"line_start":141,"line_end":141,"column_start":10,"column_end":28},"name":"ArchivedSocketAddr","qualname":"::net::ArchivedSocketAddr","value":"pub enum ArchivedSocketAddr {\n    V4(ArchivedSocketAddrV4),\n    V6(ArchivedSocketAddrV6),\n}","parent":null,"children":[{"krate":0,"index":6863},{"krate":0,"index":6866}],"decl_id":null,"docs":" An archived [`SocketAddr`](std::net::SocketAddr).\n","sig":null,"attributes":[{"value":"/ An archived [`SocketAddr`](std::net::SocketAddr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224093,"byte_end":224146,"line_start":137,"line_end":137,"column_start":1,"column_end":54}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224282,"byte_end":224293,"line_start":140,"line_end":140,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224571,"byte_end":224575,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"port","qualname":"<ArchivedSocketAddr>::port","value":"pub fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224481,"byte_end":224545,"line_start":149,"line_end":149,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224550,"byte_end":224559,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224936,"byte_end":224943,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<ArchivedSocketAddr>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an\n [`IPv4` address](std::net::IpAddr::V4), and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224748,"byte_end":224839,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ [`IPv4` address](std::net::IpAddr::V4), and `false` otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224844,"byte_end":224910,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224915,"byte_end":224924,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":225210,"byte_end":225217,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<ArchivedSocketAddr>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an\n [`IPv6` address](std::net::IpAddr::V6), and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the [IP address](std::net::IpAddr) in this `ArchivedSocketAddr` is an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":225022,"byte_end":225113,"line_start":165,"line_end":165,"column_start":5,"column_end":96}},{"value":"/ [`IPv6` address](std::net::IpAddr::V6), and `false` otherwise.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":225118,"byte_end":225184,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":225189,"byte_end":225198,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":2960},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"niche","qualname":"::niche","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/mod.rs","parent":null,"children":[{"krate":0,"index":2961}],"decl_id":null,"docs":" Manually niched type replacements.\n","sig":null,"attributes":[{"value":"/ Manually niched type replacements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/mod.rs","byte_start":225465,"byte_end":225503,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":2961},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option_box","qualname":"::niche::option_box","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2967},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3034},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3046},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3063},{"krate":0,"index":3068},{"krate":0,"index":3072},{"krate":0,"index":3076},{"krate":0,"index":3081},{"krate":0,"index":3085}],"decl_id":null,"docs":" A niched archived `Option<Box<T>>` that uses less space.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/mod.rs","byte_start":225505,"byte_end":225530,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/ A niched archived `Option<Box<T>>` that uses less space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":225556,"byte_end":225616,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3017},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226048,"byte_end":226065,"line_start":21,"line_end":21,"column_start":12,"column_end":29},"name":"ArchivedOptionBox","qualname":"::niche::option_box::ArchivedOptionBox","value":"ArchivedOptionBox {  }","parent":null,"children":[{"krate":0,"index":3019}],"decl_id":null,"docs":" A niched archived `Option<Box<T>>`.","sig":null,"attributes":[{"value":"/ A niched archived `Option<Box<T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":225900,"byte_end":225939,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":225940,"byte_end":225943,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It uses less space by storing the `None` variant as a null pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":225944,"byte_end":226015,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226016,"byte_end":226036,"line_start":20,"line_end":20,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226267,"byte_end":226274,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_none","qualname":"<ArchivedOptionBox<T>>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option box is a `None` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option box is a `None` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226186,"byte_end":226241,"line_start":26,"line_end":26,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226246,"byte_end":226255,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226416,"byte_end":226423,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"is_some","qualname":"<ArchivedOptionBox<T>>::is_some","value":"pub fn is_some(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option box is a `Some` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option box is a `Some` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226335,"byte_end":226390,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226395,"byte_end":226404,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226555,"byte_end":226561,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<ArchivedOptionBox<T>>::as_ref","value":"pub fn as_ref(&Self) -> Option<&ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&ArchivedBox<T>>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&ArchivedBox<T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226484,"byte_end":226529,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226534,"byte_end":226543,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226792,"byte_end":226798,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<ArchivedOptionBox<T>>::as_mut","value":"pub fn as_mut(&mut Self) -> Option<&mut ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&mut ArchivedBox<T>>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&mut ArchivedBox<T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226717,"byte_end":226766,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226771,"byte_end":226780,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227073,"byte_end":227083,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"as_pin_ref","qualname":"<ArchivedOptionBox<T>>::as_pin_ref","value":"pub fn as_pin_ref(Pin<&Self>) -> Option<Pin<&ArchivedBox<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&ArchivedOptionBox<T>>` to `Option<Pin<&ArchivedBox<T>>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&ArchivedOptionBox<T>>` to `Option<Pin<&ArchivedBox<T>>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226966,"byte_end":227047,"line_start":58,"line_end":58,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227052,"byte_end":227061,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227337,"byte_end":227347,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"as_pin_mut","qualname":"<ArchivedOptionBox<T>>::as_pin_mut","value":"pub fn as_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut ArchivedBox<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut ArchivedBox<T>>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut ArchivedBox<T>>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227225,"byte_end":227311,"line_start":64,"line_end":64,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227316,"byte_end":227325,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227645,"byte_end":227649,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedOptionBox<T>>::iter","value":"pub fn iter(&Self) -> Iter<, ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227561,"byte_end":227619,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227624,"byte_end":227633,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227848,"byte_end":227856,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArchivedOptionBox<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, ArchivedBox<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227757,"byte_end":227822,"line_start":82,"line_end":82,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227827,"byte_end":227836,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228189,"byte_end":228197,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"as_deref","qualname":"<ArchivedOptionBox<T>>::as_deref","value":"pub fn as_deref(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&ArchivedOptionBox<T>` to `Option<&T>`.","sig":null,"attributes":[{"value":"/ Converts from `&ArchivedOptionBox<T>` to `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":227974,"byte_end":228032,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228037,"byte_end":228040,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Leaves the original `ArchivedOptionBox` in-place, creating a new one with a reference to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228045,"byte_end":228141,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ original one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228146,"byte_end":228163,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228168,"byte_end":228177,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228638,"byte_end":228657,"line_start":111,"line_end":111,"column_start":19,"column_end":38},"name":"resolve_from_option","qualname":"<ArchivedOptionBox<T>>::resolve_from_option","value":"pub unsafe fn resolve_from_option<U: ArchiveUnsized<Archived = T> +\n                                  ?Sized>(Option<&U>, usize,\n                                          OptionBoxResolver<U::MetadataResolver>,\n                                          *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.","sig":null,"attributes":[{"value":"/ Resolves an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228374,"byte_end":228444,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228449,"byte_end":228452,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228457,"byte_end":228469,"line_start":106,"line_end":106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228474,"byte_end":228477,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228482,"byte_end":228542,"line_start":108,"line_end":108,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `field`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228547,"byte_end":228605,"line_start":109,"line_end":109,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228610,"byte_end":228619,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":229385,"byte_end":229406,"line_start":133,"line_end":133,"column_start":12,"column_end":33},"name":"serialize_from_option","qualname":"<ArchivedOptionBox<T>>::serialize_from_option","value":"pub fn serialize_from_option<U, S>(Option<&U>, &mut S)\n-> Result<OptionBoxResolver<U::MetadataResolver>, S::Error> where\nU: SerializeUnsized<S, Archived = T> + ?Sized, S: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.\n","sig":null,"attributes":[{"value":"/ Serializes an `ArchivedOptionBox<T::Archived>` from an `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":229287,"byte_end":229359,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":229364,"byte_end":229373,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3059},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231338,"byte_end":231342,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"Iter","qualname":"::niche::option_box::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3062}],"decl_id":null,"docs":" An iterator over a reference to the `Some` variant of an `ArchivedOptionBox`.","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Some` variant of an `ArchivedOptionBox`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231072,"byte_end":231153,"line_start":194,"line_end":194,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231154,"byte_end":231157,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOptionBox` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231158,"byte_end":231248,"line_start":196,"line_end":196,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231249,"byte_end":231252,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOptionBox::iter`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231253,"byte_end":231326,"line_start":198,"line_end":198,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3072},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232028,"byte_end":232035,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::niche::option_box::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3075}],"decl_id":null,"docs":" An iterator over a mutable reference to the `Some` variant of an `ArchivedOptionBox`.","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Some` variant of an `ArchivedOptionBox`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231750,"byte_end":231839,"line_start":219,"line_end":219,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231840,"byte_end":231843,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOptionBox` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231844,"byte_end":231934,"line_start":221,"line_end":221,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231935,"byte_end":231938,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOptionBox::iter_mut`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231939,"byte_end":232016,"line_start":223,"line_end":223,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3087},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232564,"byte_end":232568,"line_start":247,"line_end":247,"column_start":5,"column_end":9},"name":"None","qualname":"::niche::option_box::OptionBoxResolver::None","value":"OptionBoxResolver::None","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":" The `ArchivedOptionBox` was `None`\n","sig":null,"attributes":[{"value":"/ The `ArchivedOptionBox` was `None`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232521,"byte_end":232559,"line_start":246,"line_end":246,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3089},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232617,"byte_end":232621,"line_start":249,"line_end":249,"column_start":5,"column_end":9},"name":"Some","qualname":"::niche::option_box::OptionBoxResolver::Some","value":"OptionBoxResolver::Some(BoxResolver<T>)","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":" The resolver for the `ArchivedBox`\n","sig":null,"attributes":[{"value":"/ The resolver for the `ArchivedBox`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232574,"byte_end":232612,"line_start":248,"line_end":248,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3085},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232494,"byte_end":232511,"line_start":245,"line_end":245,"column_start":10,"column_end":27},"name":"OptionBoxResolver","qualname":"::niche::option_box::OptionBoxResolver","value":"pub enum OptionBoxResolver<T> { None, Some(BoxResolver<T>), }","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3089}],"decl_id":null,"docs":" The resolver for [`ArchivedOptionBox`].\n","sig":null,"attributes":[{"value":"/ The resolver for [`ArchivedOptionBox`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232441,"byte_end":232484,"line_start":244,"line_end":244,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3092},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","parent":null,"children":[{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":6888},{"krate":0,"index":6892},{"krate":0,"index":6895},{"krate":0,"index":6898},{"krate":0,"index":6900},{"krate":0,"index":6904},{"krate":0,"index":6906},{"krate":0,"index":6909},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3115},{"krate":0,"index":6913},{"krate":0,"index":6917},{"krate":0,"index":6920},{"krate":0,"index":6923},{"krate":0,"index":6925},{"krate":0,"index":6929},{"krate":0,"index":6931},{"krate":0,"index":6934},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3127},{"krate":0,"index":6938},{"krate":0,"index":6941},{"krate":0,"index":6944},{"krate":0,"index":6947},{"krate":0,"index":6949},{"krate":0,"index":6953},{"krate":0,"index":6955},{"krate":0,"index":6958},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3138},{"krate":0,"index":6962},{"krate":0,"index":6965},{"krate":0,"index":6968},{"krate":0,"index":6971},{"krate":0,"index":6973},{"krate":0,"index":6977},{"krate":0,"index":6979},{"krate":0,"index":6982},{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3149},{"krate":0,"index":6986},{"krate":0,"index":6989},{"krate":0,"index":6992},{"krate":0,"index":6995},{"krate":0,"index":6997},{"krate":0,"index":7001},{"krate":0,"index":7003},{"krate":0,"index":7006},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3160}],"decl_id":null,"docs":" Archived versions of `ops` types.\n","sig":null,"attributes":[{"value":"/ Archived versions of `ops` types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":232892,"byte_end":232929,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6888},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233205,"byte_end":233218,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"ArchivedRange","qualname":"::ops::ArchivedRange","value":"ArchivedRange { start, end }","parent":null,"children":[{"krate":0,"index":6890},{"krate":0,"index":6891}],"decl_id":null,"docs":" An archived [`Range`](::core::ops::Range).\n","sig":null,"attributes":[{"value":"/ An archived [`Range`](::core::ops::Range).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":232992,"byte_end":233038,"line_start":8,"line_end":8,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6890},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233282,"byte_end":233287,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"start","qualname":"::ops::ArchivedRange::start","value":"T","parent":{"krate":0,"index":6888},"children":[],"decl_id":null,"docs":" The lower bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The lower bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233228,"byte_end":233273,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6891},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233350,"byte_end":233353,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRange::end","value":"T","parent":{"krate":0,"index":6888},"children":[],"decl_id":null,"docs":" The upper bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233296,"byte_end":233341,"line_start":15,"line_end":15,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233717,"byte_end":233725,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRange<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>,\nU: PartialOrd<T> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233636,"byte_end":233691,"line_start":29,"line_end":29,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233696,"byte_end":233705,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233973,"byte_end":233981,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedRange<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the range contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range contains no items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233897,"byte_end":233947,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233952,"byte_end":233961,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234694,"byte_end":234716,"line_start":67,"line_end":67,"column_start":12,"column_end":34},"name":"ArchivedRangeInclusive","qualname":"::ops::ArchivedRangeInclusive","value":"ArchivedRangeInclusive { start, end }","parent":null,"children":[{"krate":0,"index":6915},{"krate":0,"index":6916}],"decl_id":null,"docs":" An archived [`RangeInclusive`](::core::ops::RangeInclusive).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeInclusive`](::core::ops::RangeInclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234463,"byte_end":234527,"line_start":63,"line_end":63,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6915},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234780,"byte_end":234785,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"start","qualname":"::ops::ArchivedRangeInclusive::start","value":"T","parent":{"krate":0,"index":6913},"children":[],"decl_id":null,"docs":" The lower bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The lower bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234726,"byte_end":234771,"line_start":68,"line_end":68,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6916},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234848,"byte_end":234851,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRangeInclusive::end","value":"T","parent":{"krate":0,"index":6913},"children":[],"decl_id":null,"docs":" The upper bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234794,"byte_end":234839,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235248,"byte_end":235256,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeInclusive<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>,\nU: PartialOrd<T> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235167,"byte_end":235222,"line_start":85,"line_end":85,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235227,"byte_end":235236,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235504,"byte_end":235512,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedRangeInclusive<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the range contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range contains no items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235428,"byte_end":235478,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235483,"byte_end":235492,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6938},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236205,"byte_end":236222,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"ArchivedRangeFrom","qualname":"::ops::ArchivedRangeFrom","value":"ArchivedRangeFrom { start }","parent":null,"children":[{"krate":0,"index":6940}],"decl_id":null,"docs":" An archived [`RangeFrom`](::core::ops::RangeFrom).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeFrom`](::core::ops::RangeFrom).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235984,"byte_end":236038,"line_start":117,"line_end":117,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6940},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236286,"byte_end":236291,"line_start":123,"line_end":123,"column_start":9,"column_end":14},"name":"start","qualname":"::ops::ArchivedRangeFrom::start","value":"T","parent":{"krate":0,"index":6938},"children":[],"decl_id":null,"docs":" The lower bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The lower bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236232,"byte_end":236277,"line_start":122,"line_end":122,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236635,"byte_end":236643,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeFrom<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>, U: ?Sized +\nPartialOrd<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236554,"byte_end":236609,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236614,"byte_end":236623,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6962},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237266,"byte_end":237281,"line_start":162,"line_end":162,"column_start":12,"column_end":27},"name":"ArchivedRangeTo","qualname":"::ops::ArchivedRangeTo","value":"ArchivedRangeTo { end }","parent":null,"children":[{"krate":0,"index":6964}],"decl_id":null,"docs":" An archived [`RangeTo`](::core::ops::RangeTo).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeTo`](::core::ops::RangeTo).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237049,"byte_end":237099,"line_start":158,"line_end":158,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6964},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237345,"byte_end":237348,"line_start":164,"line_end":164,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRangeTo::end","value":"T","parent":{"krate":0,"index":6962},"children":[],"decl_id":null,"docs":" The upper bound of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (exclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237291,"byte_end":237336,"line_start":163,"line_end":163,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237686,"byte_end":237694,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeTo<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>, U: ?Sized +\nPartialOrd<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237605,"byte_end":237660,"line_start":176,"line_end":176,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237665,"byte_end":237674,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6986},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238331,"byte_end":238355,"line_start":203,"line_end":203,"column_start":12,"column_end":36},"name":"ArchivedRangeToInclusive","qualname":"::ops::ArchivedRangeToInclusive","value":"ArchivedRangeToInclusive { end }","parent":null,"children":[{"krate":0,"index":6988}],"decl_id":null,"docs":" An archived [`RangeToInclusive`](::core::ops::RangeToInclusive).\n","sig":null,"attributes":[{"value":"/ An archived [`RangeToInclusive`](::core::ops::RangeToInclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238096,"byte_end":238164,"line_start":199,"line_end":199,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6988},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238419,"byte_end":238422,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"end","qualname":"::ops::ArchivedRangeToInclusive::end","value":"T","parent":{"krate":0,"index":6986},"children":[],"decl_id":null,"docs":" The upper bound of the range (inclusive).\n","sig":null,"attributes":[{"value":"/ The upper bound of the range (inclusive).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238365,"byte_end":238410,"line_start":204,"line_end":204,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238779,"byte_end":238787,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArchivedRangeToInclusive<T>>::contains","value":"pub fn contains<U>(&Self, &U) -> bool where T: PartialOrd<U>, U: ?Sized +\nPartialOrd<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `item` is contained in the range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `item` is contained in the range.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238698,"byte_end":238753,"line_start":217,"line_end":217,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238758,"byte_end":238767,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3164},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3169},{"krate":0,"index":3172},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3182},{"krate":0,"index":3185},{"krate":0,"index":7010},{"krate":0,"index":7017},{"krate":0,"index":3188},{"krate":0,"index":3204},{"krate":0,"index":3208},{"krate":0,"index":3212},{"krate":0,"index":3214},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3231},{"krate":0,"index":3235},{"krate":0,"index":3239},{"krate":0,"index":3244},{"krate":0,"index":3248},{"krate":0,"index":3252},{"krate":0,"index":3257}],"decl_id":null,"docs":" An archived version of `Option`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Option`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239436,"byte_end":239472,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7012},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239880,"byte_end":239884,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"None","qualname":"::option::ArchivedOption::None","value":"ArchivedOption::None","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":" No value\n","sig":null,"attributes":[{"value":"/ No value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239863,"byte_end":239875,"line_start":19,"line_end":19,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7014},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239913,"byte_end":239917,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Some","qualname":"::option::ArchivedOption::Some","value":"ArchivedOption::Some(T)","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":" Some value `T`\n","sig":null,"attributes":[{"value":"/ Some value `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239890,"byte_end":239908,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":7010},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239839,"byte_end":239853,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"ArchivedOption","qualname":"::option::ArchivedOption","value":"pub enum ArchivedOption<T> { None, Some(T), }","parent":null,"children":[{"krate":0,"index":7012},{"krate":0,"index":7014}],"decl_id":null,"docs":" An archived [`Option`].","sig":null,"attributes":[{"value":"/ An archived [`Option`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239587,"byte_end":239614,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239615,"byte_end":239618,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It functions identically to [`Option`] but has a different internal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239619,"byte_end":239690,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ representation to allow for archiving.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239691,"byte_end":239733,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239818,"byte_end":239829,"line_start":17,"line_end":17,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240034,"byte_end":240041,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_none","qualname":"<ArchivedOption<T>>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option is a `None` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option is a `None` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239957,"byte_end":240008,"line_start":26,"line_end":26,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240013,"byte_end":240022,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240266,"byte_end":240273,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"is_some","qualname":"<ArchivedOption<T>>::is_some","value":"pub fn is_some(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the option is a `Some` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the option is a `Some` value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240189,"byte_end":240240,"line_start":35,"line_end":35,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240245,"byte_end":240254,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240485,"byte_end":240491,"line_start":46,"line_end":46,"column_start":18,"column_end":24},"name":"as_ref","qualname":"<ArchivedOption<T>>::as_ref","value":"pub const fn as_ref(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&T>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240421,"byte_end":240453,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240458,"byte_end":240467,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240717,"byte_end":240723,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<ArchivedOption<T>>::as_mut","value":"pub fn as_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an `Option<&mut T>`.\n","sig":null,"attributes":[{"value":"/ Converts to an `Option<&mut T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240655,"byte_end":240691,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240696,"byte_end":240705,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240986,"byte_end":240996,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"as_pin_ref","qualname":"<ArchivedOption<T>>::as_pin_ref","value":"pub fn as_pin_ref(Pin<&Self>) -> Option<Pin<&T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&ArchivedOption<T>>` to `Option<Pin<&T>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&ArchivedOption<T>>` to `Option<Pin<&T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240895,"byte_end":240960,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":240965,"byte_end":240974,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241224,"byte_end":241234,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"as_pin_mut","qualname":"<ArchivedOption<T>>::as_pin_mut","value":"pub fn as_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut T>>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut T>>`.\n","sig":null,"attributes":[{"value":"/ Converts from `Pin<&mut ArchivedOption<T>>` to `Option<Pin<&mut T>>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241125,"byte_end":241198,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241203,"byte_end":241212,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241525,"byte_end":241529,"line_start":80,"line_end":80,"column_start":18,"column_end":22},"name":"iter","qualname":"<ArchivedOption<T>>::iter","value":"pub const fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241435,"byte_end":241493,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241498,"byte_end":241507,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241715,"byte_end":241723,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArchivedOption<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the possibly contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241624,"byte_end":241689,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241694,"byte_end":241703,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241967,"byte_end":241980,"line_start":97,"line_end":97,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<ArchivedOption<T>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts `v` into the option if it is `None`, then returns a mutable\n reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Inserts `v` into the option if it is `None`, then returns a mutable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241828,"byte_end":241899,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ reference to the contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241904,"byte_end":241941,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":241946,"byte_end":241955,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242225,"byte_end":242243,"line_start":104,"line_end":104,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<ArchivedOption<T>>::get_or_insert_with","value":"pub fn get_or_insert_with<F: FnOnce() -> T>(&mut Self, F) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the option if it is `None`, then\n returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the option if it is `None`, then","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242064,"byte_end":242139,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ returns a mutable reference to the contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242144,"byte_end":242199,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242204,"byte_end":242213,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242791,"byte_end":242799,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"as_deref","qualname":"<ArchivedOption<T>>::as_deref","value":"pub fn as_deref(&Self) -> Option<&<T as Deref>::Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&ArchivedOption<T>` to `Option<&T::Target>`.","sig":null,"attributes":[{"value":"/ Converts from `&ArchivedOption<T>` to `Option<&T::Target>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242526,"byte_end":242589,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242594,"byte_end":242597,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Leaves the original `ArchivedOption` in-place, creating a new one with a reference to the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242602,"byte_end":242695,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ original one, additionally coercing the contents via `Deref`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242700,"byte_end":242765,"line_start":118,"line_end":118,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242770,"byte_end":242779,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243193,"byte_end":243205,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"as_deref_mut","qualname":"<ArchivedOption<T>>::as_deref_mut","value":"pub fn as_deref_mut(&mut Self) -> Option<&mut <T as Deref>::Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut ArchivedOption<T>` to `Option<&mut T::Target>`.","sig":null,"attributes":[{"value":"/ Converts from `&mut ArchivedOption<T>` to `Option<&mut T::Target>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242934,"byte_end":243005,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243010,"byte_end":243013,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Leaves the original `ArchivedOption` in-place, creating a new `Option` with a mutable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243018,"byte_end":243107,"line_start":128,"line_end":128,"column_start":5,"column_end":94}},{"value":"/ reference to the inner type's `Deref::Target` type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243112,"byte_end":243167,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243172,"byte_end":243181,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3235},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244854,"byte_end":244858,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3238}],"decl_id":null,"docs":" An iterator over a reference to the `Some` variant of an `ArchivedOption`.","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Some` variant of an `ArchivedOption`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244597,"byte_end":244675,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244676,"byte_end":244679,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOption` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244680,"byte_end":244767,"line_start":190,"line_end":190,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244768,"byte_end":244771,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOption::iter`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244772,"byte_end":244842,"line_start":192,"line_end":192,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3248},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245511,"byte_end":245518,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3251}],"decl_id":null,"docs":" An iterator over a mutable reference to the `Some` variant of an `ArchivedOption`.","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Some` variant of an `ArchivedOption`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245242,"byte_end":245328,"line_start":213,"line_end":213,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245329,"byte_end":245332,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ This iterator yields one value if the `ArchivedOption` is a `Some`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245333,"byte_end":245420,"line_start":215,"line_end":215,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245421,"byte_end":245424,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ArchivedOption::iter_mut`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245425,"byte_end":245499,"line_start":217,"line_end":217,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rc","qualname":"::rc","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3289},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3304},{"krate":0,"index":3307},{"krate":0,"index":3310},{"krate":0,"index":3316},{"krate":0,"index":3327},{"krate":0,"index":3331},{"krate":0,"index":3335},{"krate":0,"index":3339},{"krate":0,"index":3344},{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3356},{"krate":0,"index":3360},{"krate":0,"index":3366},{"krate":0,"index":3372},{"krate":0,"index":3376},{"krate":0,"index":3380},{"krate":0,"index":3388},{"krate":0,"index":3398},{"krate":0,"index":3402},{"krate":0,"index":3409},{"krate":0,"index":3414},{"krate":0,"index":3417}],"decl_id":null,"docs":" Archived versions of shared pointers.\n","sig":null,"attributes":[{"value":"/ Archived versions of shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246152,"byte_end":246193,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3310},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246823,"byte_end":246833,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ArchivedRc","qualname":"::rc::ArchivedRc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived `Rc`.","sig":null,"attributes":[{"value":"/ An archived `Rc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246484,"byte_end":246505,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246506,"byte_end":246509,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This is a thin wrapper around a [`RelPtr`] to the archived type paired with a \"flavor\" type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246510,"byte_end":246606,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ Because there may be many varieties of shared pointers and they may not be used together, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246607,"byte_end":246704,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ flavor helps check that memory is not being shared incorrectly during validation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246705,"byte_end":246790,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246791,"byte_end":246811,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247018,"byte_end":247021,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"get","qualname":"<ArchivedRc<T, F>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `ArchivedRc`.\n","sig":null,"attributes":[{"value":"/ Gets the value of the `ArchivedRc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246953,"byte_end":246992,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246997,"byte_end":247006,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247338,"byte_end":247359,"line_start":34,"line_end":34,"column_start":19,"column_end":40},"name":"get_pin_mut_unchecked","qualname":"<ArchivedRc<T, F>>::get_pin_mut_unchecked","value":"pub unsafe fn get_pin_mut_unchecked(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the pinned mutable value of this `ArchivedRc`.","sig":null,"attributes":[{"value":"/ Gets the pinned mutable value of this `ArchivedRc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247085,"byte_end":247140,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247145,"byte_end":247148,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247153,"byte_end":247165,"line_start":29,"line_end":29,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247170,"byte_end":247173,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Any other `ArchivedRc` pointers to the same value must not be dereferenced for the duration","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247178,"byte_end":247273,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ of the returned borrow.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247278,"byte_end":247305,"line_start":32,"line_end":32,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247310,"byte_end":247319,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247716,"byte_end":247732,"line_start":45,"line_end":45,"column_start":19,"column_end":35},"name":"resolve_from_ref","qualname":"<ArchivedRc<T, F>>::resolve_from_ref","value":"pub unsafe fn resolve_from_ref<U: ArchiveUnsized<Archived = T> +\n                               ?Sized>(&U, usize,\n                                       RcResolver<MetadataResolver<U>>,\n                                       *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Rc` from a given reference.","sig":null,"attributes":[{"value":"/ Resolves an archived `Rc` from a given reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247469,"byte_end":247522,"line_start":38,"line_end":38,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247527,"byte_end":247530,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247535,"byte_end":247547,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247552,"byte_end":247555,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247560,"byte_end":247620,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247625,"byte_end":247683,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":247688,"byte_end":247697,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248119,"byte_end":248137,"line_start":57,"line_end":57,"column_start":12,"column_end":30},"name":"serialize_from_ref","qualname":"<ArchivedRc<T, F>>::serialize_from_ref","value":"pub fn serialize_from_ref<U: SerializeUnsized<S> + ?Sized, S: Serializer +\n                          SharedSerializeRegistry + ?Sized>(&U, &mut S)\n-> Result<RcResolver<MetadataResolver<U>>, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Rc` from a given reference.\n","sig":null,"attributes":[{"value":"/ Serializes an archived `Rc` from a given reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248038,"byte_end":248093,"line_start":55,"line_end":55,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248098,"byte_end":248107,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3376},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250521,"byte_end":250531,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"RcResolver","qualname":"::rc::RcResolver","value":"RcResolver {  }","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379}],"decl_id":null,"docs":" The resolver for `Rc`.\n","sig":null,"attributes":[{"value":"/ The resolver for `Rc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250483,"byte_end":250509,"line_start":148,"line_end":148,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3383},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250772,"byte_end":250776,"line_start":160,"line_end":160,"column_start":5,"column_end":9},"name":"None","qualname":"::rc::ArchivedRcWeak::None","value":"ArchivedRcWeak::None","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":" A null weak pointer\n","sig":null,"attributes":[{"value":"/ A null weak pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250744,"byte_end":250767,"line_start":159,"line_end":159,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3385},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250828,"byte_end":250832,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Some","qualname":"::rc::ArchivedRcWeak::Some","value":"ArchivedRcWeak::Some(ArchivedRc<T, F>)","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":" A weak pointer to some shared pointer\n","sig":null,"attributes":[{"value":"/ A weak pointer to some shared pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250782,"byte_end":250823,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3380},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250692,"byte_end":250706,"line_start":158,"line_end":158,"column_start":10,"column_end":24},"name":"ArchivedRcWeak","qualname":"::rc::ArchivedRcWeak","value":"pub enum ArchivedRcWeak<T: ArchivePointee + ?Sized, F> {\n    None,\n    Some(ArchivedRc<T, F>),\n}","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":3385}],"decl_id":null,"docs":" An archived `rc::Weak`.","sig":null,"attributes":[{"value":"/ An archived `rc::Weak`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250582,"byte_end":250609,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250610,"byte_end":250613,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This is essentially just an optional [`ArchivedRc`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250614,"byte_end":250670,"line_start":156,"line_end":156,"column_start":1,"column_end":57}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250671,"byte_end":250682,"line_start":157,"line_end":157,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251075,"byte_end":251082,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<ArchivedRcWeak<T, F>>::upgrade","value":"pub fn upgrade(&Self) -> Option<&ArchivedRc<T, F>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the weak pointer to an `ArchivedArc`.","sig":null,"attributes":[{"value":"/ Attempts to upgrade the weak pointer to an `ArchivedArc`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250918,"byte_end":250979,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250984,"byte_end":250987,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if a null weak pointer was serialized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250992,"byte_end":251049,"line_start":168,"line_end":168,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251054,"byte_end":251063,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251333,"byte_end":251348,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"upgrade_pin_mut","qualname":"<ArchivedRcWeak<T, F>>::upgrade_pin_mut","value":"pub fn upgrade_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut ArchivedRc<T, F>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade a pinned mutable weak pointer.\n","sig":null,"attributes":[{"value":"/ Attempts to upgrade a pinned mutable weak pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251253,"byte_end":251307,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251312,"byte_end":251321,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251884,"byte_end":251900,"line_start":195,"line_end":195,"column_start":19,"column_end":35},"name":"resolve_from_ref","qualname":"<ArchivedRcWeak<T, F>>::resolve_from_ref","value":"pub unsafe fn resolve_from_ref<U: ArchiveUnsized<Archived = T> +\n                               ?Sized>(Option<&U>, usize,\n                                       RcWeakResolver<MetadataResolver<U>>,\n                                       *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Weak` from a given optional reference.","sig":null,"attributes":[{"value":"/ Resolves an archived `Weak` from a given optional reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251626,"byte_end":251690,"line_start":188,"line_end":188,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251695,"byte_end":251698,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251703,"byte_end":251715,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251720,"byte_end":251723,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251728,"byte_end":251788,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251793,"byte_end":251851,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":251856,"byte_end":251865,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":252759,"byte_end":252777,"line_start":218,"line_end":218,"column_start":12,"column_end":30},"name":"serialize_from_ref","qualname":"<ArchivedRcWeak<T, F>>::serialize_from_ref","value":"pub fn serialize_from_ref<U, S>(Option<&U>, &mut S)\n-> Result<RcWeakResolver<MetadataResolver<U>>, S::Error> where\nU: SerializeUnsized<S, Archived = T> + ?Sized, S: Serializer +\nSharedSerializeRegistry + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Weak` from a given optional reference.\n","sig":null,"attributes":[{"value":"/ Serializes an archived `Weak` from a given optional reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":252667,"byte_end":252733,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":252738,"byte_end":252747,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3404},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253507,"byte_end":253511,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::rc::RcWeakResolver::None","value":"RcWeakResolver::None","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" The weak pointer was null\n","sig":null,"attributes":[{"value":"/ The weak pointer was null","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253473,"byte_end":253502,"line_start":241,"line_end":241,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253569,"byte_end":253573,"line_start":244,"line_end":244,"column_start":5,"column_end":9},"name":"Some","qualname":"::rc::RcWeakResolver::Some","value":"RcWeakResolver::Some(RcResolver<T>)","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" The weak pointer was to some shared pointer\n","sig":null,"attributes":[{"value":"/ The weak pointer was to some shared pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253517,"byte_end":253564,"line_start":243,"line_end":243,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3402},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253449,"byte_end":253463,"line_start":240,"line_end":240,"column_start":10,"column_end":24},"name":"RcWeakResolver","qualname":"::rc::RcWeakResolver","value":"pub enum RcWeakResolver<T> { None, Some(RcResolver<T>), }","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3406}],"decl_id":null,"docs":" The resolver for `rc::Weak`.\n","sig":null,"attributes":[{"value":"/ The resolver for `rc::Weak`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253407,"byte_end":253439,"line_start":239,"line_end":239,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3423},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rel_ptr","qualname":"::rel_ptr","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","parent":null,"children":[{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3438},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":7020},{"krate":0,"index":7025},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":7036},{"krate":0,"index":7040},{"krate":0,"index":7045},{"krate":0,"index":7050},{"krate":0,"index":7055},{"krate":0,"index":7059},{"krate":0,"index":7064},{"krate":0,"index":7069},{"krate":0,"index":7074},{"krate":0,"index":7077},{"krate":0,"index":3459},{"krate":0,"index":3463},{"krate":0,"index":3473},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3493},{"krate":0,"index":3498},{"krate":0,"index":3503},{"krate":0,"index":3517},{"krate":0,"index":3521}],"decl_id":null,"docs":" Relative pointer implementations and options.\n","sig":null,"attributes":[{"value":"/ Relative pointer implementations and options.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254124,"byte_end":254173,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7021},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254595,"byte_end":254608,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"IsizeOverflow","qualname":"::rel_ptr::OffsetError::IsizeOverflow","value":"OffsetError::IsizeOverflow","parent":{"krate":0,"index":7020},"children":[],"decl_id":null,"docs":" The offset overflowed the range of `isize`\n","sig":null,"attributes":[{"value":"/ The offset overflowed the range of `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254544,"byte_end":254590,"line_start":17,"line_end":17,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7023},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254688,"byte_end":254707,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"ExceedsStorageRange","qualname":"::rel_ptr::OffsetError::ExceedsStorageRange","value":"OffsetError::ExceedsStorageRange","parent":{"krate":0,"index":7020},"children":[],"decl_id":null,"docs":" The offset is too far for the offset type of the relative pointer\n","sig":null,"attributes":[{"value":"/ The offset is too far for the offset type of the relative pointer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254614,"byte_end":254683,"line_start":19,"line_end":19,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":7020},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254526,"byte_end":254537,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"OffsetError","qualname":"::rel_ptr::OffsetError","value":"pub enum OffsetError { IsizeOverflow, ExceedsStorageRange, }","parent":null,"children":[{"krate":0,"index":7021},{"krate":0,"index":7023}],"decl_id":null,"docs":" An error where the distance between two positions cannot be represented by the offset type.\n","sig":null,"attributes":[{"value":"/ An error where the distance between two positions cannot be represented by the offset type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254376,"byte_end":254471,"line_start":14,"line_end":14,"column_start":1,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":3454},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256074,"byte_end":256087,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"signed_offset","qualname":"::rel_ptr::signed_offset","value":"pub fn signed_offset(usize, usize) -> Result<isize, OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the offset between two positions as an `isize`.","sig":null,"attributes":[{"value":"/ Calculates the offset between two positions as an `isize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255191,"byte_end":255253,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255254,"byte_end":255257,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This function exists solely to get the distance between two `usizes` as an `isize` with a full","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255258,"byte_end":255356,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ range of values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255357,"byte_end":255377,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255378,"byte_end":255381,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255382,"byte_end":255396,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255397,"byte_end":255400,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255401,"byte_end":255408,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use rkyv::rel_ptr::{signed_offset, OffsetError};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255409,"byte_end":255461,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255462,"byte_end":255465,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(signed_offset(0, 1), Ok(1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255466,"byte_end":255509,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(signed_offset(1, 0), Ok(-1));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255510,"byte_end":255554,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(signed_offset(0, isize::MAX as usize), Ok(isize::MAX));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255555,"byte_end":255625,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(signed_offset(isize::MAX as usize, 0), Ok(-isize::MAX));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255626,"byte_end":255697,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(signed_offset(0, isize::MAX as usize + 1), Err(OffsetError::IsizeOverflow));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255698,"byte_end":255789,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(signed_offset(isize::MAX as usize + 1, 0), Ok(isize::MIN));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255790,"byte_end":255864,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(signed_offset(0, isize::MAX as usize + 2), Err(OffsetError::IsizeOverflow));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255865,"byte_end":255956,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(signed_offset(isize::MAX as usize + 2, 0), Err(OffsetError::IsizeOverflow));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255957,"byte_end":256048,"line_start":55,"line_end":55,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256049,"byte_end":256056,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256057,"byte_end":256066,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":3455},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256466,"byte_end":256472,"line_start":70,"line_end":70,"column_start":11,"column_end":17},"name":"Offset","qualname":"::rel_ptr::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":3457}],"decl_id":null,"docs":" A offset that can be used with [`RawRelPtr`].\n","sig":null,"attributes":[{"value":"/ A offset that can be used with [`RawRelPtr`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256406,"byte_end":256455,"line_start":69,"line_end":69,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256564,"byte_end":256571,"line_start":72,"line_end":72,"column_start":8,"column_end":15},"name":"between","qualname":"::rel_ptr::Offset::between","value":"pub fn between(usize, usize) -> Result<Self, OffsetError>","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":" Creates a new offset between a `from` position and a `to` position.\n","sig":null,"attributes":[{"value":"/ Creates a new offset between a `from` position and a `to` position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256485,"byte_end":256556,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256673,"byte_end":256681,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::rel_ptr::Offset::to_isize","value":"pub fn to_isize(&Self) -> isize","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":" Gets the offset as an `isize`.\n","sig":null,"attributes":[{"value":"/ Gets the offset as an `isize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256631,"byte_end":256665,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7075},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259036,"byte_end":259047,"line_start":138,"line_end":138,"column_start":5,"column_end":16},"name":"OffsetError","qualname":"::rel_ptr::RelPtrError::OffsetError","value":"RelPtrError::OffsetError","parent":{"krate":0,"index":7074},"children":[],"decl_id":null,"docs":" The given `from` and `to` positions for the relative pointer failed to form a valid offset.","sig":null,"attributes":[{"value":"/ The given `from` and `to` positions for the relative pointer failed to form a valid offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":258816,"byte_end":258911,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":258916,"byte_end":258919,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This is probably because the distance between them could not be represented by the offset","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":258924,"byte_end":259017,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/ type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259022,"byte_end":259031,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":7074},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":258798,"byte_end":258809,"line_start":133,"line_end":133,"column_start":10,"column_end":21},"name":"RelPtrError","qualname":"::rel_ptr::RelPtrError","value":"pub enum RelPtrError { OffsetError, }","parent":null,"children":[{"krate":0,"index":7075}],"decl_id":null,"docs":" Errors that can occur while creating raw relative pointers.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while creating raw relative pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":258708,"byte_end":258771,"line_start":131,"line_end":131,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3459},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259868,"byte_end":259877,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"RawRelPtr","qualname":"::rel_ptr::RawRelPtr","value":"RawRelPtr {  }","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462}],"decl_id":null,"docs":" An untyped pointer which resolves relative to its position in memory.","sig":null,"attributes":[{"value":"/ An untyped pointer which resolves relative to its position in memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259052,"byte_end":259125,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259126,"byte_end":259129,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This is the most fundamental building block in rkyv. It allows the construction and use of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259130,"byte_end":259224,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ pointers that can be safely reloacted as long as the source and target are moved together. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259225,"byte_end":259324,"line_start":144,"line_end":144,"column_start":1,"column_end":100}},{"value":"/ is what allows memory to be moved from disk into memory and accessed without decoding.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259325,"byte_end":259415,"line_start":145,"line_end":145,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259416,"byte_end":259419,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Regular pointers are *absolute*, meaning that the pointee can be moved without invalidating the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259420,"byte_end":259519,"line_start":147,"line_end":147,"column_start":1,"column_end":100}},{"value":"/ pointer. However, the target cannot be moved or the pointer is invalidated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259520,"byte_end":259599,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259600,"byte_end":259603,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Relative pointers are *relative*, meaning that the pointee can be moved with the target without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259604,"byte_end":259703,"line_start":150,"line_end":150,"column_start":1,"column_end":100}},{"value":"/ invalidating the pointer. However, if either the pointee or the target move independently, the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259704,"byte_end":259802,"line_start":151,"line_end":151,"column_start":1,"column_end":99}},{"value":"/ pointer will be invalidated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259803,"byte_end":259835,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259836,"byte_end":259856,"line_start":153,"line_end":153,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260229,"byte_end":260240,"line_start":167,"line_end":167,"column_start":19,"column_end":30},"name":"try_emplace","qualname":"<RawRelPtr<O>>::try_emplace","value":"pub unsafe fn try_emplace(usize, usize, *mut Self) -> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new `RawRelPtr` in-place between the given `from` and `to` positions.","sig":null,"attributes":[{"value":"/ Attempts to create a new `RawRelPtr` in-place between the given `from` and `to` positions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259965,"byte_end":260059,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260064,"byte_end":260067,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260072,"byte_end":260084,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260089,"byte_end":260092,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ - `out` must be located at position `from`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260097,"byte_end":260143,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/ - `to` must be a position within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260148,"byte_end":260196,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260201,"byte_end":260210,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260801,"byte_end":260808,"line_start":182,"line_end":182,"column_start":19,"column_end":26},"name":"emplace","qualname":"<RawRelPtr<O>>::emplace","value":"pub unsafe fn emplace(usize, usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RawRelPtr` in-place between the given `from` and `to` positions.","sig":null,"attributes":[{"value":"/ Creates a new `RawRelPtr` in-place between the given `from` and `to` positions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260436,"byte_end":260519,"line_start":173,"line_end":173,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260524,"byte_end":260527,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260532,"byte_end":260544,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260549,"byte_end":260552,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - `out` must be located at position `from`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260557,"byte_end":260603,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/ - `to` must be a position within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260608,"byte_end":260656,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ - The offset between `from` and `to` must fit in an `isize` and not exceed the offset","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260661,"byte_end":260750,"line_start":179,"line_end":179,"column_start":5,"column_end":94}},{"value":"/   storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260755,"byte_end":260768,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260773,"byte_end":260782,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260990,"byte_end":260994,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"base","qualname":"<RawRelPtr<O>>::base","value":"pub fn base(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260913,"byte_end":260964,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":260969,"byte_end":260978,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261156,"byte_end":261164,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"base_mut","qualname":"<RawRelPtr<O>>::base_mut","value":"pub fn base_mut(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the mutable base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261071,"byte_end":261130,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261135,"byte_end":261144,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261325,"byte_end":261331,"line_start":200,"line_end":200,"column_start":12,"column_end":18},"name":"offset","qualname":"<RawRelPtr<O>>::offset","value":"pub fn offset(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Gets the offset of the relative pointer from its base.\n","sig":null,"attributes":[{"value":"/ Gets the offset of the relative pointer from its base.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261241,"byte_end":261299,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261304,"byte_end":261313,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261475,"byte_end":261482,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"is_null","qualname":"<RawRelPtr<O>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the offset of the relative pointer is 0.\n","sig":null,"attributes":[{"value":"/ Gets whether the offset of the relative pointer is 0.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261392,"byte_end":261449,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261454,"byte_end":261463,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261640,"byte_end":261646,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RawRelPtr<O>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Calculates the memory address being pointed to by this relative pointer.\n","sig":null,"attributes":[{"value":"/ Calculates the memory address being pointed to by this relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261538,"byte_end":261614,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261619,"byte_end":261628,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261876,"byte_end":261886,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<RawRelPtr<O>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ()","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the memory address being pointed to\n by this relative pointer.\n","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the memory address being pointed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261740,"byte_end":261816,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ by this relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261821,"byte_end":261850,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":261855,"byte_end":261864,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3479},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262461,"byte_end":262472,"line_start":239,"line_end":239,"column_start":10,"column_end":21},"name":"RawRelPtrI8","qualname":"::rel_ptr::RawRelPtrI8","value":"RawRelPtr<Archived<i8>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i8` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i8` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262372,"byte_end":262451,"line_start":238,"line_end":238,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":3480},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262590,"byte_end":262602,"line_start":241,"line_end":241,"column_start":10,"column_end":22},"name":"RawRelPtrI16","qualname":"::rel_ptr::RawRelPtrI16","value":"RawRelPtr<Archived<i16>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i16` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i16` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262500,"byte_end":262580,"line_start":240,"line_end":240,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":3481},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262791,"byte_end":262803,"line_start":244,"line_end":244,"column_start":10,"column_end":22},"name":"RawRelPtrI32","qualname":"::rel_ptr::RawRelPtrI32","value":"RawRelPtr<Archived<i32>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i32` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i32` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262631,"byte_end":262711,"line_start":242,"line_end":242,"column_start":1,"column_end":81}},{"value":"cfg(any(target_pointer_width = \"32\", target_pointer_width = \"64\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262712,"byte_end":262781,"line_start":243,"line_end":243,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":3482},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262958,"byte_end":262970,"line_start":247,"line_end":247,"column_start":10,"column_end":22},"name":"RawRelPtrI64","qualname":"::rel_ptr::RawRelPtrI64","value":"RawRelPtr<Archived<i64>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `i64` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `i64` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262832,"byte_end":262912,"line_start":245,"line_end":245,"column_start":1,"column_end":81}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262913,"byte_end":262948,"line_start":246,"line_end":246,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3483},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263089,"byte_end":263100,"line_start":250,"line_end":250,"column_start":10,"column_end":21},"name":"RawRelPtrU8","qualname":"::rel_ptr::RawRelPtrU8","value":"RawRelPtr<Archived<u8>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u8` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u8` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263000,"byte_end":263079,"line_start":249,"line_end":249,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":3484},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263218,"byte_end":263230,"line_start":252,"line_end":252,"column_start":10,"column_end":22},"name":"RawRelPtrU16","qualname":"::rel_ptr::RawRelPtrU16","value":"RawRelPtr<Archived<u16>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u16` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u16` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263128,"byte_end":263208,"line_start":251,"line_end":251,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":3485},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263419,"byte_end":263431,"line_start":255,"line_end":255,"column_start":10,"column_end":22},"name":"RawRelPtrU32","qualname":"::rel_ptr::RawRelPtrU32","value":"RawRelPtr<Archived<u32>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u32` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u32` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263259,"byte_end":263339,"line_start":253,"line_end":253,"column_start":1,"column_end":81}},{"value":"cfg(any(target_pointer_width = \"32\", target_pointer_width = \"64\"))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263340,"byte_end":263409,"line_start":254,"line_end":254,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":3486},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263586,"byte_end":263598,"line_start":258,"line_end":258,"column_start":10,"column_end":22},"name":"RawRelPtrU64","qualname":"::rel_ptr::RawRelPtrU64","value":"RawRelPtr<Archived<u64>>","parent":null,"children":[],"decl_id":null,"docs":" A raw relative pointer that uses an archived `u64` as the underlying offset.\n","sig":null,"attributes":[{"value":"/ A raw relative pointer that uses an archived `u64` as the underlying offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263460,"byte_end":263540,"line_start":256,"line_end":256,"column_start":1,"column_end":81}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263541,"byte_end":263576,"line_start":257,"line_end":257,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3487},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263876,"byte_end":263882,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"RelPtr","qualname":"::rel_ptr::RelPtr","value":"RelPtr {  }","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492}],"decl_id":null,"docs":" A pointer which resolves to relative to its position in memory.","sig":null,"attributes":[{"value":"/ A pointer which resolves to relative to its position in memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263666,"byte_end":263733,"line_start":262,"line_end":262,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263734,"byte_end":263737,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This is a strongly-typed version of [`RawRelPtr`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263738,"byte_end":263792,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263793,"byte_end":263796,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ See [`Archive`](crate::Archive) for an example of creating one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":263797,"byte_end":263864,"line_start":266,"line_end":266,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264306,"byte_end":264317,"line_start":281,"line_end":281,"column_start":19,"column_end":30},"name":"try_emplace","qualname":"<RelPtr<T, O>>::try_emplace","value":"pub unsafe fn try_emplace(usize, usize, *mut Self) -> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Attempts to create a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264049,"byte_end":264120,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264125,"byte_end":264128,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264133,"byte_end":264145,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264150,"byte_end":264153,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264158,"byte_end":264219,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264224,"byte_end":264273,"line_start":279,"line_end":279,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264278,"byte_end":264287,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264981,"byte_end":264988,"line_start":299,"line_end":299,"column_start":19,"column_end":26},"name":"emplace","qualname":"<RelPtr<T, O>>::emplace","value":"pub unsafe fn emplace(usize, usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Creates a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264558,"byte_end":264618,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264623,"byte_end":264626,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264631,"byte_end":264643,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264648,"byte_end":264651,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ - The offset between `from` and `to` does not fit in an `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264656,"byte_end":264723,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ - The offset between `from` and `to` exceeds the offset storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264728,"byte_end":264795,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264800,"byte_end":264803,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264808,"byte_end":264820,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264825,"byte_end":264828,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264833,"byte_end":264894,"line_start":296,"line_end":296,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264899,"byte_end":264948,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264953,"byte_end":264962,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265393,"byte_end":265409,"line_start":314,"line_end":314,"column_start":19,"column_end":35},"name":"try_emplace_null","qualname":"<RelPtr<T, O>>::try_emplace_null","value":"pub unsafe fn try_emplace_null(usize, *mut Self) -> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a null relative pointer with default metadata.","sig":null,"attributes":[{"value":"/ Attempts to create a null relative pointer with default metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265194,"byte_end":265263,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265268,"byte_end":265271,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265276,"byte_end":265288,"line_start":310,"line_end":310,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265293,"byte_end":265296,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ `pos` must be the position of `out` within the archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265301,"byte_end":265360,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265365,"byte_end":265374,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266008,"byte_end":266020,"line_start":333,"line_end":333,"column_start":19,"column_end":31},"name":"emplace_null","qualname":"<RelPtr<T, O>>::emplace_null","value":"pub unsafe fn emplace_null(usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a null relative pointer with default metadata.","sig":null,"attributes":[{"value":"/ Creates a null relative pointer with default metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265679,"byte_end":265737,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265742,"byte_end":265745,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265750,"byte_end":265762,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265767,"byte_end":265770,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ - An offset of `0` does not fit in an `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265775,"byte_end":265824,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ - An offset of `0` exceeds the offset storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265829,"byte_end":265878,"line_start":327,"line_end":327,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265883,"byte_end":265886,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265891,"byte_end":265903,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265908,"byte_end":265911,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ `pos` must be the position of `out` within the archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265916,"byte_end":265975,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265980,"byte_end":265989,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266571,"byte_end":266590,"line_start":348,"line_end":348,"column_start":19,"column_end":38},"name":"try_resolve_emplace","qualname":"<RelPtr<T, O>>::try_resolve_emplace","value":"pub unsafe fn try_resolve_emplace<U: ArchiveUnsized<Archived = T> +\n                                  ?Sized>(usize, usize, &U,\n                                          U::MetadataResolver, *mut Self)\n-> Result<(), OffsetError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Attempts to create a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266173,"byte_end":266244,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266249,"byte_end":266252,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266257,"byte_end":266269,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266274,"byte_end":266277,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266282,"byte_end":266343,"line_start":343,"line_end":343,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266348,"byte_end":266397,"line_start":344,"line_end":344,"column_start":5,"column_end":54}},{"value":"/ - `value` must be the value being serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266402,"byte_end":266450,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/ - `metadata_resolver` must be the result of serializing the metadata of `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266455,"byte_end":266538,"line_start":346,"line_end":346,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266543,"byte_end":266552,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267605,"byte_end":267620,"line_start":376,"line_end":376,"column_start":19,"column_end":34},"name":"resolve_emplace","qualname":"<RelPtr<T, O>>::resolve_emplace","value":"pub unsafe fn resolve_emplace<U: ArchiveUnsized<Archived = T> +\n                              ?Sized>(usize, usize, &U, U::MetadataResolver,\n                                      *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative pointer from one position to another.","sig":null,"attributes":[{"value":"/ Creates a relative pointer from one position to another.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267041,"byte_end":267101,"line_start":362,"line_end":362,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267106,"byte_end":267109,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267114,"byte_end":267126,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267131,"byte_end":267134,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ - The offset between `from` and `to` does not fit in an `isize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267139,"byte_end":267206,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ - The offset between `from` and `to` exceeds the offset storage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267211,"byte_end":267278,"line_start":367,"line_end":367,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267283,"byte_end":267286,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267291,"byte_end":267303,"line_start":369,"line_end":369,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267308,"byte_end":267311,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267316,"byte_end":267377,"line_start":371,"line_end":371,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some valid `T`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267382,"byte_end":267431,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ - `value` must be the value being serialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267436,"byte_end":267484,"line_start":373,"line_end":373,"column_start":5,"column_end":53}},{"value":"/ - `metadata_resolver` must be the result of serializing the metadata of `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267489,"byte_end":267572,"line_start":374,"line_end":374,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267577,"byte_end":267586,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267976,"byte_end":267980,"line_start":388,"line_end":388,"column_start":12,"column_end":16},"name":"base","qualname":"<RelPtr<T, O>>::base","value":"pub fn base(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267899,"byte_end":267950,"line_start":386,"line_end":386,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":267955,"byte_end":267964,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268127,"byte_end":268135,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"base_mut","qualname":"<RelPtr<T, O>>::base_mut","value":"pub fn base_mut(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable base pointer for the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the mutable base pointer for the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268042,"byte_end":268101,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268106,"byte_end":268115,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268287,"byte_end":268293,"line_start":400,"line_end":400,"column_start":12,"column_end":18},"name":"offset","qualname":"<RelPtr<T, O>>::offset","value":"pub fn offset(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Gets the offset of the relative pointer from its base.\n","sig":null,"attributes":[{"value":"/ Gets the offset of the relative pointer from its base.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268203,"byte_end":268261,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268266,"byte_end":268275,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268436,"byte_end":268443,"line_start":406,"line_end":406,"column_start":12,"column_end":19},"name":"is_null","qualname":"<RelPtr<T, O>>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the offset of the relative pointer is 0.\n","sig":null,"attributes":[{"value":"/ Gets whether the offset of the relative pointer is 0.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268353,"byte_end":268410,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268415,"byte_end":268424,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268575,"byte_end":268583,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"metadata","qualname":"<RelPtr<T, O>>::metadata","value":"pub fn metadata(&Self) -> &T::ArchivedMetadata","parent":null,"children":[],"decl_id":null,"docs":" Gets the metadata of the relative pointer.\n","sig":null,"attributes":[{"value":"/ Gets the metadata of the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268503,"byte_end":268549,"line_start":410,"line_end":410,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268554,"byte_end":268563,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268753,"byte_end":268759,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RelPtr<T, O>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Calculates the memory address being pointed to by this relative pointer.\n","sig":null,"attributes":[{"value":"/ Calculates the memory address being pointed to by this relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268651,"byte_end":268727,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268732,"byte_end":268741,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":269021,"byte_end":269031,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<RelPtr<T, O>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the memory address being pointed to by this relative\n pointer.\n","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the memory address being pointed to by this relative","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268885,"byte_end":268978,"line_start":422,"line_end":422,"column_start":5,"column_end":98}},{"value":"/ pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":268983,"byte_end":268995,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":269000,"byte_end":269009,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3525},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":7079},{"krate":0,"index":7088},{"krate":0,"index":3550},{"krate":0,"index":3559},{"krate":0,"index":3563},{"krate":0,"index":3567},{"krate":0,"index":3571},{"krate":0,"index":3576},{"krate":0,"index":3580},{"krate":0,"index":3584},{"krate":0,"index":3589},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3601},{"krate":0,"index":3605},{"krate":0,"index":3609},{"krate":0,"index":3613},{"krate":0,"index":3619}],"decl_id":null,"docs":" An archived version of `Result`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Result`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270182,"byte_end":270218,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7082},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270618,"byte_end":270620,"line_start":16,"line_end":16,"column_start":5,"column_end":7},"name":"Ok","qualname":"::result::ArchivedResult::Ok","value":"ArchivedResult::Ok(T)","parent":{"krate":0,"index":7079},"children":[],"decl_id":null,"docs":" Contains the success value\n","sig":null,"attributes":[{"value":"/ Contains the success value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270583,"byte_end":270613,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7085},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270662,"byte_end":270665,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Err","qualname":"::result::ArchivedResult::Err","value":"ArchivedResult::Err(E)","parent":{"krate":0,"index":7079},"children":[],"decl_id":null,"docs":" Contains the error value\n","sig":null,"attributes":[{"value":"/ Contains the error value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270629,"byte_end":270657,"line_start":17,"line_end":17,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":7079},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270556,"byte_end":270570,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"ArchivedResult","qualname":"::result::ArchivedResult","value":"pub enum ArchivedResult<T, E> { Ok(T), Err(E), }","parent":null,"children":[{"krate":0,"index":7082},{"krate":0,"index":7085}],"decl_id":null,"docs":" An archived [`Result`] that represents either success ([`Ok`](ArchivedResult::Ok)) or failure\n ([`Err`](ArchivedResult::Err)).\n","sig":null,"attributes":[{"value":"/ An archived [`Result`] that represents either success ([`Ok`](ArchivedResult::Ok)) or failure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270317,"byte_end":270414,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ ([`Err`](ArchivedResult::Err)).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270415,"byte_end":270450,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"repr(u8)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270535,"byte_end":270546,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270806,"byte_end":270811,"line_start":24,"line_end":24,"column_start":18,"column_end":23},"name":"is_ok","qualname":"<ArchivedResult<T, E>>::is_ok","value":"pub const fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the result is [`Ok`](ArchivedResult::Ok).\n","sig":null,"attributes":[{"value":"/ Returns `true` if the result is [`Ok`](ArchivedResult::Ok).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270711,"byte_end":270774,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270779,"byte_end":270788,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270983,"byte_end":270989,"line_start":30,"line_end":30,"column_start":18,"column_end":24},"name":"is_err","qualname":"<ArchivedResult<T, E>>::is_err","value":"pub const fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the result is [`Err`](ArchivedResult::Err).\n","sig":null,"attributes":[{"value":"/ Returns `true` if the result is [`Err`](ArchivedResult::Err).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270886,"byte_end":270951,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270956,"byte_end":270965,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271179,"byte_end":271185,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<ArchivedResult<T, E>>::as_ref","value":"pub fn as_ref(&Self) -> Result<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Result` containing the success and error values of this `ArchivedResult`.\n","sig":null,"attributes":[{"value":"/ Returns a `Result` containing the success and error values of this `ArchivedResult`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271065,"byte_end":271153,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271158,"byte_end":271167,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271457,"byte_end":271463,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<ArchivedResult<T, E>>::as_mut","value":"pub fn as_mut(&mut Self) -> Result<&mut T, &mut E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut ArchivedResult<T, E>` to `Result<&mut T, &mut E>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&mut ArchivedResult<T, E>` to `Result<&mut T, &mut E>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271357,"byte_end":271431,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271436,"byte_end":271445,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271832,"byte_end":271836,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArchivedResult<T, E>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the possibly contained value.","sig":null,"attributes":[{"value":"/ Returns an iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271647,"byte_end":271705,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271710,"byte_end":271713,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The iterator yields one value if the result is `ArchivedResult::Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271718,"byte_end":271806,"line_start":54,"line_end":54,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271811,"byte_end":271820,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272128,"byte_end":272136,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArchivedResult<T, E>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the possibly contained value.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the possibly contained value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":271936,"byte_end":272001,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272006,"byte_end":272009,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The iterator yields one value if the result is `ArchivedResult::Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272014,"byte_end":272102,"line_start":64,"line_end":64,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272107,"byte_end":272116,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3562},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272520,"byte_end":272528,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"as_deref","qualname":"<ArchivedResult<T, E>>::as_deref","value":"pub fn as_deref(&Self) -> Result<&<T as Deref>::Target, &E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&ArchivedResult<T, E>` to `Result<&<T as Deref>::Target, &E>`.","sig":null,"attributes":[{"value":"/ Converts from `&ArchivedResult<T, E>` to `Result<&<T as Deref>::Target, &E>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272289,"byte_end":272370,"line_start":74,"line_end":74,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272375,"byte_end":272378,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Coerces the `Ok` variant of the original `ArchivedResult` via `Deref` and returns the new","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272383,"byte_end":272476,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ `Result`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272481,"byte_end":272494,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272499,"byte_end":272508,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3566},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273019,"byte_end":273031,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"as_deref_mut","qualname":"<ArchivedResult<T, E>>::as_deref_mut","value":"pub fn as_deref_mut(&mut Self) -> Result<&mut <T as Deref>::Target, &mut E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut ArchivedResult<T, E>` to `Result<&mut <T as Deref>::Target, &mut E>`.","sig":null,"attributes":[{"value":"/ Converts from `&mut ArchivedResult<T, E>` to `Result<&mut <T as Deref>::Target, &mut E>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272773,"byte_end":272866,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272871,"byte_end":272874,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Coerces the `Ok` variant of the original `ArchivedResult` via `DerefMut` and returns the new","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272879,"byte_end":272975,"line_start":90,"line_end":90,"column_start":5,"column_end":101}},{"value":"/ `Result`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272980,"byte_end":272993,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272998,"byte_end":273007,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3567},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273456,"byte_end":273460,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3570}],"decl_id":null,"docs":" An iterator over a reference to the `Ok` variant of an [`ArchivedResult`].","sig":null,"attributes":[{"value":"/ An iterator over a reference to the `Ok` variant of an [`ArchivedResult`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273244,"byte_end":273322,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273323,"byte_end":273326,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the result is `Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273327,"byte_end":273399,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273400,"byte_end":273403,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Created by [`ArchivedResult::iter`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273404,"byte_end":273444,"line_start":105,"line_end":105,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274068,"byte_end":274075,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3583}],"decl_id":null,"docs":" An iterator over a mutable reference to the `Ok` variant of an [`ArchivedResult`].","sig":null,"attributes":[{"value":"/ An iterator over a mutable reference to the `Ok` variant of an [`ArchivedResult`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273844,"byte_end":273930,"line_start":126,"line_end":126,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273931,"byte_end":273934,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the result is `Ok`, otherwise none.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273935,"byte_end":274007,"line_start":128,"line_end":128,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274008,"byte_end":274011,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Created by [`ArchivedResult::iter_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274012,"byte_end":274056,"line_start":130,"line_end":130,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3625},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3976},{"krate":0,"index":3979},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3988},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3995},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4023},{"krate":0,"index":4026}],"decl_id":null,"docs":" Serialization traits, serializers, and adapters.\n","sig":null,"attributes":[{"value":"/ Serialization traits, serializers, and adapters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276310,"byte_end":276362,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":3626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serializers","qualname":"::ser::serializers","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3756},{"krate":0,"index":3845},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3891},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":7182},{"krate":0,"index":7195},{"krate":0,"index":3910},{"krate":0,"index":3915},{"krate":0,"index":7200},{"krate":0,"index":7207},{"krate":0,"index":3924},{"krate":0,"index":3931},{"krate":0,"index":3936},{"krate":0,"index":3941},{"krate":0,"index":3955},{"krate":0,"index":3961},{"krate":0,"index":3967},{"krate":0,"index":3970}],"decl_id":null,"docs":" Serializers that can be used standalone and provide basic capabilities.\n","sig":null,"attributes":[{"value":"/ Serializers that can be used standalone and provide basic capabilities.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":283546,"byte_end":283621,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291812,"byte_end":291829,"line_start":26,"line_end":26,"column_start":12,"column_end":29},"name":"AlignedSerializer","qualname":"::ser::serializers::alloc::AlignedSerializer","value":"AlignedSerializer {  }","parent":null,"children":[{"krate":0,"index":7094}],"decl_id":null,"docs":" A serializer made specifically to work with [`AlignedVec`](crate::util::AlignedVec).","sig":null,"attributes":[{"value":"/ A serializer made specifically to work with [`AlignedVec`](crate::util::AlignedVec).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291533,"byte_end":291621,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291622,"byte_end":291625,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This serializer makes it easier for the compiler to perform emplacement optimizations and may","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291626,"byte_end":291723,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ give better performance than a basic `WriteSerializer`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291724,"byte_end":291783,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292006,"byte_end":292009,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<AlignedSerializer<A>>::new","value":"pub fn new(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AlignedSerializer` by wrapping a `Borrow<AlignedVec>`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AlignedSerializer` by wrapping a `Borrow<AlignedVec>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291907,"byte_end":291980,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291985,"byte_end":291994,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292150,"byte_end":292160,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AlignedSerializer<A>>::into_inner","value":"pub fn into_inner(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Consumes the serializer and returns the underlying type.\n","sig":null,"attributes":[{"value":"/ Consumes the serializer and returns the underlying type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292064,"byte_end":292124,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292129,"byte_end":292138,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7098},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294194,"byte_end":294205,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"HeapScratch","qualname":"::ser::serializers::alloc::HeapScratch","value":"HeapScratch {  }","parent":null,"children":[{"krate":0,"index":7100}],"decl_id":null,"docs":" Fixed-size scratch space allocated on the heap.\n","sig":null,"attributes":[{"value":"/ Fixed-size scratch space allocated on the heap.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294114,"byte_end":294165,"line_start":111,"line_end":111,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294366,"byte_end":294369,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<HeapScratch<N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new heap scratch space.\n","sig":null,"attributes":[{"value":"/ Creates a new heap scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294317,"byte_end":294354,"line_start":118,"line_end":118,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294720,"byte_end":294726,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"layout","qualname":"<HeapScratch<N>>::layout","value":"pub fn layout() -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Gets the memory layout of the heap-allocated space.\n","sig":null,"attributes":[{"value":"/ Gets the memory layout of the heap-allocated space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294653,"byte_end":294708,"line_start":130,"line_end":130,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":7106},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295602,"byte_end":295615,"line_start":162,"line_end":162,"column_start":5,"column_end":18},"name":"ExceededLimit","qualname":"::ser::serializers::alloc::AllocScratchError::ExceededLimit","value":"AllocScratchError::ExceededLimit { requested, remaining }","parent":{"krate":0,"index":7105},"children":[],"decl_id":null,"docs":" The amount of scratch space requested exceeded the maximum limit\n","sig":null,"attributes":[{"value":"/ The amount of scratch space requested exceeded the maximum limit","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295529,"byte_end":295597,"line_start":161,"line_end":161,"column_start":5,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":7109},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295836,"byte_end":295859,"line_start":169,"line_end":169,"column_start":5,"column_end":28},"name":"NotPoppedInReverseOrder","qualname":"::ser::serializers::alloc::AllocScratchError::NotPoppedInReverseOrder","value":"AllocScratchError::NotPoppedInReverseOrder { expected, expected_layout, actual, actual_layout }","parent":{"krate":0,"index":7105},"children":[],"decl_id":null,"docs":" Scratch space was not popped in reverse order.\n","sig":null,"attributes":[{"value":"/ Scratch space was not popped in reverse order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295781,"byte_end":295831,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":296280,"byte_end":296298,"line_start":180,"line_end":180,"column_start":5,"column_end":23},"name":"NoAllocationsToPop","qualname":"::ser::serializers::alloc::AllocScratchError::NoAllocationsToPop","value":"AllocScratchError::NoAllocationsToPop","parent":{"krate":0,"index":7105},"children":[],"decl_id":null,"docs":" There are no allocations to pop\n","sig":null,"attributes":[{"value":"/ There are no allocations to pop","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":296240,"byte_end":296275,"line_start":179,"line_end":179,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":7105},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295505,"byte_end":295522,"line_start":160,"line_end":160,"column_start":10,"column_end":27},"name":"AllocScratchError","qualname":"::ser::serializers::alloc::AllocScratchError","value":"pub enum AllocScratchError {\n    ExceededLimit {\n        requested: usize,\n        remaining: usize,\n    },\n    NotPoppedInReverseOrder {\n        expected: *mut u8,\n        expected_layout: Layout,\n        actual: *mut u8,\n        actual_layout: Layout,\n    },\n    NoAllocationsToPop,\n}","parent":null,"children":[{"krate":0,"index":7106},{"krate":0,"index":7109},{"krate":0,"index":7114}],"decl_id":null,"docs":" Errors that can occur when allocating with the global allocator.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when allocating with the global allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295410,"byte_end":295478,"line_start":158,"line_end":158,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":7118},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297670,"byte_end":297682,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"AllocScratch","qualname":"::ser::serializers::alloc::AllocScratch","value":"AllocScratch {  }","parent":null,"children":[{"krate":0,"index":7119},{"krate":0,"index":7120}],"decl_id":null,"docs":" Scratch space that always uses the global allocator.","sig":null,"attributes":[{"value":"/ Scratch space that always uses the global allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297430,"byte_end":297486,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297487,"byte_end":297490,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ This allocator will panic if scratch is popped that it did not allocate. For this reason, it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297491,"byte_end":297587,"line_start":217,"line_end":217,"column_start":1,"column_end":97}},{"value":"/ should only ever be used as a fallback allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297588,"byte_end":297641,"line_start":218,"line_end":218,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297856,"byte_end":297859,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"new","qualname":"<AllocScratch>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scratch allocator with no allocation limit.\n","sig":null,"attributes":[{"value":"/ Creates a new scratch allocator with no allocation limit.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297783,"byte_end":297844,"line_start":226,"line_end":226,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298054,"byte_end":298064,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"with_limit","qualname":"<AllocScratch>::with_limit","value":"pub fn with_limit(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scratch allocator with the given allocation limit.\n","sig":null,"attributes":[{"value":"/ Creates a new scratch allocator with the given allocation limit.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297974,"byte_end":298042,"line_start":234,"line_end":234,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7124},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300196,"byte_end":300218,"line_start":306,"line_end":306,"column_start":5,"column_end":27},"name":"DuplicateSharedPointer","qualname":"::ser::serializers::alloc::SharedSerializeMapError::DuplicateSharedPointer","value":"SharedSerializeMapError::DuplicateSharedPointer(*const u8)","parent":{"krate":0,"index":7123},"children":[],"decl_id":null,"docs":" A shared pointer was added multiple times\n","sig":null,"attributes":[{"value":"/ A shared pointer was added multiple times","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300146,"byte_end":300191,"line_start":305,"line_end":305,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":7123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300116,"byte_end":300139,"line_start":304,"line_end":304,"column_start":10,"column_end":33},"name":"SharedSerializeMapError","qualname":"::ser::serializers::alloc::SharedSerializeMapError","value":"pub enum SharedSerializeMapError { DuplicateSharedPointer(*const u8), }","parent":null,"children":[{"krate":0,"index":7124}],"decl_id":null,"docs":" An error that can occur while serializing shared pointers.\n","sig":null,"attributes":[{"value":"/ An error that can occur while serializing shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300027,"byte_end":300089,"line_start":302,"line_end":302,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7129},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300697,"byte_end":300715,"line_start":326,"line_end":326,"column_start":12,"column_end":30},"name":"SharedSerializeMap","qualname":"::ser::serializers::alloc::SharedSerializeMap","value":"SharedSerializeMap {  }","parent":null,"children":[{"krate":0,"index":7130}],"decl_id":null,"docs":" An adapter that adds shared serialization support to a serializer.\n","sig":null,"attributes":[{"value":"/ An adapter that adds shared serialization support to a serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300598,"byte_end":300668,"line_start":324,"line_end":324,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300874,"byte_end":300877,"line_start":333,"line_end":333,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSerializeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared registry map.\n","sig":null,"attributes":[{"value":"/ Creates a new shared registry map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300810,"byte_end":300848,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300853,"byte_end":300862,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":7134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":302464,"byte_end":302472,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::ser::serializers::core::BufferSerializerError::Overflow","value":"BufferSerializerError::Overflow { pos, bytes_needed, archive_len }","parent":{"krate":0,"index":7133},"children":[],"decl_id":null,"docs":" Writing has overflowed the internal buffer.\n","sig":null,"attributes":[{"value":"/ Writing has overflowed the internal buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":302412,"byte_end":302459,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":7133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":302384,"byte_end":302405,"line_start":14,"line_end":14,"column_start":10,"column_end":31},"name":"BufferSerializerError","qualname":"::ser::serializers::core::BufferSerializerError","value":"pub enum BufferSerializerError {\n    Overflow {\n        pos: usize,\n        bytes_needed: usize,\n        archive_len: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":7134}],"decl_id":null,"docs":" The error type returned by an [`BufferSerializer`].\n","sig":null,"attributes":[{"value":"/ The error type returned by an [`BufferSerializer`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":302302,"byte_end":302357,"line_start":12,"line_end":12,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304320,"byte_end":304336,"line_start":85,"line_end":85,"column_start":12,"column_end":28},"name":"BufferSerializer","qualname":"::ser::serializers::core::BufferSerializer","value":"BufferSerializer {  }","parent":null,"children":[{"krate":0,"index":7142},{"krate":0,"index":7143}],"decl_id":null,"docs":" Wraps a byte buffer and equips it with [`Serializer`].","sig":null,"attributes":[{"value":"/ Wraps a byte buffer and equips it with [`Serializer`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303268,"byte_end":303326,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303327,"byte_end":303330,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Common uses include archiving in `#![no_std]` environments and archiving small objects without","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303331,"byte_end":303429,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ allocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303430,"byte_end":303445,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303446,"byte_end":303449,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303450,"byte_end":303464,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303465,"byte_end":303472,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303473,"byte_end":303488,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     archived_value,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303489,"byte_end":303512,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     ser::{Serializer, serializers::BufferSerializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303513,"byte_end":303570,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/     AlignedBytes,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303571,"byte_end":303592,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     AlignedVec,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303593,"byte_end":303612,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303613,"byte_end":303629,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303630,"byte_end":303647,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303648,"byte_end":303666,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303667,"byte_end":303673,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303674,"byte_end":303677,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive, Serialize)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303678,"byte_end":303711,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ enum Event {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303712,"byte_end":303728,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/     Spawn,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303729,"byte_end":303743,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/     Speak(String),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303744,"byte_end":303766,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/     Die,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303767,"byte_end":303779,"line_start":70,"line_end":70,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303780,"byte_end":303785,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303786,"byte_end":303789,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = BufferSerializer::new(AlignedBytes([0u8; 256]));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303790,"byte_end":303863,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ let pos = serializer.serialize_value(&Event::Speak(\"Help me!\".to_string()))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303864,"byte_end":303943,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/     .expect(\"failed to archive event\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303944,"byte_end":303987,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303988,"byte_end":304026,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"/ let archived = unsafe { archived_value::<Event>(buf.as_ref(), pos) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304027,"byte_end":304100,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ if let Archived::<Event>::Speak(message) = archived {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304101,"byte_end":304158,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/     assert_eq!(message.as_str(), \"Help me!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304159,"byte_end":304208,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ } else {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304209,"byte_end":304221,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/     panic!(\"archived event was of the wrong type\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304222,"byte_end":304277,"line_start":81,"line_end":81,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304278,"byte_end":304283,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304284,"byte_end":304291,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304487,"byte_end":304490,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferSerializer<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new archive buffer from a byte buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new archive buffer from a byte buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304409,"byte_end":304461,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304466,"byte_end":304475,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304796,"byte_end":304804,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"with_pos","qualname":"<BufferSerializer<T>>::with_pos","value":"pub fn with_pos(T, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new archive buffer from a byte buffer. The buffer will start writing at the given\n position, but the buffer must contain all bytes (otherwise the alignments of types may not\n be correct).\n","sig":null,"attributes":[{"value":"/ Creates a new archive buffer from a byte buffer. The buffer will start writing at the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304555,"byte_end":304650,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ position, but the buffer must contain all bytes (otherwise the alignments of types may not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304655,"byte_end":304749,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ be correct).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304754,"byte_end":304770,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304775,"byte_end":304784,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304962,"byte_end":304972,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferSerializer<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the serializer and returns the underlying type.\n","sig":null,"attributes":[{"value":"/ Consumes the serializer and returns the underlying type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304876,"byte_end":304936,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304941,"byte_end":304950,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7148},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306334,"byte_end":306346,"line_start":159,"line_end":159,"column_start":5,"column_end":17},"name":"OutOfScratch","qualname":"::ser::serializers::core::FixedSizeScratchError::OutOfScratch","value":"FixedSizeScratchError::OutOfScratch(Layout)","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" The allocator ran out of scratch space.\n","sig":null,"attributes":[{"value":"/ The allocator ran out of scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306286,"byte_end":306329,"line_start":158,"line_end":158,"column_start":5,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":7151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306415,"byte_end":306438,"line_start":161,"line_end":161,"column_start":5,"column_end":28},"name":"NotPoppedInReverseOrder","qualname":"::ser::serializers::core::FixedSizeScratchError::NotPoppedInReverseOrder","value":"FixedSizeScratchError::NotPoppedInReverseOrder { pos, next_pos, next_size }","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" Scratch space was not popped in reverse order.\n","sig":null,"attributes":[{"value":"/ Scratch space was not popped in reverse order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306360,"byte_end":306410,"line_start":160,"line_end":160,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7155},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306781,"byte_end":306798,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"UnownedAllocation","qualname":"::ser::serializers::core::FixedSizeScratchError::UnownedAllocation","value":"FixedSizeScratchError::UnownedAllocation","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":" The given allocation did not belong to the scratch allocator.\n","sig":null,"attributes":[{"value":"/ The given allocation did not belong to the scratch allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306711,"byte_end":306776,"line_start":169,"line_end":169,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":7147},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306258,"byte_end":306279,"line_start":157,"line_end":157,"column_start":10,"column_end":31},"name":"FixedSizeScratchError","qualname":"::ser::serializers::core::FixedSizeScratchError","value":"pub enum FixedSizeScratchError {\n    OutOfScratch(Layout),\n    NotPoppedInReverseOrder {\n        pos: usize,\n        next_pos: usize,\n        next_size: usize,\n    },\n    UnownedAllocation,\n}","parent":null,"children":[{"krate":0,"index":7148},{"krate":0,"index":7151},{"krate":0,"index":7155}],"decl_id":null,"docs":" Errors that can occur when using a fixed-size allocator.","sig":null,"attributes":[{"value":"/ Errors that can occur when using a fixed-size allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306042,"byte_end":306102,"line_start":152,"line_end":152,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306103,"byte_end":306106,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Pairing a fixed-size allocator with a fallback allocator can help prevent running out of scratch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306107,"byte_end":306207,"line_start":154,"line_end":154,"column_start":1,"column_end":101}},{"value":"/ space unexpectedly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306208,"byte_end":306231,"line_start":155,"line_end":155,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7159},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307728,"byte_end":307741,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"BufferScratch","qualname":"::ser::serializers::core::BufferScratch","value":"BufferScratch {  }","parent":null,"children":[{"krate":0,"index":7161},{"krate":0,"index":7162}],"decl_id":null,"docs":" Scratch space that allocates within a buffer.\n","sig":null,"attributes":[{"value":"/ Scratch space that allocates within a buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307650,"byte_end":307699,"line_start":199,"line_end":199,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307867,"byte_end":307870,"line_start":208,"line_end":208,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferScratch<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer scratch allocator.\n","sig":null,"attributes":[{"value":"/ Creates a new buffer scratch allocator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307812,"byte_end":307855,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307997,"byte_end":308002,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"clear","qualname":"<BufferScratch<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the scratch space to its initial state.\n","sig":null,"attributes":[{"value":"/ Resets the scratch space to its initial state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307935,"byte_end":307985,"line_start":212,"line_end":212,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308136,"byte_end":308146,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferScratch<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the buffer scratch allocator, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes the buffer scratch allocator, returning the underlying buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308049,"byte_end":308124,"line_start":217,"line_end":217,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":7166},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310149,"byte_end":310164,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"FallbackScratch","qualname":"::ser::serializers::core::FallbackScratch","value":"FallbackScratch {  }","parent":null,"children":[{"krate":0,"index":7169},{"krate":0,"index":7170}],"decl_id":null,"docs":" Allocates scratch space with a main and backup scratch.\n","sig":null,"attributes":[{"value":"/ Allocates scratch space with a main and backup scratch.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310061,"byte_end":310120,"line_start":280,"line_end":280,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310317,"byte_end":310320,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"new","qualname":"<FallbackScratch<M, F>>::new","value":"pub fn new(M, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates fallback scratch from a main and backup scratch.\n","sig":null,"attributes":[{"value":"/ Creates fallback scratch from a main and backup scratch.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310245,"byte_end":310305,"line_start":288,"line_end":288,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":7175},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312125,"byte_end":312140,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"WriteSerializer","qualname":"::ser::serializers::std::WriteSerializer","value":"WriteSerializer {  }","parent":null,"children":[{"krate":0,"index":7177},{"krate":0,"index":7178}],"decl_id":null,"docs":" Wraps a type that implements [`io::Write`](std::io::Write) and equips it with [`Serializer`].","sig":null,"attributes":[{"value":"/ Wraps a type that implements [`io::Write`](std::io::Write) and equips it with [`Serializer`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311603,"byte_end":311700,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311701,"byte_end":311704,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311705,"byte_end":311719,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311720,"byte_end":311727,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rkyv::ser::{serializers::WriteSerializer, Serializer};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311728,"byte_end":311790,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311791,"byte_end":311794,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = WriteSerializer::new(Vec::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311795,"byte_end":311853,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(serializer.pos(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311854,"byte_end":311890,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ serializer.write(&[0u8, 1u8, 2u8, 3u8]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311891,"byte_end":311935,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(serializer.pos(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311936,"byte_end":311972,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":311973,"byte_end":312011,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(buf.len(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312012,"byte_end":312041,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(buf, vec![0u8, 1u8, 2u8, 3u8]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312042,"byte_end":312088,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312089,"byte_end":312096,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312303,"byte_end":312306,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteSerializer<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer from a writer.\n","sig":null,"attributes":[{"value":"/ Creates a new serializer from a writer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312234,"byte_end":312277,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312282,"byte_end":312291,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312523,"byte_end":312531,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"with_pos","qualname":"<WriteSerializer<W>>::with_pos","value":"pub fn with_pos(W, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer from a writer, and assumes that the underlying writer is currently\n at the given position.\n","sig":null,"attributes":[{"value":"/ Creates a new serializer from a writer, and assumes that the underlying writer is currently","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312371,"byte_end":312466,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312471,"byte_end":312497,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312502,"byte_end":312511,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312707,"byte_end":312717,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WriteSerializer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes the serializer and returns the internal writer used to create it.\n","sig":null,"attributes":[{"value":"/ Consumes the serializer and returns the internal writer used to create it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312603,"byte_end":312681,"line_start":38,"line_end":38,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312686,"byte_end":312695,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284254,"byte_end":284269,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"SerializerError","qualname":"::ser::serializers::CompositeSerializerError::SerializerError","value":"CompositeSerializerError::SerializerError(S)","parent":{"krate":0,"index":7182},"children":[],"decl_id":null,"docs":" An error occurred while serializing\n","sig":null,"attributes":[{"value":"/ An error occurred while serializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284210,"byte_end":284249,"line_start":29,"line_end":29,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284330,"byte_end":284347,"line_start":32,"line_end":32,"column_start":5,"column_end":22},"name":"ScratchSpaceError","qualname":"::ser::serializers::CompositeSerializerError::ScratchSpaceError","value":"CompositeSerializerError::ScratchSpaceError(C)","parent":{"krate":0,"index":7182},"children":[],"decl_id":null,"docs":" An error occurred while using scratch space\n","sig":null,"attributes":[{"value":"/ An error occurred while using scratch space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284278,"byte_end":284325,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284414,"byte_end":284425,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"SharedError","qualname":"::ser::serializers::CompositeSerializerError::SharedError","value":"CompositeSerializerError::SharedError(H)","parent":{"krate":0,"index":7182},"children":[],"decl_id":null,"docs":" An error occurred while serializing shared memory\n","sig":null,"attributes":[{"value":"/ An error occurred while serializing shared memory","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284356,"byte_end":284409,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":7182},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284170,"byte_end":284194,"line_start":28,"line_end":28,"column_start":10,"column_end":34},"name":"CompositeSerializerError","qualname":"::ser::serializers::CompositeSerializerError","value":"pub enum CompositeSerializerError<S, C, H> {\n    SerializerError(S),\n    ScratchSpaceError(C),\n    SharedError(H),\n}","parent":null,"children":[{"krate":0,"index":7186},{"krate":0,"index":7189},{"krate":0,"index":7192}],"decl_id":null,"docs":" The default serializer error.\n","sig":null,"attributes":[{"value":"/ The default serializer error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284110,"byte_end":284143,"line_start":26,"line_end":26,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":7200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285540,"byte_end":285559,"line_start":74,"line_end":74,"column_start":12,"column_end":31},"name":"CompositeSerializer","qualname":"::ser::serializers::CompositeSerializer","value":"CompositeSerializer {  }","parent":null,"children":[{"krate":0,"index":7204},{"krate":0,"index":7205},{"krate":0,"index":7206}],"decl_id":null,"docs":" A serializer built from composeable pieces.\n","sig":null,"attributes":[{"value":"/ A serializer built from composeable pieces.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285464,"byte_end":285511,"line_start":72,"line_end":72,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285825,"byte_end":285828,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<CompositeSerializer<S, C, H>>::new","value":"pub fn new(S, C, H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new composite serializer from serializer, scratch, and shared components.\n","sig":null,"attributes":[{"value":"/ Creates a new composite serializer from serializer, scratch, and shared components.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285712,"byte_end":285799,"line_start":81,"line_end":81,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285804,"byte_end":285813,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286069,"byte_end":286084,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"into_components","qualname":"<CompositeSerializer<S, C, H>>::into_components","value":"pub fn into_components(Self) -> (S, C, H)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the composite serializer and returns the components.\n","sig":null,"attributes":[{"value":"/ Consumes the composite serializer and returns the components.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285978,"byte_end":286043,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286048,"byte_end":286057,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286331,"byte_end":286346,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"into_serializer","qualname":"<CompositeSerializer<S, C, H>>::into_serializer","value":"pub fn into_serializer(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes the composite serializer and returns the serializer.","sig":null,"attributes":[{"value":"/ Consumes the composite serializer and returns the serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286170,"byte_end":286235,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286240,"byte_end":286243,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The scratch space and shared component are discarded.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286248,"byte_end":286305,"line_start":99,"line_end":99,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286310,"byte_end":286319,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3967},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289896,"byte_end":289910,"line_start":216,"line_end":216,"column_start":10,"column_end":24},"name":"CoreSerializer","qualname":"::ser::serializers::CoreSerializer","value":"CompositeSerializer<BufferSerializer<AlignedBytes<>>,\n                    BufferScratch<AlignedBytes<>>, Infallible>","parent":null,"children":[],"decl_id":null,"docs":" A serializer suitable for environments where allocations cannot be made.","sig":null,"attributes":[{"value":"/ A serializer suitable for environments where allocations cannot be made.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289583,"byte_end":289659,"line_start":211,"line_end":211,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289660,"byte_end":289663,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ `CoreSerializer` takes two arguments: the amount of serialization memory to allocate and the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289664,"byte_end":289760,"line_start":213,"line_end":213,"column_start":1,"column_end":97}},{"value":"/ amount of scratch space to allocate. If you run out of either while serializing, the serializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289761,"byte_end":289860,"line_start":214,"line_end":214,"column_start":1,"column_end":100}},{"value":"/ will return an error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289861,"byte_end":289886,"line_start":215,"line_end":215,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":3970},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290601,"byte_end":290616,"line_start":230,"line_end":230,"column_start":10,"column_end":25},"name":"AllocSerializer","qualname":"::ser::serializers::AllocSerializer","value":"CompositeSerializer<AlignedSerializer<AlignedVec>,\n                    FallbackScratch<HeapScratch<>, AllocScratch>,\n                    SharedSerializeMap>","parent":null,"children":[],"decl_id":null,"docs":" A general-purpose serializer suitable for environments where allocations can be made.","sig":null,"attributes":[{"value":"/ A general-purpose serializer suitable for environments where allocations can be made.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290061,"byte_end":290150,"line_start":222,"line_end":222,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290151,"byte_end":290154,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ `AllocSerializer` takes one argument: the amount of scratch space to allocate before spilling","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290155,"byte_end":290252,"line_start":224,"line_end":224,"column_start":1,"column_end":98}},{"value":"/ allocations over into heap memory. A large amount of scratch space may result in some of it not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290253,"byte_end":290352,"line_start":225,"line_end":225,"column_start":1,"column_end":100}},{"value":"/ being used, but too little scratch space will result in many allocations and decreased","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290353,"byte_end":290443,"line_start":226,"line_end":226,"column_start":1,"column_end":91}},{"value":"/ performance. You should consider your use case carefully when determining how much scratch space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290444,"byte_end":290544,"line_start":227,"line_end":227,"column_start":1,"column_end":101}},{"value":"/ to pre-allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290545,"byte_end":290565,"line_start":228,"line_end":228,"column_start":1,"column_end":21}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":290566,"byte_end":290591,"line_start":229,"line_end":229,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":4004},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276986,"byte_end":276996,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer: Fallible","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021}],"decl_id":null,"docs":" A byte sink that knows where it is.","sig":null,"attributes":[{"value":"/ A byte sink that knows where it is.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276525,"byte_end":276564,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276565,"byte_end":276568,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A type that is [`io::Write`](std::io::Write) can be wrapped in a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276569,"byte_end":276637,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ [`WriteSerializer`](serializers::WriteSerializer) to equip it with `Serializer`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276638,"byte_end":276722,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276723,"byte_end":276726,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It's important that the memory for archived objects is properly aligned before attempting to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276727,"byte_end":276823,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ read objects out of it; use an [`AlignedVec`](crate::AlignedVec) or the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276824,"byte_end":276899,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ [`AlignedBytes`](crate::AlignedBytes) wrappers if they are appropriate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276900,"byte_end":276975,"line_start":15,"line_end":15,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277072,"byte_end":277075,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pos","qualname":"::ser::Serializer::pos","value":"pub fn pos(&Self) -> usize","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Returns the current position of the serializer.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277013,"byte_end":277064,"line_start":17,"line_end":17,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277162,"byte_end":277167,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"write","qualname":"::ser::Serializer::write","value":"pub fn write(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Attempts to write the given bytes to the serializer.\n","sig":null,"attributes":[{"value":"/ Attempts to write the given bytes to the serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277098,"byte_end":277154,"line_start":20,"line_end":20,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277298,"byte_end":277301,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"pad","qualname":"::ser::Serializer::pad","value":"pub fn pad(&mut Self, usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Advances the given number of bytes as padding.\n","sig":null,"attributes":[{"value":"/ Advances the given number of bytes as padding.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277226,"byte_end":277276,"line_start":23,"line_end":23,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277281,"byte_end":277290,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4012},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277638,"byte_end":277643,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"align","qualname":"::ser::Serializer::align","value":"pub fn align(&mut Self, usize) -> Result<usize, Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Aligns the position of the serializer to the given alignment.\n","sig":null,"attributes":[{"value":"/ Aligns the position of the serializer to the given alignment.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277551,"byte_end":277616,"line_start":33,"line_end":33,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277621,"byte_end":277630,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277969,"byte_end":277978,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"align_for","qualname":"::ser::Serializer::align_for","value":"pub fn align_for<T>(&mut Self) -> Result<usize, Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Aligns the position of the serializer to be suitable to write the given type.\n","sig":null,"attributes":[{"value":"/ Aligns the position of the serializer to be suitable to write the given type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277866,"byte_end":277947,"line_start":43,"line_end":43,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":277952,"byte_end":277961,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278392,"byte_end":278407,"line_start":57,"line_end":57,"column_start":15,"column_end":30},"name":"resolve_aligned","qualname":"::ser::Serializer::resolve_aligned","value":"pub unsafe fn resolve_aligned<T: Archive + ?Sized>(&mut Self, &T, T::Resolver)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Resolves the given value with its resolver and writes the archived type.","sig":null,"attributes":[{"value":"/ Resolves the given value with its resolver and writes the archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278077,"byte_end":278153,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278158,"byte_end":278161,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Returns the position of the written archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278166,"byte_end":278220,"line_start":51,"line_end":51,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278225,"byte_end":278228,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278233,"byte_end":278245,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278250,"byte_end":278253,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278258,"byte_end":278316,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ - The serializer must be aligned for a `T::Archived`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":278321,"byte_end":278377,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279100,"byte_end":279115,"line_start":77,"line_end":77,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"::ser::Serializer::serialize_value","value":"pub fn serialize_value<T: Serialize<Self>>(&mut Self, &T)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Archives the given object and returns the position it was archived at.\n","sig":null,"attributes":[{"value":"/ Archives the given object and returns the position it was archived at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279004,"byte_end":279078,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279083,"byte_end":279092,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279789,"byte_end":279812,"line_start":92,"line_end":92,"column_start":15,"column_end":38},"name":"resolve_unsized_aligned","qualname":"::ser::Serializer::resolve_unsized_aligned","value":"pub unsafe fn resolve_unsized_aligned<T: ArchiveUnsized +\n                                      ?Sized>(&mut Self, &T, usize,\n                                              T::MetadataResolver)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Resolves the given reference with its resolver and writes the archived reference.","sig":null,"attributes":[{"value":"/ Resolves the given reference with its resolver and writes the archived reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279347,"byte_end":279432,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279437,"byte_end":279440,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns the position of the written archived `RelPtr`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279445,"byte_end":279503,"line_start":85,"line_end":85,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279508,"byte_end":279511,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279516,"byte_end":279528,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279533,"byte_end":279536,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ - `metadata_resolver` must be the result of serializing the metadata of `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279541,"byte_end":279624,"line_start":89,"line_end":89,"column_start":5,"column_end":88}},{"value":"/ - `to` must be the position of the serialized `value` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279629,"byte_end":279705,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ - The serializer must be aligned for a `RelPtr<T::Archived>`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":279710,"byte_end":279774,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":280612,"byte_end":280635,"line_start":113,"line_end":113,"column_start":8,"column_end":31},"name":"serialize_unsized_value","qualname":"::ser::Serializer::serialize_unsized_value","value":"pub fn serialize_unsized_value<T: SerializeUnsized<Self> +\n                               ?Sized>(&mut Self, &T)\n-> Result<usize, Self::Error>","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":" Archives a reference to the given object and returns the position it was archived at.\n","sig":null,"attributes":[{"value":"/ Archives a reference to the given object and returns the position it was archived at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":280501,"byte_end":280590,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":280595,"byte_end":280604,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":4023},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281124,"byte_end":281136,"line_start":127,"line_end":127,"column_start":11,"column_end":23},"name":"ScratchSpace","qualname":"::ser::ScratchSpace","value":"ScratchSpace: Fallible","parent":null,"children":[{"krate":0,"index":4024},{"krate":0,"index":4025}],"decl_id":null,"docs":" A serializer that can allocate scratch space.\n","sig":null,"attributes":[{"value":"/ A serializer that can allocate scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281064,"byte_end":281113,"line_start":126,"line_end":126,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281293,"byte_end":281305,"line_start":133,"line_end":133,"column_start":15,"column_end":27},"name":"push_scratch","qualname":"::ser::ScratchSpace::push_scratch","value":"pub unsafe fn push_scratch(&mut Self, Layout)\n-> Result<NonNull<[u8]>, Self::Error>","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Allocates scratch space of the requested size.","sig":null,"attributes":[{"value":"/ Allocates scratch space of the requested size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281153,"byte_end":281203,"line_start":128,"line_end":128,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281208,"byte_end":281211,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281216,"byte_end":281228,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281233,"byte_end":281236,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ `layout` must have non-zero size.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281241,"byte_end":281278,"line_start":132,"line_end":132,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281646,"byte_end":281657,"line_start":141,"line_end":141,"column_start":15,"column_end":26},"name":"pop_scratch","qualname":"::ser::ScratchSpace::pop_scratch","value":"pub unsafe fn pop_scratch(&mut Self, NonNull<u8>, Layout)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Deallocates previously allocated scratch space.","sig":null,"attributes":[{"value":"/ Deallocates previously allocated scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281377,"byte_end":281428,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281433,"byte_end":281436,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281441,"byte_end":281453,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281458,"byte_end":281461,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ - `ptr` must be the scratch memory last allocated with `push_scratch`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281466,"byte_end":281540,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ - `layout` must be the same layout that was used to allocate that block of memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281545,"byte_end":281631,"line_start":140,"line_end":140,"column_start":5,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":4026},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281858,"byte_end":281881,"line_start":147,"line_end":147,"column_start":11,"column_end":34},"name":"SharedSerializeRegistry","qualname":"::ser::SharedSerializeRegistry","value":"SharedSerializeRegistry: Fallible","parent":null,"children":[{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4033}],"decl_id":null,"docs":" A registry that tracks serialized shared memory.","sig":null,"attributes":[{"value":"/ A registry that tracks serialized shared memory.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281734,"byte_end":281786,"line_start":144,"line_end":144,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281787,"byte_end":281790,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This trait is required to serialize shared pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281791,"byte_end":281847,"line_start":146,"line_end":146,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282035,"byte_end":282049,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"get_shared_ptr","qualname":"::ser::SharedSerializeRegistry::get_shared_ptr","value":"pub fn get_shared_ptr(&mut Self, *const u8) -> Option<usize>","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Gets the position of a previously-added shared pointer.","sig":null,"attributes":[{"value":"/ Gets the position of a previously-added shared pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281898,"byte_end":281957,"line_start":148,"line_end":148,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281962,"byte_end":281965,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer has not yet been added.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281970,"byte_end":282027,"line_start":150,"line_end":150,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282249,"byte_end":282259,"line_start":157,"line_end":157,"column_start":8,"column_end":18},"name":"get_shared","qualname":"::ser::SharedSerializeRegistry::get_shared","value":"pub fn get_shared<T: ?Sized>(&mut Self, &T) -> Option<usize>","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Gets the position of a previously-added shared value.","sig":null,"attributes":[{"value":"/ Gets the position of a previously-added shared value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282102,"byte_end":282159,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282164,"byte_end":282167,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the value has not yet been added.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282172,"byte_end":282227,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282232,"byte_end":282241,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282449,"byte_end":282463,"line_start":162,"line_end":162,"column_start":8,"column_end":22},"name":"add_shared_ptr","qualname":"::ser::SharedSerializeRegistry::add_shared_ptr","value":"pub fn add_shared_ptr(&mut Self, *const u8, usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Adds the position of a shared pointer to the registry.\n","sig":null,"attributes":[{"value":"/ Adds the position of a shared pointer to the registry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282383,"byte_end":282441,"line_start":161,"line_end":161,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4031},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282616,"byte_end":282626,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"add_shared","qualname":"::ser::SharedSerializeRegistry::add_shared","value":"pub fn add_shared<T: ?Sized>(&mut Self, &T, usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Adds the position of a shared value to the registry.\n","sig":null,"attributes":[{"value":"/ Adds the position of a shared value to the registry.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282538,"byte_end":282594,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282599,"byte_end":282608,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282964,"byte_end":282980,"line_start":173,"line_end":173,"column_start":8,"column_end":24},"name":"serialize_shared","qualname":"::ser::SharedSerializeRegistry::serialize_shared","value":"pub fn serialize_shared<T: SerializeUnsized<Self> + ?Sized>(&mut Self, &T)\n-> Result<usize, Self::Error> where Self: Serializer","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Archives the given shared value and returns its position. If the value has already been\n added then it returns the position of the previously added value.\n","sig":null,"attributes":[{"value":"/ Archives the given shared value and returns its position. If the value has already been","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282777,"byte_end":282868,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ added then it returns the position of the previously added value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282873,"byte_end":282942,"line_start":171,"line_end":171,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":282947,"byte_end":282956,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":4035},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::string","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","parent":null,"children":[{"krate":0,"index":4036},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4082},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4089},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4102},{"krate":0,"index":4105},{"krate":0,"index":4108},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4114},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4126},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4150},{"krate":0,"index":4152},{"krate":0,"index":4155},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4161},{"krate":0,"index":7228},{"krate":0,"index":7231},{"krate":0,"index":7234},{"krate":0,"index":7237},{"krate":0,"index":7240},{"krate":0,"index":7243},{"krate":0,"index":4162},{"krate":0,"index":4164},{"krate":0,"index":4166},{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4172},{"krate":0,"index":4174}],"decl_id":null,"docs":" Archived versions of string types.\n","sig":null,"attributes":[{"value":"/ Archived versions of string types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313202,"byte_end":313240,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":4036},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"repr","qualname":"::string::repr","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","parent":null,"children":[{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4051},{"krate":0,"index":4054},{"krate":0,"index":4057},{"krate":0,"index":4060},{"krate":0,"index":7212},{"krate":0,"index":7216},{"krate":0,"index":7219},{"krate":0,"index":4061},{"krate":0,"index":7220},{"krate":0,"index":7224},{"krate":0,"index":7227},{"krate":0,"index":4062},{"krate":0,"index":4065}],"decl_id":null,"docs":" An archived string representation that supports inlining short strings.\n","sig":null,"attributes":[{"value":"/ An archived string representation that supports inlining short strings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":319528,"byte_end":319603,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":4061},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320085,"byte_end":320100,"line_start":18,"line_end":18,"column_start":11,"column_end":26},"name":"INLINE_CAPACITY","qualname":"::string::repr::INLINE_CAPACITY","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of bytes that can be inlined.\n","sig":null,"attributes":[{"value":"/ The maximum number of bytes that can be inlined.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320022,"byte_end":320074,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Union","id":{"krate":0,"index":4062},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320331,"byte_end":320349,"line_start":28,"line_end":28,"column_start":11,"column_end":29},"name":"ArchivedStringRepr","qualname":"::string::repr::ArchivedStringRepr","value":"ArchivedStringRepr {  }","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064}],"decl_id":null,"docs":" An archived string representation that can inline short strings.\n","sig":null,"attributes":[{"value":"/ An archived string representation that can inline short strings.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320252,"byte_end":320320,"line_start":27,"line_end":27,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320516,"byte_end":320525,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<ArchivedStringRepr>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the representation is inline.\n","sig":null,"attributes":[{"value":"/ Returns whether the representation is inline.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320441,"byte_end":320490,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320495,"byte_end":320504,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4067},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320769,"byte_end":320787,"line_start":46,"line_end":46,"column_start":19,"column_end":37},"name":"out_of_line_offset","qualname":"<ArchivedStringRepr>::out_of_line_offset","value":"pub unsafe fn out_of_line_offset(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset of the representation.","sig":null,"attributes":[{"value":"/ Returns the offset of the representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320601,"byte_end":320646,"line_start":40,"line_end":40,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320651,"byte_end":320654,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320659,"byte_end":320671,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320676,"byte_end":320679,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The internal representation must be out-of-line.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320684,"byte_end":320736,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320741,"byte_end":320750,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320960,"byte_end":320966,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArchivedStringRepr>::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320885,"byte_end":320934,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320939,"byte_end":320948,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321349,"byte_end":321359,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArchivedStringRepr>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321266,"byte_end":321323,"line_start":64,"line_end":64,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321328,"byte_end":321337,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321726,"byte_end":321729,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedStringRepr>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the string.\n","sig":null,"attributes":[{"value":"/ Returns the length of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321663,"byte_end":321700,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321705,"byte_end":321714,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322024,"byte_end":322032,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedStringRepr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the string is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether the string is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":321958,"byte_end":321998,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322003,"byte_end":322012,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322378,"byte_end":322383,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ArchivedStringRepr>::bytes","value":"pub fn bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a slice of the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322305,"byte_end":322352,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322357,"byte_end":322366,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322562,"byte_end":322571,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"bytes_mut","qualname":"<ArchivedStringRepr>::bytes_mut","value":"pub fn bytes_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice of the bytes of the string.\n","sig":null,"attributes":[{"value":"/ Returns a mutable slice of the bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322481,"byte_end":322536,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322541,"byte_end":322550,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322760,"byte_end":322766,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ArchivedStringRepr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the string as a `str`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the string as a `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322685,"byte_end":322734,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322739,"byte_end":322748,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322936,"byte_end":322946,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"as_mut_str","qualname":"<ArchivedStringRepr>::as_mut_str","value":"pub fn as_mut_str(&mut Self) -> &mut str","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the string as a `str`.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the string as a `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322853,"byte_end":322910,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":322915,"byte_end":322924,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323340,"byte_end":323354,"line_start":134,"line_end":134,"column_start":19,"column_end":33},"name":"emplace_inline","qualname":"<ArchivedStringRepr>::emplace_inline","value":"pub unsafe fn emplace_inline(&str, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Emplaces a new inline representation for the given `str`.","sig":null,"attributes":[{"value":"/ Emplaces a new inline representation for the given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323049,"byte_end":323110,"line_start":127,"line_end":127,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323115,"byte_end":323118,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323123,"byte_end":323135,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323140,"byte_end":323143,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ - The length of `str` must be less than or equal to [`INLINE_CAPACITY`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323148,"byte_end":323224,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ - `out` must point to a valid location to write the inline representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323229,"byte_end":323307,"line_start":132,"line_end":132,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323312,"byte_end":323321,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":324102,"byte_end":324121,"line_start":151,"line_end":151,"column_start":19,"column_end":38},"name":"emplace_out_of_line","qualname":"<ArchivedStringRepr>::emplace_out_of_line","value":"pub unsafe fn emplace_out_of_line(&str, usize, usize, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Rmplaces a new out-of-line representation for the given `str`.","sig":null,"attributes":[{"value":"/ Rmplaces a new out-of-line representation for the given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323652,"byte_end":323718,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323723,"byte_end":323726,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323731,"byte_end":323743,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323748,"byte_end":323751,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ - The length of `str` must be greater than [`INLINE_CAPACITY`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323756,"byte_end":323823,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ - `pos` must be the location of the representation within the archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323828,"byte_end":323902,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ - `target` must be the location of the serialized bytes of the string.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323907,"byte_end":323981,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ - `out` must point to a valid location to write the out-of-line representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":323986,"byte_end":324069,"line_start":149,"line_end":149,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":324074,"byte_end":324083,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313809,"byte_end":313823,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"ArchivedString","qualname":"::string::ArchivedString","value":"","parent":null,"children":[],"decl_id":null,"docs":" An archived [`String`].","sig":null,"attributes":[{"value":"/ An archived [`String`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313523,"byte_end":313550,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313551,"byte_end":313554,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This has inline and out-of-line representations. Short strings will use the available space","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313555,"byte_end":313650,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ inside the structure to store the string, and long strings will store a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313651,"byte_end":313726,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ [`RelPtr`](crate::RelPtr) to a `str` instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313727,"byte_end":313776,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313777,"byte_end":313797,"line_start":20,"line_end":20,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313971,"byte_end":313977,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ArchivedString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire `ArchivedString`.\n","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire `ArchivedString`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313878,"byte_end":313945,"line_start":24,"line_end":24,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313950,"byte_end":313959,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314138,"byte_end":314149,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"pin_mut_str","qualname":"<ArchivedString>::pin_mut_str","value":"pub fn pin_mut_str(Pin<&mut Self>) -> Pin<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a pinned mutable string slice containing the entire `ArchivedString`.\n","sig":null,"attributes":[{"value":"/ Extracts a pinned mutable string slice containing the entire `ArchivedString`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314030,"byte_end":314112,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314117,"byte_end":314126,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314511,"byte_end":314527,"line_start":43,"line_end":43,"column_start":19,"column_end":35},"name":"resolve_from_str","qualname":"<ArchivedString>::resolve_from_str","value":"pub unsafe fn resolve_from_str(&str, usize, StringResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived string from a given `str`.","sig":null,"attributes":[{"value":"/ Resolves an archived string from a given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314266,"byte_end":314317,"line_start":36,"line_end":36,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314322,"byte_end":314325,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314330,"byte_end":314342,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314347,"byte_end":314350,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314355,"byte_end":314415,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314420,"byte_end":314478,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314483,"byte_end":314492,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314961,"byte_end":314979,"line_start":58,"line_end":58,"column_start":12,"column_end":30},"name":"serialize_from_str","qualname":"<ArchivedString>::serialize_from_str","value":"pub fn serialize_from_str<S: Fallible + ?Sized>(&str, &mut S)\n-> Result<StringResolver, S::Error> where str: SerializeUnsized<S>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived string from a given `str`.\n","sig":null,"attributes":[{"value":"/ Serializes an archived string from a given `str`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314882,"byte_end":314935,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":314940,"byte_end":314949,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4174},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317690,"byte_end":317704,"line_start":184,"line_end":184,"column_start":12,"column_end":26},"name":"StringResolver","qualname":"::string::StringResolver","value":"StringResolver {  }","parent":null,"children":[{"krate":0,"index":4175}],"decl_id":null,"docs":" The resolver for `String`.\n","sig":null,"attributes":[{"value":"/ The resolver for `String`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317648,"byte_end":317678,"line_start":183,"line_end":183,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4176},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":7246},{"krate":0,"index":7249},{"krate":0,"index":7251},{"krate":0,"index":7252},{"krate":0,"index":7254},{"krate":0,"index":7256},{"krate":0,"index":7257},{"krate":0,"index":7259},{"krate":0,"index":7262},{"krate":0,"index":7264},{"krate":0,"index":7265},{"krate":0,"index":7268},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185}],"decl_id":null,"docs":" Archived versions of `time` types.\n","sig":null,"attributes":[{"value":"/ Archived versions of `time` types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":324683,"byte_end":324721,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7246},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":324993,"byte_end":325009,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"ArchivedDuration","qualname":"::time::ArchivedDuration","value":"ArchivedDuration {  }","parent":null,"children":[{"krate":0,"index":7247},{"krate":0,"index":7248}],"decl_id":null,"docs":" An archived [`Duration`](core::time::Duration).\n","sig":null,"attributes":[{"value":"/ An archived [`Duration`](core::time::Duration).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":324745,"byte_end":324796,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325627,"byte_end":325634,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"name":"as_secs","qualname":"<ArchivedDuration>::as_secs","value":"pub const fn as_secs(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of _whole_ seconds contained by this\n `ArchivedDuration`.","sig":null,"attributes":[{"value":"/ Returns the number of _whole_ seconds contained by this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325287,"byte_end":325346,"line_start":21,"line_end":21,"column_start":5,"column_end":64}},{"value":"/ `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325351,"byte_end":325374,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325379,"byte_end":325382,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The returned value does not include the fractional (nanosecond) part of the duration, which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325387,"byte_end":325482,"line_start":24,"line_end":24,"column_start":5,"column_end":100}},{"value":"/ can be obtained using [`subsec_nanos`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325487,"byte_end":325530,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325535,"byte_end":325538,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ [`subsec_nanos`]: ArchivedDuration::subsec_nanos","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325543,"byte_end":325595,"line_start":27,"line_end":27,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325600,"byte_end":325609,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326044,"byte_end":326057,"line_start":39,"line_end":39,"column_start":18,"column_end":31},"name":"subsec_millis","qualname":"<ArchivedDuration>::subsec_millis","value":"pub const fn subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of this `ArchivedDuration`, in whole milliseconds.","sig":null,"attributes":[{"value":"/ Returns the fractional part of this `ArchivedDuration`, in whole milliseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325696,"byte_end":325778,"line_start":33,"line_end":33,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325783,"byte_end":325786,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method does **not** return the length of the duration when represented by milliseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325791,"byte_end":325887,"line_start":35,"line_end":35,"column_start":5,"column_end":101}},{"value":"/ The returned number always represents a fractional portion of a second (i.e., it is less","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325892,"byte_end":325984,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ than one thousand).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325989,"byte_end":326012,"line_start":37,"line_end":37,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326017,"byte_end":326026,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326485,"byte_end":326498,"line_start":49,"line_end":49,"column_start":18,"column_end":31},"name":"subsec_micros","qualname":"<ArchivedDuration>::subsec_micros","value":"pub const fn subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of this `ArchivedDuration`, in whole microseconds.","sig":null,"attributes":[{"value":"/ Returns the fractional part of this `ArchivedDuration`, in whole microseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326138,"byte_end":326220,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326225,"byte_end":326228,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This method does **not** return the length of the duration when represented by microseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326233,"byte_end":326329,"line_start":45,"line_end":45,"column_start":5,"column_end":101}},{"value":"/ The returned number always represents a fractional portion of a second (i.e., it is less","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326334,"byte_end":326426,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ than one million).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326431,"byte_end":326453,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326458,"byte_end":326467,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326910,"byte_end":326922,"line_start":59,"line_end":59,"column_start":18,"column_end":30},"name":"subsec_nanos","qualname":"<ArchivedDuration>::subsec_nanos","value":"pub const fn subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of this `Duration`, in nanoseconds.","sig":null,"attributes":[{"value":"/ Returns the fractional part of this `Duration`, in nanoseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326579,"byte_end":326646,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326651,"byte_end":326654,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method does **not** return the length of the duration when represented by nanoseconds.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326659,"byte_end":326754,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"/ The returned number always represents a fractional portion of a second (i.e., it is less","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326759,"byte_end":326851,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"/ than one billion).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326856,"byte_end":326878,"line_start":57,"line_end":57,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326883,"byte_end":326892,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327105,"byte_end":327114,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"as_millis","qualname":"<ArchivedDuration>::as_millis","value":"pub const fn as_millis(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole milliseconds contained by this `ArchivedDuration`.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole milliseconds contained by this `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":326985,"byte_end":327073,"line_start":63,"line_end":63,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327078,"byte_end":327087,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327381,"byte_end":327390,"line_start":72,"line_end":72,"column_start":18,"column_end":27},"name":"as_micros","qualname":"<ArchivedDuration>::as_micros","value":"pub const fn as_micros(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole microseconds contained by this `ArchivedDuration`.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole microseconds contained by this `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327261,"byte_end":327349,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327354,"byte_end":327363,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327650,"byte_end":327658,"line_start":79,"line_end":79,"column_start":18,"column_end":26},"name":"as_nanos","qualname":"<ArchivedDuration>::as_nanos","value":"pub const fn as_nanos(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of nanoseconds contained by this `ArchivedDuration`.\n","sig":null,"attributes":[{"value":"/ Returns the total number of nanoseconds contained by this `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327537,"byte_end":327618,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327623,"byte_end":327632,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4193},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327976,"byte_end":327987,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"as_secs_f64","qualname":"<ArchivedDuration>::as_secs_f64","value":"pub fn as_secs_f64(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds contained by this `ArchivedDuration` as `f64`.","sig":null,"attributes":[{"value":"/ Returns the number of seconds contained by this `ArchivedDuration` as `f64`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327772,"byte_end":327852,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327857,"byte_end":327860,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The returned value does include the fractional (nanosecond) part of the duration.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327865,"byte_end":327950,"line_start":85,"line_end":85,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":327955,"byte_end":327964,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328307,"byte_end":328318,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"as_secs_f32","qualname":"<ArchivedDuration>::as_secs_f32","value":"pub fn as_secs_f32(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds contained by this `ArchivedDuration` as `f32`.","sig":null,"attributes":[{"value":"/ Returns the number of seconds contained by this `ArchivedDuration` as `f32`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328103,"byte_end":328183,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328188,"byte_end":328191,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The returned value does include the fractional (nanosecond) part of the duration.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328196,"byte_end":328281,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328286,"byte_end":328295,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328637,"byte_end":328644,"line_start":105,"line_end":105,"column_start":19,"column_end":26},"name":"emplace","qualname":"<ArchivedDuration>::emplace","value":"pub unsafe fn emplace(u64, u32, *mut ArchivedDuration)","parent":null,"children":[],"decl_id":null,"docs":" Constructs an archived duration at the given position.","sig":null,"attributes":[{"value":"/ Constructs an archived duration at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328434,"byte_end":328492,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328497,"byte_end":328500,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328505,"byte_end":328517,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328522,"byte_end":328525,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ `out` must point to memory suitable for holding an `ArchivedDuration`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328530,"byte_end":328604,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":328609,"byte_end":328618,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":4199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":4200},{"krate":0,"index":4305},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4466},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4476},{"krate":0,"index":4478},{"krate":0,"index":4480},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4486},{"krate":0,"index":4488},{"krate":0,"index":4490},{"krate":0,"index":7270},{"krate":0,"index":7275},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":4492},{"krate":0,"index":4496},{"krate":0,"index":4501},{"krate":0,"index":4504},{"krate":0,"index":4507}],"decl_id":null,"docs":" Utilities for common archive operations.","sig":null,"attributes":[{"value":"/ Utilities for common archive operations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":328979,"byte_end":329023,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329024,"byte_end":329027,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Buffer access","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329028,"byte_end":329048,"line_start":3,"line_end":3,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329049,"byte_end":329052,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Helper functions to get the root object of an archive under certain conditions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329053,"byte_end":329136,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329137,"byte_end":329140,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Alignment","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329141,"byte_end":329157,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329158,"byte_end":329161,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Alignment helpers ensure that byte buffers are properly aligned when accessing and deserializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329162,"byte_end":329262,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/ data.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329263,"byte_end":329272,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4238},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":337843,"byte_end":337853,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"AlignedVec","qualname":"::util::aligned_vec::AlignedVec","value":"AlignedVec {  }","parent":null,"children":[{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241}],"decl_id":null,"docs":" A vector of bytes that aligns its memory to 16 bytes.\n","sig":null,"attributes":[{"value":"/ A vector of bytes that aligns its memory to 16 bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":337774,"byte_end":337831,"line_start":13,"line_end":13,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":4245},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338194,"byte_end":338203,"line_start":33,"line_end":33,"column_start":15,"column_end":24},"name":"ALIGNMENT","qualname":"::util::aligned_vec::AlignedVec::ALIGNMENT","value":"usize","parent":{"krate":0,"index":4244},"children":[],"decl_id":null,"docs":" The alignment of the vector\n","sig":null,"attributes":[{"value":"/ The alignment of the vector","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338148,"byte_end":338179,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338499,"byte_end":338502,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<AlignedVec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `AlignedVec`.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `AlignedVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338222,"byte_end":338263,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338268,"byte_end":338271,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The vector will not allocate until elements are pushed into it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338276,"byte_end":338343,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338348,"byte_end":338351,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338356,"byte_end":338370,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338375,"byte_end":338382,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338387,"byte_end":338412,"line_start":41,"line_end":41,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338417,"byte_end":338420,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338425,"byte_end":338461,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338466,"byte_end":338473,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338478,"byte_end":338487,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339540,"byte_end":339553,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<AlignedVec>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `AlignedVec` with the specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `AlignedVec` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338635,"byte_end":338704,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338709,"byte_end":338712,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The vector will be able to hold exactly `capacity` bytes without reallocating. If","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338717,"byte_end":338802,"line_start":56,"line_end":56,"column_start":5,"column_end":90}},{"value":"/ `capacity` is 0, the vector will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338807,"byte_end":338857,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338862,"byte_end":338865,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338870,"byte_end":338884,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338889,"byte_end":338896,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338901,"byte_end":338926,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338931,"byte_end":338934,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338939,"byte_end":338987,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338992,"byte_end":338995,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ // The vector contains no items, even though it has capacity for more","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339000,"byte_end":339073,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(vec.len(), 0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339078,"byte_end":339107,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339112,"byte_end":339147,"line_start":67,"line_end":67,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339152,"byte_end":339155,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ // These are all done without reallocating...","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339160,"byte_end":339209,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ for i in 0..10 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339214,"byte_end":339234,"line_start":70,"line_end":70,"column_start":5,"column_end":25}},{"value":"/     vec.push(i);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339239,"byte_end":339259,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339264,"byte_end":339269,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339274,"byte_end":339304,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339309,"byte_end":339344,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339349,"byte_end":339352,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // ...but this may make the vector reallocate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339357,"byte_end":339406,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/ vec.push(11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339411,"byte_end":339428,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(vec.len(), 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339433,"byte_end":339463,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert!(vec.capacity() >= 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339468,"byte_end":339502,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339507,"byte_end":339514,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":339519,"byte_end":339528,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340579,"byte_end":340584,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"clear","qualname":"<AlignedVec>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340179,"byte_end":340222,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340227,"byte_end":340230,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity of the vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340235,"byte_end":340315,"line_start":107,"line_end":107,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340320,"byte_end":340323,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340328,"byte_end":340342,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340347,"byte_end":340354,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340359,"byte_end":340384,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340389,"byte_end":340392,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut v = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340397,"byte_end":340431,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ v.extend_from_slice(&[1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340436,"byte_end":340475,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340480,"byte_end":340483,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ v.clear();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340488,"byte_end":340502,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340507,"byte_end":340510,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340515,"byte_end":340541,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340546,"byte_end":340553,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340558,"byte_end":340567,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341512,"byte_end":341525,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<AlignedVec>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the vector as much as possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":340967,"byte_end":341026,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341031,"byte_end":341034,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ It will drop down as close as possible to the length but the allocator may still inform the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341039,"byte_end":341134,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ vector that there is space for a few more elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341139,"byte_end":341194,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341199,"byte_end":341202,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341207,"byte_end":341221,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341226,"byte_end":341233,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341238,"byte_end":341263,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341268,"byte_end":341271,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341276,"byte_end":341324,"line_start":145,"line_end":145,"column_start":5,"column_end":53}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341329,"byte_end":341367,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341372,"byte_end":341407,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ vec.shrink_to_fit();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341412,"byte_end":341436,"line_start":148,"line_end":148,"column_start":5,"column_end":29}},{"value":"/ assert!(vec.capacity() >= 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341441,"byte_end":341474,"line_start":149,"line_end":149,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341479,"byte_end":341486,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341491,"byte_end":341500,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342543,"byte_end":342553,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<AlignedVec>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341673,"byte_end":341734,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341739,"byte_end":341742,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this function returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341747,"byte_end":341841,"line_start":162,"line_end":162,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage. Modifying the vector may cause its buffer to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341846,"byte_end":341933,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":341938,"byte_end":342004,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342009,"byte_end":342012,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342017,"byte_end":342031,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342036,"byte_end":342043,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342048,"byte_end":342073,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342078,"byte_end":342081,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ // Allocate vecotr big enough for 4 bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342086,"byte_end":342132,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/ let size = 4;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342137,"byte_end":342154,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/ let mut x = AlignedVec::with_capacity(size);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342159,"byte_end":342207,"line_start":172,"line_end":172,"column_start":5,"column_end":53}},{"value":"/ let x_ptr = x.as_mut_ptr();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342212,"byte_end":342243,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342248,"byte_end":342251,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // Initialize elements via raw pointer writes, then set length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342256,"byte_end":342323,"line_start":175,"line_end":175,"column_start":5,"column_end":72}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342328,"byte_end":342340,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/     for i in 0..size {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342345,"byte_end":342371,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/         *x_ptr.add(i) = i as u8;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342376,"byte_end":342412,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342417,"byte_end":342426,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/     x.set_len(size);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342431,"byte_end":342455,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342460,"byte_end":342465,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(&*x, &[0, 1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342470,"byte_end":342505,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342510,"byte_end":342517,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342522,"byte_end":342531,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4253},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343158,"byte_end":343170,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<AlignedVec>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342615,"byte_end":342665,"line_start":189,"line_end":189,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342670,"byte_end":342673,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342678,"byte_end":342709,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342714,"byte_end":342717,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342722,"byte_end":342736,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342741,"byte_end":342748,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342753,"byte_end":342778,"line_start":195,"line_end":195,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342783,"byte_end":342786,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342791,"byte_end":342827,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2, 3, 4, 5]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342832,"byte_end":342876,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(vec.as_mut_slice().len(), 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342881,"byte_end":342925,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/ for i in 0..5 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342930,"byte_end":342949,"line_start":200,"line_end":200,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(vec.as_mut_slice()[i], i as u8 + 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":342954,"byte_end":343009,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/     vec.as_mut_slice()[i] = i as u8;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343014,"byte_end":343054,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(vec.as_mut_slice()[i], i as u8);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343059,"byte_end":343110,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343115,"byte_end":343120,"line_start":204,"line_end":204,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343125,"byte_end":343132,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343137,"byte_end":343146,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344283,"byte_end":344289,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AlignedVec>::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343282,"byte_end":343331,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343336,"byte_end":343339,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this function returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343344,"byte_end":343438,"line_start":213,"line_end":213,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage. Modifying the vector may cause its buffer to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343443,"byte_end":343530,"line_start":214,"line_end":214,"column_start":5,"column_end":92}},{"value":"/ reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343535,"byte_end":343601,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343606,"byte_end":343609,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The caller must also ensure that the memory the pointer (non-transitively) points to is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343614,"byte_end":343705,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/ never written to (except inside an `UnsafeCell`) using this pointer or any pointer derived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343710,"byte_end":343804,"line_start":218,"line_end":218,"column_start":5,"column_end":99}},{"value":"/ from it. If you need to mutate the contents of the slice, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343809,"byte_end":343874,"line_start":219,"line_end":219,"column_start":5,"column_end":70}},{"value":"/ [`as_mut_ptr`](AlignedVec::as_mut_ptr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343879,"byte_end":343922,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343927,"byte_end":343930,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343935,"byte_end":343949,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343954,"byte_end":343961,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343966,"byte_end":343991,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":343996,"byte_end":343999,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut x = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344004,"byte_end":344038,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ x.extend_from_slice(&[1, 2, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344043,"byte_end":344079,"line_start":227,"line_end":227,"column_start":5,"column_end":41}},{"value":"/ let x_ptr = x.as_ptr();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344084,"byte_end":344111,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344116,"byte_end":344119,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344124,"byte_end":344136,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/     for i in 0..x.len() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344141,"byte_end":344170,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(*x_ptr.add(i), 1 << i);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344175,"byte_end":344221,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344226,"byte_end":344235,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344240,"byte_end":344245,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344250,"byte_end":344257,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344262,"byte_end":344271,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344779,"byte_end":344787,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<AlignedVec>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344349,"byte_end":344399,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344404,"byte_end":344407,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344412,"byte_end":344439,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344444,"byte_end":344447,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344452,"byte_end":344466,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344471,"byte_end":344478,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344483,"byte_end":344508,"line_start":247,"line_end":247,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344513,"byte_end":344516,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344521,"byte_end":344557,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2, 3, 4, 5]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344562,"byte_end":344606,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(vec.as_slice().len(), 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344611,"byte_end":344651,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/ for i in 0..5 {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344656,"byte_end":344675,"line_start":252,"line_end":252,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(vec.as_slice()[i], i as u8 + 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344680,"byte_end":344731,"line_start":253,"line_end":253,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344736,"byte_end":344741,"line_start":254,"line_end":254,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344746,"byte_end":344753,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344758,"byte_end":344767,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4256},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345167,"byte_end":345175,"line_start":271,"line_end":271,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AlignedVec>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the vector can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the vector can hold without reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344887,"byte_end":344963,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344968,"byte_end":344971,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344976,"byte_end":344990,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":344995,"byte_end":345002,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345007,"byte_end":345032,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345037,"byte_end":345040,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345045,"byte_end":345089,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345094,"byte_end":345129,"line_start":268,"line_end":268,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345134,"byte_end":345141,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345146,"byte_end":345155,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345898,"byte_end":345905,"line_start":294,"line_end":294,"column_start":12,"column_end":19},"name":"reserve","qualname":"<AlignedVec>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted into the given\n `AlignedVec`. The collection may reserve more space to avoid frequent reallocations. After\n calling `reserve`, capacity will be greater than or equal to `self.len() + additional`. Does\n nothing if capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted into the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345222,"byte_end":345310,"line_start":275,"line_end":275,"column_start":5,"column_end":93}},{"value":"/ `AlignedVec`. The collection may reserve more space to avoid frequent reallocations. After","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345315,"byte_end":345409,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/ calling `reserve`, capacity will be greater than or equal to `self.len() + additional`. Does","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345414,"byte_end":345510,"line_start":277,"line_end":277,"column_start":5,"column_end":101}},{"value":"/ nothing if capacity is already sufficient.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345515,"byte_end":345561,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345566,"byte_end":345569,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345574,"byte_end":345586,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345591,"byte_end":345594,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds `usize::MAX` bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345599,"byte_end":345657,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345662,"byte_end":345665,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345670,"byte_end":345684,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345689,"byte_end":345696,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345701,"byte_end":345726,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345731,"byte_end":345734,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345739,"byte_end":345775,"line_start":288,"line_end":288,"column_start":5,"column_end":41}},{"value":"/ vec.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345780,"byte_end":345796,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/ vec.reserve(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345801,"byte_end":345821,"line_start":290,"line_end":290,"column_start":5,"column_end":25}},{"value":"/ assert!(vec.capacity() >= 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345826,"byte_end":345860,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345865,"byte_end":345872,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":345877,"byte_end":345886,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347042,"byte_end":347050,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<AlignedVec>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346751,"byte_end":346805,"line_start":317,"line_end":317,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346810,"byte_end":346813,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346818,"byte_end":346832,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346837,"byte_end":346844,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346849,"byte_end":346874,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346879,"byte_end":346882,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346887,"byte_end":346914,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346919,"byte_end":346945,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346950,"byte_end":346953,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ v.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346958,"byte_end":346972,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":346977,"byte_end":347004,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347009,"byte_end":347016,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347021,"byte_end":347030,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4259},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347411,"byte_end":347414,"line_start":345,"line_end":345,"column_start":12,"column_end":15},"name":"len","qualname":"<AlignedVec>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its 'length'.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its 'length'.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347101,"byte_end":347184,"line_start":334,"line_end":334,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347189,"byte_end":347192,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347197,"byte_end":347211,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347216,"byte_end":347223,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347228,"byte_end":347253,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347258,"byte_end":347261,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let mut a = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347266,"byte_end":347300,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ a.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347305,"byte_end":347341,"line_start":341,"line_end":341,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347346,"byte_end":347373,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347378,"byte_end":347385,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347390,"byte_end":347399,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347861,"byte_end":347878,"line_start":363,"line_end":363,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<AlignedVec>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Copies and appends all bytes in a slice to the `AlignedVec`.","sig":null,"attributes":[{"value":"/ Copies and appends all bytes in a slice to the `AlignedVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347461,"byte_end":347525,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347530,"byte_end":347533,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ The elements of the slice are appended in-order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347538,"byte_end":347590,"line_start":351,"line_end":351,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347595,"byte_end":347598,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347603,"byte_end":347617,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347622,"byte_end":347629,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347634,"byte_end":347659,"line_start":355,"line_end":355,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347664,"byte_end":347667,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347672,"byte_end":347708,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"/ vec.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347713,"byte_end":347729,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/ vec.extend_from_slice(&[2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347734,"byte_end":347772,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347777,"byte_end":347823,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347828,"byte_end":347835,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":347840,"byte_end":347849,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348628,"byte_end":348631,"line_start":389,"line_end":389,"column_start":12,"column_end":15},"name":"pop","qualname":"<AlignedVec>::pop","value":"pub fn pop(&mut Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and returns it, or `None` if it is empty.","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and returns it, or `None` if it is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348260,"byte_end":348344,"line_start":377,"line_end":377,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348349,"byte_end":348352,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348357,"byte_end":348371,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348376,"byte_end":348383,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348388,"byte_end":348413,"line_start":381,"line_end":381,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348418,"byte_end":348421,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348426,"byte_end":348462,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348467,"byte_end":348505,"line_start":384,"line_end":384,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec.pop(), Some(3));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348510,"byte_end":348545,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348550,"byte_end":348590,"line_start":386,"line_end":386,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348595,"byte_end":348602,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348607,"byte_end":348616,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349250,"byte_end":349254,"line_start":415,"line_end":415,"column_start":12,"column_end":16},"name":"push","qualname":"<AlignedVec>::push","value":"pub fn push(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of a collection.","sig":null,"attributes":[{"value":"/ Appends an element to the back of a collection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348838,"byte_end":348889,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348894,"byte_end":348897,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348902,"byte_end":348914,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348919,"byte_end":348922,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds `usize::MAX` bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348927,"byte_end":348985,"line_start":403,"line_end":403,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348990,"byte_end":348993,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":348998,"byte_end":349012,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349017,"byte_end":349024,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349029,"byte_end":349054,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349059,"byte_end":349062,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349067,"byte_end":349103,"line_start":409,"line_end":409,"column_start":5,"column_end":41}},{"value":"/ vec.extend_from_slice(&[1, 2]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349108,"byte_end":349143,"line_start":410,"line_end":410,"column_start":5,"column_end":40}},{"value":"/ vec.push(3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349148,"byte_end":349164,"line_start":411,"line_end":411,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349169,"byte_end":349212,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349217,"byte_end":349224,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349229,"byte_end":349238,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350274,"byte_end":350287,"line_start":445,"line_end":445,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<AlignedVec>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\n given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal\n to `self.len() + additional`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more elements to be inserted in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349431,"byte_end":349525,"line_start":423,"line_end":423,"column_start":5,"column_end":99}},{"value":"/ given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349530,"byte_end":349623,"line_start":424,"line_end":424,"column_start":5,"column_end":98}},{"value":"/ to `self.len() + additional`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349628,"byte_end":349713,"line_start":425,"line_end":425,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349718,"byte_end":349721,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give the collection more space than it requests. Therefore,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349726,"byte_end":349817,"line_start":427,"line_end":427,"column_start":5,"column_end":96}},{"value":"/ capacity can not be relied upon to be precisely minimal. Prefer reserve if future insertions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349822,"byte_end":349918,"line_start":428,"line_end":428,"column_start":5,"column_end":101}},{"value":"/ are expected.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349923,"byte_end":349940,"line_start":429,"line_end":429,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349945,"byte_end":349948,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349953,"byte_end":349965,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349970,"byte_end":349973,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":349978,"byte_end":350027,"line_start":433,"line_end":433,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350032,"byte_end":350035,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350040,"byte_end":350054,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350059,"byte_end":350066,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350071,"byte_end":350096,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350101,"byte_end":350104,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350109,"byte_end":350145,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/ vec.push(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350150,"byte_end":350166,"line_start":440,"line_end":440,"column_start":5,"column_end":21}},{"value":"/ vec.reserve_exact(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350171,"byte_end":350197,"line_start":441,"line_end":441,"column_start":5,"column_end":31}},{"value":"/ assert!(vec.capacity() >= 11);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350202,"byte_end":350236,"line_start":442,"line_end":442,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350241,"byte_end":350248,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350253,"byte_end":350262,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4265},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351335,"byte_end":351342,"line_start":478,"line_end":478,"column_start":19,"column_end":26},"name":"set_len","qualname":"<AlignedVec>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350558,"byte_end":350607,"line_start":454,"line_end":454,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350612,"byte_end":350615,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This is a low-level operation that maintains none of the normal invariants of the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350620,"byte_end":350711,"line_start":456,"line_end":456,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350716,"byte_end":350719,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350724,"byte_end":350736,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350741,"byte_end":350744,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ - `new_len` must be less than or equal to [`capacity()`](AlignedVec::capacity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350749,"byte_end":350831,"line_start":460,"line_end":460,"column_start":5,"column_end":87}},{"value":"/ - The elements at `old_len..new_len` must be initialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350836,"byte_end":350896,"line_start":461,"line_end":461,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350901,"byte_end":350904,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350909,"byte_end":350923,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350928,"byte_end":350935,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350940,"byte_end":350965,"line_start":465,"line_end":465,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350970,"byte_end":350973,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":350978,"byte_end":351025,"line_start":467,"line_end":467,"column_start":5,"column_end":52}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351030,"byte_end":351068,"line_start":468,"line_end":468,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351073,"byte_end":351076,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // SAFETY:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351081,"byte_end":351095,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/ // 1. `old_len..0` is empty to no elements need to be initialized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351100,"byte_end":351170,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/ // 2. `0 <= capacity` always holds whatever capacity is.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351175,"byte_end":351235,"line_start":472,"line_end":472,"column_start":5,"column_end":65}},{"value":"/ unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351240,"byte_end":351252,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/     vec.set_len(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351257,"byte_end":351280,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351285,"byte_end":351290,"line_start":475,"line_end":475,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351295,"byte_end":351302,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351307,"byte_end":351316,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352231,"byte_end":352247,"line_start":512,"line_end":512,"column_start":12,"column_end":28},"name":"into_boxed_slice","qualname":"<AlignedVec>::into_boxed_slice","value":"pub fn into_boxed_slice(Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the vector into `Box<[u8]>`.","sig":null,"attributes":[{"value":"/ Converts the vector into `Box<[u8]>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351463,"byte_end":351504,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351509,"byte_end":351512,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This will preserve the alignment guarantees provided by `AlignedVec`. Note that this will","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351517,"byte_end":351610,"line_start":486,"line_end":486,"column_start":5,"column_end":98}},{"value":"/ drop any excess capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351615,"byte_end":351644,"line_start":487,"line_end":487,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351649,"byte_end":351652,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351657,"byte_end":351671,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351676,"byte_end":351683,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351688,"byte_end":351713,"line_start":491,"line_end":491,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351718,"byte_end":351721,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let mut v = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351726,"byte_end":351760,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ v.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351765,"byte_end":351801,"line_start":494,"line_end":494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351806,"byte_end":351809,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let slice = v.into_boxed_slice();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351814,"byte_end":351851,"line_start":496,"line_end":496,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351856,"byte_end":351863,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351868,"byte_end":351871,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Any excess capacity is removed:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351876,"byte_end":351911,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351916,"byte_end":351919,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351924,"byte_end":351931,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351936,"byte_end":351961,"line_start":502,"line_end":502,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351966,"byte_end":351969,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":351974,"byte_end":352022,"line_start":504,"line_end":504,"column_start":5,"column_end":53}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352027,"byte_end":352065,"line_start":505,"line_end":505,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352070,"byte_end":352073,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352078,"byte_end":352113,"line_start":507,"line_end":507,"column_start":5,"column_end":40}},{"value":"/ let slice = vec.into_boxed_slice();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352118,"byte_end":352157,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(slice.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352162,"byte_end":352193,"line_start":509,"line_end":509,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352198,"byte_end":352205,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352210,"byte_end":352219,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353475,"byte_end":353483,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<AlignedVec>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts the vector into `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Converts the vector into `Vec<u8>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352513,"byte_end":352552,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352557,"byte_end":352560,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ This will preserve the alignment guarantees provided by `AlignedVec` until the vector is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352565,"byte_end":352657,"line_start":523,"line_end":523,"column_start":5,"column_end":97}},{"value":"/ modified. This will not drop any excess capacity, unlike","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352662,"byte_end":352722,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ [`into_boxed_slice()`](AlignedVec::into_boxed_slice()).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352727,"byte_end":352786,"line_start":525,"line_end":525,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352791,"byte_end":352794,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352799,"byte_end":352813,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352818,"byte_end":352825,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352830,"byte_end":352855,"line_start":529,"line_end":529,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352860,"byte_end":352863,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let mut v = AlignedVec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352868,"byte_end":352902,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ v.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352907,"byte_end":352943,"line_start":532,"line_end":532,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352948,"byte_end":352951,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let vec = v.into_vec();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352956,"byte_end":352983,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(vec.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":352988,"byte_end":353017,"line_start":535,"line_end":535,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(vec.as_slice(), &[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353022,"byte_end":353065,"line_start":536,"line_end":536,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353070,"byte_end":353077,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353082,"byte_end":353085,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Any excess capacity is preserved:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353090,"byte_end":353127,"line_start":539,"line_end":539,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353132,"byte_end":353135,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353140,"byte_end":353147,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ use rkyv::AlignedVec;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353152,"byte_end":353177,"line_start":542,"line_end":542,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353182,"byte_end":353185,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ let mut vec = AlignedVec::with_capacity(10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353190,"byte_end":353238,"line_start":544,"line_end":544,"column_start":5,"column_end":53}},{"value":"/ vec.extend_from_slice(&[1, 2, 3]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353243,"byte_end":353281,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353286,"byte_end":353289,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353294,"byte_end":353329,"line_start":547,"line_end":547,"column_start":5,"column_end":40}},{"value":"/ let vec = vec.into_vec();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353334,"byte_end":353363,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(vec.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353368,"byte_end":353397,"line_start":549,"line_end":549,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(vec.capacity(), 10);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353402,"byte_end":353437,"line_start":550,"line_end":550,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353442,"byte_end":353449,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353454,"byte_end":353463,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4335},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357230,"byte_end":357240,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ScratchVec","qualname":"::util::scratch_vec::ScratchVec","value":"ScratchVec {  }","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339}],"decl_id":null,"docs":" A vector view into serializer scratch space.\n","sig":null,"attributes":[{"value":"/ A vector view into serializer scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357170,"byte_end":357218,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357949,"byte_end":357952,"line_start":40,"line_end":40,"column_start":19,"column_end":22},"name":"new","qualname":"<ScratchVec<T>>::new","value":"pub unsafe fn new<S: ScratchSpace + ?Sized>(&mut S, usize)\n-> Result<Self, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `ScratchVec` with the specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `ScratchVec` with the specified capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357541,"byte_end":357610,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357615,"byte_end":357618,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The vector will be able to hold exactly `capacity` elements. If `capacity` is 0, the vector","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357623,"byte_end":357718,"line_start":32,"line_end":32,"column_start":5,"column_end":100}},{"value":"/ will not allocate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357723,"byte_end":357745,"line_start":33,"line_end":33,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357750,"byte_end":357753,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357758,"byte_end":357770,"line_start":35,"line_end":35,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357775,"byte_end":357778,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ - The vector must not outlive the given scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357783,"byte_end":357841,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"/ - Vectors must be dropped in the reverse order they are allocated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357846,"byte_end":357916,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357921,"byte_end":357930,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359103,"byte_end":359107,"line_start":72,"line_end":72,"column_start":19,"column_end":23},"name":"free","qualname":"<ScratchVec<T>>::free","value":"pub unsafe fn free<S: ScratchSpace + ?Sized>(Self, &mut S)\n-> Result<(), S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Frees the memory associated with the scratch vec and releases it back to the scratch space.","sig":null,"attributes":[{"value":"/ Frees the memory associated with the scratch vec and releases it back to the scratch space.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358518,"byte_end":358613,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358618,"byte_end":358621,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This must be called when serialization succeeds, but may be omitted when serialization","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358626,"byte_end":358716,"line_start":63,"line_end":63,"column_start":5,"column_end":95}},{"value":"/ fails. In that case, the elements of the scratch vec will be dropped but the memory will not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358721,"byte_end":358817,"line_start":64,"line_end":64,"column_start":5,"column_end":101}},{"value":"/ be popped. It is the duty of the scratch space in that case to ensure that memory resources","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358822,"byte_end":358917,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ are properly cleaned up.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358922,"byte_end":358950,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358955,"byte_end":358958,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358963,"byte_end":358975,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358980,"byte_end":358983,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The given scratch space must be the same one used to allocate the scratch vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":358988,"byte_end":359070,"line_start":70,"line_end":70,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359075,"byte_end":359084,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359705,"byte_end":359710,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"clear","qualname":"<ScratchVec<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359543,"byte_end":359586,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359591,"byte_end":359594,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity of the vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359599,"byte_end":359679,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359684,"byte_end":359693,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359995,"byte_end":360005,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ScratchVec<T>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359757,"byte_end":359818,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359823,"byte_end":359826,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this function returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359831,"byte_end":359925,"line_start":100,"line_end":100,"column_start":5,"column_end":99}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359930,"byte_end":359969,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":359974,"byte_end":359983,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360186,"byte_end":360198,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<ScratchVec<T>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360066,"byte_end":360116,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360121,"byte_end":360124,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360129,"byte_end":360160,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360165,"byte_end":360174,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360857,"byte_end":360863,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ScratchVec<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360309,"byte_end":360358,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360363,"byte_end":360366,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the vector outlives the pointer this functions returns, or else","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360371,"byte_end":360466,"line_start":117,"line_end":117,"column_start":5,"column_end":100}},{"value":"/ it will end up pointing to garbage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360471,"byte_end":360510,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360515,"byte_end":360518,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The caller must also ensure that the memory the pointer (non-transitively) points to is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360523,"byte_end":360614,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/ never written to (except inside an `UnsafeCell`) using this pointer or any pointer derived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360619,"byte_end":360713,"line_start":121,"line_end":121,"column_start":5,"column_end":99}},{"value":"/ from it. If you need to mutate the contents of the slice, use","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360718,"byte_end":360783,"line_start":122,"line_end":122,"column_start":5,"column_end":70}},{"value":"/ [`as_mut_ptr`](ScratchVec::as_mut_ptr).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360788,"byte_end":360831,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360836,"byte_end":360845,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361038,"byte_end":361046,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ScratchVec<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360922,"byte_end":360972,"line_start":129,"line_end":129,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360977,"byte_end":360980,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":360985,"byte_end":361012,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361017,"byte_end":361026,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361247,"byte_end":361255,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ScratchVec<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the vector can hole without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements the vector can hole without reallocating.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361145,"byte_end":361221,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361226,"byte_end":361235,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361553,"byte_end":361560,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"reserve","qualname":"<ScratchVec<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that there is capacity for at least `additional` more elements to be inserted into\n the `ScratchVec`.","sig":null,"attributes":[{"value":"/ Ensures that there is capacity for at least `additional` more elements to be inserted into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361302,"byte_end":361396,"line_start":143,"line_end":143,"column_start":5,"column_end":99}},{"value":"/ the `ScratchVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361401,"byte_end":361422,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361427,"byte_end":361430,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361435,"byte_end":361447,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361452,"byte_end":361455,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Panics if the required capacity exceeds the available capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361460,"byte_end":361527,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361532,"byte_end":361541,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361830,"byte_end":361838,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ScratchVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361750,"byte_end":361804,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361809,"byte_end":361818,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4358},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361998,"byte_end":362001,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<ScratchVec<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its `length`.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its `length`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361889,"byte_end":361972,"line_start":162,"line_end":162,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":361977,"byte_end":361986,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362206,"byte_end":362223,"line_start":172,"line_end":172,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<ScratchVec<T>>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Copies and appends all elements in a slice to the `ScratchVec`.","sig":null,"attributes":[{"value":"/ Copies and appends all elements in a slice to the `ScratchVec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362048,"byte_end":362115,"line_start":168,"line_end":168,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362120,"byte_end":362123,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The elements of the slice are appended in-order.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362128,"byte_end":362180,"line_start":170,"line_end":170,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362185,"byte_end":362194,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362714,"byte_end":362717,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"pop","qualname":"<ScratchVec<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and returns it, or `None` if it is empty.\n","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and returns it, or `None` if it is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362604,"byte_end":362688,"line_start":186,"line_end":186,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362693,"byte_end":362702,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363028,"byte_end":363032,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"push","qualname":"<ScratchVec<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of a collection.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of a collection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":362951,"byte_end":363002,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363007,"byte_end":363016,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363621,"byte_end":363634,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<ScratchVec<T>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\n given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal\n to `self.len() + additional`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more elements to be inserted in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363208,"byte_end":363302,"line_start":209,"line_end":209,"column_start":5,"column_end":99}},{"value":"/ given `AlignedVec`. After calling `reserve_exact`, capacity will be greater than or equal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363307,"byte_end":363400,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ to `self.len() + additional`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363405,"byte_end":363490,"line_start":211,"line_end":211,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363495,"byte_end":363498,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363503,"byte_end":363515,"line_start":213,"line_end":213,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363520,"byte_end":363523,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Panics if the required capacity exceeds the available capacity.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363528,"byte_end":363595,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363600,"byte_end":363609,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":364083,"byte_end":364090,"line_start":230,"line_end":230,"column_start":19,"column_end":26},"name":"set_len","qualname":"<ScratchVec<T>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363712,"byte_end":363761,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363766,"byte_end":363769,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This is a low-level operation that maintains none of the normal invariants of the type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363774,"byte_end":363865,"line_start":223,"line_end":223,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363870,"byte_end":363873,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363878,"byte_end":363890,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363895,"byte_end":363898,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ - `new_len` must be less than or equal to [`capacity()`](ScratchVec::capacity)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363903,"byte_end":363985,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/ - The elements at `old_len..new_len` must be initialized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":363990,"byte_end":364050,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":364055,"byte_end":364064,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4368},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366107,"byte_end":366112,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"drain","qualname":"<ScratchVec<T>>::drain","value":"pub fn drain<R: ops::RangeBounds<usize>>(&mut Self, R) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector and yields the\n removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector and yields the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365511,"byte_end":365604,"line_start":275,"line_end":275,"column_start":5,"column_end":98}},{"value":"/ removed items.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365609,"byte_end":365627,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365632,"byte_end":365635,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ When the iterator **is** dropped, all elements in the range are removed from the vector,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365640,"byte_end":365732,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ even if the iterator was not fully consumed. If the iterator **is not** dropped (with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365737,"byte_end":365826,"line_start":279,"line_end":279,"column_start":5,"column_end":94}},{"value":"/ `mem::forget` for example), it is unspecified how many elements are removed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365831,"byte_end":365911,"line_start":280,"line_end":280,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365916,"byte_end":365919,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365924,"byte_end":365936,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365941,"byte_end":365944,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Panics if the starting point is greater than the end point or if the end point is greater","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":365949,"byte_end":366042,"line_start":284,"line_end":284,"column_start":5,"column_end":98}},{"value":"/ than the length of the vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366047,"byte_end":366081,"line_start":285,"line_end":285,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366086,"byte_end":366095,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367068,"byte_end":367079,"line_start":314,"line_end":314,"column_start":12,"column_end":23},"name":"assume_init","qualname":"<ScratchVec<MaybeUninit<T>>>::assume_init","value":"pub fn assume_init(Self) -> ScratchVec<T>","parent":null,"children":[],"decl_id":null,"docs":" Assuming that all the elements are initialized, removes the `MaybeUninit` wrapper from the\n vector.","sig":null,"attributes":[{"value":"/ Assuming that all the elements are initialized, removes the `MaybeUninit` wrapper from the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366682,"byte_end":366776,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ vector.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366781,"byte_end":366792,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366797,"byte_end":366800,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366805,"byte_end":366817,"line_start":308,"line_end":308,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366822,"byte_end":366825,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to guarantee that the `MaybeUninit<T>` elements really are in an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366830,"byte_end":366921,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/ initialized state. Calling this when the content is not yet fully initialized causes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366926,"byte_end":367014,"line_start":311,"line_end":311,"column_start":5,"column_end":93}},{"value":"/ undefined behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367019,"byte_end":367042,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367047,"byte_end":367056,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4404},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368769,"byte_end":368774,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Drain","qualname":"::util::scratch_vec::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410}],"decl_id":null,"docs":" A draining iterator for `ScratchVec<T>`.","sig":null,"attributes":[{"value":"/ A draining iterator for `ScratchVec<T>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368622,"byte_end":368666,"line_start":390,"line_end":390,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368667,"byte_end":368670,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by [`ScratchVec::drain`]. See its documentation for more.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368671,"byte_end":368757,"line_start":392,"line_end":392,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4416},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369216,"byte_end":369224,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Drain>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369130,"byte_end":369190,"line_start":408,"line_end":408,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369195,"byte_end":369204,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":4476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330290,"byte_end":330304,"line_start":52,"line_end":52,"column_start":15,"column_end":29},"name":"archived_value","qualname":"::util::archived_value","value":"pub unsafe fn archived_value<T: Archive + ?Sized>(&[u8], usize)\n-> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts an archived value from the given byte slice at the given position.","sig":null,"attributes":[{"value":"/ Casts an archived value from the given byte slice at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":329938,"byte_end":330014,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330015,"byte_end":330018,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330019,"byte_end":330112,"line_start":45,"line_end":45,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330113,"byte_end":330166,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330167,"byte_end":330170,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330171,"byte_end":330183,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330184,"byte_end":330187,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ A `T::Archived` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330188,"byte_end":330265,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330266,"byte_end":330275,"line_start":51,"line_end":51,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330851,"byte_end":330869,"line_start":68,"line_end":68,"column_start":15,"column_end":33},"name":"archived_value_mut","qualname":"::util::archived_value_mut","value":"pub unsafe fn archived_value_mut<T: Archive + ?Sized>(Pin<&mut [u8]>, usize)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a mutable archived value from the given byte slice at the given position.","sig":null,"attributes":[{"value":"/ Casts a mutable archived value from the given byte slice at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330492,"byte_end":330575,"line_start":59,"line_end":59,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330576,"byte_end":330579,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330580,"byte_end":330673,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330674,"byte_end":330727,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330728,"byte_end":330731,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330732,"byte_end":330744,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330745,"byte_end":330748,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ A `T::Archived` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330749,"byte_end":330826,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":330827,"byte_end":330836,"line_start":67,"line_end":67,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4480},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331554,"byte_end":331576,"line_start":88,"line_end":88,"column_start":15,"column_end":37},"name":"archived_unsized_value","qualname":"::util::archived_unsized_value","value":"pub unsafe fn archived_unsized_value<T: ArchiveUnsized + ?Sized>(&[u8], usize)\n-> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts a [`RelPtr`] to the given unsized type from the given byte slice at the given position and\n returns the value it points to.","sig":null,"attributes":[{"value":"/ Casts a [`RelPtr`] to the given unsized type from the given byte slice at the given position and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331134,"byte_end":331234,"line_start":78,"line_end":78,"column_start":1,"column_end":101}},{"value":"/ returns the value it points to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331235,"byte_end":331270,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331271,"byte_end":331274,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331275,"byte_end":331368,"line_start":81,"line_end":81,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331369,"byte_end":331422,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331423,"byte_end":331426,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331427,"byte_end":331439,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331440,"byte_end":331443,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ A `RelPtr<T::Archived>` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331444,"byte_end":331529,"line_start":86,"line_end":86,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331530,"byte_end":331539,"line_start":87,"line_end":87,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4482},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332279,"byte_end":332305,"line_start":109,"line_end":109,"column_start":15,"column_end":41},"name":"archived_unsized_value_mut","qualname":"::util::archived_unsized_value_mut","value":"pub unsafe fn archived_unsized_value_mut<T: ArchiveUnsized +\n                                         ?Sized>(Pin<&mut [u8]>, usize)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a mutable [`RelPtr`] to the given unsized type from the given byte slice at the given\n position and returns the value it points to.","sig":null,"attributes":[{"value":"/ Casts a mutable [`RelPtr`] to the given unsized type from the given byte slice at the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331851,"byte_end":331946,"line_start":99,"line_end":99,"column_start":1,"column_end":96}},{"value":"/ position and returns the value it points to.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331947,"byte_end":331995,"line_start":100,"line_end":100,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":331996,"byte_end":331999,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This helps avoid situations where lifetimes get inappropriately assigned and allow buffer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332000,"byte_end":332093,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ mutation after getting archived value references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332094,"byte_end":332147,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332148,"byte_end":332151,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332152,"byte_end":332164,"line_start":105,"line_end":105,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332165,"byte_end":332168,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ A `RelPtr<T::Archived>` must be archived at the given position in the byte slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332169,"byte_end":332254,"line_start":107,"line_end":107,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332255,"byte_end":332264,"line_start":108,"line_end":108,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4484},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333355,"byte_end":333368,"line_start":136,"line_end":136,"column_start":15,"column_end":28},"name":"archived_root","qualname":"::util::archived_root","value":"pub unsafe fn archived_root<T: Archive + ?Sized>(&[u8]) -> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts an archived value from the given byte slice by calculating the root position.","sig":null,"attributes":[{"value":"/ Casts an archived value from the given byte slice by calculating the root position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332690,"byte_end":332777,"line_start":124,"line_end":124,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332778,"byte_end":332781,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_value`](crate::archived_value) that calculates the correct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332782,"byte_end":332877,"line_start":126,"line_end":126,"column_start":1,"column_end":96}},{"value":"/ position of the root using the length of the byte slice. If your byte slice is not guaranteed to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332878,"byte_end":332978,"line_start":127,"line_end":127,"column_start":1,"column_end":101}},{"value":"/ end immediately after the root object, you may need to store the position of the root object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":332979,"byte_end":333075,"line_start":128,"line_end":128,"column_start":1,"column_end":97}},{"value":"/ returned from [`serialize_value`](crate::ser::Serializer::serialize_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333076,"byte_end":333155,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333156,"byte_end":333159,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333160,"byte_end":333172,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333173,"byte_end":333176,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333177,"byte_end":333231,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333232,"byte_end":333330,"line_start":134,"line_end":134,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333331,"byte_end":333340,"line_start":135,"line_end":135,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4486},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334181,"byte_end":334198,"line_start":152,"line_end":152,"column_start":15,"column_end":32},"name":"archived_root_mut","qualname":"::util::archived_root_mut","value":"pub unsafe fn archived_root_mut<T: Archive + ?Sized>(Pin<&mut [u8]>)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a mutable archived value from the given byte slice by calculating the root position.","sig":null,"attributes":[{"value":"/ Casts a mutable archived value from the given byte slice by calculating the root position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333501,"byte_end":333595,"line_start":140,"line_end":140,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333596,"byte_end":333599,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_value_mut`](crate::archived_value_mut) that calculates the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333600,"byte_end":333695,"line_start":142,"line_end":142,"column_start":1,"column_end":96}},{"value":"/ correct position of the root using the length of the byte slice. If your byte slice is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333696,"byte_end":333790,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ guaranteed to end immediately after the root object, you may need to store the position of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333791,"byte_end":333889,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ root object returned from [`serialize_value`](crate::ser::Serializer::serialize_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333890,"byte_end":333981,"line_start":145,"line_end":145,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333982,"byte_end":333985,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333986,"byte_end":333998,"line_start":147,"line_end":147,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":333999,"byte_end":334002,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334003,"byte_end":334057,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334058,"byte_end":334156,"line_start":150,"line_end":150,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334157,"byte_end":334166,"line_start":151,"line_end":151,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4488},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335105,"byte_end":335126,"line_start":173,"line_end":173,"column_start":15,"column_end":36},"name":"archived_unsized_root","qualname":"::util::archived_unsized_root","value":"pub unsafe fn archived_unsized_root<T: ArchiveUnsized + ?Sized>(&[u8])\n-> &T::Archived","parent":null,"children":[],"decl_id":null,"docs":" Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root\n position.","sig":null,"attributes":[{"value":"/ Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334379,"byte_end":334477,"line_start":159,"line_end":159,"column_start":1,"column_end":99}},{"value":"/ position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334478,"byte_end":334491,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334492,"byte_end":334495,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_unsized_value`](crate::archived_unsized_value) that calculates","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334496,"byte_end":334595,"line_start":162,"line_end":162,"column_start":1,"column_end":100}},{"value":"/ the correct position of the root using the length of the byte slice. If your byte slice is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334596,"byte_end":334694,"line_start":163,"line_end":163,"column_start":1,"column_end":99}},{"value":"/ guaranteed to end immediately after the root object, you may need to store the position of the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334695,"byte_end":334793,"line_start":164,"line_end":164,"column_start":1,"column_end":99}},{"value":"/ root object returned from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334794,"byte_end":334823,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/ [`serialize_unsized_value`](crate::ser::Serializer::serialize_unsized_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334824,"byte_end":334905,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334906,"byte_end":334909,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334910,"byte_end":334922,"line_start":168,"line_end":168,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334923,"byte_end":334926,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334927,"byte_end":334981,"line_start":170,"line_end":170,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":334982,"byte_end":335080,"line_start":171,"line_end":171,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335081,"byte_end":335090,"line_start":172,"line_end":172,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4490},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336016,"byte_end":336041,"line_start":191,"line_end":191,"column_start":15,"column_end":40},"name":"archived_unsized_root_mut","qualname":"::util::archived_unsized_root_mut","value":"pub unsafe fn archived_unsized_root_mut<T: ArchiveUnsized +\n                                        ?Sized>(Pin<&mut [u8]>)\n-> Pin<&mut T::Archived>","parent":null,"children":[],"decl_id":null,"docs":" Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root\n position.","sig":null,"attributes":[{"value":"/ Casts a [`RelPtr`] to the given unsized type from the given byte slice by calculating the root","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335282,"byte_end":335380,"line_start":177,"line_end":177,"column_start":1,"column_end":99}},{"value":"/ position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335381,"byte_end":335394,"line_start":178,"line_end":178,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335395,"byte_end":335398,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper for [`archived_unsized_value_mut`](crate::archived_unsized_value_mut) that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335399,"byte_end":335495,"line_start":180,"line_end":180,"column_start":1,"column_end":97}},{"value":"/ calculates the correct position of the root using the length of the byte slice. If your byte","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335496,"byte_end":335592,"line_start":181,"line_end":181,"column_start":1,"column_end":97}},{"value":"/ slice is not guaranteed to end immediately after the root object, you may need to store the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335593,"byte_end":335688,"line_start":182,"line_end":182,"column_start":1,"column_end":96}},{"value":"/ position of the root object returned from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335689,"byte_end":335734,"line_start":183,"line_end":183,"column_start":1,"column_end":46}},{"value":"/ [`serialize_unsized_value`](crate::ser::Serializer::serialize_unsized_value).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335735,"byte_end":335816,"line_start":184,"line_end":184,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335817,"byte_end":335820,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335821,"byte_end":335833,"line_start":186,"line_end":186,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335834,"byte_end":335837,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ - The byte slice must represent an archived object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335838,"byte_end":335892,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/ - The root of the object must be stored at the end of the slice (this is the default behavior)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335893,"byte_end":335991,"line_start":189,"line_end":189,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":335992,"byte_end":336001,"line_start":190,"line_end":190,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":7270},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336541,"byte_end":336553,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"AlignedBytes","qualname":"::util::AlignedBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer of bytes aligned to 16 bytes.","sig":null,"attributes":[{"value":"/ A buffer of bytes aligned to 16 bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336245,"byte_end":336287,"line_start":198,"line_end":198,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336288,"byte_end":336291,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336292,"byte_end":336306,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336307,"byte_end":336310,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336311,"byte_end":336318,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/ use core::mem;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336319,"byte_end":336337,"line_start":203,"line_end":203,"column_start":1,"column_end":19}},{"value":"/ use rkyv::AlignedBytes;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336338,"byte_end":336365,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336366,"byte_end":336369,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem::align_of::<u8>(), 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336370,"byte_end":336411,"line_start":206,"line_end":206,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(mem::align_of::<AlignedBytes<256>>(), 16);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336412,"byte_end":336469,"line_start":207,"line_end":207,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336470,"byte_end":336477,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"repr(C, align(16))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336508,"byte_end":336529,"line_start":210,"line_end":210,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":7273},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336570,"byte_end":336581,"line_start":211,"line_end":211,"column_start":41,"column_end":52},"name":"0","qualname":"::util::AlignedBytes::0","value":"[u8; N]","parent":{"krate":0,"index":7270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4510},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","parent":null,"children":[{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4520},{"krate":0,"index":4522},{"krate":0,"index":4525},{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4538},{"krate":0,"index":4541},{"krate":0,"index":4544},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4551},{"krate":0,"index":4554},{"krate":0,"index":4557},{"krate":0,"index":4560},{"krate":0,"index":4563},{"krate":0,"index":4567},{"krate":0,"index":4602},{"krate":0,"index":4605},{"krate":0,"index":4608},{"krate":0,"index":4611},{"krate":0,"index":4615},{"krate":0,"index":4617},{"krate":0,"index":4621},{"krate":0,"index":4626},{"krate":0,"index":4629},{"krate":0,"index":4633},{"krate":0,"index":4640},{"krate":0,"index":4646},{"krate":0,"index":4650},{"krate":0,"index":4654},{"krate":0,"index":4657},{"krate":0,"index":4660},{"krate":0,"index":4663}],"decl_id":null,"docs":" An archived version of `Vec`.\n","sig":null,"attributes":[{"value":"/ An archived version of `Vec`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372082,"byte_end":372115,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4563},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372598,"byte_end":372609,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"ArchivedVec","qualname":"::vec::ArchivedVec","value":"ArchivedVec {  }","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566}],"decl_id":null,"docs":" An archived [`Vec`].","sig":null,"attributes":[{"value":"/ An archived [`Vec`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372358,"byte_end":372382,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372383,"byte_end":372386,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This uses a [`RelPtr`] to a `[T]` under the hood. Unlike","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372387,"byte_end":372447,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`ArchivedString`](crate::string::ArchivedString), it does not have an inline representation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372448,"byte_end":372545,"line_start":18,"line_end":18,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":4569},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372782,"byte_end":372788,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArchivedVec<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the first element of the archived vec.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the first element of the archived vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372693,"byte_end":372756,"line_start":26,"line_end":26,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372761,"byte_end":372770,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372928,"byte_end":372931,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"len","qualname":"<ArchivedVec<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the archived vec.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the archived vec.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372847,"byte_end":372902,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372907,"byte_end":372916,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373075,"byte_end":373083,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArchivedVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the archived vec is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether the archived vec is empty.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373003,"byte_end":373049,"line_start":38,"line_end":38,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373054,"byte_end":373063,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373215,"byte_end":373223,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArchivedVec<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets the elements of the archived vec as a slice.\n","sig":null,"attributes":[{"value":"/ Gets the elements of the archived vec as a slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373136,"byte_end":373189,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373194,"byte_end":373203,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373420,"byte_end":373433,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"pin_mut_slice","qualname":"<ArchivedVec<T>>::pin_mut_slice","value":"pub fn pin_mut_slice(Pin<&mut Self>) -> Pin<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Gets the elements of the archived vec as a pinned mutable slice.\n","sig":null,"attributes":[{"value":"/ Gets the elements of the archived vec as a pinned mutable slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373326,"byte_end":373394,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373399,"byte_end":373408,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373856,"byte_end":373865,"line_start":63,"line_end":63,"column_start":12,"column_end":21},"name":"index_pin","qualname":"<ArchivedVec<T>>::index_pin","value":"pub fn index_pin<I>(Pin<&mut Self>, I) -> Pin<&mut <[T] as Index<I>>::Output>\nwhere [T]: IndexMut<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets the element at the given index ot this archived vec as a pinned mutable reference.\n","sig":null,"attributes":[{"value":"/ Gets the element at the given index ot this archived vec as a pinned mutable reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373739,"byte_end":373830,"line_start":61,"line_end":61,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":373835,"byte_end":373844,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374314,"byte_end":374332,"line_start":77,"line_end":77,"column_start":19,"column_end":37},"name":"resolve_from_slice","qualname":"<ArchivedVec<T>>::resolve_from_slice","value":"pub unsafe fn resolve_from_slice<U: Archive<Archived =\n                                 T>>(&[U], usize, VecResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Vec` from a given slice.","sig":null,"attributes":[{"value":"/ Resolves an archived `Vec` from a given slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374070,"byte_end":374120,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374125,"byte_end":374128,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374133,"byte_end":374145,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374150,"byte_end":374153,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374158,"byte_end":374218,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374223,"byte_end":374281,"line_start":75,"line_end":75,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374286,"byte_end":374295,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374785,"byte_end":374801,"line_start":93,"line_end":93,"column_start":19,"column_end":35},"name":"resolve_from_len","qualname":"<ArchivedVec<T>>::resolve_from_len","value":"pub unsafe fn resolve_from_len(usize, usize, VecResolver, *mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resolves an archived `Vec` from a given length.","sig":null,"attributes":[{"value":"/ Resolves an archived `Vec` from a given length.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374540,"byte_end":374591,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374596,"byte_end":374599,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374604,"byte_end":374616,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374621,"byte_end":374624,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374629,"byte_end":374689,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must bet he result of serializing `value`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374694,"byte_end":374752,"line_start":91,"line_end":91,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":374757,"byte_end":374766,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4581},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375145,"byte_end":375165,"line_start":102,"line_end":102,"column_start":12,"column_end":32},"name":"serialize_from_slice","qualname":"<ArchivedVec<T>>::serialize_from_slice","value":"pub fn serialize_from_slice<U: Serialize<S, Archived = T>, S: Serializer +\n                            ?Sized>(&[U], &mut S)\n-> Result<VecResolver, S::Error> where [U]: SerializeUnsized<S>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given slice.\n","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given slice.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375067,"byte_end":375119,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375124,"byte_end":375133,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376115,"byte_end":376140,"line_start":125,"line_end":125,"column_start":19,"column_end":44},"name":"serialize_copy_from_slice","qualname":"<ArchivedVec<T>>::serialize_copy_from_slice","value":"pub unsafe fn serialize_copy_from_slice<U, S>(&[U], &mut S)\n-> Result<VecResolver, S::Error> where U: Serialize<S, Archived = T>,\nS: Serializer + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given slice by directly copying bytes.","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given slice by directly copying bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375626,"byte_end":375704,"line_start":116,"line_end":116,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375709,"byte_end":375712,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375717,"byte_end":375729,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375734,"byte_end":375737,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The type being serialized must be copy-safe. Copy-safe types must be trivially copyable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375742,"byte_end":375833,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/ (have the same archived and unarchived representations) and contain no padding bytes. In","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375838,"byte_end":375930,"line_start":121,"line_end":121,"column_start":5,"column_end":97}},{"value":"/ situations where copying uninitialized bytes the output is acceptable, this function may be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":375935,"byte_end":376030,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ used with types that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376035,"byte_end":376082,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376087,"byte_end":376096,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376845,"byte_end":376864,"line_start":148,"line_end":148,"column_start":12,"column_end":31},"name":"serialize_from_iter","qualname":"<ArchivedVec<T>>::serialize_from_iter","value":"pub fn serialize_from_iter<U, B, I, S>(I, &mut S)\n-> Result<VecResolver, S::Error> where U: Serialize<S, Archived = T>,\nB: Borrow<U>, I: ExactSizeIterator<Item = B>, S: ScratchSpace + Serializer +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes an archived `Vec` from a given iterator.","sig":null,"attributes":[{"value":"/ Serializes an archived `Vec` from a given iterator.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376605,"byte_end":376660,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376665,"byte_end":376668,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This method is unable to perform copy optimizations; prefer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376673,"byte_end":376736,"line_start":145,"line_end":145,"column_start":5,"column_end":68}},{"value":"/ [`serialize_from_slice`](ArchivedVec::serialize_from_slice) when possible.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376741,"byte_end":376819,"line_start":146,"line_end":146,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":376824,"byte_end":376833,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4663},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":380387,"byte_end":380398,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"VecResolver","qualname":"::vec::VecResolver","value":"VecResolver {  }","parent":null,"children":[{"krate":0,"index":4664}],"decl_id":null,"docs":" The resolver for [`ArchivedVec`].\n","sig":null,"attributes":[{"value":"/ The resolver for [`ArchivedVec`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":380338,"byte_end":380375,"line_start":289,"line_end":289,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":4665},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"with","qualname":"::with","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","parent":null,"children":[{"krate":0,"index":4666},{"krate":0,"index":4947},{"krate":0,"index":5040},{"krate":0,"index":5117},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5303},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5319},{"krate":0,"index":7378},{"krate":0,"index":7383},{"krate":0,"index":5322},{"krate":0,"index":5326},{"krate":0,"index":5330},{"krate":0,"index":5334},{"krate":0,"index":5339},{"krate":0,"index":5345},{"krate":0,"index":5349},{"krate":0,"index":5354},{"krate":0,"index":5359},{"krate":0,"index":7387},{"krate":0,"index":7391},{"krate":0,"index":5365},{"krate":0,"index":5368},{"krate":0,"index":7394},{"krate":0,"index":7396},{"krate":0,"index":7398},{"krate":0,"index":7400},{"krate":0,"index":5372},{"krate":0,"index":7402},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7408},{"krate":0,"index":7410},{"krate":0,"index":7412},{"krate":0,"index":7414},{"krate":0,"index":7417},{"krate":0,"index":5373},{"krate":0,"index":5375},{"krate":0,"index":7419},{"krate":0,"index":7421},{"krate":0,"index":7423},{"krate":0,"index":7426},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":7428},{"krate":0,"index":7430},{"krate":0,"index":7432},{"krate":0,"index":7434},{"krate":0,"index":7436},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7442}],"decl_id":null,"docs":" Wrapper type support and commonly used wrappers.","sig":null,"attributes":[{"value":"/ Wrapper type support and commonly used wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":381680,"byte_end":381732,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":381733,"byte_end":381736,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Wrappers can be applied with the `#[with(...)]` attribute in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":381737,"byte_end":381805,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`Archive`](macro@crate::Archive) macro. See [`With`] for examples.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":381806,"byte_end":381877,"line_start":4,"line_end":4,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7378},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383204,"byte_end":383208,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"With","qualname":"::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":7381},{"krate":0,"index":7382}],"decl_id":null,"docs":" A transparent wrapper for archived fields.","sig":null,"attributes":[{"value":"/ A transparent wrapper for archived fields.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382214,"byte_end":382260,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382261,"byte_end":382264,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is used by the `#[with(...)]` attribute in the [`Archive`](macro@crate::Archive) macro to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382265,"byte_end":382363,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ create transparent serialization wrappers. Those wrappers leverage [`ArchiveWith`] to change","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382364,"byte_end":382460,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ how the type is archived, serialized, and deserialized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382461,"byte_end":382520,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382521,"byte_end":382524,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When a field is serialized, a reference to the field (i.e. `&T`) can be cast to a reference to a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382525,"byte_end":382625,"line_start":28,"line_end":28,"column_start":1,"column_end":101}},{"value":"/ `With` wrapper and serialized instead (i.e. `&With<T, Wrapper>`). This is safe to do because","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382626,"byte_end":382722,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ `With` is a transparent wrapper and is shaped exactly the same as the underlying field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382723,"byte_end":382814,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382815,"byte_end":382818,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382819,"byte_end":382832,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382833,"byte_end":382836,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382837,"byte_end":382844,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Inline};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382845,"byte_end":382883,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382884,"byte_end":382887,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382888,"byte_end":382910,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382911,"byte_end":382935,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/     // This will archive as if it were With<&'a i32, Inline>. That will delegate the archival","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":382936,"byte_end":383033,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/     // to the ArchiveWith implementation of Inline for &T.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383034,"byte_end":383096,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/     #[with(Inline)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383097,"byte_end":383120,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/     a: &'a i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383121,"byte_end":383140,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383141,"byte_end":383146,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383147,"byte_end":383154,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383155,"byte_end":383175,"line_start":45,"line_end":45,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383487,"byte_end":383491,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"cast","qualname":"<With<F, W>>::cast","value":"pub fn cast(&F) -> &With<F, W>","parent":null,"children":[],"decl_id":null,"docs":" Casts a `With` reference from a reference to the underlying field.","sig":null,"attributes":[{"value":"/ Casts a `With` reference from a reference to the underlying field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383308,"byte_end":383378,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383383,"byte_end":383386,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This is always safe to do because `With` is a transparent wrapper.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383391,"byte_end":383461,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383466,"byte_end":383475,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383915,"byte_end":383925,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<With<F, W>>::into_inner","value":"pub fn into_inner(Self) -> F","parent":null,"children":[],"decl_id":null,"docs":" Unwraps a `With` into the underlying field.\n","sig":null,"attributes":[{"value":"/ Unwraps a `With` into the underlying field.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383842,"byte_end":383889,"line_start":68,"line_end":68,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383894,"byte_end":383903,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":5334},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386937,"byte_end":386948,"line_start":174,"line_end":174,"column_start":11,"column_end":22},"name":"ArchiveWith","qualname":"::with::ArchiveWith","value":"ArchiveWith<F: ?Sized>","parent":null,"children":[{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338}],"decl_id":null,"docs":" A variant of [`Archive`] that works with [`With`] wrappers.","sig":null,"attributes":[{"value":"/ A variant of [`Archive`] that works with [`With`] wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384070,"byte_end":384133,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384134,"byte_end":384137,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Creating a wrapper allows users to customize how fields are archived easily without changing the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384138,"byte_end":384238,"line_start":83,"line_end":83,"column_start":1,"column_end":101}},{"value":"/ unarchived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384239,"byte_end":384259,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384260,"byte_end":384263,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This trait allows wrapper types to transparently change the archive behaviors for struct fields.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384264,"byte_end":384364,"line_start":86,"line_end":86,"column_start":1,"column_end":101}},{"value":"/ When a field is serialized, its reference may be converted to a [`With`] reference, and that","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384365,"byte_end":384461,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ reference may be serialized instead. `With` references look for implementations of `ArchiveWith`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384462,"byte_end":384562,"line_start":88,"line_end":88,"column_start":1,"column_end":101}},{"value":"/ to determine how a wrapped field should be treated.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384563,"byte_end":384618,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384619,"byte_end":384622,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384623,"byte_end":384636,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384637,"byte_end":384640,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384641,"byte_end":384648,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384649,"byte_end":384664,"line_start":94,"line_end":94,"column_start":1,"column_end":16}},{"value":"/     archived_root,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384665,"byte_end":384687,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/     ser::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384688,"byte_end":384702,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/         serializers::AllocSerializer,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384703,"byte_end":384744,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/         Serializer,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384745,"byte_end":384768,"line_start":98,"line_end":98,"column_start":1,"column_end":24}},{"value":"/     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384769,"byte_end":384779,"line_start":99,"line_end":99,"column_start":1,"column_end":11}},{"value":"/     with::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384780,"byte_end":384795,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/         ArchiveWith,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384796,"byte_end":384820,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/         DeserializeWith,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384821,"byte_end":384849,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/         SerializeWith,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384850,"byte_end":384876,"line_start":103,"line_end":103,"column_start":1,"column_end":27}},{"value":"/     },","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384877,"byte_end":384887,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384888,"byte_end":384904,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384905,"byte_end":384922,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/     Deserialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384923,"byte_end":384943,"line_start":107,"line_end":107,"column_start":1,"column_end":21}},{"value":"/     Fallible,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384944,"byte_end":384961,"line_start":108,"line_end":108,"column_start":1,"column_end":18}},{"value":"/     Infallible,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384962,"byte_end":384981,"line_start":109,"line_end":109,"column_start":1,"column_end":20}},{"value":"/     Resolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":384982,"byte_end":384999,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385000,"byte_end":385018,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385019,"byte_end":385025,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385026,"byte_end":385029,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ struct Incremented;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385030,"byte_end":385053,"line_start":114,"line_end":114,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385054,"byte_end":385057,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ impl ArchiveWith<i32> for Incremented {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385058,"byte_end":385101,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/     type Archived = Archived<i32>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385102,"byte_end":385140,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"/     type Resolver = Resolver<i32>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385141,"byte_end":385179,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385180,"byte_end":385183,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     unsafe fn resolve_with(field: &i32, pos: usize, _: (), out: *mut Self::Archived) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385184,"byte_end":385274,"line_start":120,"line_end":120,"column_start":1,"column_end":91}},{"value":"/         let incremented = field + 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385275,"byte_end":385315,"line_start":121,"line_end":121,"column_start":1,"column_end":41}},{"value":"/         incremented.resolve(pos, (), out);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385316,"byte_end":385362,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385363,"byte_end":385372,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385373,"byte_end":385378,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385379,"byte_end":385382,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ impl<S: Fallible + ?Sized> SerializeWith<i32, S> for Incremented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385383,"byte_end":385451,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ where","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385452,"byte_end":385461,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/     i32: Serialize<S>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385462,"byte_end":385488,"line_start":128,"line_end":128,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385489,"byte_end":385494,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/     fn serialize_with(field: &i32, serializer: &mut S) -> Result<Self::Resolver, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385495,"byte_end":385591,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/         let incremented = field + 1;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385592,"byte_end":385632,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/         incremented.serialize(serializer)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385633,"byte_end":385678,"line_start":132,"line_end":132,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385679,"byte_end":385688,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385689,"byte_end":385694,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385695,"byte_end":385698,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ impl<D: Fallible + ?Sized> DeserializeWith<Archived<i32>, i32, D> for Incremented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385699,"byte_end":385784,"line_start":136,"line_end":136,"column_start":1,"column_end":86}},{"value":"/ where","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385785,"byte_end":385794,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/     Archived<i32>: Deserialize<i32, D>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385795,"byte_end":385838,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385839,"byte_end":385844,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/     fn deserialize_with(field: &Archived<i32>, deserializer: &mut D) -> Result<i32, D::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385845,"byte_end":385944,"line_start":140,"line_end":140,"column_start":1,"column_end":100}},{"value":"/         Ok(field.deserialize(deserializer)? - 1)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385945,"byte_end":385997,"line_start":141,"line_end":141,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":385998,"byte_end":386007,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386008,"byte_end":386013,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386014,"byte_end":386017,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive, Deserialize, Serialize)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386018,"byte_end":386064,"line_start":145,"line_end":145,"column_start":1,"column_end":47}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386065,"byte_end":386085,"line_start":146,"line_end":146,"column_start":1,"column_end":21}},{"value":"/     #[with(Incremented)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386086,"byte_end":386114,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/     a: i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386115,"byte_end":386130,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/     // Another i32 field, but not incremented this time","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386131,"byte_end":386190,"line_start":149,"line_end":149,"column_start":1,"column_end":60}},{"value":"/     b: i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386191,"byte_end":386206,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386207,"byte_end":386212,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386213,"byte_end":386216,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let value = Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386217,"byte_end":386242,"line_start":153,"line_end":153,"column_start":1,"column_end":26}},{"value":"/     a: 4,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386243,"byte_end":386256,"line_start":154,"line_end":154,"column_start":1,"column_end":14}},{"value":"/     b: 9,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386257,"byte_end":386270,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386271,"byte_end":386277,"line_start":156,"line_end":156,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386278,"byte_end":386281,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AllocSerializer::<4096>::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386282,"byte_end":386342,"line_start":158,"line_end":158,"column_start":1,"column_end":61}},{"value":"/ serializer.serialize_value(&value).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386343,"byte_end":386391,"line_start":159,"line_end":159,"column_start":1,"column_end":49}},{"value":"/ let buf = serializer.into_serializer().into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386392,"byte_end":386448,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386449,"byte_end":386452,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let archived = unsafe { archived_root::<Example>(buf.as_ref()) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386453,"byte_end":386522,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ // The wrapped field has been incremented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386523,"byte_end":386568,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(archived.a, 5);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386569,"byte_end":386599,"line_start":164,"line_end":164,"column_start":1,"column_end":31}},{"value":"/ // ... and the unwrapped field has not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386600,"byte_end":386642,"line_start":165,"line_end":165,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(archived.b, 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386643,"byte_end":386673,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386674,"byte_end":386677,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ let deserialized: Example = archived.deserialize(&mut Infallible).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386678,"byte_end":386757,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ // The wrapped field is back to normal","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386758,"byte_end":386800,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(deserialized.a, 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386801,"byte_end":386835,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/ // ... and the unwrapped field is unchanged","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386836,"byte_end":386883,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(deserialized.b, 9);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386884,"byte_end":386918,"line_start":172,"line_end":172,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386919,"byte_end":386926,"line_start":173,"line_end":173,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5336},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387019,"byte_end":387027,"line_start":176,"line_end":176,"column_start":10,"column_end":18},"name":"Archived","qualname":"::with::ArchiveWith::Archived","value":"type Archived;","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" The archived type of a `With<F, Self>`.\n","sig":null,"attributes":[{"value":"/ The archived type of a `With<F, Self>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":386966,"byte_end":387009,"line_start":175,"line_end":175,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":5337},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387081,"byte_end":387089,"line_start":178,"line_end":178,"column_start":10,"column_end":18},"name":"Resolver","qualname":"::with::ArchiveWith::Resolver","value":"type Resolver;","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" The resolver of a `With<F, Self>`.\n","sig":null,"attributes":[{"value":"/ The resolver of a `With<F, Self>`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387033,"byte_end":387071,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387343,"byte_end":387355,"line_start":186,"line_end":186,"column_start":15,"column_end":27},"name":"resolve_with","qualname":"::with::ArchiveWith::resolve_with","value":"pub unsafe fn resolve_with(&F, usize, Self::Resolver, *mut Self::Archived)","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":" Resolves the archived type using a reference to the field type `F`.","sig":null,"attributes":[{"value":"/ Resolves the archived type using a reference to the field type `F`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387096,"byte_end":387167,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387172,"byte_end":387175,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387180,"byte_end":387192,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387197,"byte_end":387200,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387205,"byte_end":387265,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing `field`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387270,"byte_end":387328,"line_start":185,"line_end":185,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":5345},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387856,"byte_end":387869,"line_start":205,"line_end":205,"column_start":11,"column_end":24},"name":"SerializeWith","qualname":"::with::SerializeWith","value":"SerializeWith<F: ?Sized, S: Fallible + ?Sized>: ArchiveWith<F>","parent":null,"children":[{"krate":0,"index":5348}],"decl_id":null,"docs":" A variant of `Serialize` that works with `With` wrappers.\n","sig":null,"attributes":[{"value":"/ A variant of `Serialize` that works with `With` wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387784,"byte_end":387845,"line_start":204,"line_end":204,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5348},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387994,"byte_end":388008,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"serialize_with","qualname":"::with::SerializeWith::serialize_with","value":"pub fn serialize_with(&F, &mut S) -> Result<Self::Resolver, S::Error>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" Serializes the field type `F` using the given serializer.\n","sig":null,"attributes":[{"value":"/ Serializes the field type `F` using the given serializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387925,"byte_end":387986,"line_start":206,"line_end":206,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":5354},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388402,"byte_end":388417,"line_start":218,"line_end":218,"column_start":11,"column_end":26},"name":"DeserializeWith","qualname":"::with::DeserializeWith","value":"DeserializeWith<F: ?Sized, T, D: Fallible + ?Sized>","parent":null,"children":[{"krate":0,"index":5358}],"decl_id":null,"docs":" A variant of `Deserialize` that works with `With` wrappers.\n","sig":null,"attributes":[{"value":"/ A variant of `Deserialize` that works with `With` wrappers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388328,"byte_end":388391,"line_start":217,"line_end":217,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5358},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388533,"byte_end":388549,"line_start":220,"line_end":220,"column_start":8,"column_end":24},"name":"deserialize_with","qualname":"::with::DeserializeWith::deserialize_with","value":"pub fn deserialize_with(&F, &mut D) -> Result<T, D::Error>","parent":{"krate":0,"index":5354},"children":[],"decl_id":null,"docs":" Deserializes the field type `F` using the given deserializer.\n","sig":null,"attributes":[{"value":"/ Deserializes the field type `F` using the given deserializer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388460,"byte_end":388525,"line_start":219,"line_end":219,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":7387},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389061,"byte_end":389070,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"Immutable","qualname":"::with::Immutable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper to make a type immutable.\n","sig":null,"attributes":[{"value":"/ A wrapper to make a type immutable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388972,"byte_end":389011,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389012,"byte_end":389032,"line_start":239,"line_end":239,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5367},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389188,"byte_end":389193,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"value","qualname":"<Immutable<T>>::value","value":"pub fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying immutable value.\n","sig":null,"attributes":[{"value":"/ Gets the underlying immutable value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389122,"byte_end":389162,"line_start":244,"line_end":244,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389167,"byte_end":389176,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7394},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390375,"byte_end":390381,"line_start":300,"line_end":300,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::with::Atomic","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that archives an atomic with an underlying atomic.","sig":null,"attributes":[{"value":"/ A wrapper that archives an atomic with an underlying atomic.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389833,"byte_end":389897,"line_start":277,"line_end":277,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389898,"byte_end":389901,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ By default, atomics are archived with an underlying integer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389902,"byte_end":389966,"line_start":279,"line_end":279,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389967,"byte_end":389970,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389971,"byte_end":389983,"line_start":281,"line_end":281,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389984,"byte_end":389987,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This wrapper is only safe to use when the backing memory for wrapped types is mutable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389988,"byte_end":390078,"line_start":283,"line_end":283,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390079,"byte_end":390082,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390083,"byte_end":390096,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390097,"byte_end":390100,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390101,"byte_end":390108,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(has_atomics)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390109,"byte_end":390134,"line_start":288,"line_end":288,"column_start":1,"column_end":26}},{"value":"/ use core::sync::atomic::AtomicU32;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390135,"byte_end":390173,"line_start":289,"line_end":289,"column_start":1,"column_end":39}},{"value":"/ use rkyv::{Archive, with::Atomic};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390174,"byte_end":390212,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390213,"byte_end":390216,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(has_atomics)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390217,"byte_end":390242,"line_start":292,"line_end":292,"column_start":1,"column_end":26}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390243,"byte_end":390265,"line_start":293,"line_end":293,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390266,"byte_end":390286,"line_start":294,"line_end":294,"column_start":1,"column_end":21}},{"value":"/     #[with(Atomic)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390287,"byte_end":390310,"line_start":295,"line_end":295,"column_start":1,"column_end":24}},{"value":"/     a: AtomicU32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390311,"byte_end":390332,"line_start":296,"line_end":296,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390333,"byte_end":390338,"line_start":297,"line_end":297,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390339,"byte_end":390346,"line_start":298,"line_end":298,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7398},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390766,"byte_end":390772,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"Inline","qualname":"::with::Inline","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a reference inline.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a reference inline.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390384,"byte_end":390433,"line_start":302,"line_end":302,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390434,"byte_end":390437,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ References serialized with `Inline` cannot be deserialized because the struct cannot own the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390438,"byte_end":390534,"line_start":304,"line_end":304,"column_start":1,"column_end":97}},{"value":"/ deserialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390535,"byte_end":390558,"line_start":305,"line_end":305,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390559,"byte_end":390562,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390563,"byte_end":390576,"line_start":307,"line_end":307,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390577,"byte_end":390580,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390581,"byte_end":390588,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Inline};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390589,"byte_end":390627,"line_start":310,"line_end":310,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390628,"byte_end":390631,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390632,"byte_end":390654,"line_start":312,"line_end":312,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390655,"byte_end":390679,"line_start":313,"line_end":313,"column_start":1,"column_end":25}},{"value":"/     #[with(Inline)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390680,"byte_end":390703,"line_start":314,"line_end":314,"column_start":1,"column_end":24}},{"value":"/     a: &'a i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390704,"byte_end":390723,"line_start":315,"line_end":315,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390724,"byte_end":390729,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390730,"byte_end":390737,"line_start":317,"line_end":317,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5372},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391304,"byte_end":391309,"line_start":340,"line_end":340,"column_start":10,"column_end":15},"name":"Boxed","qualname":"::with::Boxed","value":"RefAsBox","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a reference as if it were boxed.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a reference as if it were boxed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390775,"byte_end":390837,"line_start":321,"line_end":321,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390838,"byte_end":390841,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Inline`], unsized references can be serialized with `Boxed`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390842,"byte_end":390915,"line_start":323,"line_end":323,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390916,"byte_end":390919,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ References serialized with `Boxed` cannot be deserialized because the struct cannot own the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":390920,"byte_end":391015,"line_start":325,"line_end":325,"column_start":1,"column_end":96}},{"value":"/ deserialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391016,"byte_end":391039,"line_start":326,"line_end":326,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391040,"byte_end":391043,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391044,"byte_end":391057,"line_start":328,"line_end":328,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391058,"byte_end":391061,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391062,"byte_end":391069,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::Boxed};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391070,"byte_end":391107,"line_start":331,"line_end":331,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391108,"byte_end":391111,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391112,"byte_end":391134,"line_start":333,"line_end":333,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391135,"byte_end":391159,"line_start":334,"line_end":334,"column_start":1,"column_end":25}},{"value":"/     #[with(Boxed)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391160,"byte_end":391182,"line_start":335,"line_end":335,"column_start":1,"column_end":23}},{"value":"/     a: &'a str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391183,"byte_end":391202,"line_start":336,"line_end":336,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391203,"byte_end":391208,"line_start":337,"line_end":337,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391209,"byte_end":391216,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"deprecated = \"Use `RefAsBox` for references, or `AsBox` for direct fields\"","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391217,"byte_end":391294,"line_start":339,"line_end":339,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7402},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391708,"byte_end":391713,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"AsBox","qualname":"::with::AsBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a field into a box.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a field into a box.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391323,"byte_end":391372,"line_start":342,"line_end":342,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391373,"byte_end":391376,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ This functions similarly to [`RefAsBox`], but is for regular fields instead of references.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391377,"byte_end":391471,"line_start":344,"line_end":344,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391472,"byte_end":391475,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391476,"byte_end":391489,"line_start":346,"line_end":346,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391490,"byte_end":391493,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391494,"byte_end":391501,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::AsBox};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391502,"byte_end":391539,"line_start":349,"line_end":349,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391540,"byte_end":391543,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391544,"byte_end":391566,"line_start":351,"line_end":351,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391567,"byte_end":391587,"line_start":352,"line_end":352,"column_start":1,"column_end":21}},{"value":"/     #[with(AsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391588,"byte_end":391610,"line_start":353,"line_end":353,"column_start":1,"column_end":23}},{"value":"/     a: i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391611,"byte_end":391626,"line_start":354,"line_end":354,"column_start":1,"column_end":16}},{"value":"/     #[with(AsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391627,"byte_end":391649,"line_start":355,"line_end":355,"column_start":1,"column_end":23}},{"value":"/     b: str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391650,"byte_end":391665,"line_start":356,"line_end":356,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391666,"byte_end":391671,"line_start":357,"line_end":357,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391672,"byte_end":391679,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392244,"byte_end":392252,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"RefAsBox","qualname":"::with::RefAsBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a reference as if it were boxed.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a reference as if it were boxed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391716,"byte_end":391778,"line_start":362,"line_end":362,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391779,"byte_end":391782,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Inline`], unsized references can be serialized with `RefAsBox`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391783,"byte_end":391859,"line_start":364,"line_end":364,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391860,"byte_end":391863,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ References serialized with `RefAsBox` cannot be deserialized because the struct cannot own the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391864,"byte_end":391962,"line_start":366,"line_end":366,"column_start":1,"column_end":99}},{"value":"/ deserialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391963,"byte_end":391986,"line_start":367,"line_end":367,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391987,"byte_end":391990,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":391991,"byte_end":392004,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392005,"byte_end":392008,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392009,"byte_end":392016,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::RefAsBox};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392017,"byte_end":392057,"line_start":372,"line_end":372,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392058,"byte_end":392061,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392062,"byte_end":392084,"line_start":374,"line_end":374,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392085,"byte_end":392109,"line_start":375,"line_end":375,"column_start":1,"column_end":25}},{"value":"/     #[with(RefAsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392110,"byte_end":392135,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/     a: &'a i32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392136,"byte_end":392155,"line_start":377,"line_end":377,"column_start":1,"column_end":20}},{"value":"/     #[with(RefAsBox)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392156,"byte_end":392181,"line_start":378,"line_end":378,"column_start":1,"column_end":26}},{"value":"/     b: &'a str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392182,"byte_end":392201,"line_start":379,"line_end":379,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392202,"byte_end":392207,"line_start":380,"line_end":380,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392208,"byte_end":392215,"line_start":381,"line_end":381,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7410},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392821,"byte_end":392829,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"AsString","qualname":"::with::AsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that attempts to convert a type to and from UTF-8.","sig":null,"attributes":[{"value":"/ A wrapper that attempts to convert a type to and from UTF-8.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392255,"byte_end":392319,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392320,"byte_end":392323,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Types like `OsString` and `PathBuf` aren't guaranteed to be encoded as UTF-8, but they usually","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392324,"byte_end":392422,"line_start":387,"line_end":387,"column_start":1,"column_end":99}},{"value":"/ are anyway. Using this wrapper will archive them as if they were regular `String`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392423,"byte_end":392510,"line_start":388,"line_end":388,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392511,"byte_end":392514,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392515,"byte_end":392528,"line_start":390,"line_end":390,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392529,"byte_end":392532,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392533,"byte_end":392540,"line_start":392,"line_end":392,"column_start":1,"column_end":8}},{"value":"/ use std::{ffi::OsString, path::PathBuf};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392541,"byte_end":392585,"line_start":393,"line_end":393,"column_start":1,"column_end":45}},{"value":"/ use rkyv::{Archive, with::AsString};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392586,"byte_end":392626,"line_start":394,"line_end":394,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392627,"byte_end":392630,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392631,"byte_end":392653,"line_start":396,"line_end":396,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392654,"byte_end":392674,"line_start":397,"line_end":397,"column_start":1,"column_end":21}},{"value":"/     #[with(AsString)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392675,"byte_end":392700,"line_start":398,"line_end":398,"column_start":1,"column_end":26}},{"value":"/     os_string: OsString,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392701,"byte_end":392729,"line_start":399,"line_end":399,"column_start":1,"column_end":29}},{"value":"/     #[with(AsString)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392730,"byte_end":392755,"line_start":400,"line_end":400,"column_start":1,"column_end":26}},{"value":"/     path: PathBuf,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392756,"byte_end":392778,"line_start":401,"line_end":401,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392779,"byte_end":392784,"line_start":402,"line_end":402,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392785,"byte_end":392792,"line_start":403,"line_end":403,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7415},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393002,"byte_end":393013,"line_start":411,"line_end":411,"column_start":5,"column_end":16},"name":"InvalidUTF8","qualname":"::with::AsStringError::InvalidUTF8","value":"AsStringError::InvalidUTF8","parent":{"krate":0,"index":7414},"children":[],"decl_id":null,"docs":" The `OsString` or `PathBuf` was not valid UTF-8.\n","sig":null,"attributes":[{"value":"/ The `OsString` or `PathBuf` was not valid UTF-8.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392945,"byte_end":392997,"line_start":410,"line_end":410,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":7414},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392925,"byte_end":392938,"line_start":409,"line_end":409,"column_start":10,"column_end":23},"name":"AsStringError","qualname":"::with::AsStringError","value":"pub enum AsStringError { InvalidUTF8, }","parent":null,"children":[{"krate":0,"index":7415}],"decl_id":null,"docs":" Errors that can occur when serializing a [`AsString`] wrapper.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a [`AsString`] wrapper.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":392832,"byte_end":392898,"line_start":407,"line_end":407,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7419},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394039,"byte_end":394043,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"Lock","qualname":"::with::Lock","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that locks a lock and serializes the value immutably.","sig":null,"attributes":[{"value":"/ A wrapper that locks a lock and serializes the value immutably.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393234,"byte_end":393301,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393302,"byte_end":393305,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This wrapper can panic under very specific circumstances when:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393306,"byte_end":393372,"line_start":425,"line_end":425,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393373,"byte_end":393376,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ 1. `serialize_with` is called and succeeds in locking the value to serialize it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393377,"byte_end":393461,"line_start":427,"line_end":427,"column_start":1,"column_end":85}},{"value":"/ 2. Another thread locks the value and panics, poisoning the lock","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393462,"byte_end":393530,"line_start":428,"line_end":428,"column_start":1,"column_end":69}},{"value":"/ 3. `resolve_with` is called and gets a poisoned value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393531,"byte_end":393589,"line_start":429,"line_end":429,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393590,"byte_end":393593,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Unfortunately, it's not possible to work around this issue. If your code absolutely must not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393594,"byte_end":393690,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/ panic under any circumstances, it's recommended that you lock your values and then serialize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393691,"byte_end":393787,"line_start":432,"line_end":432,"column_start":1,"column_end":97}},{"value":"/ them while locked.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393788,"byte_end":393810,"line_start":433,"line_end":433,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393811,"byte_end":393814,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393815,"byte_end":393828,"line_start":435,"line_end":435,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393829,"byte_end":393832,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393833,"byte_end":393840,"line_start":437,"line_end":437,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393841,"byte_end":393866,"line_start":438,"line_end":438,"column_start":1,"column_end":26}},{"value":"/ use rkyv::{Archive, with::Lock};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393867,"byte_end":393903,"line_start":439,"line_end":439,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393904,"byte_end":393907,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393908,"byte_end":393930,"line_start":441,"line_end":441,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393931,"byte_end":393951,"line_start":442,"line_end":442,"column_start":1,"column_end":21}},{"value":"/     #[with(Lock)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393952,"byte_end":393973,"line_start":443,"line_end":443,"column_start":1,"column_end":22}},{"value":"/     a: Mutex<i32>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393974,"byte_end":393996,"line_start":444,"line_end":444,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393997,"byte_end":394002,"line_start":445,"line_end":445,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394003,"byte_end":394010,"line_start":446,"line_end":446,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7424},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394182,"byte_end":394190,"line_start":454,"line_end":454,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::with::LockError::Poisoned","value":"LockError::Poisoned","parent":{"krate":0,"index":7423},"children":[],"decl_id":null,"docs":" The mutex was poisoned\n","sig":null,"attributes":[{"value":"/ The mutex was poisoned","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394151,"byte_end":394177,"line_start":453,"line_end":453,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":7423},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394135,"byte_end":394144,"line_start":452,"line_end":452,"column_start":10,"column_end":19},"name":"LockError","qualname":"::with::LockError","value":"pub enum LockError { Poisoned, }","parent":null,"children":[{"krate":0,"index":7424}],"decl_id":null,"docs":" Errors that can occur while serializing a [`Lock`] wrapper\n","sig":null,"attributes":[{"value":"/ Errors that can occur while serializing a [`Lock`] wrapper","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394046,"byte_end":394108,"line_start":450,"line_end":450,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7428},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394702,"byte_end":394709,"line_start":481,"line_end":481,"column_start":12,"column_end":19},"name":"AsOwned","qualname":"::with::AsOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes a `Cow` as if it were owned.","sig":null,"attributes":[{"value":"/ A wrapper that serializes a `Cow` as if it were owned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394403,"byte_end":394461,"line_start":466,"line_end":466,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394462,"byte_end":394465,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394466,"byte_end":394479,"line_start":468,"line_end":468,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394480,"byte_end":394483,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394484,"byte_end":394491,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394492,"byte_end":394517,"line_start":471,"line_end":471,"column_start":1,"column_end":26}},{"value":"/ use rkyv::{Archive, with::AsOwned};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394518,"byte_end":394557,"line_start":472,"line_end":472,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394558,"byte_end":394561,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394562,"byte_end":394584,"line_start":474,"line_end":474,"column_start":1,"column_end":23}},{"value":"/ struct Example<'a> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394585,"byte_end":394609,"line_start":475,"line_end":475,"column_start":1,"column_end":25}},{"value":"/     #[with(AsOwned)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394610,"byte_end":394634,"line_start":476,"line_end":476,"column_start":1,"column_end":25}},{"value":"/     a: Cow<'a, str>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394635,"byte_end":394659,"line_start":477,"line_end":477,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394660,"byte_end":394665,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394666,"byte_end":394673,"line_start":479,"line_end":479,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7432},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395238,"byte_end":395243,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"name":"AsVec","qualname":"::with::AsVec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that serializes associative containers as a `Vec` of key-value pairs.","sig":null,"attributes":[{"value":"/ A wrapper that serializes associative containers as a `Vec` of key-value pairs.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394712,"byte_end":394795,"line_start":483,"line_end":483,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394796,"byte_end":394799,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ This provides faster serialization for containers like `HashMap` and `BTreeMap` by serializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394800,"byte_end":394898,"line_start":485,"line_end":485,"column_start":1,"column_end":99}},{"value":"/ the key-value pairs directly instead of building a data structure in the buffer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394899,"byte_end":394983,"line_start":486,"line_end":486,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394984,"byte_end":394987,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394988,"byte_end":395001,"line_start":488,"line_end":488,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395002,"byte_end":395005,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395006,"byte_end":395013,"line_start":490,"line_end":490,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395014,"byte_end":395048,"line_start":491,"line_end":491,"column_start":1,"column_end":35}},{"value":"/ use rkyv::{Archive, with::AsVec};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395049,"byte_end":395086,"line_start":492,"line_end":492,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395087,"byte_end":395090,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395091,"byte_end":395113,"line_start":494,"line_end":494,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395114,"byte_end":395134,"line_start":495,"line_end":495,"column_start":1,"column_end":21}},{"value":"/     #[with(AsVec)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395135,"byte_end":395157,"line_start":496,"line_end":496,"column_start":1,"column_end":23}},{"value":"/     values: HashMap<String, u32>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395158,"byte_end":395195,"line_start":497,"line_end":497,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395196,"byte_end":395201,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395202,"byte_end":395209,"line_start":499,"line_end":499,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7436},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395873,"byte_end":395878,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"Niche","qualname":"::with::Niche","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that niches some type combinations.","sig":null,"attributes":[{"value":"/ A wrapper that niches some type combinations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395246,"byte_end":395295,"line_start":503,"line_end":503,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395296,"byte_end":395299,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ A common type combination is `Option<Box<T>>`. By using a null pointer, the archived version can","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395300,"byte_end":395400,"line_start":505,"line_end":505,"column_start":1,"column_end":101}},{"value":"/ save some space on-disk.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395401,"byte_end":395429,"line_start":506,"line_end":506,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395430,"byte_end":395433,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395434,"byte_end":395447,"line_start":508,"line_end":508,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395448,"byte_end":395451,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395452,"byte_end":395459,"line_start":510,"line_end":510,"column_start":1,"column_end":8}},{"value":"/ use core::mem::size_of;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395460,"byte_end":395487,"line_start":511,"line_end":511,"column_start":1,"column_end":28}},{"value":"/ use rkyv::{Archive, Archived, with::Niche};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395488,"byte_end":395535,"line_start":512,"line_end":512,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395536,"byte_end":395539,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395540,"byte_end":395562,"line_start":514,"line_end":514,"column_start":1,"column_end":23}},{"value":"/ struct BasicExample {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395563,"byte_end":395588,"line_start":515,"line_end":515,"column_start":1,"column_end":26}},{"value":"/     value: Option<Box<str>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395589,"byte_end":395621,"line_start":516,"line_end":516,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395622,"byte_end":395627,"line_start":517,"line_end":517,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395628,"byte_end":395631,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395632,"byte_end":395654,"line_start":519,"line_end":519,"column_start":1,"column_end":23}},{"value":"/ struct NichedExample {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395655,"byte_end":395681,"line_start":520,"line_end":520,"column_start":1,"column_end":27}},{"value":"/     #[with(Niche)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395682,"byte_end":395704,"line_start":521,"line_end":521,"column_start":1,"column_end":23}},{"value":"/     value: Option<Box<str>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395705,"byte_end":395737,"line_start":522,"line_end":522,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395738,"byte_end":395743,"line_start":523,"line_end":523,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395744,"byte_end":395747,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ assert!(size_of::<Archived<BasicExample>>() > size_of::<Archived<NichedExample>>());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395748,"byte_end":395836,"line_start":525,"line_end":525,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395837,"byte_end":395844,"line_start":526,"line_end":526,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396765,"byte_end":396777,"line_start":556,"line_end":556,"column_start":12,"column_end":24},"name":"CopyOptimize","qualname":"::with::CopyOptimize","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper that provides specialized, performant implementations of serialization and\n deserialization.","sig":null,"attributes":[{"value":"/ A wrapper that provides specialized, performant implementations of serialization and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395881,"byte_end":395969,"line_start":530,"line_end":530,"column_start":1,"column_end":89}},{"value":"/ deserialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395970,"byte_end":395990,"line_start":531,"line_end":531,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395991,"byte_end":395994,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ This wrapper can be used with containers like `Vec`, but care must be taken to ensure that they","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":395995,"byte_end":396094,"line_start":533,"line_end":533,"column_start":1,"column_end":100}},{"value":"/ contain copy-safe types. Copy-safe types must be trivially copyable (have the same archived and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396095,"byte_end":396194,"line_start":534,"line_end":534,"column_start":1,"column_end":100}},{"value":"/ unarchived representations) and contain no padding bytes. In situations where copying","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396195,"byte_end":396284,"line_start":535,"line_end":535,"column_start":1,"column_end":90}},{"value":"/ uninitialized bytes the output is acceptable, this wrapper may be used with containers of types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396285,"byte_end":396384,"line_start":536,"line_end":536,"column_start":1,"column_end":100}},{"value":"/ that contain padding bytes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396385,"byte_end":396416,"line_start":537,"line_end":537,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396417,"byte_end":396420,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396421,"byte_end":396433,"line_start":539,"line_end":539,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396434,"byte_end":396437,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ Using this wrapper with containers containing non-copy-safe types may result in undefined","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396438,"byte_end":396531,"line_start":541,"line_end":541,"column_start":1,"column_end":94}},{"value":"/ behavior.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396532,"byte_end":396545,"line_start":542,"line_end":542,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396546,"byte_end":396549,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396550,"byte_end":396563,"line_start":544,"line_end":544,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396564,"byte_end":396567,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396568,"byte_end":396575,"line_start":546,"line_end":546,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{Archive, with::CopyOptimize};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396576,"byte_end":396620,"line_start":547,"line_end":547,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396621,"byte_end":396624,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396625,"byte_end":396647,"line_start":549,"line_end":549,"column_start":1,"column_end":23}},{"value":"/ struct Example {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396648,"byte_end":396668,"line_start":550,"line_end":550,"column_start":1,"column_end":21}},{"value":"/     #[with(CopyOptimize)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396669,"byte_end":396698,"line_start":551,"line_end":551,"column_start":1,"column_end":30}},{"value":"/     bytes: Vec<u8>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396699,"byte_end":396722,"line_start":552,"line_end":552,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396723,"byte_end":396728,"line_start":553,"line_end":553,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":396729,"byte_end":396736,"line_start":554,"line_end":554,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5399},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8746,"byte_end":8754,"line_start":192,"line_end":192,"column_start":11,"column_end":19},"name":"Fallible","qualname":"::Fallible","value":"Fallible","parent":null,"children":[{"krate":0,"index":5400}],"decl_id":null,"docs":" A type that can produce an error.","sig":null,"attributes":[{"value":"/ A type that can produce an error.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8257,"byte_end":8294,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8295,"byte_end":8298,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This trait is always implemented by serializers and deserializers. Its purpose is to provide an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8299,"byte_end":8398,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"/ error type without restricting what other capabilities the type must provide.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8399,"byte_end":8480,"line_start":187,"line_end":187,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8481,"byte_end":8484,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ When writing implementations for [`Serialize`] and [`Deserialize`], it's best practice to bound","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8485,"byte_end":8584,"line_start":189,"line_end":189,"column_start":1,"column_end":100}},{"value":"/ the serializer or deserializer by `Fallible` and then require that the serialized types support","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8585,"byte_end":8684,"line_start":190,"line_end":190,"column_start":1,"column_end":100}},{"value":"/ it (i.e. `S: Fallible, MyType: Serialize<S>`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8685,"byte_end":8735,"line_start":191,"line_end":191,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5400},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8817,"byte_end":8822,"line_start":194,"line_end":194,"column_start":10,"column_end":15},"name":"Error","qualname":"::Fallible::Error","value":"type Error: 'static;","parent":{"krate":0,"index":5399},"children":[],"decl_id":null,"docs":" The error produced by any failing methods.\n","sig":null,"attributes":[{"value":"/ The error produced by any failing methods.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8761,"byte_end":8807,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7444},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9027,"byte_end":9037,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"Infallible","qualname":"::Infallible","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fallible type that cannot produce errors.","sig":null,"attributes":[{"value":"/ A fallible type that cannot produce errors.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8836,"byte_end":8883,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8884,"byte_end":8887,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ This type can be used to serialize and deserialize types that cannot fail to serialize or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8888,"byte_end":8981,"line_start":199,"line_end":199,"column_start":1,"column_end":94}},{"value":"/ deserialize.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":8982,"byte_end":8998,"line_start":200,"line_end":200,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":5405},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15955,"byte_end":15962,"line_start":383,"line_end":383,"column_start":11,"column_end":18},"name":"Archive","qualname":"::Archive","value":"Archive","parent":null,"children":[{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408}],"decl_id":null,"docs":" A type that can be used without deserializing.","sig":null,"attributes":[{"value":"/ A type that can be used without deserializing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9203,"byte_end":9253,"line_start":214,"line_end":214,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9254,"byte_end":9257,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ `Archive` is one of three basic traits used to work with zero-copy data and controls the layout","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9258,"byte_end":9357,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"/ of the data in its archived zero-copy representation. The [`Serialize`] trait helps transform","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9358,"byte_end":9455,"line_start":217,"line_end":217,"column_start":1,"column_end":98}},{"value":"/ types into that representation, and the [`Deserialize`] trait helps transform types back out.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9456,"byte_end":9553,"line_start":218,"line_end":218,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9554,"byte_end":9557,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Types that implement `Archive` must have a well-defined archived size. Unsized types can be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9558,"byte_end":9653,"line_start":220,"line_end":220,"column_start":1,"column_end":96}},{"value":"/ supported using the [`ArchiveUnsized`] trait, along with [`SerializeUnsized`] and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9654,"byte_end":9739,"line_start":221,"line_end":221,"column_start":1,"column_end":86}},{"value":"/ [`DeserializeUnsized`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9740,"byte_end":9767,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9768,"byte_end":9771,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Archiving is done depth-first, writing any data owned by a type before writing the data for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9772,"byte_end":9871,"line_start":224,"line_end":224,"column_start":1,"column_end":100}},{"value":"/ type itself. The type must be able to create the archived type from only its own data and its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9872,"byte_end":9969,"line_start":225,"line_end":225,"column_start":1,"column_end":98}},{"value":"/ resolver.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9970,"byte_end":9983,"line_start":226,"line_end":226,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9984,"byte_end":9987,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Archived data is always treated as if it is tree-shaped, with the root owning its direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9988,"byte_end":10080,"line_start":228,"line_end":228,"column_start":1,"column_end":93}},{"value":"/ descendents and so on. Data that is not tree-shaped can be supported using special serializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10081,"byte_end":10178,"line_start":229,"line_end":229,"column_start":1,"column_end":98}},{"value":"/ and deserializer bounds (see [`ArchivedRc`](crate::rc::ArchivedRc) for example). In a buffer of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10179,"byte_end":10278,"line_start":230,"line_end":230,"column_start":1,"column_end":100}},{"value":"/ serialized data, objects are laid out in *reverse order*. This means that the root object is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10279,"byte_end":10375,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/ located near the end of the buffer and leaf objects are located near the beginning.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10376,"byte_end":10463,"line_start":232,"line_end":232,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10464,"byte_end":10467,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10468,"byte_end":10482,"line_start":234,"line_end":234,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10483,"byte_end":10486,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Most of the time, `#[derive(Archive)]` will create an acceptable implementation. You can use the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10487,"byte_end":10587,"line_start":236,"line_end":236,"column_start":1,"column_end":101}},{"value":"/ `#[archive(...)]` and `#[archive_attr(...)]` attributes to control how the implementation is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10588,"byte_end":10684,"line_start":237,"line_end":237,"column_start":1,"column_end":97}},{"value":"/ generated. See the [`Archive`](macro@Archive) derive macro for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10685,"byte_end":10765,"line_start":238,"line_end":238,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10766,"byte_end":10769,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10770,"byte_end":10777,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10778,"byte_end":10793,"line_start":241,"line_end":241,"column_start":1,"column_end":16}},{"value":"/     archived_root,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10794,"byte_end":10816,"line_start":242,"line_end":242,"column_start":1,"column_end":23}},{"value":"/     ser::{Serializer, serializers::AllocSerializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10817,"byte_end":10873,"line_start":243,"line_end":243,"column_start":1,"column_end":57}},{"value":"/     AlignedVec, Archive, Deserialize, Infallible, Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10874,"byte_end":10938,"line_start":244,"line_end":244,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10939,"byte_end":10945,"line_start":245,"line_end":245,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10946,"byte_end":10949,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ #[derive(Archive, Serialize, Deserialize, Debug, PartialEq)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":10950,"byte_end":11014,"line_start":247,"line_end":247,"column_start":1,"column_end":65}},{"value":"/ struct Test {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11015,"byte_end":11032,"line_start":248,"line_end":248,"column_start":1,"column_end":18}},{"value":"/     int: u8,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11033,"byte_end":11049,"line_start":249,"line_end":249,"column_start":1,"column_end":17}},{"value":"/     string: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11050,"byte_end":11073,"line_start":250,"line_end":250,"column_start":1,"column_end":24}},{"value":"/     option: Option<Vec<i32>>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11074,"byte_end":11107,"line_start":251,"line_end":251,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11108,"byte_end":11113,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11114,"byte_end":11117,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let value = Test {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11118,"byte_end":11140,"line_start":254,"line_end":254,"column_start":1,"column_end":23}},{"value":"/     int: 42,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11141,"byte_end":11157,"line_start":255,"line_end":255,"column_start":1,"column_end":17}},{"value":"/     string: \"hello world\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11158,"byte_end":11200,"line_start":256,"line_end":256,"column_start":1,"column_end":43}},{"value":"/     option: Some(vec![1, 2, 3, 4]),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11201,"byte_end":11240,"line_start":257,"line_end":257,"column_start":1,"column_end":40}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11241,"byte_end":11247,"line_start":258,"line_end":258,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11248,"byte_end":11251,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AllocSerializer::<4096>::default();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11252,"byte_end":11312,"line_start":260,"line_end":260,"column_start":1,"column_end":61}},{"value":"/ serializer.serialize_value(&value).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11313,"byte_end":11361,"line_start":261,"line_end":261,"column_start":1,"column_end":49}},{"value":"/ let buf = serializer.into_serializer().into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11362,"byte_end":11418,"line_start":262,"line_end":262,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11419,"byte_end":11422,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ let archived = unsafe { archived_root::<Test>(buf.as_slice()) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11423,"byte_end":11491,"line_start":264,"line_end":264,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(archived.int, value.int);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11492,"byte_end":11532,"line_start":265,"line_end":265,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(archived.string, value.string);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11533,"byte_end":11579,"line_start":266,"line_end":266,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(archived.option, value.option);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11580,"byte_end":11626,"line_start":267,"line_end":267,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11627,"byte_end":11630,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ let deserialized = archived.deserialize(&mut Infallible).unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11631,"byte_end":11701,"line_start":269,"line_end":269,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(value, deserialized);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11702,"byte_end":11738,"line_start":270,"line_end":270,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11739,"byte_end":11746,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11747,"byte_end":11750,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Many of the core and standard library types already have `Archive` implementations available,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11751,"byte_end":11848,"line_start":273,"line_end":273,"column_start":1,"column_end":98}},{"value":"/ but you may need to implement `Archive` for your own types in some cases the derive macro cannot","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11849,"byte_end":11949,"line_start":274,"line_end":274,"column_start":1,"column_end":101}},{"value":"/ handle.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11950,"byte_end":11961,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11962,"byte_end":11965,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ In this example, we add our own wrapper that serializes a `&'static str` as if it's owned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":11966,"byte_end":12060,"line_start":277,"line_end":277,"column_start":1,"column_end":95}},{"value":"/ Normally you can lean on the archived version of `String` to do most of the work, or use the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12061,"byte_end":12157,"line_start":278,"line_end":278,"column_start":1,"column_end":97}},{"value":"/ [`Inline`](crate::with::Inline) to do exactly this. This example does everything to demonstrate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12158,"byte_end":12257,"line_start":279,"line_end":279,"column_start":1,"column_end":100}},{"value":"/ how to implement `Archive` for your own types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12258,"byte_end":12308,"line_start":280,"line_end":280,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12309,"byte_end":12312,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12313,"byte_end":12320,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ use core::{slice, str};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12321,"byte_end":12348,"line_start":283,"line_end":283,"column_start":1,"column_end":28}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12349,"byte_end":12364,"line_start":284,"line_end":284,"column_start":1,"column_end":16}},{"value":"/     archived_root,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12365,"byte_end":12387,"line_start":285,"line_end":285,"column_start":1,"column_end":23}},{"value":"/     ser::{Serializer, serializers::AlignedSerializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12388,"byte_end":12446,"line_start":286,"line_end":286,"column_start":1,"column_end":59}},{"value":"/     out_field,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12447,"byte_end":12465,"line_start":287,"line_end":287,"column_start":1,"column_end":19}},{"value":"/     AlignedVec,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12466,"byte_end":12485,"line_start":288,"line_end":288,"column_start":1,"column_end":20}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12486,"byte_end":12502,"line_start":289,"line_end":289,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12503,"byte_end":12520,"line_start":290,"line_end":290,"column_start":1,"column_end":18}},{"value":"/     ArchiveUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12521,"byte_end":12544,"line_start":291,"line_end":291,"column_start":1,"column_end":24}},{"value":"/     MetadataResolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12545,"byte_end":12570,"line_start":292,"line_end":292,"column_start":1,"column_end":26}},{"value":"/     RelPtr,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12571,"byte_end":12586,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12587,"byte_end":12605,"line_start":294,"line_end":294,"column_start":1,"column_end":19}},{"value":"/     SerializeUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12606,"byte_end":12631,"line_start":295,"line_end":295,"column_start":1,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12632,"byte_end":12638,"line_start":296,"line_end":296,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12639,"byte_end":12642,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ struct OwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12643,"byte_end":12664,"line_start":298,"line_end":298,"column_start":1,"column_end":22}},{"value":"/     inner: &'static str,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12665,"byte_end":12693,"line_start":299,"line_end":299,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12694,"byte_end":12699,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12700,"byte_end":12703,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ struct ArchivedOwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12704,"byte_end":12733,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"/     // This will be a relative pointer to our string","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12734,"byte_end":12790,"line_start":303,"line_end":303,"column_start":1,"column_end":57}},{"value":"/     ptr: RelPtr<str>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12791,"byte_end":12816,"line_start":304,"line_end":304,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12817,"byte_end":12822,"line_start":305,"line_end":305,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12823,"byte_end":12826,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ impl ArchivedOwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12827,"byte_end":12854,"line_start":307,"line_end":307,"column_start":1,"column_end":28}},{"value":"/     // This will help us get the bytes of our type as a str again.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12855,"byte_end":12925,"line_start":308,"line_end":308,"column_start":1,"column_end":71}},{"value":"/     fn as_str(&self) -> &str {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12926,"byte_end":12960,"line_start":309,"line_end":309,"column_start":1,"column_end":35}},{"value":"/         unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12961,"byte_end":12981,"line_start":310,"line_end":310,"column_start":1,"column_end":21}},{"value":"/             // The as_ptr() function of RelPtr will get a pointer the str","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":12982,"byte_end":13059,"line_start":311,"line_end":311,"column_start":1,"column_end":78}},{"value":"/             &*self.ptr.as_ptr()","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13060,"byte_end":13095,"line_start":312,"line_end":312,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13096,"byte_end":13109,"line_start":313,"line_end":313,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13110,"byte_end":13119,"line_start":314,"line_end":314,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13120,"byte_end":13125,"line_start":315,"line_end":315,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13126,"byte_end":13129,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ struct OwnedStrResolver {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13130,"byte_end":13159,"line_start":317,"line_end":317,"column_start":1,"column_end":30}},{"value":"/     // This will be the position that the bytes of our string are stored at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13160,"byte_end":13240,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/     // We'll use this to resolve the relative pointer of our","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13241,"byte_end":13305,"line_start":319,"line_end":319,"column_start":1,"column_end":65}},{"value":"/     // ArchivedOwnedStr.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13306,"byte_end":13334,"line_start":320,"line_end":320,"column_start":1,"column_end":29}},{"value":"/     pos: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13335,"byte_end":13354,"line_start":321,"line_end":321,"column_start":1,"column_end":20}},{"value":"/     // The archived metadata for our str may also need a resolver.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13355,"byte_end":13425,"line_start":322,"line_end":322,"column_start":1,"column_end":71}},{"value":"/     metadata_resolver: MetadataResolver<str>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13426,"byte_end":13475,"line_start":323,"line_end":323,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13476,"byte_end":13481,"line_start":324,"line_end":324,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13482,"byte_end":13485,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ // The Archive implementation defines the archived version of our type and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13486,"byte_end":13564,"line_start":326,"line_end":326,"column_start":1,"column_end":79}},{"value":"/ // determines how to turn the resolver into the archived form. The Serialize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13565,"byte_end":13645,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/ // implementations determine how to make a resolver from the original value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13646,"byte_end":13726,"line_start":328,"line_end":328,"column_start":1,"column_end":81}},{"value":"/ impl Archive for OwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13727,"byte_end":13758,"line_start":329,"line_end":329,"column_start":1,"column_end":32}},{"value":"/     type Archived = ArchivedOwnedStr;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13759,"byte_end":13800,"line_start":330,"line_end":330,"column_start":1,"column_end":42}},{"value":"/     // This is the resolver we can create our Archived verison from.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13801,"byte_end":13873,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"/     type Resolver = OwnedStrResolver;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13874,"byte_end":13915,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13916,"byte_end":13919,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/     // The resolve function consumes the resolver and produces the archived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":13920,"byte_end":13999,"line_start":334,"line_end":334,"column_start":1,"column_end":80}},{"value":"/     // value at the given position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14000,"byte_end":14039,"line_start":335,"line_end":335,"column_start":1,"column_end":40}},{"value":"/     unsafe fn resolve(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14040,"byte_end":14066,"line_start":336,"line_end":336,"column_start":1,"column_end":27}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14067,"byte_end":14085,"line_start":337,"line_end":337,"column_start":1,"column_end":19}},{"value":"/         pos: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14086,"byte_end":14109,"line_start":338,"line_end":338,"column_start":1,"column_end":24}},{"value":"/         resolver: Self::Resolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14110,"byte_end":14147,"line_start":339,"line_end":339,"column_start":1,"column_end":38}},{"value":"/         out: *mut Self::Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14148,"byte_end":14185,"line_start":340,"line_end":340,"column_start":1,"column_end":38}},{"value":"/     ) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14186,"byte_end":14197,"line_start":341,"line_end":341,"column_start":1,"column_end":12}},{"value":"/         // We have to be careful to add the offset of the ptr field,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14198,"byte_end":14270,"line_start":342,"line_end":342,"column_start":1,"column_end":73}},{"value":"/         // otherwise we'll be using the position of the ArchivedOwnedStr","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14271,"byte_end":14347,"line_start":343,"line_end":343,"column_start":1,"column_end":77}},{"value":"/         // instead of the position of the relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14348,"byte_end":14411,"line_start":344,"line_end":344,"column_start":1,"column_end":64}},{"value":"/         let (fp, fo) = out_field!(out.ptr);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14412,"byte_end":14459,"line_start":345,"line_end":345,"column_start":1,"column_end":48}},{"value":"/         self.inner.resolve_unsized(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14460,"byte_end":14499,"line_start":346,"line_end":346,"column_start":1,"column_end":40}},{"value":"/             pos + fp,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14500,"byte_end":14525,"line_start":347,"line_end":347,"column_start":1,"column_end":26}},{"value":"/             resolver.pos,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14526,"byte_end":14555,"line_start":348,"line_end":348,"column_start":1,"column_end":30}},{"value":"/             resolver.metadata_resolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14556,"byte_end":14599,"line_start":349,"line_end":349,"column_start":1,"column_end":44}},{"value":"/             fo,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14600,"byte_end":14619,"line_start":350,"line_end":350,"column_start":1,"column_end":20}},{"value":"/         );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14620,"byte_end":14634,"line_start":351,"line_end":351,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14635,"byte_end":14644,"line_start":352,"line_end":352,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14645,"byte_end":14650,"line_start":353,"line_end":353,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14651,"byte_end":14654,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ // We restrict our serializer types with Serializer because we need its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14655,"byte_end":14730,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ // capabilities to archive our type. For other types, we might need more or","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14731,"byte_end":14810,"line_start":356,"line_end":356,"column_start":1,"column_end":80}},{"value":"/ // less restrictive bounds on the type of S.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14811,"byte_end":14859,"line_start":357,"line_end":357,"column_start":1,"column_end":49}},{"value":"/ impl<S: Serializer + ?Sized> Serialize<S> for OwnedStr {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14860,"byte_end":14920,"line_start":358,"line_end":358,"column_start":1,"column_end":61}},{"value":"/     fn serialize(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14921,"byte_end":14942,"line_start":359,"line_end":359,"column_start":1,"column_end":22}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14943,"byte_end":14961,"line_start":360,"line_end":360,"column_start":1,"column_end":19}},{"value":"/         serializer: &mut S","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14962,"byte_end":14992,"line_start":361,"line_end":361,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Self::Resolver, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":14993,"byte_end":15040,"line_start":362,"line_end":362,"column_start":1,"column_end":48}},{"value":"/         // This is where we want to write the bytes of our string and return","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15041,"byte_end":15121,"line_start":363,"line_end":363,"column_start":1,"column_end":81}},{"value":"/         // a resolver that knows where those bytes were written.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15122,"byte_end":15190,"line_start":364,"line_end":364,"column_start":1,"column_end":69}},{"value":"/         // We also need to serialize the metadata for our str.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15191,"byte_end":15257,"line_start":365,"line_end":365,"column_start":1,"column_end":67}},{"value":"/         Ok(OwnedStrResolver {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15258,"byte_end":15291,"line_start":366,"line_end":366,"column_start":1,"column_end":34}},{"value":"/             pos: self.inner.serialize_unsized(serializer)?,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15292,"byte_end":15355,"line_start":367,"line_end":367,"column_start":1,"column_end":64}},{"value":"/             metadata_resolver: self.inner.serialize_metadata(serializer)?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15356,"byte_end":15433,"line_start":368,"line_end":368,"column_start":1,"column_end":78}},{"value":"/         })","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15434,"byte_end":15448,"line_start":369,"line_end":369,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15449,"byte_end":15458,"line_start":370,"line_end":370,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15459,"byte_end":15464,"line_start":371,"line_end":371,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15465,"byte_end":15468,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AlignedSerializer::new(AlignedVec::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15469,"byte_end":15536,"line_start":373,"line_end":373,"column_start":1,"column_end":68}},{"value":"/ const STR_VAL: &'static str = \"I'm in an OwnedStr!\";","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15537,"byte_end":15593,"line_start":374,"line_end":374,"column_start":1,"column_end":57}},{"value":"/ let value = OwnedStr { inner: STR_VAL };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15594,"byte_end":15638,"line_start":375,"line_end":375,"column_start":1,"column_end":45}},{"value":"/ // It works!","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15639,"byte_end":15655,"line_start":376,"line_end":376,"column_start":1,"column_end":17}},{"value":"/ serializer.serialize_value(&value).expect(\"failed to archive test\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15656,"byte_end":15728,"line_start":377,"line_end":377,"column_start":1,"column_end":73}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15729,"byte_end":15767,"line_start":378,"line_end":378,"column_start":1,"column_end":39}},{"value":"/ let archived = unsafe { archived_root::<OwnedStr>(buf.as_ref()) };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15768,"byte_end":15838,"line_start":379,"line_end":379,"column_start":1,"column_end":71}},{"value":"/ // Let's make sure our data got written correctly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15839,"byte_end":15892,"line_start":380,"line_end":380,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(archived.as_str(), STR_VAL);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15893,"byte_end":15936,"line_start":381,"line_end":381,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15937,"byte_end":15944,"line_start":382,"line_end":382,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5406},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16107,"byte_end":16115,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"name":"Archived","qualname":"::Archive::Archived","value":"type Archived;","parent":{"krate":0,"index":5405},"children":[],"decl_id":null,"docs":" The archived representation of this type.","sig":null,"attributes":[{"value":"/ The archived representation of this type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":15969,"byte_end":16014,"line_start":384,"line_end":384,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16019,"byte_end":16022,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ In this form, the data can be used with zero-copy deserialization.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16027,"byte_end":16097,"line_start":386,"line_end":386,"column_start":5,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":5407},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16290,"byte_end":16298,"line_start":391,"line_end":391,"column_start":10,"column_end":18},"name":"Resolver","qualname":"::Archive::Resolver","value":"type Resolver;","parent":{"krate":0,"index":5405},"children":[],"decl_id":null,"docs":" The resolver for this type. It must contain all the additional information from serializing\n needed to make the archived type from the normal type.\n","sig":null,"attributes":[{"value":"/ The resolver for this type. It must contain all the additional information from serializing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16122,"byte_end":16217,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ needed to make the archived type from the normal type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16222,"byte_end":16280,"line_start":390,"line_end":390,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5408},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16924,"byte_end":16931,"line_start":405,"line_end":405,"column_start":15,"column_end":22},"name":"resolve","qualname":"::Archive::resolve","value":"pub unsafe fn resolve(&Self, usize, Self::Resolver, *mut Self::Archived)","parent":{"krate":0,"index":5405},"children":[],"decl_id":null,"docs":" Creates the archived version of this value at the given position and writes it to the given\n output.","sig":null,"attributes":[{"value":"/ Creates the archived version of this value at the given position and writes it to the given","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16305,"byte_end":16400,"line_start":393,"line_end":393,"column_start":5,"column_end":100}},{"value":"/ output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16405,"byte_end":16416,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16421,"byte_end":16424,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The output should be initialized field-by-field rather than by writing a whole struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16429,"byte_end":16519,"line_start":396,"line_end":396,"column_start":5,"column_end":95}},{"value":"/ Performing a typed copy will mark all of the padding bytes as uninitialized, but they must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16524,"byte_end":16618,"line_start":397,"line_end":397,"column_start":5,"column_end":99}},{"value":"/ remain set to the value they currently have. This prevents leaking uninitialized memory to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16623,"byte_end":16717,"line_start":398,"line_end":398,"column_start":5,"column_end":99}},{"value":"/ the final archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16722,"byte_end":16744,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16749,"byte_end":16752,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16757,"byte_end":16769,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16774,"byte_end":16777,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16782,"byte_end":16842,"line_start":403,"line_end":403,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing this object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":16847,"byte_end":16909,"line_start":404,"line_end":404,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":5409},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17590,"byte_end":17599,"line_start":417,"line_end":417,"column_start":11,"column_end":20},"name":"Serialize","qualname":"::Serialize","value":"Serialize<S: Fallible + ?Sized>: Archive","parent":null,"children":[{"krate":0,"index":5411}],"decl_id":null,"docs":" Converts a type to its archived form.","sig":null,"attributes":[{"value":"/ Converts a type to its archived form.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17007,"byte_end":17048,"line_start":408,"line_end":408,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17049,"byte_end":17052,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ Objects perform any supportive serialization during [`serialize`](Serialize::serialize). For","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17053,"byte_end":17149,"line_start":410,"line_end":410,"column_start":1,"column_end":97}},{"value":"/ types that reference nonlocal (pointed-to) data, this is when that data must be serialized to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17150,"byte_end":17247,"line_start":411,"line_end":411,"column_start":1,"column_end":98}},{"value":"/ the output. These types will need to bound `S` to implement [`Serializer`](ser::Serializer) and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17248,"byte_end":17347,"line_start":412,"line_end":412,"column_start":1,"column_end":100}},{"value":"/ any other required traits (e.g. [`SharedSerializeRegistry`](ser::SharedSerializeRegistry)). They","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17348,"byte_end":17448,"line_start":413,"line_end":413,"column_start":1,"column_end":101}},{"value":"/ should then serialize their dependencies during `serialize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17449,"byte_end":17513,"line_start":414,"line_end":414,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17514,"byte_end":17517,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ See [`Archive`] for examples of implementing `Serialize`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17518,"byte_end":17579,"line_start":416,"line_end":416,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5411},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17753,"byte_end":17762,"line_start":420,"line_end":420,"column_start":8,"column_end":17},"name":"serialize","qualname":"::Serialize::serialize","value":"pub fn serialize(&Self, &mut S) -> Result<Self::Resolver, S::Error>","parent":{"krate":0,"index":5409},"children":[],"decl_id":null,"docs":" Writes the dependencies for the object and returns a resolver that can create the archived\n type.\n","sig":null,"attributes":[{"value":"/ Writes the dependencies for the object and returns a resolver that can create the archived","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17637,"byte_end":17731,"line_start":418,"line_end":418,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17736,"byte_end":17745,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":5412},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18245,"byte_end":18256,"line_start":430,"line_end":430,"column_start":11,"column_end":22},"name":"Deserialize","qualname":"::Deserialize","value":"Deserialize<T, D: Fallible + ?Sized>","parent":null,"children":[{"krate":0,"index":5415}],"decl_id":null,"docs":" Converts a type back from its archived form.","sig":null,"attributes":[{"value":"/ Converts a type back from its archived form.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17830,"byte_end":17878,"line_start":423,"line_end":423,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17879,"byte_end":17882,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ Some types may require specific deserializer capabilities, such as `Rc` and `Arc`. In these","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17883,"byte_end":17978,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ cases, the deserializer type `D` should be bound so that it implements traits that provide those","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17979,"byte_end":18079,"line_start":426,"line_end":426,"column_start":1,"column_end":101}},{"value":"/ capabilities (e.g. [`SharedDeserializeRegistry`](de::SharedDeserializeRegistry)).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18080,"byte_end":18165,"line_start":427,"line_end":427,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18166,"byte_end":18169,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ This can be derived with [`Deserialize`](macro@Deserialize).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18170,"byte_end":18234,"line_start":429,"line_end":429,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5415},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18341,"byte_end":18352,"line_start":432,"line_end":432,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::Deserialize::deserialize","value":"pub fn deserialize(&Self, &mut D) -> Result<T, D::Error>","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":" Deserializes using the given deserializer\n","sig":null,"attributes":[{"value":"/ Deserializes using the given deserializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18288,"byte_end":18333,"line_start":431,"line_end":431,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":5416},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25274,"byte_end":25288,"line_start":605,"line_end":605,"column_start":11,"column_end":25},"name":"ArchiveUnsized","qualname":"::ArchiveUnsized","value":"ArchiveUnsized: Pointee","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420}],"decl_id":null,"docs":" A counterpart of [`Archive`] that's suitable for unsized types.","sig":null,"attributes":[{"value":"/ A counterpart of [`Archive`] that's suitable for unsized types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18409,"byte_end":18476,"line_start":435,"line_end":435,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18477,"byte_end":18480,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ Unlike `Archive`, types that implement `ArchiveUnsized` must be serialized separately from their","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18481,"byte_end":18581,"line_start":437,"line_end":437,"column_start":1,"column_end":101}},{"value":"/ owning object. For example, whereas an `i32` might be laid out as part of a larger struct, a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18582,"byte_end":18678,"line_start":438,"line_end":438,"column_start":1,"column_end":97}},{"value":"/ `Box<i32>` would serialize the `i32` somewhere in the archive and the `Box` would point to it as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18679,"byte_end":18779,"line_start":439,"line_end":439,"column_start":1,"column_end":101}},{"value":"/ part of the larger struct. Because of this, the equivalent [`Resolver`](Archive::Resolver) type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18780,"byte_end":18879,"line_start":440,"line_end":440,"column_start":1,"column_end":100}},{"value":"/ for `ArchiveUnsized` is always a `usize` representing the position of the serialized value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18880,"byte_end":18975,"line_start":441,"line_end":441,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18976,"byte_end":18979,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ `ArchiveUnsized` is automatically implemented for all types that implement [`Archive`]. Nothing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":18980,"byte_end":19079,"line_start":443,"line_end":443,"column_start":1,"column_end":100}},{"value":"/ special needs to be done to use them with types like `Box`, `Rc`, and `Arc`. It is also already","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19080,"byte_end":19179,"line_start":444,"line_end":444,"column_start":1,"column_end":100}},{"value":"/ implemented for slices and string slices, and the `rkyv_dyn` crate can be used to archive trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19180,"byte_end":19279,"line_start":445,"line_end":445,"column_start":1,"column_end":100}},{"value":"/ objects. Other unsized types must manually implement `ArchiveUnsized`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19280,"byte_end":19354,"line_start":446,"line_end":446,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19355,"byte_end":19358,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19359,"byte_end":19373,"line_start":448,"line_end":448,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19374,"byte_end":19377,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ This example shows how to manually implement `ArchiveUnsized` for an unsized type. Special care","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19378,"byte_end":19477,"line_start":450,"line_end":450,"column_start":1,"column_end":100}},{"value":"/ must be taken to ensure that the types are laid out correctly.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19478,"byte_end":19544,"line_start":451,"line_end":451,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19545,"byte_end":19548,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19549,"byte_end":19556,"line_start":453,"line_end":453,"column_start":1,"column_end":8}},{"value":"/ use core::{mem::transmute, ops::{Deref, DerefMut}};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19557,"byte_end":19612,"line_start":454,"line_end":454,"column_start":1,"column_end":56}},{"value":"/ use ptr_meta::Pointee;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19613,"byte_end":19639,"line_start":455,"line_end":455,"column_start":1,"column_end":27}},{"value":"/ use rkyv::{","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19640,"byte_end":19655,"line_start":456,"line_end":456,"column_start":1,"column_end":16}},{"value":"/     from_archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19656,"byte_end":19678,"line_start":457,"line_end":457,"column_start":1,"column_end":23}},{"value":"/     to_archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19679,"byte_end":19699,"line_start":458,"line_end":458,"column_start":1,"column_end":21}},{"value":"/     archived_unsized_value,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19700,"byte_end":19731,"line_start":459,"line_end":459,"column_start":1,"column_end":32}},{"value":"/     ser::{serializers::AlignedSerializer, Serializer},","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19732,"byte_end":19790,"line_start":460,"line_end":460,"column_start":1,"column_end":59}},{"value":"/     AlignedVec,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19791,"byte_end":19810,"line_start":461,"line_end":461,"column_start":1,"column_end":20}},{"value":"/     Archive,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19811,"byte_end":19827,"line_start":462,"line_end":462,"column_start":1,"column_end":17}},{"value":"/     Archived,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19828,"byte_end":19845,"line_start":463,"line_end":463,"column_start":1,"column_end":18}},{"value":"/     ArchivedMetadata,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19846,"byte_end":19871,"line_start":464,"line_end":464,"column_start":1,"column_end":26}},{"value":"/     ArchivePointee,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19872,"byte_end":19895,"line_start":465,"line_end":465,"column_start":1,"column_end":24}},{"value":"/     ArchiveUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19896,"byte_end":19919,"line_start":466,"line_end":466,"column_start":1,"column_end":24}},{"value":"/     FixedUsize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19920,"byte_end":19939,"line_start":467,"line_end":467,"column_start":1,"column_end":20}},{"value":"/     RelPtr,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19940,"byte_end":19955,"line_start":468,"line_end":468,"column_start":1,"column_end":16}},{"value":"/     Serialize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19956,"byte_end":19974,"line_start":469,"line_end":469,"column_start":1,"column_end":19}},{"value":"/     SerializeUnsized,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":19975,"byte_end":20000,"line_start":470,"line_end":470,"column_start":1,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20001,"byte_end":20007,"line_start":471,"line_end":471,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20008,"byte_end":20011,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ // We're going to be dealing mostly with blocks that have a trailing slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20012,"byte_end":20090,"line_start":473,"line_end":473,"column_start":1,"column_end":79}},{"value":"/ pub struct Block<H, T: ?Sized> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20091,"byte_end":20127,"line_start":474,"line_end":474,"column_start":1,"column_end":37}},{"value":"/     head: H,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20128,"byte_end":20144,"line_start":475,"line_end":475,"column_start":1,"column_end":17}},{"value":"/     tail: T,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20145,"byte_end":20161,"line_start":476,"line_end":476,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20162,"byte_end":20167,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20168,"byte_end":20171,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<H, T> Pointee for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20172,"byte_end":20214,"line_start":479,"line_end":479,"column_start":1,"column_end":43}},{"value":"/     type Metadata = usize;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20215,"byte_end":20245,"line_start":480,"line_end":480,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20246,"byte_end":20251,"line_start":481,"line_end":481,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20252,"byte_end":20255,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ // For blocks with trailing slices, we need to store the length of the slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20256,"byte_end":20336,"line_start":483,"line_end":483,"column_start":1,"column_end":81}},{"value":"/ // in the metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20337,"byte_end":20360,"line_start":484,"line_end":484,"column_start":1,"column_end":24}},{"value":"/ pub struct BlockSliceMetadata {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20361,"byte_end":20396,"line_start":485,"line_end":485,"column_start":1,"column_end":36}},{"value":"/     len: Archived<usize>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20397,"byte_end":20426,"line_start":486,"line_end":486,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20427,"byte_end":20432,"line_start":487,"line_end":487,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20433,"byte_end":20436,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ // ArchivePointee is automatically derived for sized types because pointers","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20437,"byte_end":20516,"line_start":489,"line_end":489,"column_start":1,"column_end":80}},{"value":"/ // to sized types don't need to store any extra information. Because we're","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20517,"byte_end":20595,"line_start":490,"line_end":490,"column_start":1,"column_end":79}},{"value":"/ // making an unsized block, we need to define what metadata gets stored with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20596,"byte_end":20676,"line_start":491,"line_end":491,"column_start":1,"column_end":81}},{"value":"/ // our data pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20677,"byte_end":20701,"line_start":492,"line_end":492,"column_start":1,"column_end":25}},{"value":"/ impl<H, T> ArchivePointee for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20702,"byte_end":20751,"line_start":493,"line_end":493,"column_start":1,"column_end":50}},{"value":"/     // This is the extra data that needs to get stored for blocks with","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20752,"byte_end":20826,"line_start":494,"line_end":494,"column_start":1,"column_end":75}},{"value":"/     // trailing slices","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20827,"byte_end":20853,"line_start":495,"line_end":495,"column_start":1,"column_end":27}},{"value":"/     type ArchivedMetadata = BlockSliceMetadata;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20854,"byte_end":20905,"line_start":496,"line_end":496,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20906,"byte_end":20909,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/     // We need to be able to turn our archived metadata into regular","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20910,"byte_end":20982,"line_start":498,"line_end":498,"column_start":1,"column_end":73}},{"value":"/     // metadata for our type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":20983,"byte_end":21015,"line_start":499,"line_end":499,"column_start":1,"column_end":33}},{"value":"/     fn pointer_metadata(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21016,"byte_end":21044,"line_start":500,"line_end":500,"column_start":1,"column_end":29}},{"value":"/         archived: &Self::ArchivedMetadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21045,"byte_end":21090,"line_start":501,"line_end":501,"column_start":1,"column_end":46}},{"value":"/     ) -> <Self as Pointee>::Metadata {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21091,"byte_end":21133,"line_start":502,"line_end":502,"column_start":1,"column_end":43}},{"value":"/         from_archived!(archived.len) as usize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21134,"byte_end":21183,"line_start":503,"line_end":503,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21184,"byte_end":21193,"line_start":504,"line_end":504,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21194,"byte_end":21199,"line_start":505,"line_end":505,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21200,"byte_end":21203,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ // We're implementing ArchiveUnsized for just Block<H, [T]>. We can still","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21204,"byte_end":21281,"line_start":507,"line_end":507,"column_start":1,"column_end":78}},{"value":"/ // implement Archive for blocks with sized tails and they won't conflict.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21282,"byte_end":21359,"line_start":508,"line_end":508,"column_start":1,"column_end":78}},{"value":"/ impl<H: Archive, T: Archive> ArchiveUnsized for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21360,"byte_end":21427,"line_start":509,"line_end":509,"column_start":1,"column_end":68}},{"value":"/     // We'll reuse our block type as our archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21428,"byte_end":21487,"line_start":510,"line_end":510,"column_start":1,"column_end":60}},{"value":"/     type Archived = Block<Archived<H>, [Archived<T>]>;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21488,"byte_end":21546,"line_start":511,"line_end":511,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21547,"byte_end":21550,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/     // This is where we'd put any resolve data for our metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21551,"byte_end":21619,"line_start":513,"line_end":513,"column_start":1,"column_end":69}},{"value":"/     // Most of the time, this can just be () because most metadata is Copy,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21620,"byte_end":21699,"line_start":514,"line_end":514,"column_start":1,"column_end":80}},{"value":"/     // but the option is there if you need it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21700,"byte_end":21750,"line_start":515,"line_end":515,"column_start":1,"column_end":51}},{"value":"/     type MetadataResolver = ();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21751,"byte_end":21786,"line_start":516,"line_end":516,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21787,"byte_end":21790,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/     // Here's where we make the metadata for our pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21791,"byte_end":21852,"line_start":518,"line_end":518,"column_start":1,"column_end":62}},{"value":"/     // This also gets the position and resolver for the metadata, but we","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21853,"byte_end":21929,"line_start":519,"line_end":519,"column_start":1,"column_end":77}},{"value":"/     // don't need it in this case.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21930,"byte_end":21968,"line_start":520,"line_end":520,"column_start":1,"column_end":39}},{"value":"/     unsafe fn resolve_metadata(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":21969,"byte_end":22004,"line_start":521,"line_end":521,"column_start":1,"column_end":36}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22005,"byte_end":22023,"line_start":522,"line_end":522,"column_start":1,"column_end":19}},{"value":"/         _: usize,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22024,"byte_end":22045,"line_start":523,"line_end":523,"column_start":1,"column_end":22}},{"value":"/         _: Self::MetadataResolver,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22046,"byte_end":22084,"line_start":524,"line_end":524,"column_start":1,"column_end":39}},{"value":"/         out: *mut ArchivedMetadata<Self>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22085,"byte_end":22130,"line_start":525,"line_end":525,"column_start":1,"column_end":46}},{"value":"/     ) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22131,"byte_end":22142,"line_start":526,"line_end":526,"column_start":1,"column_end":12}},{"value":"/         unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22143,"byte_end":22163,"line_start":527,"line_end":527,"column_start":1,"column_end":21}},{"value":"/             out.write(BlockSliceMetadata {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22164,"byte_end":22210,"line_start":528,"line_end":528,"column_start":1,"column_end":47}},{"value":"/                 len: to_archived!(self.tail.len() as FixedUsize),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22211,"byte_end":22280,"line_start":529,"line_end":529,"column_start":1,"column_end":70}},{"value":"/             });","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22281,"byte_end":22300,"line_start":530,"line_end":530,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22301,"byte_end":22314,"line_start":531,"line_end":531,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22315,"byte_end":22324,"line_start":532,"line_end":532,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22325,"byte_end":22330,"line_start":533,"line_end":533,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22331,"byte_end":22334,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ // The bounds we use on our serializer type indicate that we need basic","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22335,"byte_end":22410,"line_start":535,"line_end":535,"column_start":1,"column_end":76}},{"value":"/ // serializer capabilities, and then whatever capabilities our head and tail","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22411,"byte_end":22491,"line_start":536,"line_end":536,"column_start":1,"column_end":81}},{"value":"/ // types need to serialize themselves.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22492,"byte_end":22534,"line_start":537,"line_end":537,"column_start":1,"column_end":43}},{"value":"/ impl<","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22535,"byte_end":22544,"line_start":538,"line_end":538,"column_start":1,"column_end":10}},{"value":"/     H: Serialize<S>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22545,"byte_end":22569,"line_start":539,"line_end":539,"column_start":1,"column_end":25}},{"value":"/     T: Serialize<S>,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22570,"byte_end":22594,"line_start":540,"line_end":540,"column_start":1,"column_end":25}},{"value":"/     S: Serializer + ?Sized","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22595,"byte_end":22625,"line_start":541,"line_end":541,"column_start":1,"column_end":31}},{"value":"/ > SerializeUnsized<S> for Block<H, [T]> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22626,"byte_end":22671,"line_start":542,"line_end":542,"column_start":1,"column_end":46}},{"value":"/     // This is where we construct our unsized type in the serializer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22672,"byte_end":22744,"line_start":543,"line_end":543,"column_start":1,"column_end":73}},{"value":"/     fn serialize_unsized(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22745,"byte_end":22774,"line_start":544,"line_end":544,"column_start":1,"column_end":30}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22775,"byte_end":22793,"line_start":545,"line_end":545,"column_start":1,"column_end":19}},{"value":"/         serializer: &mut S","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22794,"byte_end":22824,"line_start":546,"line_end":546,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<usize, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22825,"byte_end":22863,"line_start":547,"line_end":547,"column_start":1,"column_end":39}},{"value":"/         // First, we archive the head and all the tails. This will make sure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22864,"byte_end":22944,"line_start":548,"line_end":548,"column_start":1,"column_end":81}},{"value":"/         // that when we finally build our block, we don't accidentally mess","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":22945,"byte_end":23024,"line_start":549,"line_end":549,"column_start":1,"column_end":80}},{"value":"/         // up the structure with serialized dependencies.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23025,"byte_end":23086,"line_start":550,"line_end":550,"column_start":1,"column_end":62}},{"value":"/         let head_resolver = self.head.serialize(serializer)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23087,"byte_end":23152,"line_start":551,"line_end":551,"column_start":1,"column_end":66}},{"value":"/         let mut resolvers = Vec::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23153,"byte_end":23196,"line_start":552,"line_end":552,"column_start":1,"column_end":44}},{"value":"/         for tail in self.tail.iter() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23197,"byte_end":23239,"line_start":553,"line_end":553,"column_start":1,"column_end":43}},{"value":"/             resolvers.push(tail.serialize(serializer)?);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23240,"byte_end":23300,"line_start":554,"line_end":554,"column_start":1,"column_end":61}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23301,"byte_end":23314,"line_start":555,"line_end":555,"column_start":1,"column_end":14}},{"value":"/         // Now we align our serializer for our archived type and write it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23315,"byte_end":23393,"line_start":556,"line_end":556,"column_start":1,"column_end":79}},{"value":"/         // We can't align for unsized types so we treat the trailing slice","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23394,"byte_end":23472,"line_start":557,"line_end":557,"column_start":1,"column_end":79}},{"value":"/         // like an array of 0 length for now.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23473,"byte_end":23522,"line_start":558,"line_end":558,"column_start":1,"column_end":50}},{"value":"/         serializer.align_for::<Block<Archived<H>, [Archived<T>; 0]>>()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23523,"byte_end":23599,"line_start":559,"line_end":559,"column_start":1,"column_end":77}},{"value":"/         let result = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23600,"byte_end":23633,"line_start":560,"line_end":560,"column_start":1,"column_end":34}},{"value":"/             serializer.resolve_aligned(&self.head, head_resolver)?","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23634,"byte_end":23704,"line_start":561,"line_end":561,"column_start":1,"column_end":71}},{"value":"/         };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23705,"byte_end":23719,"line_start":562,"line_end":562,"column_start":1,"column_end":15}},{"value":"/         serializer.align_for::<Archived<T>>()?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23720,"byte_end":23771,"line_start":563,"line_end":563,"column_start":1,"column_end":52}},{"value":"/         for (item, resolver) in self.tail.iter().zip(resolvers.drain(..)) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23772,"byte_end":23851,"line_start":564,"line_end":564,"column_start":1,"column_end":80}},{"value":"/             unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23852,"byte_end":23876,"line_start":565,"line_end":565,"column_start":1,"column_end":25}},{"value":"/                 serializer.resolve_aligned(item, resolver)?;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23877,"byte_end":23941,"line_start":566,"line_end":566,"column_start":1,"column_end":65}},{"value":"/             }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23942,"byte_end":23959,"line_start":567,"line_end":567,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23960,"byte_end":23973,"line_start":568,"line_end":568,"column_start":1,"column_end":14}},{"value":"/         Ok(result)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23974,"byte_end":23996,"line_start":569,"line_end":569,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":23997,"byte_end":24006,"line_start":570,"line_end":570,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24007,"byte_end":24010,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/     // This is where we serialize the metadata for our type. In this case,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24011,"byte_end":24089,"line_start":572,"line_end":572,"column_start":1,"column_end":79}},{"value":"/     // we do all the work in resolve and don't need to do anything here.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24090,"byte_end":24166,"line_start":573,"line_end":573,"column_start":1,"column_end":77}},{"value":"/     fn serialize_metadata(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24167,"byte_end":24197,"line_start":574,"line_end":574,"column_start":1,"column_end":31}},{"value":"/         &self,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24198,"byte_end":24216,"line_start":575,"line_end":575,"column_start":1,"column_end":19}},{"value":"/         serializer: &mut S","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24217,"byte_end":24247,"line_start":576,"line_end":576,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Self::MetadataResolver, S::Error> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24248,"byte_end":24303,"line_start":577,"line_end":577,"column_start":1,"column_end":56}},{"value":"/         Ok(())","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24304,"byte_end":24322,"line_start":578,"line_end":578,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24323,"byte_end":24332,"line_start":579,"line_end":579,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24333,"byte_end":24338,"line_start":580,"line_end":580,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24339,"byte_end":24342,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ let value = Block {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24343,"byte_end":24366,"line_start":582,"line_end":582,"column_start":1,"column_end":24}},{"value":"/     head: \"Numbers 1-4\".to_string(),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24367,"byte_end":24407,"line_start":583,"line_end":583,"column_start":1,"column_end":41}},{"value":"/     tail: [1, 2, 3, 4],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24408,"byte_end":24435,"line_start":584,"line_end":584,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24436,"byte_end":24442,"line_start":585,"line_end":585,"column_start":1,"column_end":7}},{"value":"/ // We have a Block<String, [i32; 4]> but we want to it to be a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24443,"byte_end":24509,"line_start":586,"line_end":586,"column_start":1,"column_end":67}},{"value":"/ // Block<String, [i32]>, so we need to do more pointer transmutation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24510,"byte_end":24582,"line_start":587,"line_end":587,"column_start":1,"column_end":73}},{"value":"/ let ptr = (&value as *const Block<String, [i32; 4]>).cast::<()>();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24583,"byte_end":24653,"line_start":588,"line_end":588,"column_start":1,"column_end":71}},{"value":"/ let unsized_value = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24654,"byte_end":24686,"line_start":589,"line_end":589,"column_start":1,"column_end":33}},{"value":"/     &*transmute::<(*const (), usize), *const Block<String, [i32]>>((ptr, 4))","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24687,"byte_end":24767,"line_start":590,"line_end":590,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24768,"byte_end":24774,"line_start":591,"line_end":591,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24775,"byte_end":24778,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ let mut serializer = AlignedSerializer::new(AlignedVec::new());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24779,"byte_end":24846,"line_start":593,"line_end":593,"column_start":1,"column_end":68}},{"value":"/ let pos = serializer.serialize_unsized_value(unsized_value)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24847,"byte_end":24910,"line_start":594,"line_end":594,"column_start":1,"column_end":64}},{"value":"/     .expect(\"failed to archive block\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24911,"byte_end":24954,"line_start":595,"line_end":595,"column_start":1,"column_end":44}},{"value":"/ let buf = serializer.into_inner();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24955,"byte_end":24993,"line_start":596,"line_end":596,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24994,"byte_end":24997,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ let archived_ref = unsafe {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":24998,"byte_end":25029,"line_start":598,"line_end":598,"column_start":1,"column_end":32}},{"value":"/     archived_unsized_value::<Block<String, [i32]>>(buf.as_slice(), pos)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25030,"byte_end":25105,"line_start":599,"line_end":599,"column_start":1,"column_end":76}},{"value":"/ };","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25106,"byte_end":25112,"line_start":600,"line_end":600,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(archived_ref.head, \"Numbers 1-4\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25113,"byte_end":25162,"line_start":601,"line_end":601,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(archived_ref.tail.len(), 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25163,"byte_end":25206,"line_start":602,"line_end":602,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(archived_ref.tail, [1, 2, 3, 4]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25207,"byte_end":25255,"line_start":603,"line_end":603,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25256,"byte_end":25263,"line_start":604,"line_end":604,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5417},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25534,"byte_end":25542,"line_start":610,"line_end":610,"column_start":10,"column_end":18},"name":"Archived","qualname":"::ArchiveUnsized::Archived","value":"type Archived: ArchivePointee + ?Sized;","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" The archived counterpart of this type. Unlike `Archive`, it may be unsized.","sig":null,"attributes":[{"value":"/ The archived counterpart of this type. Unlike `Archive`, it may be unsized.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25304,"byte_end":25383,"line_start":606,"line_end":606,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25388,"byte_end":25391,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This type must implement [`ArchivePointee`], a trait that helps make valid pointers using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25396,"byte_end":25489,"line_start":608,"line_end":608,"column_start":5,"column_end":98}},{"value":"/ archived pointer metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25494,"byte_end":25524,"line_start":609,"line_end":609,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":5418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25833,"byte_end":25849,"line_start":616,"line_end":616,"column_start":10,"column_end":26},"name":"MetadataResolver","qualname":"::ArchiveUnsized::MetadataResolver","value":"type MetadataResolver;","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" The resolver for the metadata of this type.","sig":null,"attributes":[{"value":"/ The resolver for the metadata of this type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25574,"byte_end":25621,"line_start":612,"line_end":612,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25626,"byte_end":25629,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Because the pointer metadata must be archived with the relative pointer and not with the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25634,"byte_end":25726,"line_start":614,"line_end":614,"column_start":5,"column_end":97}},{"value":"/ structure itself, its resolver must be passed back to the structure holding the pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25731,"byte_end":25823,"line_start":615,"line_end":615,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":5419},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26503,"byte_end":26519,"line_start":630,"line_end":630,"column_start":15,"column_end":31},"name":"resolve_metadata","qualname":"::ArchiveUnsized::resolve_metadata","value":"pub unsafe fn resolve_metadata(&Self, usize, Self::MetadataResolver,\n                               *mut ArchivedMetadata<Self>)","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" Creates the archived version of the metadata for this value at the given position and writes\n it to the given output.","sig":null,"attributes":[{"value":"/ Creates the archived version of the metadata for this value at the given position and writes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25856,"byte_end":25952,"line_start":618,"line_end":618,"column_start":5,"column_end":101}},{"value":"/ it to the given output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25957,"byte_end":25984,"line_start":619,"line_end":619,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25989,"byte_end":25992,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ The output should be initialized field-by-field rather than by writing a whole struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25997,"byte_end":26087,"line_start":621,"line_end":621,"column_start":5,"column_end":95}},{"value":"/ Performing a typed copy will mark all of the padding bytes as uninitialized, but they must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26092,"byte_end":26186,"line_start":622,"line_end":622,"column_start":5,"column_end":99}},{"value":"/ remain set to the value they currently have. This prevents leaking uninitialized memory to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26191,"byte_end":26285,"line_start":623,"line_end":623,"column_start":5,"column_end":99}},{"value":"/ the final archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26290,"byte_end":26312,"line_start":624,"line_end":624,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26325,"byte_end":26337,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26342,"byte_end":26345,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ - `pos` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26350,"byte_end":26410,"line_start":628,"line_end":628,"column_start":5,"column_end":65}},{"value":"/ - `resolver` must be the result of serializing this object's metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26415,"byte_end":26488,"line_start":629,"line_end":629,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5420},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27374,"byte_end":27389,"line_start":651,"line_end":651,"column_start":15,"column_end":30},"name":"resolve_unsized","qualname":"::ArchiveUnsized::resolve_unsized","value":"pub unsafe fn resolve_unsized(&Self, usize, usize, Self::MetadataResolver,\n                              *mut RelPtr<Self::Archived>)","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" Resolves a relative pointer to this value with the given `from` and `to` and writes it to\n the given output.","sig":null,"attributes":[{"value":"/ Resolves a relative pointer to this value with the given `from` and `to` and writes it to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26652,"byte_end":26745,"line_start":637,"line_end":637,"column_start":5,"column_end":98}},{"value":"/ the given output.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26750,"byte_end":26771,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26776,"byte_end":26779,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ The output should be initialized field-by-field rather than by writing a whole struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26784,"byte_end":26874,"line_start":640,"line_end":640,"column_start":5,"column_end":95}},{"value":"/ Performing a typed copy will mark all of the padding bytes as uninitialized, but they must","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26879,"byte_end":26973,"line_start":641,"line_end":641,"column_start":5,"column_end":99}},{"value":"/ remain set to the value they currently have. This prevents leaking uninitialized memory to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":26978,"byte_end":27072,"line_start":642,"line_end":642,"column_start":5,"column_end":99}},{"value":"/ the final archive.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27077,"byte_end":27099,"line_start":643,"line_end":643,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27104,"byte_end":27107,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27112,"byte_end":27124,"line_start":645,"line_end":645,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27129,"byte_end":27132,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ - `from` must be the position of `out` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27137,"byte_end":27198,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ - `to` must be the position of some `Self::Archived` within the archive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27203,"byte_end":27278,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ - `resolver` must be the result of serializing this object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27283,"byte_end":27345,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27350,"byte_end":27359,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":5421},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27828,"byte_end":27842,"line_start":666,"line_end":666,"column_start":11,"column_end":25},"name":"ArchivePointee","qualname":"::ArchivePointee","value":"ArchivePointee: Pointee","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423}],"decl_id":null,"docs":" An archived type with associated metadata for its relative pointer.","sig":null,"attributes":[{"value":"/ An archived type with associated metadata for its relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27611,"byte_end":27682,"line_start":662,"line_end":662,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27683,"byte_end":27686,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ This is mostly used in the context of smart pointers and unsized types, and is implemented for","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27687,"byte_end":27785,"line_start":664,"line_end":664,"column_start":1,"column_end":99}},{"value":"/ all sized types by default.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27786,"byte_end":27817,"line_start":665,"line_end":665,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":5422},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27931,"byte_end":27947,"line_start":668,"line_end":668,"column_start":10,"column_end":26},"name":"ArchivedMetadata","qualname":"::ArchivePointee::ArchivedMetadata","value":"type ArchivedMetadata;","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" The archived version of the pointer metadata for this type.\n","sig":null,"attributes":[{"value":"/ The archived version of the pointer metadata for this type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27858,"byte_end":27921,"line_start":667,"line_end":667,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5423},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28033,"byte_end":28049,"line_start":671,"line_end":671,"column_start":8,"column_end":24},"name":"pointer_metadata","qualname":"::ArchivePointee::pointer_metadata","value":"pub fn pointer_metadata(&Self::ArchivedMetadata)\n-> <Self as Pointee>::Metadata","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Converts some archived metadata to the pointer metadata for itself.\n","sig":null,"attributes":[{"value":"/ Converts some archived metadata to the pointer metadata for itself.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27954,"byte_end":28025,"line_start":670,"line_end":670,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":5424},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28280,"byte_end":28296,"line_start":677,"line_end":677,"column_start":11,"column_end":27},"name":"SerializeUnsized","qualname":"::SerializeUnsized","value":"SerializeUnsized<S: Fallible + ?Sized>: ArchiveUnsized","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":5427}],"decl_id":null,"docs":" A counterpart of [`Serialize`] that's suitable for unsized types.","sig":null,"attributes":[{"value":"/ A counterpart of [`Serialize`] that's suitable for unsized types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28120,"byte_end":28189,"line_start":674,"line_end":674,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28190,"byte_end":28193,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ See [`ArchiveUnsized`] for examples of implementing `SerializeUnsized`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28194,"byte_end":28269,"line_start":676,"line_end":676,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28417,"byte_end":28434,"line_start":679,"line_end":679,"column_start":8,"column_end":25},"name":"serialize_unsized","qualname":"::SerializeUnsized::serialize_unsized","value":"pub fn serialize_unsized(&Self, &mut S) -> Result<usize, S::Error>","parent":{"krate":0,"index":5424},"children":[],"decl_id":null,"docs":" Writes the object and returns the position of the archived type.\n","sig":null,"attributes":[{"value":"/ Writes the object and returns the position of the archived type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28341,"byte_end":28409,"line_start":678,"line_end":678,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5427},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28550,"byte_end":28568,"line_start":682,"line_end":682,"column_start":8,"column_end":26},"name":"serialize_metadata","qualname":"::SerializeUnsized::serialize_metadata","value":"pub fn serialize_metadata(&Self, &mut S)\n-> Result<Self::MetadataResolver, S::Error>","parent":{"krate":0,"index":5424},"children":[],"decl_id":null,"docs":" Serializes the metadata for the given type.\n","sig":null,"attributes":[{"value":"/ Serializes the metadata for the given type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28495,"byte_end":28542,"line_start":681,"line_end":681,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":5428},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28726,"byte_end":28744,"line_start":686,"line_end":686,"column_start":11,"column_end":29},"name":"DeserializeUnsized","qualname":"::DeserializeUnsized","value":"DeserializeUnsized<T: Pointee + ?Sized, D: Fallible + ?Sized>: ArchivePointee","parent":null,"children":[{"krate":0,"index":5431},{"krate":0,"index":5433}],"decl_id":null,"docs":" A counterpart of [`Deserialize`] that's suitable for unsized types.\n","sig":null,"attributes":[{"value":"/ A counterpart of [`Deserialize`] that's suitable for unsized types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28644,"byte_end":28715,"line_start":685,"line_end":685,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28992,"byte_end":29011,"line_start":692,"line_end":692,"column_start":15,"column_end":34},"name":"deserialize_unsized","qualname":"::DeserializeUnsized::deserialize_unsized","value":"pub unsafe fn deserialize_unsized<impl FnMut(Layout) -> *mut u8: FnMut(Layout)\n                                  ->\n                                  *mut u8>(&Self, &mut D,\n                                           impl FnMut(Layout) -> *mut u8)\n-> Result<*mut (), D::Error>","parent":{"krate":0,"index":5428},"children":[],"decl_id":null,"docs":" Deserializes a reference to the given value.","sig":null,"attributes":[{"value":"/ Deserializes a reference to the given value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28810,"byte_end":28858,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28863,"byte_end":28866,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28871,"byte_end":28883,"line_start":689,"line_end":689,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28888,"byte_end":28891,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ `out` must point to memory with the layout returned by `deserialized_layout`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28896,"byte_end":28977,"line_start":691,"line_end":691,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":5433},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29202,"byte_end":29222,"line_start":699,"line_end":699,"column_start":8,"column_end":28},"name":"deserialize_metadata","qualname":"::DeserializeUnsized::deserialize_metadata","value":"pub fn deserialize_metadata(&Self, &mut D) -> Result<T::Metadata, D::Error>","parent":{"krate":0,"index":5428},"children":[],"decl_id":null,"docs":" Deserializes the metadata for the given type.\n","sig":null,"attributes":[{"value":"/ Deserializes the metadata for the given type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29145,"byte_end":29194,"line_start":698,"line_end":698,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":5434},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29490,"byte_end":29500,"line_start":706,"line_end":706,"column_start":10,"column_end":20},"name":"FixedUsize","qualname":"::FixedUsize","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The native type that `usize` is converted to for archiving.","sig":null,"attributes":[{"value":"/ The native type that `usize` is converted to for archiving.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29289,"byte_end":29352,"line_start":702,"line_end":702,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29353,"byte_end":29356,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ This will be `u16`, `u32`, or `u64` when the `size_16`, `size_32`, or `size_64` features are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29357,"byte_end":29453,"line_start":704,"line_end":704,"column_start":1,"column_end":97}},{"value":"/ enabled, respectively.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29454,"byte_end":29480,"line_start":705,"line_end":705,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":5435},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29736,"byte_end":29746,"line_start":711,"line_end":711,"column_start":10,"column_end":20},"name":"FixedIsize","qualname":"::FixedIsize","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" The native type that `isize` is converted to for archiving.","sig":null,"attributes":[{"value":"/ The native type that `isize` is converted to for archiving.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29535,"byte_end":29598,"line_start":707,"line_end":707,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29599,"byte_end":29602,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/ This will be `i16`, `i32`, or `i64` when the `size_16`, `size_32`, or `size_64` features are","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29603,"byte_end":29699,"line_start":709,"line_end":709,"column_start":1,"column_end":97}},{"value":"/ enabled, respectively.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29700,"byte_end":29726,"line_start":710,"line_end":710,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":5436},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29898,"byte_end":29907,"line_start":716,"line_end":716,"column_start":10,"column_end":19},"name":"RawRelPtr","qualname":"::RawRelPtr","value":"rel_ptr::RawRelPtr<Archived<isize>>","parent":null,"children":[],"decl_id":null,"docs":" The default raw relative pointer.","sig":null,"attributes":[{"value":"/ The default raw relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29782,"byte_end":29819,"line_start":713,"line_end":713,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29820,"byte_end":29823,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ This will use an archived [`FixedIsize`] to hold the offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29824,"byte_end":29888,"line_start":715,"line_end":715,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":5437},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30059,"byte_end":30065,"line_start":720,"line_end":720,"column_start":10,"column_end":16},"name":"RelPtr","qualname":"::RelPtr","value":"rel_ptr::RelPtr<T, Archived<isize>>","parent":null,"children":[],"decl_id":null,"docs":" The default relative pointer.","sig":null,"attributes":[{"value":"/ The default relative pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29947,"byte_end":29980,"line_start":717,"line_end":717,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29981,"byte_end":29984,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ This will use an archived [`FixedIsize`] to hold the offset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":29985,"byte_end":30049,"line_start":719,"line_end":719,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":5439},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30252,"byte_end":30260,"line_start":725,"line_end":725,"column_start":10,"column_end":18},"name":"Archived","qualname":"::Archived","value":"<T as Archive>::Archived","parent":null,"children":[],"decl_id":null,"docs":" Alias for the archived version of some [`Archive`] type.","sig":null,"attributes":[{"value":"/ Alias for the archived version of some [`Archive`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30109,"byte_end":30169,"line_start":722,"line_end":722,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30170,"byte_end":30173,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30174,"byte_end":30242,"line_start":724,"line_end":724,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":5441},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30428,"byte_end":30436,"line_start":729,"line_end":729,"column_start":10,"column_end":18},"name":"Resolver","qualname":"::Resolver","value":"<T as Archive>::Resolver","parent":null,"children":[],"decl_id":null,"docs":" Alias for the resolver for some [`Archive`] type.","sig":null,"attributes":[{"value":"/ Alias for the resolver for some [`Archive`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30292,"byte_end":30345,"line_start":726,"line_end":726,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30346,"byte_end":30349,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30350,"byte_end":30418,"line_start":728,"line_end":728,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":5443},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30620,"byte_end":30636,"line_start":733,"line_end":733,"column_start":10,"column_end":26},"name":"ArchivedMetadata","qualname":"::ArchivedMetadata","value":"<<T as ArchiveUnsized>::Archived as ArchivePointee>::ArchivedMetadata","parent":null,"children":[],"decl_id":null,"docs":" Alias for the archived metadata for some [`ArchiveUnsized`] type.","sig":null,"attributes":[{"value":"/ Alias for the archived metadata for some [`ArchiveUnsized`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30468,"byte_end":30537,"line_start":730,"line_end":730,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30538,"byte_end":30541,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30542,"byte_end":30610,"line_start":732,"line_end":732,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":5445},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30869,"byte_end":30885,"line_start":738,"line_end":738,"column_start":10,"column_end":26},"name":"MetadataResolver","qualname":"::MetadataResolver","value":"<T as ArchiveUnsized>::MetadataResolver","parent":null,"children":[],"decl_id":null,"docs":" Alias for the metadata resolver for some [`ArchiveUnsized`] type.","sig":null,"attributes":[{"value":"/ Alias for the metadata resolver for some [`ArchiveUnsized`] type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30717,"byte_end":30786,"line_start":735,"line_end":735,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30787,"byte_end":30790,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ This can be useful for reducing the lengths of type definitions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":30791,"byte_end":30859,"line_start":737,"line_end":737,"column_start":1,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36440,"byte_end":36451,"line_start":15,"line_end":15,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38030,"byte_end":38041,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39142,"byte_end":39153,"line_start":100,"line_end":100,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39434,"byte_end":39445,"line_start":112,"line_end":112,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39569,"byte_end":39580,"line_start":119,"line_end":119,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39705,"byte_end":39716,"line_start":126,"line_end":126,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39955,"byte_end":39966,"line_start":136,"line_end":136,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40140,"byte_end":40151,"line_start":145,"line_end":145,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40314,"byte_end":40325,"line_start":152,"line_end":152,"column_start":46,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40394,"byte_end":40405,"line_start":154,"line_end":154,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40566,"byte_end":40577,"line_start":161,"line_end":161,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40809,"byte_end":40820,"line_start":169,"line_end":169,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40996,"byte_end":41007,"line_start":177,"line_end":177,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":41197,"byte_end":41208,"line_start":184,"line_end":184,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":44114,"byte_end":44127,"line_start":31,"line_end":31,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":44907,"byte_end":44917,"line_start":54,"line_end":54,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":45643,"byte_end":45647,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":45712,"byte_end":45716,"line_start":96,"line_end":96,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":46127,"byte_end":46141,"line_start":114,"line_end":114,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":46697,"byte_end":46715,"line_start":135,"line_end":135,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":47228,"byte_end":47238,"line_start":153,"line_end":153,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48804,"byte_end":48820,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54258,"byte_end":54274,"line_start":375,"line_end":375,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":62695,"byte_end":62711,"line_start":557,"line_end":557,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":62875,"byte_end":62891,"line_start":563,"line_end":563,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63278,"byte_end":63294,"line_start":584,"line_end":584,"column_start":27,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63337,"byte_end":63353,"line_start":586,"line_end":586,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63535,"byte_end":63551,"line_start":595,"line_end":595,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63714,"byte_end":63730,"line_start":602,"line_end":602,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":64002,"byte_end":64018,"line_start":613,"line_end":613,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":64329,"byte_end":64336,"line_start":629,"line_end":629,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":64586,"byte_end":64593,"line_start":640,"line_end":640,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65691,"byte_end":65698,"line_start":671,"line_end":671,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65745,"byte_end":65752,"line_start":672,"line_end":672,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65924,"byte_end":65928,"line_start":679,"line_end":679,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66211,"byte_end":66215,"line_start":693,"line_end":693,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66262,"byte_end":66266,"line_start":694,"line_end":694,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66427,"byte_end":66431,"line_start":701,"line_end":701,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66721,"byte_end":66725,"line_start":715,"line_end":715,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66772,"byte_end":66776,"line_start":716,"line_end":716,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66941,"byte_end":66947,"line_start":723,"line_end":723,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":67237,"byte_end":67243,"line_start":737,"line_end":737,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":67290,"byte_end":67296,"line_start":738,"line_end":738,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68538,"byte_end":68554,"line_start":13,"line_end":13,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70500,"byte_end":70516,"line_start":79,"line_end":79,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":71302,"byte_end":71318,"line_start":102,"line_end":102,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72416,"byte_end":72433,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75305,"byte_end":75322,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":79922,"byte_end":79939,"line_start":242,"line_end":242,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81235,"byte_end":81250,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86309,"byte_end":86324,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88154,"byte_end":88169,"line_start":272,"line_end":272,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88349,"byte_end":88364,"line_start":279,"line_end":279,"column_start":34,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88449,"byte_end":88464,"line_start":281,"line_end":281,"column_start":75,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88633,"byte_end":88648,"line_start":290,"line_end":290,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89056,"byte_end":89063,"line_start":308,"line_end":308,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89303,"byte_end":89310,"line_start":319,"line_end":319,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89868,"byte_end":89875,"line_start":342,"line_end":342,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89922,"byte_end":89929,"line_start":343,"line_end":343,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90097,"byte_end":90107,"line_start":351,"line_end":351,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90345,"byte_end":90355,"line_start":362,"line_end":362,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90907,"byte_end":90917,"line_start":385,"line_end":385,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90960,"byte_end":90970,"line_start":386,"line_end":386,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91151,"byte_end":91155,"line_start":394,"line_end":394,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91527,"byte_end":91531,"line_start":411,"line_end":411,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91574,"byte_end":91578,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91773,"byte_end":91780,"line_start":420,"line_end":420,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92189,"byte_end":92196,"line_start":437,"line_end":437,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92239,"byte_end":92246,"line_start":438,"line_end":438,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92416,"byte_end":92420,"line_start":446,"line_end":446,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92768,"byte_end":92772,"line_start":463,"line_end":463,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92815,"byte_end":92819,"line_start":464,"line_end":464,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92993,"byte_end":92999,"line_start":472,"line_end":472,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93349,"byte_end":93355,"line_start":489,"line_end":489,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93398,"byte_end":93404,"line_start":490,"line_end":490,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93592,"byte_end":93601,"line_start":498,"line_end":498,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93988,"byte_end":93997,"line_start":515,"line_end":515,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":94040,"byte_end":94049,"line_start":516,"line_end":516,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95420,"byte_end":95435,"line_start":20,"line_end":20,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97789,"byte_end":97804,"line_start":107,"line_end":107,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":98054,"byte_end":98069,"line_start":116,"line_end":116,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":98191,"byte_end":98206,"line_start":123,"line_end":123,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":98854,"byte_end":98870,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103964,"byte_end":103980,"line_start":216,"line_end":216,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106216,"byte_end":106232,"line_start":276,"line_end":276,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106412,"byte_end":106428,"line_start":282,"line_end":282,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106667,"byte_end":106674,"line_start":294,"line_end":294,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106914,"byte_end":106921,"line_start":305,"line_end":305,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107533,"byte_end":107540,"line_start":329,"line_end":329,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107587,"byte_end":107594,"line_start":330,"line_end":330,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107777,"byte_end":107781,"line_start":338,"line_end":338,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108060,"byte_end":108064,"line_start":352,"line_end":352,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108107,"byte_end":108111,"line_start":353,"line_end":353,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108283,"byte_end":108287,"line_start":361,"line_end":361,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108573,"byte_end":108577,"line_start":375,"line_end":375,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108620,"byte_end":108624,"line_start":376,"line_end":376,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108800,"byte_end":108806,"line_start":384,"line_end":384,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":109092,"byte_end":109098,"line_start":398,"line_end":398,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":109141,"byte_end":109147,"line_start":399,"line_end":399,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110121,"byte_end":110137,"line_start":18,"line_end":18,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112860,"byte_end":112876,"line_start":127,"line_end":127,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":113862,"byte_end":113878,"line_start":157,"line_end":157,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":114041,"byte_end":114057,"line_start":163,"line_end":163,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114834,"byte_end":114839,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":115351,"byte_end":115356,"line_start":31,"line_end":31,"column_start":79,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":115642,"byte_end":115647,"line_start":41,"line_end":41,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119126,"byte_end":119151,"line_start":22,"line_end":22,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119439,"byte_end":119464,"line_start":34,"line_end":34,"column_start":20,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119664,"byte_end":119684,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119906,"byte_end":119926,"line_start":52,"line_end":52,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":120221,"byte_end":120241,"line_start":64,"line_end":64,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":120332,"byte_end":120352,"line_start":71,"line_end":71,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":120437,"byte_end":120457,"line_start":75,"line_end":75,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121585,"byte_end":121600,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123731,"byte_end":123746,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123836,"byte_end":123851,"line_start":86,"line_end":86,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123953,"byte_end":123968,"line_start":93,"line_end":93,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124103,"byte_end":124118,"line_start":100,"line_end":100,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124244,"byte_end":124259,"line_start":109,"line_end":109,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124284,"byte_end":124299,"line_start":111,"line_end":111,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124450,"byte_end":124465,"line_start":118,"line_end":118,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124606,"byte_end":124621,"line_start":127,"line_end":127,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124763,"byte_end":124778,"line_start":134,"line_end":134,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124915,"byte_end":124930,"line_start":141,"line_end":141,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":125229,"byte_end":125244,"line_start":155,"line_end":155,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":126788,"byte_end":126791,"line_start":12,"line_end":12,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":127167,"byte_end":127170,"line_start":22,"line_end":22,"column_start":78,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":127386,"byte_end":127397,"line_start":29,"line_end":29,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":128058,"byte_end":128069,"line_start":48,"line_end":48,"column_start":82,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":128262,"byte_end":128273,"line_start":55,"line_end":55,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":128828,"byte_end":128836,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":129256,"byte_end":129264,"line_start":24,"line_end":24,"column_start":87,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":129598,"byte_end":129614,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":130170,"byte_end":130186,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":130563,"byte_end":130571,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":131067,"byte_end":131075,"line_start":11,"line_end":11,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":131477,"byte_end":131485,"line_start":24,"line_end":24,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":131763,"byte_end":131779,"line_start":34,"line_end":34,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":132209,"byte_end":132225,"line_start":50,"line_end":50,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":132513,"byte_end":132521,"line_start":61,"line_end":61,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/niche.rs","byte_start":132859,"byte_end":132876,"line_start":5,"line_end":5,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/niche.rs","byte_start":133336,"byte_end":133342,"line_start":24,"line_end":24,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134100,"byte_end":134102,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134264,"byte_end":134266,"line_start":26,"line_end":26,"column_start":50,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134604,"byte_end":134606,"line_start":36,"line_end":36,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134956,"byte_end":134966,"line_start":47,"line_end":47,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":135672,"byte_end":135682,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":135867,"byte_end":135871,"line_start":77,"line_end":77,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":136310,"byte_end":136314,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":136851,"byte_end":136865,"line_start":108,"line_end":108,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137394,"byte_end":137397,"line_start":128,"line_end":128,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137564,"byte_end":137567,"line_start":135,"line_end":135,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137908,"byte_end":137911,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":138340,"byte_end":138350,"line_start":157,"line_end":157,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":138932,"byte_end":138942,"line_start":174,"line_end":174,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":139203,"byte_end":139207,"line_start":187,"line_end":187,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":139649,"byte_end":139653,"line_start":202,"line_end":202,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":140193,"byte_end":140207,"line_start":218,"line_end":218,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141108,"byte_end":141114,"line_start":8,"line_end":8,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141429,"byte_end":141435,"line_start":18,"line_end":18,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141703,"byte_end":141717,"line_start":28,"line_end":28,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141918,"byte_end":141932,"line_start":38,"line_end":38,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":142089,"byte_end":142095,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":142612,"byte_end":142623,"line_start":12,"line_end":12,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":142795,"byte_end":142798,"line_start":19,"line_end":19,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":142966,"byte_end":142977,"line_start":26,"line_end":26,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":143180,"byte_end":143183,"line_start":33,"line_end":33,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":143372,"byte_end":143375,"line_start":40,"line_end":40,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":143735,"byte_end":143738,"line_start":50,"line_end":50,"column_start":79,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":144001,"byte_end":144012,"line_start":57,"line_end":57,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":156556,"byte_end":156565,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":156765,"byte_end":156774,"line_start":20,"line_end":20,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":156945,"byte_end":156954,"line_start":27,"line_end":27,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":157106,"byte_end":157111,"line_start":36,"line_end":36,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":157587,"byte_end":157592,"line_start":49,"line_end":49,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":157905,"byte_end":157913,"line_start":59,"line_end":59,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":158262,"byte_end":158275,"line_start":72,"line_end":72,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":158460,"byte_end":158474,"line_start":81,"line_end":81,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":158963,"byte_end":158977,"line_start":94,"line_end":94,"column_start":62,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":159275,"byte_end":159283,"line_start":104,"line_end":104,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":159702,"byte_end":159724,"line_start":119,"line_end":119,"column_start":59,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":159915,"byte_end":159924,"line_start":128,"line_end":128,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":160310,"byte_end":160319,"line_start":139,"line_end":139,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":160590,"byte_end":160598,"line_start":148,"line_end":148,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":160909,"byte_end":160926,"line_start":160,"line_end":160,"column_start":54,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":161081,"byte_end":161088,"line_start":169,"line_end":169,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":161464,"byte_end":161471,"line_start":180,"line_end":180,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":161734,"byte_end":161742,"line_start":189,"line_end":189,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162041,"byte_end":162056,"line_start":201,"line_end":201,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162214,"byte_end":162230,"line_start":210,"line_end":210,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162624,"byte_end":162640,"line_start":221,"line_end":221,"column_start":62,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162893,"byte_end":162901,"line_start":230,"line_end":230,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":163278,"byte_end":163302,"line_start":244,"line_end":244,"column_start":61,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/option.rs","byte_start":164040,"byte_end":164046,"line_start":17,"line_end":17,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/option.rs","byte_start":165025,"byte_end":165031,"line_start":45,"line_end":45,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/option.rs","byte_start":165312,"byte_end":165326,"line_start":54,"line_end":54,"column_start":70,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":171451,"byte_end":171462,"line_start":186,"line_end":186,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":171686,"byte_end":171697,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":171887,"byte_end":171898,"line_start":201,"line_end":201,"column_start":74,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":172060,"byte_end":172073,"line_start":209,"line_end":209,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":172282,"byte_end":172295,"line_start":217,"line_end":217,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":172470,"byte_end":172483,"line_start":224,"line_end":224,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":173090,"byte_end":173098,"line_start":250,"line_end":250,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":173721,"byte_end":173729,"line_start":276,"line_end":276,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":173984,"byte_end":173996,"line_start":287,"line_end":287,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":174341,"byte_end":174353,"line_start":299,"line_end":299,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":174527,"byte_end":174535,"line_start":306,"line_end":306,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":174850,"byte_end":174862,"line_start":317,"line_end":317,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175207,"byte_end":175219,"line_start":329,"line_end":329,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175393,"byte_end":175401,"line_start":336,"line_end":336,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175656,"byte_end":175667,"line_start":346,"line_end":346,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175987,"byte_end":175998,"line_start":357,"line_end":357,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176191,"byte_end":176199,"line_start":365,"line_end":365,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176415,"byte_end":176426,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176746,"byte_end":176757,"line_start":386,"line_end":386,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176950,"byte_end":176958,"line_start":394,"line_end":394,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/result.rs","byte_start":177904,"byte_end":177910,"line_start":17,"line_end":17,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/result.rs","byte_start":179126,"byte_end":179132,"line_start":48,"line_end":48,"column_start":79,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/result.rs","byte_start":179457,"byte_end":179471,"line_start":58,"line_end":58,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/time.rs","byte_start":180135,"byte_end":180143,"line_start":4,"line_end":4,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/time.rs","byte_start":180439,"byte_end":180447,"line_start":14,"line_end":14,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/time.rs","byte_start":180617,"byte_end":180633,"line_start":21,"line_end":21,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":145078,"byte_end":145079,"line_start":17,"line_end":17,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":145254,"byte_end":145255,"line_start":24,"line_end":24,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":145566,"byte_end":145567,"line_start":39,"line_end":39,"column_start":71,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":155251,"byte_end":155259,"line_start":350,"line_end":350,"column_start":84,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":2424},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":190583,"byte_end":190590,"line_start":12,"line_end":12,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":190974,"byte_end":190981,"line_start":25,"line_end":25,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":191450,"byte_end":191465,"line_start":39,"line_end":39,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":192053,"byte_end":192068,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":192457,"byte_end":192464,"line_start":69,"line_end":69,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":192959,"byte_end":192966,"line_start":12,"line_end":12,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":193337,"byte_end":193344,"line_start":25,"line_end":25,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":193698,"byte_end":193713,"line_start":37,"line_end":37,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":194249,"byte_end":194264,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":194590,"byte_end":194597,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":195161,"byte_end":195165,"line_start":14,"line_end":14,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":195497,"byte_end":195501,"line_start":30,"line_end":30,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":195761,"byte_end":195765,"line_start":39,"line_end":39,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":196194,"byte_end":196202,"line_start":53,"line_end":53,"column_start":86,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":196790,"byte_end":196805,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":196968,"byte_end":196975,"line_start":81,"line_end":81,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":197127,"byte_end":197134,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":197458,"byte_end":197465,"line_start":98,"line_end":98,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":197703,"byte_end":197711,"line_start":105,"line_end":105,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":198741,"byte_end":198757,"line_start":16,"line_end":16,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201730,"byte_end":201746,"line_start":100,"line_end":100,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201887,"byte_end":201895,"line_start":107,"line_end":107,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202027,"byte_end":202043,"line_start":114,"line_end":114,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202220,"byte_end":202228,"line_start":121,"line_end":121,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202382,"byte_end":202390,"line_start":128,"line_end":128,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202661,"byte_end":202669,"line_start":138,"line_end":138,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202839,"byte_end":202855,"line_start":145,"line_end":145,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202995,"byte_end":203011,"line_start":154,"line_end":154,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204802,"byte_end":204818,"line_start":211,"line_end":211,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204959,"byte_end":204967,"line_start":218,"line_end":218,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205099,"byte_end":205115,"line_start":225,"line_end":225,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205292,"byte_end":205300,"line_start":232,"line_end":232,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205454,"byte_end":205462,"line_start":239,"line_end":239,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205734,"byte_end":205742,"line_start":249,"line_end":249,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205912,"byte_end":205928,"line_start":256,"line_end":256,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206066,"byte_end":206080,"line_start":265,"line_end":265,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207527,"byte_end":207541,"line_start":309,"line_end":309,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208122,"byte_end":208128,"line_start":331,"line_end":331,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208256,"byte_end":208270,"line_start":338,"line_end":338,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208445,"byte_end":208451,"line_start":345,"line_end":345,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208841,"byte_end":208847,"line_start":365,"line_end":365,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":209978,"byte_end":209984,"line_start":394,"line_end":394,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210317,"byte_end":210331,"line_start":404,"line_end":404,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210686,"byte_end":210706,"line_start":416,"line_end":416,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210949,"byte_end":210969,"line_start":424,"line_end":424,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211179,"byte_end":211199,"line_start":432,"line_end":432,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211358,"byte_end":211370,"line_start":439,"line_end":439,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211510,"byte_end":211530,"line_start":446,"line_end":446,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211725,"byte_end":211737,"line_start":453,"line_end":453,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211895,"byte_end":211907,"line_start":460,"line_end":460,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212312,"byte_end":212324,"line_start":473,"line_end":473,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212498,"byte_end":212518,"line_start":480,"line_end":480,"column_start":61,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212752,"byte_end":212772,"line_start":490,"line_end":490,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213108,"byte_end":213128,"line_start":503,"line_end":503,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213338,"byte_end":213358,"line_start":511,"line_end":511,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213517,"byte_end":213529,"line_start":518,"line_end":518,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213669,"byte_end":213689,"line_start":525,"line_end":525,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213884,"byte_end":213896,"line_start":532,"line_end":532,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":214054,"byte_end":214066,"line_start":539,"line_end":539,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":214671,"byte_end":214683,"line_start":556,"line_end":556,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":214857,"byte_end":214877,"line_start":563,"line_end":563,"column_start":61,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215202,"byte_end":215220,"line_start":578,"line_end":578,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215904,"byte_end":215922,"line_start":598,"line_end":598,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216125,"byte_end":216143,"line_start":606,"line_end":606,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216295,"byte_end":216305,"line_start":613,"line_end":613,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216441,"byte_end":216459,"line_start":620,"line_end":620,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216647,"byte_end":216657,"line_start":627,"line_end":627,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":217079,"byte_end":217089,"line_start":647,"line_end":647,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":218256,"byte_end":218266,"line_start":676,"line_end":676,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":218619,"byte_end":218637,"line_start":686,"line_end":686,"column_start":59,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220105,"byte_end":220121,"line_start":13,"line_end":13,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220567,"byte_end":220583,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221608,"byte_end":221622,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2946},{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222435,"byte_end":222455,"line_start":82,"line_end":82,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223216,"byte_end":223236,"line_start":107,"line_end":107,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224456,"byte_end":224474,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226159,"byte_end":226176,"line_start":25,"line_end":25,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3028},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228307,"byte_end":228324,"line_start":100,"line_end":100,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":229923,"byte_end":229940,"line_start":151,"line_end":151,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230253,"byte_end":230270,"line_start":164,"line_end":164,"column_start":46,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230339,"byte_end":230356,"line_start":166,"line_end":166,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230519,"byte_end":230536,"line_start":173,"line_end":173,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230718,"byte_end":230735,"line_start":180,"line_end":180,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230908,"byte_end":230925,"line_start":187,"line_end":187,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231422,"byte_end":231426,"line_start":203,"line_end":203,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231655,"byte_end":231659,"line_start":213,"line_end":213,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232111,"byte_end":232118,"line_start":228,"line_end":228,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232343,"byte_end":232350,"line_start":238,"line_end":238,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233396,"byte_end":233409,"line_start":19,"line_end":19,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233613,"byte_end":233626,"line_start":28,"line_end":28,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234229,"byte_end":234242,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234894,"byte_end":234916,"line_start":74,"line_end":74,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235135,"byte_end":235157,"line_start":84,"line_end":84,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235760,"byte_end":235782,"line_start":105,"line_end":105,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236334,"byte_end":236351,"line_start":126,"line_end":126,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236527,"byte_end":236544,"line_start":134,"line_end":134,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236840,"byte_end":236857,"line_start":146,"line_end":146,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237391,"byte_end":237406,"line_start":167,"line_end":167,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237580,"byte_end":237595,"line_start":175,"line_end":175,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237891,"byte_end":237906,"line_start":187,"line_end":187,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238465,"byte_end":238489,"line_start":208,"line_end":208,"column_start":36,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238664,"byte_end":238688,"line_start":216,"line_end":216,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238984,"byte_end":239008,"line_start":228,"line_end":228,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239933,"byte_end":239947,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242502,"byte_end":242516,"line_start":114,"line_end":114,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242910,"byte_end":242924,"line_start":125,"line_end":125,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243329,"byte_end":243343,"line_start":136,"line_end":136,"column_start":20,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243386,"byte_end":243400,"line_start":138,"line_end":138,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243537,"byte_end":243551,"line_start":145,"line_end":145,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243707,"byte_end":243721,"line_start":152,"line_end":152,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243868,"byte_end":243882,"line_start":159,"line_end":159,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244079,"byte_end":244093,"line_start":166,"line_end":166,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244485,"byte_end":244491,"line_start":181,"line_end":181,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244922,"byte_end":244926,"line_start":197,"line_end":197,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245147,"byte_end":245151,"line_start":207,"line_end":207,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245586,"byte_end":245593,"line_start":222,"line_end":222,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245818,"byte_end":245825,"line_start":232,"line_end":232,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246930,"byte_end":246940,"line_start":20,"line_end":20,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3322},{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248570,"byte_end":248580,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248710,"byte_end":248720,"line_start":78,"line_end":78,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248864,"byte_end":248874,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249041,"byte_end":249051,"line_start":92,"line_end":92,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249231,"byte_end":249241,"line_start":101,"line_end":101,"column_start":69,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249410,"byte_end":249420,"line_start":108,"line_end":108,"column_start":49,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249495,"byte_end":249505,"line_start":110,"line_end":110,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249657,"byte_end":249667,"line_start":116,"line_end":116,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3359}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249824,"byte_end":249834,"line_start":122,"line_end":122,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250080,"byte_end":250090,"line_start":132,"line_end":132,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250347,"byte_end":250357,"line_start":142,"line_end":142,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250891,"byte_end":250905,"line_start":165,"line_end":165,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253284,"byte_end":253298,"line_start":233,"line_end":233,"column_start":65,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254734,"byte_end":254745,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255175,"byte_end":255186,"line_start":36,"line_end":36,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259946,"byte_end":259955,"line_start":159,"line_end":159,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262019,"byte_end":262028,"line_start":224,"line_end":224,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262240,"byte_end":262249,"line_start":232,"line_end":232,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264030,"byte_end":264036,"line_start":273,"line_end":273,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265135,"byte_end":265141,"line_start":304,"line_end":304,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266154,"byte_end":266160,"line_start":338,"line_end":338,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":269263,"byte_end":269269,"line_start":433,"line_end":433,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":269601,"byte_end":269607,"line_start":445,"line_end":445,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270684,"byte_end":270698,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272262,"byte_end":272276,"line_start":73,"line_end":73,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272746,"byte_end":272760,"line_start":87,"line_end":87,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273524,"byte_end":273528,"line_start":110,"line_end":110,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273749,"byte_end":273753,"line_start":120,"line_end":120,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274143,"byte_end":274150,"line_start":135,"line_end":135,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274375,"byte_end":274382,"line_start":145,"line_end":145,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274499,"byte_end":274513,"line_start":151,"line_end":151,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274574,"byte_end":274588,"line_start":153,"line_end":153,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274736,"byte_end":274750,"line_start":160,"line_end":160,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274918,"byte_end":274932,"line_start":167,"line_end":167,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3608}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":275097,"byte_end":275111,"line_start":174,"line_end":174,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":275329,"byte_end":275343,"line_start":181,"line_end":181,"column_start":74,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":275984,"byte_end":275990,"line_start":203,"line_end":203,"column_start":82,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291880,"byte_end":291897,"line_start":30,"line_end":30,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292231,"byte_end":292248,"line_start":44,"line_end":44,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3695}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292383,"byte_end":292400,"line_start":53,"line_end":53,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3698}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292505,"byte_end":292522,"line_start":57,"line_end":57,"column_start":68,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294296,"byte_end":294307,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294842,"byte_end":294853,"line_start":136,"line_end":136,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294949,"byte_end":294960,"line_start":142,"line_end":142,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295071,"byte_end":295082,"line_start":146,"line_end":146,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":296325,"byte_end":296342,"line_start":183,"line_end":183,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297405,"byte_end":297422,"line_start":212,"line_end":212,"column_start":20,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297764,"byte_end":297776,"line_start":225,"line_end":225,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298210,"byte_end":298222,"line_start":243,"line_end":243,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298430,"byte_end":298442,"line_start":253,"line_end":253,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298519,"byte_end":298531,"line_start":259,"line_end":259,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298595,"byte_end":298607,"line_start":263,"line_end":263,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3738},{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300256,"byte_end":300279,"line_start":309,"line_end":309,"column_start":23,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300567,"byte_end":300590,"line_start":321,"line_end":321,"column_start":20,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300785,"byte_end":300803,"line_start":330,"line_end":330,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300997,"byte_end":301015,"line_start":340,"line_end":340,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":301106,"byte_end":301124,"line_start":347,"line_end":347,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":301205,"byte_end":301223,"line_start":351,"line_end":351,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":302710,"byte_end":302731,"line_start":26,"line_end":26,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3786}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303239,"byte_end":303260,"line_start":46,"line_end":46,"column_start":20,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304383,"byte_end":304399,"line_start":90,"line_end":90,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":305043,"byte_end":305059,"line_start":112,"line_end":112,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3799}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":305168,"byte_end":305184,"line_start":119,"line_end":119,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3802}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":305269,"byte_end":305285,"line_start":123,"line_end":123,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3805},{"krate":0,"index":3806}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306825,"byte_end":306846,"line_start":173,"line_end":173,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307624,"byte_end":307645,"line_start":197,"line_end":197,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307789,"byte_end":307802,"line_start":206,"line_end":206,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308218,"byte_end":308231,"line_start":223,"line_end":223,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308326,"byte_end":308339,"line_start":229,"line_end":229,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308451,"byte_end":308464,"line_start":233,"line_end":233,"column_start":64,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310217,"byte_end":310232,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310435,"byte_end":310450,"line_start":294,"line_end":294,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3833}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310622,"byte_end":310637,"line_start":303,"line_end":303,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310732,"byte_end":310747,"line_start":307,"line_end":307,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3841},{"krate":0,"index":3843}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312209,"byte_end":312224,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312791,"byte_end":312806,"line_start":45,"line_end":45,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312877,"byte_end":312892,"line_start":49,"line_end":49,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284464,"byte_end":284488,"line_start":37,"line_end":37,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3914}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285011,"byte_end":285035,"line_start":56,"line_end":56,"column_start":29,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285677,"byte_end":285696,"line_start":80,"line_end":80,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286446,"byte_end":286465,"line_start":106,"line_end":106,"column_start":54,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3935}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286716,"byte_end":286735,"line_start":117,"line_end":117,"column_start":58,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286884,"byte_end":286903,"line_start":121,"line_end":121,"column_start":62,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":288578,"byte_end":288597,"line_start":179,"line_end":179,"column_start":66,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3959},{"krate":0,"index":3960}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289184,"byte_end":289203,"line_start":196,"line_end":196,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320416,"byte_end":320434,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313857,"byte_end":313871,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315392,"byte_end":315406,"line_start":75,"line_end":75,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315506,"byte_end":315520,"line_start":82,"line_end":82,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4149}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315619,"byte_end":315633,"line_start":89,"line_end":89,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315779,"byte_end":315793,"line_start":96,"line_end":96,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4153},{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315926,"byte_end":315940,"line_start":105,"line_end":105,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4156}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316085,"byte_end":316099,"line_start":112,"line_end":112,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316124,"byte_end":316138,"line_start":114,"line_end":114,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316738,"byte_end":316752,"line_start":141,"line_end":141,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316890,"byte_end":316904,"line_start":148,"line_end":148,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317031,"byte_end":317045,"line_start":155,"line_end":155,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4167}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317213,"byte_end":317227,"line_start":162,"line_end":162,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4169}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317363,"byte_end":317377,"line_start":169,"line_end":169,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325264,"byte_end":325280,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":337927,"byte_end":337937,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338131,"byte_end":338141,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353706,"byte_end":353709,"line_start":562,"line_end":562,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4269}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353828,"byte_end":353838,"line_start":569,"line_end":569,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353953,"byte_end":353963,"line_start":576,"line_end":576,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354067,"byte_end":354077,"line_start":583,"line_end":583,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4275}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354184,"byte_end":354194,"line_start":590,"line_end":590,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4277}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354307,"byte_end":354317,"line_start":597,"line_end":597,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354630,"byte_end":354640,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4281}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354777,"byte_end":354787,"line_start":616,"line_end":616,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354875,"byte_end":354885,"line_start":623,"line_end":623,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355017,"byte_end":355027,"line_start":632,"line_end":632,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355178,"byte_end":355188,"line_start":639,"line_end":639,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355403,"byte_end":355413,"line_start":648,"line_end":648,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355583,"byte_end":355593,"line_start":656,"line_end":656,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4300},{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":356234,"byte_end":356244,"line_start":684,"line_end":684,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":356270,"byte_end":356280,"line_start":686,"line_end":686,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":356300,"byte_end":356310,"line_start":688,"line_end":688,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357319,"byte_end":357329,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357521,"byte_end":357531,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4345},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4354},{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366649,"byte_end":366659,"line_start":304,"line_end":304,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4372}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367256,"byte_end":367266,"line_start":323,"line_end":323,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367385,"byte_end":367395,"line_start":330,"line_end":330,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367503,"byte_end":367513,"line_start":337,"line_end":337,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367624,"byte_end":367634,"line_start":344,"line_end":344,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367769,"byte_end":367779,"line_start":351,"line_end":351,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367925,"byte_end":367935,"line_start":358,"line_end":358,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4390},{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368077,"byte_end":368087,"line_start":367,"line_end":367,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368248,"byte_end":368258,"line_start":374,"line_end":374,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4399}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368482,"byte_end":368492,"line_start":383,"line_end":383,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368933,"byte_end":368938,"line_start":400,"line_end":400,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4413}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369111,"byte_end":369116,"line_start":407,"line_end":407,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4416}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369303,"byte_end":369308,"line_start":415,"line_end":415,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4419}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369403,"byte_end":369408,"line_start":421,"line_end":421,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4425}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369740,"byte_end":369745,"line_start":437,"line_end":437,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4428}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369949,"byte_end":369954,"line_start":446,"line_end":446,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4432}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":370237,"byte_end":370246,"line_start":452,"line_end":452,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":371521,"byte_end":371526,"line_start":487,"line_end":487,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":371576,"byte_end":371581,"line_start":489,"line_end":489,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336618,"byte_end":336630,"line_start":213,"line_end":213,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4494}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336724,"byte_end":336736,"line_start":219,"line_end":219,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336882,"byte_end":336894,"line_start":228,"line_end":228,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":337031,"byte_end":337043,"line_start":235,"line_end":235,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":337165,"byte_end":337177,"line_start":242,"line_end":242,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4509}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372672,"byte_end":372683,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4569},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4575},{"krate":0,"index":4578},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4584},{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":377734,"byte_end":377745,"line_start":179,"line_end":179,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":377853,"byte_end":377864,"line_start":186,"line_end":186,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":377983,"byte_end":377994,"line_start":193,"line_end":193,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378147,"byte_end":378158,"line_start":199,"line_end":199,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4613},{"krate":0,"index":4614}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378293,"byte_end":378304,"line_start":208,"line_end":208,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378347,"byte_end":378358,"line_start":210,"line_end":210,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378517,"byte_end":378528,"line_start":217,"line_end":217,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4624},{"krate":0,"index":4625}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378710,"byte_end":378721,"line_start":226,"line_end":226,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4628}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378902,"byte_end":378913,"line_start":233,"line_end":233,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4632}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379101,"byte_end":379112,"line_start":240,"line_end":240,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4638}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379444,"byte_end":379455,"line_start":254,"line_end":254,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4649}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379778,"byte_end":379789,"line_start":268,"line_end":268,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4656}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379989,"byte_end":380000,"line_start":275,"line_end":275,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":397633,"byte_end":397640,"line_start":31,"line_end":31,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398017,"byte_end":398024,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"value":"","parent":null,"children":[{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398276,"byte_end":398283,"line_start":53,"line_end":53,"column_start":91,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398542,"byte_end":398549,"line_start":63,"line_end":63,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4796}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398989,"byte_end":398996,"line_start":79,"line_end":79,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":399286,"byte_end":399293,"line_start":90,"line_end":90,"column_start":79,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":4806}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":399646,"byte_end":399653,"line_start":105,"line_end":105,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":400043,"byte_end":400050,"line_start":120,"line_end":120,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":400347,"byte_end":400354,"line_start":130,"line_end":130,"column_start":85,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":400731,"byte_end":400738,"line_start":145,"line_end":145,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":401187,"byte_end":401194,"line_start":160,"line_end":160,"column_start":74,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4839}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":401533,"byte_end":401540,"line_start":170,"line_end":170,"column_start":91,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":4843}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":401860,"byte_end":401865,"line_start":183,"line_end":183,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":402256,"byte_end":402261,"line_start":197,"line_end":197,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4854}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":402737,"byte_end":402742,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4860}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":403362,"byte_end":403367,"line_start":238,"line_end":238,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":403729,"byte_end":403734,"line_start":252,"line_end":252,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4869}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":404086,"byte_end":404091,"line_start":262,"line_end":262,"column_start":74,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":4873}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":404570,"byte_end":404575,"line_start":282,"line_end":282,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":405030,"byte_end":405035,"line_start":299,"line_end":299,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4882}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":405440,"byte_end":405445,"line_start":313,"line_end":313,"column_start":83,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":405918,"byte_end":405930,"line_start":333,"line_end":333,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":406282,"byte_end":406294,"line_start":347,"line_end":347,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4895}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":406788,"byte_end":406800,"line_start":362,"line_end":362,"column_start":69,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4902}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":407486,"byte_end":407498,"line_start":384,"line_end":384,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":407876,"byte_end":407888,"line_start":398,"line_end":398,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4918}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":408397,"byte_end":408409,"line_start":413,"line_end":413,"column_start":73,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":4925}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":409160,"byte_end":409172,"line_start":438,"line_end":438,"column_start":63,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":409591,"byte_end":409603,"line_start":452,"line_end":452,"column_start":62,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":4943}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":413318,"byte_end":413324,"line_start":95,"line_end":95,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":413826,"byte_end":413832,"line_start":113,"line_end":113,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5018}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":414115,"byte_end":414121,"line_start":122,"line_end":122,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5021}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":414922,"byte_end":414928,"line_start":148,"line_end":148,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5033}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":415430,"byte_end":415436,"line_start":166,"line_end":166,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5036}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":415695,"byte_end":415701,"line_start":174,"line_end":174,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5039}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":416413,"byte_end":416419,"line_start":9,"line_end":9,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5088},{"krate":0,"index":5089},{"krate":0,"index":5090}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":416768,"byte_end":416774,"line_start":24,"line_end":24,"column_start":70,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":416981,"byte_end":416989,"line_start":31,"line_end":31,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":417412,"byte_end":417420,"line_start":46,"line_end":46,"column_start":86,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":417650,"byte_end":417655,"line_start":53,"line_end":53,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":418075,"byte_end":418080,"line_start":68,"line_end":68,"column_start":85,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":418334,"byte_end":418339,"line_start":75,"line_end":75,"column_start":79,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5116}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":419192,"byte_end":419200,"line_start":22,"line_end":22,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":419718,"byte_end":419726,"line_start":39,"line_end":39,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5220}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":420138,"byte_end":420146,"line_start":53,"line_end":53,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":5223}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":420349,"byte_end":420357,"line_start":60,"line_end":60,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":420873,"byte_end":420881,"line_start":77,"line_end":77,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5230}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":421291,"byte_end":421299,"line_start":91,"line_end":91,"column_start":76,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":421522,"byte_end":421526,"line_start":100,"line_end":100,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":422452,"byte_end":422456,"line_start":122,"line_end":122,"column_start":76,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":422794,"byte_end":422798,"line_start":135,"line_end":135,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":423091,"byte_end":423095,"line_start":146,"line_end":146,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5251},{"krate":0,"index":5252},{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":424025,"byte_end":424029,"line_start":168,"line_end":168,"column_start":77,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":424369,"byte_end":424373,"line_start":181,"line_end":181,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5263}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":424694,"byte_end":424699,"line_start":194,"line_end":194,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":425088,"byte_end":425093,"line_start":208,"line_end":208,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5274}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":425567,"byte_end":425572,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":426195,"byte_end":426200,"line_start":249,"line_end":249,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":426560,"byte_end":426565,"line_start":263,"line_end":263,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":426915,"byte_end":426920,"line_start":273,"line_end":273,"column_start":73,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383291,"byte_end":383295,"line_start":52,"line_end":52,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5325}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383825,"byte_end":383829,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5329}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383999,"byte_end":384003,"line_start":75,"line_end":75,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5333}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387521,"byte_end":387525,"line_start":194,"line_end":194,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388159,"byte_end":388163,"line_start":210,"line_end":210,"column_start":80,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5353}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388658,"byte_end":388659,"line_start":223,"line_end":223,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389103,"byte_end":389112,"line_start":243,"line_end":243,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389260,"byte_end":389269,"line_start":251,"line_end":251,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5370},{"krate":0,"index":5371}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393040,"byte_end":393053,"line_start":414,"line_end":414,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5374}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393216,"byte_end":393229,"line_start":421,"line_end":421,"column_start":30,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394217,"byte_end":394226,"line_start":457,"line_end":457,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5377}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394389,"byte_end":394398,"line_start":464,"line_end":464,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9058,"byte_end":9068,"line_start":204,"line_end":204,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9135,"byte_end":9145,"line_start":208,"line_end":208,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5404}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7280,"byte_end":7286,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7297,"byte_end":7302,"line_start":144,"line_end":144,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7312,"byte_end":7323,"line_start":145,"line_end":145,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":124}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":42923,"byte_end":42932,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":42942,"byte_end":42951,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":435}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":42961,"byte_end":42971,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":492}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":42981,"byte_end":42989,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":569}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":42999,"byte_end":43007,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":838}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43091,"byte_end":43100,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":903}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43110,"byte_end":43119,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1102}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/mod.rs","byte_start":43129,"byte_end":43133,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1187}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7372,"byte_end":7374,"line_start":148,"line_end":148,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1233}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":115958,"byte_end":115971,"line_start":3,"line_end":3,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1234}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7596,"byte_end":7599,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1299}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7620,"byte_end":7623,"line_start":154,"line_end":154,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2935}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7633,"byte_end":7638,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2960}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/mod.rs","byte_start":225539,"byte_end":225549,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2961}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7648,"byte_end":7651,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3092}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7661,"byte_end":7667,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3164}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7677,"byte_end":7679,"line_start":158,"line_end":158,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3261}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7689,"byte_end":7696,"line_start":159,"line_end":159,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3423}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7706,"byte_end":7712,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3525}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7722,"byte_end":7725,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3625}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276372,"byte_end":276383,"line_start":3,"line_end":3,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":3626}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7735,"byte_end":7741,"line_start":162,"line_end":162,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4035}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313250,"byte_end":313254,"line_start":3,"line_end":3,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4036}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7751,"byte_end":7755,"line_start":163,"line_end":163,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4176}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7765,"byte_end":7769,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4199}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7830,"byte_end":7833,"line_start":167,"line_end":167,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4510}},{"kind":"Mod","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":7843,"byte_end":7847,"line_start":168,"line_end":168,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4665}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":36440,"byte_end":36451,"line_start":15,"line_end":15,"column_start":34,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":38030,"byte_end":38041,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39142,"byte_end":39153,"line_start":100,"line_end":100,"column_start":34,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39434,"byte_end":39445,"line_start":112,"line_end":112,"column_start":47,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39569,"byte_end":39580,"line_start":119,"line_end":119,"column_start":48,"column_end":59},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39705,"byte_end":39716,"line_start":126,"line_end":126,"column_start":49,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":39955,"byte_end":39966,"line_start":136,"line_end":136,"column_start":44,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40140,"byte_end":40151,"line_start":145,"line_end":145,"column_start":66,"column_end":77},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40314,"byte_end":40325,"line_start":152,"line_end":152,"column_start":46,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40394,"byte_end":40405,"line_start":154,"line_end":154,"column_start":62,"column_end":73},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40566,"byte_end":40577,"line_start":161,"line_end":161,"column_start":48,"column_end":59},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40809,"byte_end":40820,"line_start":169,"line_end":169,"column_start":35,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":40996,"byte_end":41007,"line_start":177,"line_end":177,"column_start":62,"column_end":73},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/boxed.rs","byte_start":41197,"byte_end":41208,"line_start":184,"line_end":184,"column_start":51,"column_end":62},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":44114,"byte_end":44127,"line_start":31,"line_end":31,"column_start":48,"column_end":61},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":175},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":44907,"byte_end":44917,"line_start":54,"line_end":54,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":45643,"byte_end":45647,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":197},"to":{"krate":20,"index":42}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":45712,"byte_end":45716,"line_start":96,"line_end":96,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":5421}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":46127,"byte_end":46141,"line_start":114,"line_end":114,"column_start":18,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":213},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":46697,"byte_end":46715,"line_start":135,"line_end":135,"column_start":35,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":221},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":47228,"byte_end":47238,"line_start":153,"line_end":153,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":48804,"byte_end":48820,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":54258,"byte_end":54274,"line_start":375,"line_end":375,"column_start":16,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":62695,"byte_end":62711,"line_start":557,"line_end":557,"column_start":51,"column_end":67},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":62875,"byte_end":62891,"line_start":563,"line_end":563,"column_start":32,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63278,"byte_end":63294,"line_start":584,"line_end":584,"column_start":27,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63337,"byte_end":63353,"line_start":586,"line_end":586,"column_start":33,"column_end":49},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63535,"byte_end":63551,"line_start":595,"line_end":595,"column_start":30,"column_end":46},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":63714,"byte_end":63730,"line_start":602,"line_end":602,"column_start":48,"column_end":64},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":64002,"byte_end":64018,"line_start":613,"line_end":613,"column_start":51,"column_end":67},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":64329,"byte_end":64336,"line_start":629,"line_end":629,"column_start":16,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":64586,"byte_end":64593,"line_start":640,"line_end":640,"column_start":29,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65691,"byte_end":65698,"line_start":671,"line_end":671,"column_start":38,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65745,"byte_end":65752,"line_start":672,"line_end":672,"column_start":34,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":65924,"byte_end":65928,"line_start":679,"line_end":679,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66211,"byte_end":66215,"line_start":693,"line_end":693,"column_start":38,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66262,"byte_end":66266,"line_start":694,"line_end":694,"column_start":34,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66427,"byte_end":66431,"line_start":701,"line_end":701,"column_start":29,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66721,"byte_end":66725,"line_start":715,"line_end":715,"column_start":38,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66772,"byte_end":66776,"line_start":716,"line_end":716,"column_start":34,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":66941,"byte_end":66947,"line_start":723,"line_end":723,"column_start":29,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":67237,"byte_end":67243,"line_start":737,"line_end":737,"column_start":38,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_map/mod.rs","byte_start":67290,"byte_end":67296,"line_start":738,"line_end":738,"column_start":34,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":68538,"byte_end":68554,"line_start":13,"line_end":13,"column_start":9,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":70500,"byte_end":70516,"line_start":79,"line_end":79,"column_start":13,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/btree_set.rs","byte_start":71302,"byte_end":71318,"line_start":102,"line_end":102,"column_start":36,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5447},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":72416,"byte_end":72433,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":75305,"byte_end":75322,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_index/mod.rs","byte_start":79922,"byte_end":79939,"line_start":242,"line_end":242,"column_start":21,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":81235,"byte_end":81250,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":86309,"byte_end":86324,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88154,"byte_end":88169,"line_start":272,"line_end":272,"column_start":51,"column_end":66},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88349,"byte_end":88364,"line_start":279,"line_end":279,"column_start":34,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88449,"byte_end":88464,"line_start":281,"line_end":281,"column_start":75,"column_end":90},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":88633,"byte_end":88648,"line_start":290,"line_end":290,"column_start":48,"column_end":63},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89056,"byte_end":89063,"line_start":308,"line_end":308,"column_start":16,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89303,"byte_end":89310,"line_start":319,"line_end":319,"column_start":29,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89868,"byte_end":89875,"line_start":342,"line_end":342,"column_start":38,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":89922,"byte_end":89929,"line_start":343,"line_end":343,"column_start":34,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90097,"byte_end":90107,"line_start":351,"line_end":351,"column_start":16,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90345,"byte_end":90355,"line_start":362,"line_end":362,"column_start":29,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90907,"byte_end":90917,"line_start":385,"line_end":385,"column_start":34,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":90960,"byte_end":90970,"line_start":386,"line_end":386,"column_start":30,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91151,"byte_end":91155,"line_start":394,"line_end":394,"column_start":29,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91527,"byte_end":91531,"line_start":411,"line_end":411,"column_start":34,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91574,"byte_end":91578,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":91773,"byte_end":91780,"line_start":420,"line_end":420,"column_start":29,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92189,"byte_end":92196,"line_start":437,"line_end":437,"column_start":34,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92239,"byte_end":92246,"line_start":438,"line_end":438,"column_start":30,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92416,"byte_end":92420,"line_start":446,"line_end":446,"column_start":29,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92768,"byte_end":92772,"line_start":463,"line_end":463,"column_start":34,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92815,"byte_end":92819,"line_start":464,"line_end":464,"column_start":30,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":92993,"byte_end":92999,"line_start":472,"line_end":472,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93349,"byte_end":93355,"line_start":489,"line_end":489,"column_start":34,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93398,"byte_end":93404,"line_start":490,"line_end":490,"column_start":30,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93592,"byte_end":93601,"line_start":498,"line_end":498,"column_start":29,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":93988,"byte_end":93997,"line_start":515,"line_end":515,"column_start":34,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_map/mod.rs","byte_start":94040,"byte_end":94049,"line_start":516,"line_end":516,"column_start":30,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":95420,"byte_end":95435,"line_start":20,"line_end":20,"column_start":9,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":97789,"byte_end":97804,"line_start":107,"line_end":107,"column_start":36,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":98054,"byte_end":98069,"line_start":116,"line_end":116,"column_start":34,"column_end":49},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/hash_set.rs","byte_start":98191,"byte_end":98206,"line_start":123,"line_end":123,"column_start":27,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":98854,"byte_end":98870,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":103964,"byte_end":103980,"line_start":216,"line_end":216,"column_start":16,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106216,"byte_end":106232,"line_start":276,"line_end":276,"column_start":51,"column_end":67},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":944},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106412,"byte_end":106428,"line_start":282,"line_end":282,"column_start":48,"column_end":64},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":944},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106667,"byte_end":106674,"line_start":294,"line_end":294,"column_start":16,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":106914,"byte_end":106921,"line_start":305,"line_end":305,"column_start":29,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107533,"byte_end":107540,"line_start":329,"line_end":329,"column_start":38,"column_end":45},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107587,"byte_end":107594,"line_start":330,"line_end":330,"column_start":34,"column_end":41},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":107777,"byte_end":107781,"line_start":338,"line_end":338,"column_start":29,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108060,"byte_end":108064,"line_start":352,"line_end":352,"column_start":34,"column_end":38},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108107,"byte_end":108111,"line_start":353,"line_end":353,"column_start":30,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108283,"byte_end":108287,"line_start":361,"line_end":361,"column_start":29,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108573,"byte_end":108577,"line_start":375,"line_end":375,"column_start":34,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108620,"byte_end":108624,"line_start":376,"line_end":376,"column_start":30,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":108800,"byte_end":108806,"line_start":384,"line_end":384,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":109092,"byte_end":109098,"line_start":398,"line_end":398,"column_start":34,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_map.rs","byte_start":109141,"byte_end":109147,"line_start":399,"line_end":399,"column_start":30,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1079},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":110121,"byte_end":110137,"line_start":18,"line_end":18,"column_start":9,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":112860,"byte_end":112876,"line_start":127,"line_end":127,"column_start":13,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":113862,"byte_end":113878,"line_start":157,"line_end":157,"column_start":36,"column_end":52},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/index_set.rs","byte_start":114041,"byte_end":114057,"line_start":163,"line_end":163,"column_start":34,"column_end":50},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":114834,"byte_end":114839,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5472},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":115351,"byte_end":115356,"line_start":31,"line_end":31,"column_start":79,"column_end":84},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5472},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/collections/util.rs","byte_start":115642,"byte_end":115647,"line_start":41,"line_end":41,"column_start":49,"column_end":54},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119126,"byte_end":119151,"line_start":22,"line_end":22,"column_start":23,"column_end":48},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5488},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119439,"byte_end":119464,"line_start":34,"line_end":34,"column_start":20,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5488},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119664,"byte_end":119684,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":119906,"byte_end":119926,"line_start":52,"line_end":52,"column_start":21,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1260},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":120221,"byte_end":120241,"line_start":64,"line_end":64,"column_start":18,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1260},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":120332,"byte_end":120352,"line_start":71,"line_end":71,"column_start":19,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1260},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/deserializers/alloc.rs","byte_start":120437,"byte_end":120457,"line_start":75,"line_end":75,"column_start":36,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1260},"to":{"krate":0,"index":1291}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/de/mod.rs","byte_start":116568,"byte_end":116576,"line_start":23,"line_end":23,"column_start":38,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":5399},"to":{"krate":0,"index":1291}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":121585,"byte_end":121600,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123731,"byte_end":123746,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123836,"byte_end":123851,"line_start":86,"line_end":86,"column_start":23,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":123953,"byte_end":123968,"line_start":93,"line_end":93,"column_start":21,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124103,"byte_end":124118,"line_start":100,"line_end":100,"column_start":16,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124244,"byte_end":124259,"line_start":109,"line_end":109,"column_start":13,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124284,"byte_end":124299,"line_start":111,"line_end":111,"column_start":21,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124450,"byte_end":124465,"line_start":118,"line_end":118,"column_start":27,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124606,"byte_end":124621,"line_start":127,"line_end":127,"column_start":14,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124763,"byte_end":124778,"line_start":134,"line_end":134,"column_start":20,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":124915,"byte_end":124930,"line_start":141,"line_end":141,"column_start":27,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ffi.rs","byte_start":125229,"byte_end":125244,"line_start":155,"line_end":155,"column_start":21,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":126788,"byte_end":126791,"line_start":12,"line_end":12,"column_start":46,"column_end":49},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":127167,"byte_end":127170,"line_start":22,"line_end":22,"column_start":78,"column_end":81},"kind":{"Impl":{"id":126}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":127386,"byte_end":127397,"line_start":29,"line_end":29,"column_start":39,"column_end":50},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":55},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":128058,"byte_end":128069,"line_start":48,"line_end":48,"column_start":82,"column_end":93},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/boxed.rs","byte_start":128262,"byte_end":128273,"line_start":55,"line_end":55,"column_start":84,"column_end":95},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":128828,"byte_end":128836,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":129256,"byte_end":129264,"line_start":24,"line_end":24,"column_start":87,"column_end":95},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":129598,"byte_end":129614,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":130170,"byte_end":130186,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_map.rs","byte_start":130563,"byte_end":130571,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":134}},"from":{"krate":5,"index":1392},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":131067,"byte_end":131075,"line_start":11,"line_end":11,"column_start":36,"column_end":44},"kind":{"Impl":{"id":135}},"from":{"krate":5,"index":7454},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":131477,"byte_end":131485,"line_start":24,"line_end":24,"column_start":70,"column_end":78},"kind":{"Impl":{"id":136}},"from":{"krate":5,"index":7454},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":131763,"byte_end":131779,"line_start":34,"line_end":34,"column_start":44,"column_end":60},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5447},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":132209,"byte_end":132225,"line_start":50,"line_end":50,"column_start":54,"column_end":70},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5447},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/collections/btree_set.rs","byte_start":132513,"byte_end":132521,"line_start":61,"line_end":61,"column_start":63,"column_end":71},"kind":{"Impl":{"id":139}},"from":{"krate":5,"index":7454},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/niche.rs","byte_start":132859,"byte_end":132876,"line_start":5,"line_end":5,"column_start":42,"column_end":59},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/niche.rs","byte_start":133336,"byte_end":133342,"line_start":24,"line_end":24,"column_start":48,"column_end":54},"kind":{"Impl":{"id":141}},"from":{"krate":2,"index":46719},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134100,"byte_end":134102,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":142}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":1289}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134264,"byte_end":134266,"line_start":26,"line_end":26,"column_start":50,"column_end":52},"kind":{"Impl":{"id":143}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134604,"byte_end":134606,"line_start":36,"line_end":36,"column_start":33,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":134956,"byte_end":134966,"line_start":47,"line_end":47,"column_start":42,"column_end":52},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3310},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":135672,"byte_end":135682,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":135867,"byte_end":135871,"line_start":77,"line_end":77,"column_start":50,"column_end":54},"kind":{"Impl":{"id":147}},"from":{"krate":5,"index":4880},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":136310,"byte_end":136314,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":5,"index":4880},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":136851,"byte_end":136865,"line_start":108,"line_end":108,"column_start":44,"column_end":58},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137394,"byte_end":137397,"line_start":128,"line_end":128,"column_start":41,"column_end":44},"kind":{"Impl":{"id":150}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":1289}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137564,"byte_end":137567,"line_start":135,"line_end":135,"column_start":52,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":137908,"byte_end":137911,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":138340,"byte_end":138350,"line_start":157,"line_end":157,"column_start":38,"column_end":48},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3310},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":138932,"byte_end":138942,"line_start":174,"line_end":174,"column_start":40,"column_end":50},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":139203,"byte_end":139207,"line_start":187,"line_end":187,"column_start":52,"column_end":56},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":6004},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":139649,"byte_end":139653,"line_start":202,"line_end":202,"column_start":35,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":5,"index":6004},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/rc.rs","byte_start":140193,"byte_end":140207,"line_start":218,"line_end":218,"column_start":46,"column_end":60},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141108,"byte_end":141114,"line_start":8,"line_end":8,"column_start":18,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141429,"byte_end":141435,"line_start":18,"line_end":18,"column_start":45,"column_end":51},"kind":{"Impl":{"id":159}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141703,"byte_end":141717,"line_start":28,"line_end":28,"column_start":55,"column_end":69},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4136},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":141918,"byte_end":141932,"line_start":38,"line_end":38,"column_start":28,"column_end":42},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/string.rs","byte_start":142089,"byte_end":142095,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"kind":{"Impl":{"id":162}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":142612,"byte_end":142623,"line_start":12,"line_end":12,"column_start":48,"column_end":59},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":142795,"byte_end":142798,"line_start":19,"line_end":19,"column_start":56,"column_end":59},"kind":{"Impl":{"id":164}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":142966,"byte_end":142977,"line_start":26,"line_end":26,"column_start":44,"column_end":55},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":143180,"byte_end":143183,"line_start":33,"line_end":33,"column_start":52,"column_end":55},"kind":{"Impl":{"id":166}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":143372,"byte_end":143375,"line_start":40,"line_end":40,"column_start":30,"column_end":33},"kind":{"Impl":{"id":167}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":143735,"byte_end":143738,"line_start":50,"line_end":50,"column_start":79,"column_end":82},"kind":{"Impl":{"id":168}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/alloc/vec.rs","byte_start":144001,"byte_end":144012,"line_start":57,"line_end":57,"column_start":67,"column_end":78},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4563},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":156556,"byte_end":156565,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":2,"index":45213},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":156765,"byte_end":156774,"line_start":20,"line_end":20,"column_start":45,"column_end":54},"kind":{"Impl":{"id":171}},"from":{"krate":2,"index":45213},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":156945,"byte_end":156954,"line_start":27,"line_end":27,"column_start":58,"column_end":67},"kind":{"Impl":{"id":172}},"from":{"krate":2,"index":45213},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":157106,"byte_end":157111,"line_start":36,"line_end":36,"column_start":30,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":2,"index":45229},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":157587,"byte_end":157592,"line_start":49,"line_end":49,"column_start":62,"column_end":67},"kind":{"Impl":{"id":174}},"from":{"krate":2,"index":45229},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":157905,"byte_end":157913,"line_start":59,"line_end":59,"column_start":69,"column_end":77},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":158262,"byte_end":158275,"line_start":72,"line_end":72,"column_start":50,"column_end":63},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6888},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":158460,"byte_end":158474,"line_start":81,"line_end":81,"column_start":30,"column_end":44},"kind":{"Impl":{"id":177}},"from":{"krate":2,"index":45298},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":158963,"byte_end":158977,"line_start":94,"line_end":94,"column_start":62,"column_end":76},"kind":{"Impl":{"id":178}},"from":{"krate":2,"index":45298},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":159275,"byte_end":159283,"line_start":104,"line_end":104,"column_start":50,"column_end":58},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":159702,"byte_end":159724,"line_start":119,"line_end":119,"column_start":59,"column_end":81},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":159915,"byte_end":159924,"line_start":128,"line_end":128,"column_start":30,"column_end":39},"kind":{"Impl":{"id":181}},"from":{"krate":2,"index":45254},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":160310,"byte_end":160319,"line_start":139,"line_end":139,"column_start":62,"column_end":71},"kind":{"Impl":{"id":182}},"from":{"krate":2,"index":45254},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":160590,"byte_end":160598,"line_start":148,"line_end":148,"column_start":73,"column_end":81},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":160909,"byte_end":160926,"line_start":160,"line_end":160,"column_start":54,"column_end":71},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":161081,"byte_end":161088,"line_start":169,"line_end":169,"column_start":30,"column_end":37},"kind":{"Impl":{"id":185}},"from":{"krate":2,"index":45275},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":161464,"byte_end":161471,"line_start":180,"line_end":180,"column_start":62,"column_end":69},"kind":{"Impl":{"id":186}},"from":{"krate":2,"index":45275},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":161734,"byte_end":161742,"line_start":189,"line_end":189,"column_start":71,"column_end":79},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162041,"byte_end":162056,"line_start":201,"line_end":201,"column_start":52,"column_end":67},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162214,"byte_end":162230,"line_start":210,"line_end":210,"column_start":30,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":2,"index":45321},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162624,"byte_end":162640,"line_start":221,"line_end":221,"column_start":62,"column_end":78},"kind":{"Impl":{"id":190}},"from":{"krate":2,"index":45321},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":162893,"byte_end":162901,"line_start":230,"line_end":230,"column_start":52,"column_end":60},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/ops.rs","byte_start":163278,"byte_end":163302,"line_start":244,"line_end":244,"column_start":61,"column_end":85},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6986},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/option.rs","byte_start":164040,"byte_end":164046,"line_start":17,"line_end":17,"column_start":30,"column_end":36},"kind":{"Impl":{"id":193}},"from":{"krate":2,"index":46719},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/option.rs","byte_start":165025,"byte_end":165031,"line_start":45,"line_end":45,"column_start":62,"column_end":68},"kind":{"Impl":{"id":194}},"from":{"krate":2,"index":46719},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/option.rs","byte_start":165312,"byte_end":165326,"line_start":54,"line_end":54,"column_start":70,"column_end":84},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":7010},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":171451,"byte_end":171462,"line_start":186,"line_end":186,"column_start":29,"column_end":40},"kind":{"Impl":{"id":262}},"from":{"krate":2,"index":3035},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":171686,"byte_end":171697,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"kind":{"Impl":{"id":263}},"from":{"krate":2,"index":3035},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":171887,"byte_end":171898,"line_start":201,"line_end":201,"column_start":74,"column_end":85},"kind":{"Impl":{"id":264}},"from":{"krate":2,"index":3035},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":172060,"byte_end":172073,"line_start":209,"line_end":209,"column_start":18,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":2,"index":38224},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":172282,"byte_end":172295,"line_start":217,"line_end":217,"column_start":45,"column_end":58},"kind":{"Impl":{"id":266}},"from":{"krate":2,"index":38224},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":172470,"byte_end":172483,"line_start":224,"line_end":224,"column_start":62,"column_end":75},"kind":{"Impl":{"id":267}},"from":{"krate":2,"index":38224},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":173090,"byte_end":173098,"line_start":250,"line_end":250,"column_start":54,"column_end":62},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":173721,"byte_end":173729,"line_start":276,"line_end":276,"column_start":54,"column_end":62},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":173984,"byte_end":173996,"line_start":287,"line_end":287,"column_start":18,"column_end":30},"kind":{"Impl":{"id":274}},"from":{"krate":2,"index":23628},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":174341,"byte_end":174353,"line_start":299,"line_end":299,"column_start":45,"column_end":57},"kind":{"Impl":{"id":275}},"from":{"krate":2,"index":23628},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":174527,"byte_end":174535,"line_start":306,"line_end":306,"column_start":61,"column_end":69},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":174850,"byte_end":174862,"line_start":317,"line_end":317,"column_start":18,"column_end":30},"kind":{"Impl":{"id":277}},"from":{"krate":2,"index":23820},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175207,"byte_end":175219,"line_start":329,"line_end":329,"column_start":45,"column_end":57},"kind":{"Impl":{"id":278}},"from":{"krate":2,"index":23820},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175393,"byte_end":175401,"line_start":336,"line_end":336,"column_start":61,"column_end":69},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175656,"byte_end":175667,"line_start":346,"line_end":346,"column_start":18,"column_end":29},"kind":{"Impl":{"id":280}},"from":{"krate":2,"index":47272},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":175987,"byte_end":175998,"line_start":357,"line_end":357,"column_start":45,"column_end":56},"kind":{"Impl":{"id":281}},"from":{"krate":2,"index":47272},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176191,"byte_end":176199,"line_start":365,"line_end":365,"column_start":60,"column_end":68},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176415,"byte_end":176426,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"kind":{"Impl":{"id":283}},"from":{"krate":2,"index":47236},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176746,"byte_end":176757,"line_start":386,"line_end":386,"column_start":45,"column_end":56},"kind":{"Impl":{"id":284}},"from":{"krate":2,"index":47236},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/primitive.rs","byte_start":176950,"byte_end":176958,"line_start":394,"line_end":394,"column_start":60,"column_end":68},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/result.rs","byte_start":177904,"byte_end":177910,"line_start":17,"line_end":17,"column_start":42,"column_end":48},"kind":{"Impl":{"id":286}},"from":{"krate":2,"index":46845},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/result.rs","byte_start":179126,"byte_end":179132,"line_start":48,"line_end":48,"column_start":79,"column_end":85},"kind":{"Impl":{"id":287}},"from":{"krate":2,"index":46845},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/result.rs","byte_start":179457,"byte_end":179471,"line_start":58,"line_end":58,"column_start":48,"column_end":62},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":7079},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/time.rs","byte_start":180135,"byte_end":180143,"line_start":4,"line_end":4,"column_start":18,"column_end":26},"kind":{"Impl":{"id":289}},"from":{"krate":2,"index":49313},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/time.rs","byte_start":180439,"byte_end":180447,"line_start":14,"line_end":14,"column_start":45,"column_end":53},"kind":{"Impl":{"id":290}},"from":{"krate":2,"index":49313},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/time.rs","byte_start":180617,"byte_end":180633,"line_start":21,"line_end":21,"column_start":57,"column_end":73},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7246},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":145078,"byte_end":145079,"line_start":17,"line_end":17,"column_start":28,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2350},"to":{"krate":0,"index":5421}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":145254,"byte_end":145255,"line_start":24,"line_end":24,"column_start":37,"column_end":38},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2354},"to":{"krate":0,"index":5416}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":145566,"byte_end":145567,"line_start":39,"line_end":39,"column_start":71,"column_end":72},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2359},"to":{"krate":0,"index":5424}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/core/mod.rs","byte_start":155251,"byte_end":155259,"line_start":350,"line_end":350,"column_start":84,"column_end":92},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5417},"to":{"krate":0,"index":5428}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":190583,"byte_end":190590,"line_start":12,"line_end":12,"column_start":57,"column_end":64},"kind":{"Impl":{"id":411}},"from":{"krate":1,"index":1086},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":190974,"byte_end":190981,"line_start":25,"line_end":25,"column_start":45,"column_end":52},"kind":{"Impl":{"id":412}},"from":{"krate":1,"index":1086},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":191450,"byte_end":191465,"line_start":39,"line_end":39,"column_start":42,"column_end":57},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":192053,"byte_end":192068,"line_start":55,"line_end":55,"column_start":37,"column_end":52},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_map.rs","byte_start":192457,"byte_end":192464,"line_start":69,"line_end":69,"column_start":44,"column_end":51},"kind":{"Impl":{"id":415}},"from":{"krate":1,"index":1086},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":192959,"byte_end":192966,"line_start":12,"line_end":12,"column_start":45,"column_end":52},"kind":{"Impl":{"id":416}},"from":{"krate":1,"index":1803},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":193337,"byte_end":193344,"line_start":25,"line_end":25,"column_start":33,"column_end":40},"kind":{"Impl":{"id":417}},"from":{"krate":1,"index":1803},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":193698,"byte_end":193713,"line_start":37,"line_end":37,"column_start":49,"column_end":64},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":194249,"byte_end":194264,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":870},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/collections/hash_set.rs","byte_start":194590,"byte_end":194597,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"kind":{"Impl":{"id":420}},"from":{"krate":1,"index":1803},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":195161,"byte_end":195165,"line_start":14,"line_end":14,"column_start":25,"column_end":29},"kind":{"Impl":{"id":421}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":5416}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":195497,"byte_end":195501,"line_start":30,"line_end":30,"column_start":25,"column_end":29},"kind":{"Impl":{"id":422}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":5421}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":195761,"byte_end":195765,"line_start":39,"line_end":39,"column_start":54,"column_end":58},"kind":{"Impl":{"id":423}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":5424}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":196194,"byte_end":196202,"line_start":53,"line_end":53,"column_start":86,"column_end":94},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5417},"to":{"krate":0,"index":5428}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":196790,"byte_end":196805,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":196968,"byte_end":196975,"line_start":81,"line_end":81,"column_start":37,"column_end":44},"kind":{"Impl":{"id":426}},"from":{"krate":1,"index":10438},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":197127,"byte_end":197134,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"kind":{"Impl":{"id":427}},"from":{"krate":1,"index":10438},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":197458,"byte_end":197465,"line_start":98,"line_end":98,"column_start":47,"column_end":54},"kind":{"Impl":{"id":428}},"from":{"krate":1,"index":10438},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/ffi.rs","byte_start":197703,"byte_end":197711,"line_start":105,"line_end":105,"column_start":56,"column_end":64},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5439},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":198741,"byte_end":198757,"line_start":16,"line_end":16,"column_start":6,"column_end":22},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201730,"byte_end":201746,"line_start":100,"line_end":100,"column_start":30,"column_end":46},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":201887,"byte_end":201895,"line_start":107,"line_end":107,"column_start":38,"column_end":46},"kind":{"Impl":{"id":432}},"from":{"krate":1,"index":10950},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202027,"byte_end":202043,"line_start":114,"line_end":114,"column_start":31,"column_end":47},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202220,"byte_end":202228,"line_start":121,"line_end":121,"column_start":39,"column_end":47},"kind":{"Impl":{"id":434}},"from":{"krate":1,"index":10950},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202382,"byte_end":202390,"line_start":128,"line_end":128,"column_start":18,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":1,"index":10950},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202661,"byte_end":202669,"line_start":138,"line_end":138,"column_start":45,"column_end":53},"kind":{"Impl":{"id":436}},"from":{"krate":1,"index":10950},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202839,"byte_end":202855,"line_start":145,"line_end":145,"column_start":57,"column_end":73},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6734},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":202995,"byte_end":203011,"line_start":154,"line_end":154,"column_start":6,"column_end":22},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204802,"byte_end":204818,"line_start":211,"line_end":211,"column_start":30,"column_end":46},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6760},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":204959,"byte_end":204967,"line_start":218,"line_end":218,"column_start":38,"column_end":46},"kind":{"Impl":{"id":440}},"from":{"krate":1,"index":10953},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205099,"byte_end":205115,"line_start":225,"line_end":225,"column_start":31,"column_end":47},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6760},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205292,"byte_end":205300,"line_start":232,"line_end":232,"column_start":39,"column_end":47},"kind":{"Impl":{"id":442}},"from":{"krate":1,"index":10953},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205454,"byte_end":205462,"line_start":239,"line_end":239,"column_start":18,"column_end":26},"kind":{"Impl":{"id":443}},"from":{"krate":1,"index":10953},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205734,"byte_end":205742,"line_start":249,"line_end":249,"column_start":45,"column_end":53},"kind":{"Impl":{"id":444}},"from":{"krate":1,"index":10953},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":205912,"byte_end":205928,"line_start":256,"line_end":256,"column_start":57,"column_end":73},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6760},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":206066,"byte_end":206080,"line_start":265,"line_end":265,"column_start":6,"column_end":20},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":207527,"byte_end":207541,"line_start":309,"line_end":309,"column_start":28,"column_end":42},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208122,"byte_end":208128,"line_start":331,"line_end":331,"column_start":36,"column_end":42},"kind":{"Impl":{"id":448}},"from":{"krate":1,"index":10926},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208256,"byte_end":208270,"line_start":338,"line_end":338,"column_start":29,"column_end":43},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208445,"byte_end":208451,"line_start":345,"line_end":345,"column_start":37,"column_end":43},"kind":{"Impl":{"id":450}},"from":{"krate":1,"index":10926},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":208841,"byte_end":208847,"line_start":365,"line_end":365,"column_start":18,"column_end":24},"kind":{"Impl":{"id":451}},"from":{"krate":1,"index":10926},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":209978,"byte_end":209984,"line_start":394,"line_end":394,"column_start":45,"column_end":51},"kind":{"Impl":{"id":452}},"from":{"krate":1,"index":10926},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210317,"byte_end":210331,"line_start":404,"line_end":404,"column_start":55,"column_end":69},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6786},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210686,"byte_end":210706,"line_start":416,"line_end":416,"column_start":6,"column_end":26},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":210949,"byte_end":210969,"line_start":424,"line_end":424,"column_start":24,"column_end":44},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6812},"to":{"krate":1,"index":4818}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211179,"byte_end":211199,"line_start":432,"line_end":432,"column_start":34,"column_end":54},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211358,"byte_end":211370,"line_start":439,"line_end":439,"column_start":42,"column_end":54},"kind":{"Impl":{"id":457}},"from":{"krate":1,"index":10920},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211510,"byte_end":211530,"line_start":446,"line_end":446,"column_start":35,"column_end":55},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211725,"byte_end":211737,"line_start":453,"line_end":453,"column_start":43,"column_end":55},"kind":{"Impl":{"id":459}},"from":{"krate":1,"index":10920},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":211895,"byte_end":211907,"line_start":460,"line_end":460,"column_start":18,"column_end":30},"kind":{"Impl":{"id":460}},"from":{"krate":1,"index":10920},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212312,"byte_end":212324,"line_start":473,"line_end":473,"column_start":45,"column_end":57},"kind":{"Impl":{"id":461}},"from":{"krate":1,"index":10920},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212498,"byte_end":212518,"line_start":480,"line_end":480,"column_start":61,"column_end":81},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6812},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":212752,"byte_end":212772,"line_start":490,"line_end":490,"column_start":6,"column_end":26},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213108,"byte_end":213128,"line_start":503,"line_end":503,"column_start":24,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6836},"to":{"krate":1,"index":4818}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213338,"byte_end":213358,"line_start":511,"line_end":511,"column_start":34,"column_end":54},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6836},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213517,"byte_end":213529,"line_start":518,"line_end":518,"column_start":42,"column_end":54},"kind":{"Impl":{"id":466}},"from":{"krate":1,"index":10923},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213669,"byte_end":213689,"line_start":525,"line_end":525,"column_start":35,"column_end":55},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6836},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":213884,"byte_end":213896,"line_start":532,"line_end":532,"column_start":43,"column_end":55},"kind":{"Impl":{"id":468}},"from":{"krate":1,"index":10923},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":214054,"byte_end":214066,"line_start":539,"line_end":539,"column_start":18,"column_end":30},"kind":{"Impl":{"id":469}},"from":{"krate":1,"index":10923},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":214671,"byte_end":214683,"line_start":556,"line_end":556,"column_start":45,"column_end":57},"kind":{"Impl":{"id":470}},"from":{"krate":1,"index":10923},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":214857,"byte_end":214877,"line_start":563,"line_end":563,"column_start":61,"column_end":81},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6836},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215202,"byte_end":215220,"line_start":578,"line_end":578,"column_start":6,"column_end":24},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":215904,"byte_end":215922,"line_start":598,"line_end":598,"column_start":24,"column_end":42},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6862},"to":{"krate":1,"index":4818}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216125,"byte_end":216143,"line_start":606,"line_end":606,"column_start":32,"column_end":50},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216295,"byte_end":216305,"line_start":613,"line_end":613,"column_start":40,"column_end":50},"kind":{"Impl":{"id":475}},"from":{"krate":1,"index":10896},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216441,"byte_end":216459,"line_start":620,"line_end":620,"column_start":33,"column_end":51},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":216647,"byte_end":216657,"line_start":627,"line_end":627,"column_start":41,"column_end":51},"kind":{"Impl":{"id":477}},"from":{"krate":1,"index":10896},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":217079,"byte_end":217089,"line_start":647,"line_end":647,"column_start":18,"column_end":28},"kind":{"Impl":{"id":478}},"from":{"krate":1,"index":10896},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":218256,"byte_end":218266,"line_start":676,"line_end":676,"column_start":45,"column_end":55},"kind":{"Impl":{"id":479}},"from":{"krate":1,"index":10896},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/impls/std/net.rs","byte_start":218619,"byte_end":218637,"line_start":686,"line_end":686,"column_start":59,"column_end":77},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6862},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220105,"byte_end":220121,"line_start":13,"line_end":13,"column_start":6,"column_end":22},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":220567,"byte_end":220583,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":221608,"byte_end":221622,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":222435,"byte_end":222455,"line_start":82,"line_end":82,"column_start":6,"column_end":26},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":223216,"byte_end":223236,"line_start":107,"line_end":107,"column_start":6,"column_end":26},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/net.rs","byte_start":224456,"byte_end":224474,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":226159,"byte_end":226176,"line_start":25,"line_end":25,"column_start":34,"column_end":51},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":228307,"byte_end":228324,"line_start":100,"line_end":100,"column_start":34,"column_end":51},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":229923,"byte_end":229940,"line_start":151,"line_end":151,"column_start":49,"column_end":66},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230253,"byte_end":230270,"line_start":164,"line_end":164,"column_start":46,"column_end":63},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230339,"byte_end":230356,"line_start":166,"line_end":166,"column_start":62,"column_end":79},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230519,"byte_end":230536,"line_start":173,"line_end":173,"column_start":48,"column_end":65},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230718,"byte_end":230735,"line_start":180,"line_end":180,"column_start":60,"column_end":77},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":230908,"byte_end":230925,"line_start":187,"line_end":187,"column_start":62,"column_end":79},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231422,"byte_end":231426,"line_start":203,"line_end":203,"column_start":34,"column_end":38},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":3059},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":231655,"byte_end":231659,"line_start":213,"line_end":213,"column_start":45,"column_end":49},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":3059},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232111,"byte_end":232118,"line_start":228,"line_end":228,"column_start":26,"column_end":33},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":3072},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/niche/option_box.rs","byte_start":232343,"byte_end":232350,"line_start":238,"line_end":238,"column_start":37,"column_end":44},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":3072},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233396,"byte_end":233409,"line_start":19,"line_end":19,"column_start":36,"column_end":49},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6888},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":233613,"byte_end":233626,"line_start":28,"line_end":28,"column_start":24,"column_end":37},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234229,"byte_end":234242,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6888},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":234894,"byte_end":234916,"line_start":74,"line_end":74,"column_start":36,"column_end":58},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235135,"byte_end":235157,"line_start":84,"line_end":84,"column_start":24,"column_end":46},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":235760,"byte_end":235782,"line_start":105,"line_end":105,"column_start":28,"column_end":50},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236334,"byte_end":236351,"line_start":126,"line_end":126,"column_start":36,"column_end":53},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236527,"byte_end":236544,"line_start":134,"line_end":134,"column_start":24,"column_end":41},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":236840,"byte_end":236857,"line_start":146,"line_end":146,"column_start":28,"column_end":45},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6938},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237391,"byte_end":237406,"line_start":167,"line_end":167,"column_start":36,"column_end":51},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237580,"byte_end":237595,"line_start":175,"line_end":175,"column_start":24,"column_end":39},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":237891,"byte_end":237906,"line_start":187,"line_end":187,"column_start":28,"column_end":43},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238465,"byte_end":238489,"line_start":208,"line_end":208,"column_start":36,"column_end":60},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6986},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238664,"byte_end":238688,"line_start":216,"line_end":216,"column_start":24,"column_end":48},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ops.rs","byte_start":238984,"byte_end":239008,"line_start":228,"line_end":228,"column_start":28,"column_end":52},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6986},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":239933,"byte_end":239947,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242502,"byte_end":242516,"line_start":114,"line_end":114,"column_start":16,"column_end":30},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":242910,"byte_end":242924,"line_start":125,"line_end":125,"column_start":19,"column_end":33},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243329,"byte_end":243343,"line_start":136,"line_end":136,"column_start":20,"column_end":34},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243386,"byte_end":243400,"line_start":138,"line_end":138,"column_start":36,"column_end":50},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243537,"byte_end":243551,"line_start":145,"line_end":145,"column_start":22,"column_end":36},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243707,"byte_end":243721,"line_start":152,"line_end":152,"column_start":34,"column_end":48},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":243868,"byte_end":243882,"line_start":159,"line_end":159,"column_start":36,"column_end":50},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244079,"byte_end":244093,"line_start":166,"line_end":166,"column_start":51,"column_end":65},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244485,"byte_end":244491,"line_start":181,"line_end":181,"column_start":59,"column_end":65},"kind":{"Impl":{"id":523}},"from":{"krate":2,"index":46719},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":244922,"byte_end":244926,"line_start":197,"line_end":197,"column_start":26,"column_end":30},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245147,"byte_end":245151,"line_start":207,"line_end":207,"column_start":37,"column_end":41},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245586,"byte_end":245593,"line_start":222,"line_end":222,"column_start":26,"column_end":33},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/option.rs","byte_start":245818,"byte_end":245825,"line_start":232,"line_end":232,"column_start":37,"column_end":44},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":246930,"byte_end":246940,"line_start":20,"line_end":20,"column_start":37,"column_end":47},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248570,"byte_end":248580,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248710,"byte_end":248720,"line_start":78,"line_end":78,"column_start":51,"column_end":61},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":248864,"byte_end":248874,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249041,"byte_end":249051,"line_start":92,"line_end":92,"column_start":47,"column_end":57},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249231,"byte_end":249241,"line_start":101,"line_end":101,"column_start":69,"column_end":79},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249410,"byte_end":249420,"line_start":108,"line_end":108,"column_start":49,"column_end":59},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249495,"byte_end":249505,"line_start":110,"line_end":110,"column_start":65,"column_end":75},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249657,"byte_end":249667,"line_start":116,"line_end":116,"column_start":51,"column_end":61},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":249824,"byte_end":249834,"line_start":122,"line_end":122,"column_start":53,"column_end":63},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250080,"byte_end":250090,"line_start":132,"line_end":132,"column_start":54,"column_end":64},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250347,"byte_end":250357,"line_start":142,"line_end":142,"column_start":29,"column_end":39},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":250891,"byte_end":250905,"line_start":165,"line_end":165,"column_start":37,"column_end":51},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":3380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rc/mod.rs","byte_start":253284,"byte_end":253298,"line_start":233,"line_end":233,"column_start":65,"column_end":79},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":3380},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":254734,"byte_end":254745,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":255175,"byte_end":255186,"line_start":36,"line_end":36,"column_start":28,"column_end":39},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7020},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":256474,"byte_end":256478,"line_start":70,"line_end":70,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3027},"to":{"krate":0,"index":3455}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":259946,"byte_end":259955,"line_start":159,"line_end":159,"column_start":17,"column_end":26},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262019,"byte_end":262028,"line_start":224,"line_end":224,"column_start":36,"column_end":45},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":3459},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":262240,"byte_end":262249,"line_start":232,"line_end":232,"column_start":34,"column_end":43},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":3459},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":264030,"byte_end":264036,"line_start":273,"line_end":273,"column_start":20,"column_end":26},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":265135,"byte_end":265141,"line_start":304,"line_end":304,"column_start":45,"column_end":51},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":266154,"byte_end":266160,"line_start":338,"line_end":338,"column_start":45,"column_end":51},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":269263,"byte_end":269269,"line_start":433,"line_end":433,"column_start":64,"column_end":70},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/rel_ptr/mod.rs","byte_start":269601,"byte_end":269607,"line_start":445,"line_end":445,"column_start":62,"column_end":68},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":9565}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":270684,"byte_end":270698,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272262,"byte_end":272276,"line_start":73,"line_end":73,"column_start":19,"column_end":33},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":7079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":272746,"byte_end":272760,"line_start":87,"line_end":87,"column_start":22,"column_end":36},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":7079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273524,"byte_end":273528,"line_start":110,"line_end":110,"column_start":26,"column_end":30},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":273749,"byte_end":273753,"line_start":120,"line_end":120,"column_start":37,"column_end":41},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274143,"byte_end":274150,"line_start":135,"line_end":135,"column_start":26,"column_end":33},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":3580},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274375,"byte_end":274382,"line_start":145,"line_end":145,"column_start":37,"column_end":44},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":3580},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274499,"byte_end":274513,"line_start":151,"line_end":151,"column_start":27,"column_end":41},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7079},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274574,"byte_end":274588,"line_start":153,"line_end":153,"column_start":51,"column_end":65},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7079},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274736,"byte_end":274750,"line_start":160,"line_end":160,"column_start":30,"column_end":44},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7079},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":274918,"byte_end":274932,"line_start":167,"line_end":167,"column_start":48,"column_end":62},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7079},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":275097,"byte_end":275111,"line_start":174,"line_end":174,"column_start":51,"column_end":65},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7079},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":275329,"byte_end":275343,"line_start":181,"line_end":181,"column_start":74,"column_end":88},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":7079},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/result.rs","byte_start":275984,"byte_end":275990,"line_start":203,"line_end":203,"column_start":82,"column_end":88},"kind":{"Impl":{"id":567}},"from":{"krate":2,"index":46845},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":291880,"byte_end":291897,"line_start":30,"line_end":30,"column_start":29,"column_end":46},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292231,"byte_end":292248,"line_start":44,"line_end":44,"column_start":30,"column_end":47},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7092},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292383,"byte_end":292400,"line_start":53,"line_end":53,"column_start":22,"column_end":39},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7092},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":292505,"byte_end":292522,"line_start":57,"line_end":57,"column_start":68,"column_end":85},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7092},"to":{"krate":0,"index":4004}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294296,"byte_end":294307,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":7098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294842,"byte_end":294853,"line_start":136,"line_end":136,"column_start":34,"column_end":45},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7098},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":294949,"byte_end":294960,"line_start":142,"line_end":142,"column_start":35,"column_end":46},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7098},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":295071,"byte_end":295082,"line_start":146,"line_end":146,"column_start":39,"column_end":50},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7098},"to":{"krate":0,"index":4023}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":296325,"byte_end":296342,"line_start":183,"line_end":183,"column_start":23,"column_end":40},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7105},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297405,"byte_end":297422,"line_start":212,"line_end":212,"column_start":20,"column_end":37},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7105},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":297764,"byte_end":297776,"line_start":225,"line_end":225,"column_start":6,"column_end":18},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298210,"byte_end":298222,"line_start":243,"line_end":243,"column_start":15,"column_end":27},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298430,"byte_end":298442,"line_start":253,"line_end":253,"column_start":18,"column_end":30},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298519,"byte_end":298531,"line_start":259,"line_end":259,"column_start":19,"column_end":31},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7118},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":298595,"byte_end":298607,"line_start":263,"line_end":263,"column_start":23,"column_end":35},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7118},"to":{"krate":0,"index":4023}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300256,"byte_end":300279,"line_start":309,"line_end":309,"column_start":23,"column_end":46},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7123},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300567,"byte_end":300590,"line_start":321,"line_end":321,"column_start":20,"column_end":43},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7123},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300785,"byte_end":300803,"line_start":330,"line_end":330,"column_start":6,"column_end":24},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":300997,"byte_end":301015,"line_start":340,"line_end":340,"column_start":18,"column_end":36},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7129},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":301106,"byte_end":301124,"line_start":347,"line_end":347,"column_start":19,"column_end":37},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7129},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/alloc.rs","byte_start":301205,"byte_end":301223,"line_start":351,"line_end":351,"column_start":34,"column_end":52},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7129},"to":{"krate":0,"index":4026}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":302710,"byte_end":302731,"line_start":26,"line_end":26,"column_start":23,"column_end":44},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7133},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":303239,"byte_end":303260,"line_start":46,"line_end":46,"column_start":20,"column_end":41},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7133},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":304383,"byte_end":304399,"line_start":90,"line_end":90,"column_start":9,"column_end":25},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":305043,"byte_end":305059,"line_start":112,"line_end":112,"column_start":30,"column_end":46},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7140},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":305168,"byte_end":305184,"line_start":119,"line_end":119,"column_start":22,"column_end":38},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7140},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":305269,"byte_end":305285,"line_start":123,"line_end":123,"column_start":37,"column_end":53},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7140},"to":{"krate":0,"index":4004}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":306825,"byte_end":306846,"line_start":173,"line_end":173,"column_start":23,"column_end":44},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7147},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307624,"byte_end":307645,"line_start":197,"line_end":197,"column_start":28,"column_end":49},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7147},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":307789,"byte_end":307802,"line_start":206,"line_end":206,"column_start":9,"column_end":22},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308218,"byte_end":308231,"line_start":223,"line_end":223,"column_start":30,"column_end":43},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7159},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308326,"byte_end":308339,"line_start":229,"line_end":229,"column_start":22,"column_end":35},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7159},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":308451,"byte_end":308464,"line_start":233,"line_end":233,"column_start":64,"column_end":77},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7159},"to":{"krate":0,"index":4023}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310217,"byte_end":310232,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310435,"byte_end":310450,"line_start":294,"line_end":294,"column_start":42,"column_end":57},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7166},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310622,"byte_end":310637,"line_start":303,"line_end":303,"column_start":35,"column_end":50},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7166},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/core.rs","byte_start":310732,"byte_end":310747,"line_start":307,"line_end":307,"column_start":57,"column_end":72},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7166},"to":{"krate":0,"index":4023}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312209,"byte_end":312224,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312791,"byte_end":312806,"line_start":45,"line_end":45,"column_start":33,"column_end":48},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7175},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/std.rs","byte_start":312877,"byte_end":312892,"line_start":49,"line_end":49,"column_start":35,"column_end":50},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7175},"to":{"krate":0,"index":4004}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":284464,"byte_end":284488,"line_start":37,"line_end":37,"column_start":32,"column_end":56},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7182},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285011,"byte_end":285035,"line_start":56,"line_end":56,"column_start":29,"column_end":53},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7182},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":285677,"byte_end":285696,"line_start":80,"line_end":80,"column_start":15,"column_end":34},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286446,"byte_end":286465,"line_start":106,"line_end":106,"column_start":54,"column_end":73},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7200},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286716,"byte_end":286735,"line_start":117,"line_end":117,"column_start":58,"column_end":77},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7200},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":286884,"byte_end":286903,"line_start":121,"line_end":121,"column_start":62,"column_end":81},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7200},"to":{"krate":0,"index":4004}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":288578,"byte_end":288597,"line_start":179,"line_end":179,"column_start":66,"column_end":85},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7200},"to":{"krate":0,"index":4023}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/serializers/mod.rs","byte_start":289184,"byte_end":289203,"line_start":196,"line_end":196,"column_start":9,"column_end":28},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7200},"to":{"krate":0,"index":4026}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":276998,"byte_end":277006,"line_start":16,"line_end":16,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":5399},"to":{"krate":0,"index":4004}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281138,"byte_end":281146,"line_start":127,"line_end":127,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":5399},"to":{"krate":0,"index":4023}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/ser/mod.rs","byte_start":281883,"byte_end":281891,"line_start":147,"line_end":147,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":5399},"to":{"krate":0,"index":4026}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/repr.rs","byte_start":320416,"byte_end":320434,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":4062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":313857,"byte_end":313871,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315392,"byte_end":315406,"line_start":75,"line_end":75,"column_start":21,"column_end":35},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315506,"byte_end":315520,"line_start":82,"line_end":82,"column_start":22,"column_end":36},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315619,"byte_end":315633,"line_start":89,"line_end":89,"column_start":21,"column_end":35},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315779,"byte_end":315793,"line_start":96,"line_end":96,"column_start":16,"column_end":30},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":315926,"byte_end":315940,"line_start":105,"line_end":105,"column_start":23,"column_end":37},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316085,"byte_end":316099,"line_start":112,"line_end":112,"column_start":13,"column_end":27},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316124,"byte_end":316138,"line_start":114,"line_end":114,"column_start":21,"column_end":35},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316738,"byte_end":316752,"line_start":141,"line_end":141,"column_start":14,"column_end":28},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":316890,"byte_end":316904,"line_start":148,"line_end":148,"column_start":20,"column_end":34},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317031,"byte_end":317045,"line_start":155,"line_end":155,"column_start":21,"column_end":35},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317213,"byte_end":317227,"line_start":162,"line_end":162,"column_start":26,"column_end":40},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/string/mod.rs","byte_start":317363,"byte_end":317377,"line_start":169,"line_end":169,"column_start":25,"column_end":39},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/time.rs","byte_start":325264,"byte_end":325280,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":337927,"byte_end":337937,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":338131,"byte_end":338141,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":4238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353706,"byte_end":353709,"line_start":562,"line_end":562,"column_start":27,"column_end":30},"kind":{"Impl":{"id":633}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353828,"byte_end":353838,"line_start":569,"line_end":569,"column_start":22,"column_end":32},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":353953,"byte_end":353963,"line_start":576,"line_end":576,"column_start":22,"column_end":32},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354067,"byte_end":354077,"line_start":583,"line_end":583,"column_start":23,"column_end":33},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354184,"byte_end":354194,"line_start":590,"line_end":590,"column_start":26,"column_end":36},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":2619}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354307,"byte_end":354317,"line_start":597,"line_end":597,"column_start":16,"column_end":26},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354630,"byte_end":354640,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354777,"byte_end":354787,"line_start":616,"line_end":616,"column_start":18,"column_end":28},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":354875,"byte_end":354885,"line_start":623,"line_end":623,"column_start":16,"column_end":26},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355017,"byte_end":355027,"line_start":632,"line_end":632,"column_start":19,"column_end":29},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355178,"byte_end":355188,"line_start":639,"line_end":639,"column_start":47,"column_end":57},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355403,"byte_end":355413,"line_start":648,"line_end":648,"column_start":50,"column_end":60},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":355583,"byte_end":355593,"line_start":656,"line_end":656,"column_start":20,"column_end":30},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":4238},"to":{"krate":1,"index":4509}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":356234,"byte_end":356244,"line_start":684,"line_end":684,"column_start":22,"column_end":32},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":356270,"byte_end":356280,"line_start":686,"line_end":686,"column_start":22,"column_end":32},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/aligned_vec.rs","byte_start":356300,"byte_end":356310,"line_start":688,"line_end":688,"column_start":16,"column_end":26},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":4238},"to":{"krate":2,"index":3058}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357319,"byte_end":357329,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":357521,"byte_end":357531,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":4335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":366649,"byte_end":366659,"line_start":304,"line_end":304,"column_start":9,"column_end":19},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":4335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367256,"byte_end":367266,"line_start":323,"line_end":323,"column_start":24,"column_end":34},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367385,"byte_end":367395,"line_start":330,"line_end":330,"column_start":24,"column_end":34},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367503,"byte_end":367513,"line_start":337,"line_end":337,"column_start":25,"column_end":35},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367624,"byte_end":367634,"line_start":344,"line_end":344,"column_start":28,"column_end":38},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":2619}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367769,"byte_end":367779,"line_start":351,"line_end":351,"column_start":36,"column_end":46},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":367925,"byte_end":367935,"line_start":358,"line_end":358,"column_start":24,"column_end":34},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368077,"byte_end":368087,"line_start":367,"line_end":367,"column_start":27,"column_end":37},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368248,"byte_end":368258,"line_start":374,"line_end":374,"column_start":54,"column_end":64},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368482,"byte_end":368492,"line_start":383,"line_end":383,"column_start":57,"column_end":67},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":368933,"byte_end":368938,"line_start":400,"line_end":400,"column_start":36,"column_end":41},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369111,"byte_end":369116,"line_start":407,"line_end":407,"column_start":9,"column_end":14},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":4404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369303,"byte_end":369308,"line_start":415,"line_end":415,"column_start":24,"column_end":29},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369403,"byte_end":369408,"line_start":421,"line_end":421,"column_start":22,"column_end":27},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369740,"byte_end":369745,"line_start":437,"line_end":437,"column_start":33,"column_end":38},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":7675}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":369949,"byte_end":369954,"line_start":446,"line_end":446,"column_start":18,"column_end":23},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":370237,"byte_end":370246,"line_start":452,"line_end":452,"column_start":34,"column_end":43},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":4433},"to":{"krate":2,"index":3256}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":371521,"byte_end":371526,"line_start":487,"line_end":487,"column_start":31,"column_end":36},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/scratch_vec.rs","byte_start":371576,"byte_end":371581,"line_start":489,"line_end":489,"column_start":39,"column_end":44},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":8090}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336618,"byte_end":336630,"line_start":213,"line_end":213,"column_start":34,"column_end":46},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7270},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336724,"byte_end":336736,"line_start":219,"line_end":219,"column_start":32,"column_end":44},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7270},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":336882,"byte_end":336894,"line_start":228,"line_end":228,"column_start":35,"column_end":47},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7270},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":337031,"byte_end":337043,"line_start":235,"line_end":235,"column_start":38,"column_end":50},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7270},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/util/mod.rs","byte_start":337165,"byte_end":337177,"line_start":242,"line_end":242,"column_start":38,"column_end":50},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7270},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":372672,"byte_end":372683,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":4563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":377734,"byte_end":377745,"line_start":179,"line_end":179,"column_start":24,"column_end":35},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":377853,"byte_end":377864,"line_start":186,"line_end":186,"column_start":25,"column_end":36},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2616}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":377983,"byte_end":377994,"line_start":193,"line_end":193,"column_start":36,"column_end":47},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378147,"byte_end":378158,"line_start":199,"line_end":199,"column_start":19,"column_end":30},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378293,"byte_end":378304,"line_start":208,"line_end":208,"column_start":20,"column_end":31},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378347,"byte_end":378358,"line_start":210,"line_end":210,"column_start":36,"column_end":47},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378517,"byte_end":378528,"line_start":217,"line_end":217,"column_start":42,"column_end":53},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":3317}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378710,"byte_end":378721,"line_start":226,"line_end":226,"column_start":22,"column_end":33},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":378902,"byte_end":378913,"line_start":233,"line_end":233,"column_start":56,"column_end":67},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379101,"byte_end":379112,"line_start":240,"line_end":240,"column_start":64,"column_end":75},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379444,"byte_end":379455,"line_start":254,"line_end":254,"column_start":45,"column_end":56},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379778,"byte_end":379789,"line_start":268,"line_end":268,"column_start":52,"column_end":63},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/vec.rs","byte_start":379989,"byte_end":380000,"line_start":275,"line_end":275,"column_start":41,"column_end":52},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":4563},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":397633,"byte_end":397640,"line_start":31,"line_end":31,"column_start":58,"column_end":65},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398017,"byte_end":398024,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398276,"byte_end":398283,"line_start":53,"line_end":53,"column_start":91,"column_end":98},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398542,"byte_end":398549,"line_start":63,"line_end":63,"column_start":60,"column_end":67},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":398989,"byte_end":398996,"line_start":79,"line_end":79,"column_start":40,"column_end":47},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":399286,"byte_end":399293,"line_start":90,"line_end":90,"column_start":79,"column_end":86},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":399646,"byte_end":399653,"line_start":105,"line_end":105,"column_start":40,"column_end":47},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":400043,"byte_end":400050,"line_start":120,"line_end":120,"column_start":69,"column_end":76},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":400347,"byte_end":400354,"line_start":130,"line_end":130,"column_start":85,"column_end":92},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":400731,"byte_end":400738,"line_start":145,"line_end":145,"column_start":45,"column_end":52},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":401187,"byte_end":401194,"line_start":160,"line_end":160,"column_start":74,"column_end":81},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":401533,"byte_end":401540,"line_start":170,"line_end":170,"column_start":91,"column_end":98},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":7428},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":401860,"byte_end":401865,"line_start":183,"line_end":183,"column_start":62,"column_end":67},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":402256,"byte_end":402261,"line_start":197,"line_end":197,"column_start":52,"column_end":57},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":402737,"byte_end":402742,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":403362,"byte_end":403367,"line_start":238,"line_end":238,"column_start":47,"column_end":52},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":403729,"byte_end":403734,"line_start":252,"line_end":252,"column_start":46,"column_end":51},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":404086,"byte_end":404091,"line_start":262,"line_end":262,"column_start":74,"column_end":79},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":404570,"byte_end":404575,"line_start":282,"line_end":282,"column_start":66,"column_end":71},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":7436},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":405030,"byte_end":405035,"line_start":299,"line_end":299,"column_start":49,"column_end":54},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":7436},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":405440,"byte_end":405445,"line_start":313,"line_end":313,"column_start":83,"column_end":88},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":7436},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":405918,"byte_end":405930,"line_start":333,"line_end":333,"column_start":42,"column_end":54},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":406282,"byte_end":406294,"line_start":347,"line_end":347,"column_start":41,"column_end":53},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":406788,"byte_end":406800,"line_start":362,"line_end":362,"column_start":69,"column_end":81},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":407486,"byte_end":407498,"line_start":384,"line_end":384,"column_start":44,"column_end":56},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":407876,"byte_end":407888,"line_start":398,"line_end":398,"column_start":43,"column_end":55},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":408397,"byte_end":408409,"line_start":413,"line_end":413,"column_start":73,"column_end":85},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":409160,"byte_end":409172,"line_start":438,"line_end":438,"column_start":63,"column_end":75},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/alloc.rs","byte_start":409591,"byte_end":409603,"line_start":452,"line_end":452,"column_start":62,"column_end":74},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":7440},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":413318,"byte_end":413324,"line_start":95,"line_end":95,"column_start":39,"column_end":45},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":7394},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":413826,"byte_end":413832,"line_start":113,"line_end":113,"column_start":66,"column_end":72},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":7394},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":414115,"byte_end":414121,"line_start":122,"line_end":122,"column_start":13,"column_end":19},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":7394},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":414922,"byte_end":414928,"line_start":148,"line_end":148,"column_start":39,"column_end":45},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":7394},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":415430,"byte_end":415436,"line_start":166,"line_end":166,"column_start":66,"column_end":72},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":7394},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/atomic.rs","byte_start":415695,"byte_end":415701,"line_start":174,"line_end":174,"column_start":13,"column_end":19},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":7394},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":416413,"byte_end":416419,"line_start":9,"line_end":9,"column_start":38,"column_end":44},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":7398},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":416768,"byte_end":416774,"line_start":24,"line_end":24,"column_start":70,"column_end":76},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":7398},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":416981,"byte_end":416989,"line_start":31,"line_end":31,"column_start":54,"column_end":62},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":7406},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":417412,"byte_end":417420,"line_start":46,"line_end":46,"column_start":86,"column_end":94},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":7406},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":417650,"byte_end":417655,"line_start":53,"line_end":53,"column_start":53,"column_end":58},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":7402},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":418075,"byte_end":418080,"line_start":68,"line_end":68,"column_start":85,"column_end":90},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":7402},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/core.rs","byte_start":418334,"byte_end":418339,"line_start":75,"line_end":75,"column_start":79,"column_end":84},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":7402},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":419192,"byte_end":419200,"line_start":22,"line_end":22,"column_start":32,"column_end":40},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":7410},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":419718,"byte_end":419726,"line_start":39,"line_end":39,"column_start":59,"column_end":67},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":7410},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":420138,"byte_end":420146,"line_start":53,"line_end":53,"column_start":77,"column_end":85},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":7410},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":420349,"byte_end":420357,"line_start":60,"line_end":60,"column_start":31,"column_end":39},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":7410},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":420873,"byte_end":420881,"line_start":77,"line_end":77,"column_start":58,"column_end":66},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":7410},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":421291,"byte_end":421299,"line_start":91,"line_end":91,"column_start":76,"column_end":84},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":7410},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":421522,"byte_end":421526,"line_start":100,"line_end":100,"column_start":44,"column_end":48},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":7419},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":422452,"byte_end":422456,"line_start":122,"line_end":122,"column_start":76,"column_end":80},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":7419},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":422794,"byte_end":422798,"line_start":135,"line_end":135,"column_start":62,"column_end":66},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":7419},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":423091,"byte_end":423095,"line_start":146,"line_end":146,"column_start":45,"column_end":49},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":7419},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":424025,"byte_end":424029,"line_start":168,"line_end":168,"column_start":77,"column_end":81},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":7419},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":424369,"byte_end":424373,"line_start":181,"line_end":181,"column_start":63,"column_end":67},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":7419},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":424694,"byte_end":424699,"line_start":194,"line_end":194,"column_start":61,"column_end":66},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":425088,"byte_end":425093,"line_start":208,"line_end":208,"column_start":51,"column_end":56},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":425567,"byte_end":425572,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":426195,"byte_end":426200,"line_start":249,"line_end":249,"column_start":46,"column_end":51},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5334}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":426560,"byte_end":426565,"line_start":263,"line_end":263,"column_start":45,"column_end":50},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/std.rs","byte_start":426915,"byte_end":426920,"line_start":273,"line_end":273,"column_start":73,"column_end":78},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":7432},"to":{"krate":0,"index":5354}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383291,"byte_end":383295,"line_start":52,"line_end":52,"column_start":20,"column_end":24},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":7378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383825,"byte_end":383829,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":7378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":383999,"byte_end":384003,"line_start":75,"line_end":75,"column_start":33,"column_end":37},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":7378},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387521,"byte_end":387525,"line_start":194,"line_end":194,"column_start":48,"column_end":52},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":7378},"to":{"krate":0,"index":5405}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":387904,"byte_end":387915,"line_start":205,"line_end":205,"column_start":59,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":5334},"to":{"krate":0,"index":5345}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388159,"byte_end":388163,"line_start":210,"line_end":210,"column_start":80,"column_end":84},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":7378},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":388658,"byte_end":388659,"line_start":223,"line_end":223,"column_start":49,"column_end":50},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":5360},"to":{"krate":0,"index":5412}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389103,"byte_end":389112,"line_start":243,"line_end":243,"column_start":17,"column_end":26},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":7387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":389260,"byte_end":389269,"line_start":251,"line_end":251,"column_start":27,"column_end":36},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":7387},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393040,"byte_end":393053,"line_start":414,"line_end":414,"column_start":23,"column_end":36},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":7414},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":393216,"byte_end":393229,"line_start":421,"line_end":421,"column_start":30,"column_end":43},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":7414},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394217,"byte_end":394226,"line_start":457,"line_end":457,"column_start":23,"column_end":32},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/with/mod.rs","byte_start":394389,"byte_end":394398,"line_start":464,"line_end":464,"column_start":30,"column_end":39},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":7423},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9058,"byte_end":9068,"line_start":204,"line_end":204,"column_start":19,"column_end":29},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":7444},"to":{"krate":0,"index":5399}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":9135,"byte_end":9145,"line_start":208,"line_end":208,"column_start":18,"column_end":28},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":7444},"to":{"krate":2,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":17623,"byte_end":17630,"line_start":417,"line_end":417,"column_start":44,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":5405},"to":{"krate":0,"index":5409}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":25290,"byte_end":25297,"line_start":605,"line_end":605,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":42},"to":{"krate":0,"index":5416}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":27844,"byte_end":27851,"line_start":666,"line_end":666,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":42},"to":{"krate":0,"index":5421}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28320,"byte_end":28334,"line_start":677,"line_end":677,"column_start":51,"column_end":65},"kind":"SuperTrait","from":{"krate":0,"index":5416},"to":{"krate":0,"index":5424}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/rkyv-0.7.25/src/lib.rs","byte_start":28789,"byte_end":28803,"line_start":686,"line_end":686,"column_start":74,"column_end":88},"kind":"SuperTrait","from":{"krate":0,"index":5421},"to":{"krate":0,"index":5428}}]}