{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cosmwasm_storage","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=513e77a82b10d1fa","-C","extra-filename=-513e77a82b10d1fa","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","--extern","cosmwasm_std=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libcosmwasm_std-9e5fd186309c2529.rmeta","--extern","serde=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libserde-9efeaa965d30d6e2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libcosmwasm_storage-513e77a82b10d1fa.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_storage","disambiguator":[13057358629916319952,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":20,"id":{"name":"serde","disambiguator":[15013803239269233867,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":21,"id":{"name":"serde_derive","disambiguator":[68729331767806002,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":22,"id":{"name":"cosmwasm_std","disambiguator":[8556545198225829419,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":23,"id":{"name":"schemars","disambiguator":[2843726790842278858,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":24,"id":{"name":"schemars_derive","disambiguator":[12967166779860933165,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":25,"id":{"name":"serde_json","disambiguator":[6532001585783556738,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":26,"id":{"name":"itoa","disambiguator":[14192373228791872193,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":27,"id":{"name":"ryu","disambiguator":[13056903353933179430,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":28,"id":{"name":"dyn_clone","disambiguator":[13100049144307428382,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":29,"id":{"name":"cosmwasm_crypto","disambiguator":[6088776335209047780,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":30,"id":{"name":"ed25519_zebra","disambiguator":[11281229020807469234,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":31,"id":{"name":"curve25519_dalek","disambiguator":[1724145624189480009,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":32,"id":{"name":"byteorder","disambiguator":[10759264828178175851,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":33,"id":{"name":"digest","disambiguator":[4531005751969928421,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":34,"id":{"name":"generic_array","disambiguator":[17892554489661742669,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":35,"id":{"name":"typenum","disambiguator":[15156522918217822298,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":36,"id":{"name":"rand_core","disambiguator":[15207504034317212721,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":37,"id":{"name":"getrandom","disambiguator":[2461200758836736362,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":38,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":39,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":40,"id":{"name":"zeroize","disambiguator":[2276605991629969330,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":41,"id":{"name":"subtle","disambiguator":[6726078597970934848,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":42,"id":{"name":"sha2","disambiguator":[16109763727755928091,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":43,"id":{"name":"block_buffer","disambiguator":[11489479260704319438,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":44,"id":{"name":"opaque_debug","disambiguator":[13793138413731508433,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":45,"id":{"name":"cpufeatures","disambiguator":[3616299460041371069,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":46,"id":{"name":"thiserror","disambiguator":[16785892052481984598,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":47,"id":{"name":"thiserror_impl","disambiguator":[13779193127495670924,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":48,"id":{"name":"hex","disambiguator":[11626158831599541981,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":49,"id":{"name":"k256","disambiguator":[4155192969036905968,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":50,"id":{"name":"elliptic_curve","disambiguator":[10128248842627429061,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":51,"id":{"name":"ff","disambiguator":[11880685279947974124,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":52,"id":{"name":"rand_core","disambiguator":[12576194308110560049,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":53,"id":{"name":"getrandom","disambiguator":[12460439178872030525,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":54,"id":{"name":"group","disambiguator":[15364403841980302897,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":55,"id":{"name":"pkcs8","disambiguator":[5916594609256562722,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":56,"id":{"name":"der","disambiguator":[7922860358167432054,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":57,"id":{"name":"const_oid","disambiguator":[5122259982311011022,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":58,"id":{"name":"spki","disambiguator":[18218567251837934111,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":59,"id":{"name":"crypto_bigint","disambiguator":[15780890602549992041,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":60,"id":{"name":"ecdsa","disambiguator":[14827619912947962317,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":61,"id":{"name":"hmac","disambiguator":[16472142244126576179,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":62,"id":{"name":"crypto_mac","disambiguator":[14678330675729968388,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":63,"id":{"name":"signature","disambiguator":[10175992934853656249,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":64,"id":{"name":"forward_ref","disambiguator":[13070892360798197713,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":65,"id":{"name":"cosmwasm_derive","disambiguator":[9190680493573712466,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":66,"id":{"name":"uint","disambiguator":[15616148857499711007,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":67,"id":{"name":"static_assertions","disambiguator":[3211594889311287531,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":68,"id":{"name":"crunchy","disambiguator":[14877014724138690532,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":69,"id":{"name":"base64","disambiguator":[11527856027903617124,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","num":70,"id":{"name":"serde_json_wasm","disambiguator":[3048715682188340037,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":0,"byte_end":483,"line_start":1,"line_end":13,"column_start":1,"column_end":78}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":143,"byte_end":149,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"alias_span":null,"name":"bucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":151,"byte_end":162,"line_start":9,"line_end":9,"column_start":26,"column_end":37},"alias_span":null,"name":"bucket_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":164,"byte_end":170,"line_start":9,"line_end":9,"column_start":39,"column_end":45},"alias_span":null,"name":"Bucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":172,"byte_end":186,"line_start":9,"line_end":9,"column_start":47,"column_end":61},"alias_span":null,"name":"ReadonlyBucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":215,"byte_end":233,"line_start":10,"line_end":10,"column_start":27,"column_end":45},"alias_span":null,"name":"to_length_prefixed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":107},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":235,"byte_end":260,"line_start":10,"line_end":10,"column_start":47,"column_end":72},"alias_span":null,"name":"to_length_prefixed_nested","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":290,"byte_end":298,"line_start":11,"line_end":11,"column_start":28,"column_end":36},"alias_span":null,"name":"prefixed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":300,"byte_end":313,"line_start":11,"line_end":11,"column_start":38,"column_end":51},"alias_span":null,"name":"prefixed_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":315,"byte_end":330,"line_start":11,"line_end":11,"column_start":53,"column_end":68},"alias_span":null,"name":"PrefixedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":332,"byte_end":355,"line_start":11,"line_end":11,"column_start":70,"column_end":93},"alias_span":null,"name":"ReadonlyPrefixedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":377,"byte_end":384,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"currval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":386,"byte_end":393,"line_start":12,"line_end":12,"column_start":29,"column_end":36},"alias_span":null,"name":"nextval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":395,"byte_end":403,"line_start":12,"line_end":12,"column_start":38,"column_end":46},"alias_span":null,"name":"sequence","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":426,"byte_end":435,"line_start":13,"line_end":13,"column_start":21,"column_end":30},"alias_span":null,"name":"singleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":437,"byte_end":451,"line_start":13,"line_end":13,"column_start":32,"column_end":46},"alias_span":null,"name":"singleton_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":453,"byte_end":470,"line_start":13,"line_end":13,"column_start":48,"column_end":65},"alias_span":null,"name":"ReadonlySingleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":472,"byte_end":481,"line_start":13,"line_end":13,"column_start":67,"column_end":76},"alias_span":null,"name":"Singleton","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","byte_start":0,"byte_end":483,"line_start":1,"line_end":13,"column_start":1,"column_end":78},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":130},{"krate":0,"index":195},{"krate":0,"index":210},{"krate":0,"index":279},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1122,"byte_end":1128,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"bucket","qualname":"::bucket::bucket","value":"pub fn bucket<'a, T>(&'a mut dyn Storage, &[u8]) -> Bucket where\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of Bucket::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of Bucket::new for less verbose usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1064,"byte_end":1114,"line_start":16,"line_end":16,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1351,"byte_end":1362,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"bucket_read","qualname":"::bucket::bucket_read","value":"pub fn bucket_read<'a, T>(&'a dyn Storage, &[u8]) -> ReadonlyBucket where\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyBucket::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyBucket::new for less verbose usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1285,"byte_end":1343,"line_start":24,"line_end":24,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1542,"byte_end":1548,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::bucket::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1885,"byte_end":1888,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Bucket>::new","value":"pub fn new(&'a mut dyn Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2095,"byte_end":2105,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<Bucket>::multilevel","value":"pub fn multilevel(&'a mut dyn Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2414,"byte_end":2418,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"save","qualname":"<Bucket>::save","value":"pub fn save(&mut Self, &[u8], &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2317,"byte_end":2402,"line_start":62,"line_end":62,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2578,"byte_end":2584,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"remove","qualname":"<Bucket>::remove","value":"pub fn remove(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2776,"byte_end":2780,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"load","qualname":"<Bucket>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2681,"byte_end":2764,"line_start":72,"line_end":72,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3084,"byte_end":3092,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Bucket>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":2932,"byte_end":3029,"line_start":78,"line_end":78,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3034,"byte_end":3072,"line_start":79,"line_end":79,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3291,"byte_end":3296,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"range","qualname":"<Bucket>::range","value":"pub fn range<'b>(&'b Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'b>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3251,"byte_end":3279,"line_start":85,"line_end":85,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3902,"byte_end":3908,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"update","qualname":"<Bucket>::update","value":"pub fn update<A, E>(&mut Self, &[u8], A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3624,"byte_end":3694,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3699,"byte_end":3785,"line_start":98,"line_end":98,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3790,"byte_end":3793,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":3798,"byte_end":3890,"line_start":100,"line_end":100,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":4205,"byte_end":4219,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ReadonlyBucket","qualname":"::bucket::ReadonlyBucket","value":"ReadonlyBucket {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":4560,"byte_end":4563,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyBucket>::new","value":"pub fn new(&'a dyn Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":4774,"byte_end":4784,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<ReadonlyBucket>::multilevel","value":"pub fn multilevel(&'a dyn Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5095,"byte_end":5099,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlyBucket>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5000,"byte_end":5083,"line_start":143,"line_end":143,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5403,"byte_end":5411,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlyBucket>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5251,"byte_end":5348,"line_start":149,"line_end":149,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5353,"byte_end":5391,"line_start":150,"line_end":150,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5610,"byte_end":5615,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"range","qualname":"<ReadonlyBucket>::range","value":"pub fn range<'b>(&'b Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'b>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":5570,"byte_end":5598,"line_start":156,"line_end":156,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/length_prefixed.rs","byte_start":14949,"byte_end":14967,"line_start":9,"line_end":9,"column_start":8,"column_end":26},"name":"to_length_prefixed","qualname":"::length_prefixed::to_length_prefixed","value":"pub fn to_length_prefixed(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the raw key prefix for a given namespace as documented\n in https://github.com/webmaster128/key-namespacing#length-prefixed-keys\n","sig":null,"attributes":[{"value":"/ Calculates the raw key prefix for a given namespace as documented","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/length_prefixed.rs","byte_start":14796,"byte_end":14865,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ in https://github.com/webmaster128/key-namespacing#length-prefixed-keys","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/length_prefixed.rs","byte_start":14866,"byte_end":14941,"line_start":8,"line_end":8,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/length_prefixed.rs","byte_start":15308,"byte_end":15333,"line_start":18,"line_end":18,"column_start":8,"column_end":33},"name":"to_length_prefixed_nested","qualname":"::length_prefixed::to_length_prefixed_nested","value":"pub fn to_length_prefixed_nested(&[&[u8]]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the raw key prefix for a given nested namespace\n as documented in https://github.com/webmaster128/key-namespacing#nesting\n","sig":null,"attributes":[{"value":"/ Calculates the raw key prefix for a given nested namespace","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/length_prefixed.rs","byte_start":15161,"byte_end":15223,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ as documented in https://github.com/webmaster128/key-namespacing#nesting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/length_prefixed.rs","byte_start":15224,"byte_end":15300,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":28890,"byte_end":28898,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"prefixed","qualname":"::prefixed_storage::prefixed","value":"pub fn prefixed<'a>(&'a mut dyn Storage, &[u8]) -> PrefixedStorage","parent":null,"children":[],"decl_id":null,"docs":" An alias of PrefixedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of PrefixedStorage::new for less verbose usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":28823,"byte_end":28882,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29099,"byte_end":29112,"line_start":16,"line_end":16,"column_start":8,"column_end":21},"name":"prefixed_read","qualname":"::prefixed_storage::prefixed_read","value":"pub fn prefixed_read<'a>(&'a dyn Storage, &[u8]) -> ReadonlyPrefixedStorage","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyPrefixedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyPrefixedStorage::new for less verbose usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29024,"byte_end":29091,"line_start":15,"line_end":15,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29272,"byte_end":29287,"line_start":23,"line_end":23,"column_start":12,"column_end":27},"name":"PrefixedStorage","qualname":"::prefixed_storage::PrefixedStorage","value":"PrefixedStorage {  }","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29394,"byte_end":29397,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<PrefixedStorage>::new","value":"pub fn new(&'a mut dyn Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29687,"byte_end":29697,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<PrefixedStorage>::multilevel","value":"pub fn multilevel(&'a mut dyn Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":30737,"byte_end":30760,"line_start":72,"line_end":72,"column_start":12,"column_end":35},"name":"ReadonlyPrefixedStorage","qualname":"::prefixed_storage::ReadonlyPrefixedStorage","value":"ReadonlyPrefixedStorage {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":30871,"byte_end":30874,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyPrefixedStorage>::new","value":"pub fn new(&'a dyn Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":31168,"byte_end":31178,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<ReadonlyPrefixedStorage>::multilevel","value":"pub fn multilevel(&'a dyn Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34252,"byte_end":34260,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"sequence","qualname":"::sequence::sequence","value":"pub fn sequence<'a>(&'a mut dyn Storage, &[u8]) -> Singleton","parent":null,"children":[],"decl_id":null,"docs":" Sequence creates a custom Singleton to hold an empty sequence\n","sig":null,"attributes":[{"value":"/ Sequence creates a custom Singleton to hold an empty sequence","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34179,"byte_end":34244,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34494,"byte_end":34501,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"currval","qualname":"::sequence::currval","value":"pub fn currval(&Singleton<, u64>) -> StdResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" currval returns the last value returned by nextval. If the sequence has never been used,\n then it will return 0.\n","sig":null,"attributes":[{"value":"/ currval returns the last value returned by nextval. If the sequence has never been used,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34367,"byte_end":34459,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ then it will return 0.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34460,"byte_end":34486,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":209},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34743,"byte_end":34750,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"nextval","qualname":"::sequence::nextval","value":"pub fn nextval(&mut Singleton<, u64>) -> StdResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" nextval increments the counter by 1 and returns the new value.\n On the first time it is called (no sequence info in db) it will return 1.\n","sig":null,"attributes":[{"value":"/ nextval increments the counter by 1 and returns the new value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34591,"byte_end":34657,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ On the first time it is called (no sequence info in db) it will return 1.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/sequence.rs","byte_start":34658,"byte_end":34735,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":36655,"byte_end":36664,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"singleton","qualname":"::singleton::singleton","value":"pub fn singleton<'a, T>(&'a mut dyn Storage, &[u8]) -> Singleton where\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of Singleton::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of Singleton::new for less verbose usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":36594,"byte_end":36647,"line_start":9,"line_end":9,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":36884,"byte_end":36898,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"singleton_read","qualname":"::singleton::singleton_read","value":"pub fn singleton_read<'a, T>(&'a dyn Storage, &[u8]) -> ReadonlySingleton\nwhere T: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlySingleton::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlySingleton::new for less verbose usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":36815,"byte_end":36876,"line_start":17,"line_end":17,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37396,"byte_end":37405,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"Singleton","qualname":"::singleton::Singleton","value":"Singleton {  }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" Singleton effectively combines PrefixedStorage with TypedStorage to\n work on a single storage key. It performs the to_length_prefixed transformation\n on the given name to ensure no collisions, and then provides the standard\n TypedStorage accessors, without requiring a key (which is defined in the constructor)\n","sig":null,"attributes":[{"value":"/ Singleton effectively combines PrefixedStorage with TypedStorage to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37061,"byte_end":37132,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ work on a single storage key. It performs the to_length_prefixed transformation","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37133,"byte_end":37216,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/ on the given name to ensure no collisions, and then provides the standard","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37217,"byte_end":37294,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ TypedStorage accessors, without requiring a key (which is defined in the constructor)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37295,"byte_end":37384,"line_start":28,"line_end":28,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37742,"byte_end":37745,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Singleton>::new","value":"pub fn new(&'a mut dyn Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38030,"byte_end":38034,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"save","qualname":"<Singleton>::save","value":"pub fn save(&mut Self, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37933,"byte_end":38018,"line_start":51,"line_end":51,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38161,"byte_end":38167,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"remove","qualname":"<Singleton>::remove","value":"pub fn remove(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38326,"byte_end":38330,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"load","qualname":"<Singleton>::load","value":"pub fn load(&Self) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38231,"byte_end":38314,"line_start":61,"line_end":61,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38601,"byte_end":38609,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Singleton>::may_load","value":"pub fn may_load(&Self) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38449,"byte_end":38546,"line_start":67,"line_end":67,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38551,"byte_end":38589,"line_start":68,"line_end":68,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39004,"byte_end":39010,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"update","qualname":"<Singleton>::update","value":"pub fn update<A, E>(&mut Self, A) -> Result<T, E> where A: FnOnce(T) ->\nResult<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" update will load the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful","sig":null,"attributes":[{"value":"/ update will load the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38735,"byte_end":38816,"line_start":74,"line_end":74,"column_start":5,"column_end":86}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38821,"byte_end":38906,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38911,"byte_end":38914,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This is the least stable of the APIs, and definitely needs some usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":38919,"byte_end":38992,"line_start":77,"line_end":77,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39392,"byte_end":39409,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"ReadonlySingleton","qualname":"::singleton::ReadonlySingleton","value":"ReadonlySingleton {  }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"decl_id":null,"docs":" ReadonlySingleton only requires a Storage and exposes only the\n methods of Singleton that don't modify state.\n","sig":null,"attributes":[{"value":"/ ReadonlySingleton only requires a Storage and exposes only the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39264,"byte_end":39330,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ methods of Singleton that don't modify state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39331,"byte_end":39380,"line_start":91,"line_end":91,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39750,"byte_end":39753,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlySingleton>::new","value":"pub fn new(&'a dyn Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":40040,"byte_end":40044,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlySingleton>::load","value":"pub fn load(&Self) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39945,"byte_end":40028,"line_start":114,"line_end":114,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":40315,"byte_end":40323,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlySingleton>::may_load","value":"pub fn may_load(&Self) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":40163,"byte_end":40260,"line_start":120,"line_end":120,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":40265,"byte_end":40303,"line_start":121,"line_end":121,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1815,"byte_end":1821,"line_start":42,"line_end":42,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":4482,"byte_end":4496,"line_start":123,"line_end":123,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29361,"byte_end":29376,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29906,"byte_end":29921,"line_start":46,"line_end":46,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":30830,"byte_end":30853,"line_start":77,"line_end":77,"column_start":10,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":31391,"byte_end":31414,"line_start":95,"line_end":95,"column_start":22,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37669,"byte_end":37678,"line_start":39,"line_end":39,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39669,"byte_end":39686,"line_start":102,"line_end":102,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":1815,"byte_end":1821,"line_start":42,"line_end":42,"column_start":13,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/bucket.rs","byte_start":4482,"byte_end":4496,"line_start":123,"line_end":123,"column_start":13,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29361,"byte_end":29376,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":29906,"byte_end":29921,"line_start":46,"line_end":46,"column_start":22,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":165},"to":{"krate":22,"index":2525}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":30830,"byte_end":30853,"line_start":77,"line_end":77,"column_start":10,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/prefixed_storage.rs","byte_start":31391,"byte_end":31414,"line_start":95,"line_end":95,"column_start":22,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":180},"to":{"krate":22,"index":2525}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":37669,"byte_end":37678,"line_start":39,"line_end":39,"column_start":13,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-1.0.0-beta6/src/singleton.rs","byte_start":39669,"byte_end":39686,"line_start":102,"line_end":102,"column_start":13,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}}]}