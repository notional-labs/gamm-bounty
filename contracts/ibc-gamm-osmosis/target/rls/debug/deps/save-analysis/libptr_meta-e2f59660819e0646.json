{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ptr_meta","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=e2f59660819e0646","-C","extra-filename=-e2f59660819e0646","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps","--extern","ptr_meta_derive=/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps/libptr_meta_derive-d71ad874fe2a7230.so","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps/libptr_meta-e2f59660819e0646.rmeta"},"prelude":{"crate_id":{"name":"ptr_meta","disambiguator":[6125517202723969929,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/impls.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","num":20,"id":{"name":"ptr_meta_derive","disambiguator":[9191551484565979,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":0,"byte_end":12870,"line_start":1,"line_end":441,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":30},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1248,"byte_end":1255,"line_start":58,"line_end":58,"column_start":27,"column_end":34},"alias_span":null,"name":"pointee","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":28},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1257,"byte_end":1264,"line_start":58,"line_end":58,"column_start":36,"column_end":43},"alias_span":null,"name":"Pointee","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":0,"byte_end":12870,"line_start":1,"line_end":441,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136}],"decl_id":null,"docs":" A radioactive stabilization of the [`ptr_meta` RFC][rfc].","sig":null,"attributes":[{"value":"/ A radioactive stabilization of the [`ptr_meta` RFC][rfc].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [rfc]: https://rust-lang.github.io/rfcs/2580-ptr-meta.html","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":66,"byte_end":128,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":129,"byte_end":132,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":133,"byte_end":145,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":146,"byte_end":149,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ### Sized types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":150,"byte_end":169,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":170,"byte_end":173,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Sized types already have `Pointee` implemented for them, so most of the time you won't have to worry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":174,"byte_end":278,"line_start":9,"line_end":9,"column_start":1,"column_end":105}},{"value":"/ about them. However, trying to derive `Pointee` for a struct that may or may not have a DST as its","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":279,"byte_end":381,"line_start":10,"line_end":10,"column_start":1,"column_end":103}},{"value":"/ last field will cause an implementation conflict with the automatic sized implementation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":382,"byte_end":475,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":476,"byte_end":479,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ### `slice`s and `str`s","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":480,"byte_end":507,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":508,"byte_end":511,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ These core types have implementations built in.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":512,"byte_end":563,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":564,"byte_end":567,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Structs with a DST as its last field","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":568,"byte_end":612,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":613,"byte_end":616,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ You can derive `Pointee` for last-field DSTs:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":617,"byte_end":666,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":667,"byte_end":670,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":671,"byte_end":678,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use ptr_meta::Pointee;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":679,"byte_end":705,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":706,"byte_end":709,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #[derive(Pointee)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":710,"byte_end":732,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ struct Block<H, T> {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":733,"byte_end":757,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/     header: H,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":758,"byte_end":776,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/     elements: [T],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":777,"byte_end":799,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":800,"byte_end":805,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":806,"byte_end":813,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":814,"byte_end":817,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ### Trait objects","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":818,"byte_end":839,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":840,"byte_end":843,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ You can generate a `Pointee` for trait objects:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":844,"byte_end":895,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":896,"byte_end":899,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":900,"byte_end":907,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use ptr_meta::pointee;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":908,"byte_end":934,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":935,"byte_end":938,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Generates Pointee for dyn Stringy","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":939,"byte_end":979,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ #[pointee]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":980,"byte_end":994,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/ trait Stringy {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":995,"byte_end":1014,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/     fn as_string(&self) -> String;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1015,"byte_end":1053,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1054,"byte_end":1059,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1060,"byte_end":1067,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3262,"byte_end":3269,"line_start":106,"line_end":106,"column_start":11,"column_end":18},"name":"Pointee","qualname":"::Pointee","value":"Pointee","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Provides the pointer metadata type of any pointed-to type.","sig":null,"attributes":[{"value":"/ Provides the pointer metadata type of any pointed-to type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1268,"byte_end":1330,"line_start":60,"line_end":60,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1331,"byte_end":1334,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Pointer metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1335,"byte_end":1357,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1358,"byte_end":1361,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Raw pointer types and reference types in Rust can be thought of as made of two parts:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1362,"byte_end":1451,"line_start":64,"line_end":64,"column_start":1,"column_end":90}},{"value":"/ a data pointer that contains the memory address of the value, and some metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1452,"byte_end":1536,"line_start":65,"line_end":65,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1537,"byte_end":1540,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ For statically-sized types (that implement the `Sized` traits)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1541,"byte_end":1607,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ as well as for `extern` types,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1608,"byte_end":1642,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ pointers are said to be “thin”: metadata is zero-sized and its type is `()`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1643,"byte_end":1727,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1728,"byte_end":1731,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Pointers to [dynamically-sized types][dst] are said to be “wide” or “fat”,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1732,"byte_end":1818,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ they have non-zero-sized metadata:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1819,"byte_end":1857,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1858,"byte_end":1861,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ * For structs whose last field is a DST, metadata is the metadata for the last field","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1862,"byte_end":1950,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ * For the `str` type, metadata is the length in bytes as `usize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":1951,"byte_end":2019,"line_start":75,"line_end":75,"column_start":1,"column_end":69}},{"value":"/ * For slice types like `[T]`, metadata is the length in items as `usize`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2020,"byte_end":2096,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ * For trait objects like `dyn SomeTrait`, metadata is [`DynMetadata<Self>`][DynMetadata]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2097,"byte_end":2189,"line_start":77,"line_end":77,"column_start":1,"column_end":93}},{"value":"/   (e.g. `DynMetadata<dyn SomeTrait>`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2190,"byte_end":2231,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2232,"byte_end":2235,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ In the future, the Rust language may gain new kinds of types","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2236,"byte_end":2300,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/ that have different pointer metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2301,"byte_end":2342,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2343,"byte_end":2346,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [dst]: https://doc.rust-lang.org/nomicon/exotic-sizes.html#dynamically-sized-types-dsts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2347,"byte_end":2438,"line_start":83,"line_end":83,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2439,"byte_end":2442,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2443,"byte_end":2446,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # The `Pointee` trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2447,"byte_end":2472,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2473,"byte_end":2476,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The point of this trait is its `Metadata` associated type,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2477,"byte_end":2539,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/ which is `()` or `usize` or `DynMetadata<_>` as described above.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2540,"byte_end":2608,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ It is automatically implemented for every type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2609,"byte_end":2660,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/ It can be assumed to be implemented in a generic context, even without a corresponding bound.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2661,"byte_end":2758,"line_start":91,"line_end":91,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2759,"byte_end":2762,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2763,"byte_end":2766,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2767,"byte_end":2778,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2779,"byte_end":2782,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Raw pointers can be decomposed into the data address and metadata components","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2783,"byte_end":2863,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ with their [`to_raw_parts`] method.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2864,"byte_end":2903,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2904,"byte_end":2907,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Alternatively, metadata alone can be extracted with the [`metadata`] function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2908,"byte_end":2990,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"/ A reference can be passed to [`metadata`] and implicitly coerced.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":2991,"byte_end":3060,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3061,"byte_end":3064,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ A (possibly-wide) pointer can be put back together from its address and metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3065,"byte_end":3149,"line_start":102,"line_end":102,"column_start":1,"column_end":85}},{"value":"/ with [`from_raw_parts`] or [`from_raw_parts_mut`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3150,"byte_end":3204,"line_start":103,"line_end":103,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3205,"byte_end":3208,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`to_raw_parts`]: PtrExt::to_raw_parts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3209,"byte_end":3251,"line_start":105,"line_end":105,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3349,"byte_end":3357,"line_start":108,"line_end":108,"column_start":10,"column_end":18},"name":"Metadata","qualname":"::Pointee::Metadata","value":"type Metadata: Copy + Send + Sync + Ord + hash::Hash + Unpin;","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" The type for metadata in pointers and references to `Self`.\n","sig":null,"attributes":[{"value":"/ The type for metadata in pointers and references to `Self`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3276,"byte_end":3339,"line_start":107,"line_end":107,"column_start":5,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4662,"byte_end":4670,"line_start":169,"line_end":169,"column_start":8,"column_end":16},"name":"metadata","qualname":"::metadata","value":"pub fn metadata<T: Pointee + ?Sized>(*const T) -> <T as Pointee>::Metadata","parent":null,"children":[],"decl_id":null,"docs":" Extract the metadata component of a pointer.","sig":null,"attributes":[{"value":"/ Extract the metadata component of a pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4358,"byte_end":4406,"line_start":157,"line_end":157,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4407,"byte_end":4410,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Values of type `*mut T`, `&T`, or `&mut T` can be passed directly to this function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4411,"byte_end":4497,"line_start":159,"line_end":159,"column_start":1,"column_end":87}},{"value":"/ as they implicitly coerce to `*const T`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4498,"byte_end":4542,"line_start":160,"line_end":160,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4543,"byte_end":4546,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4547,"byte_end":4560,"line_start":162,"line_end":162,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4561,"byte_end":4564,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4565,"byte_end":4572,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/ use ptr_meta::metadata;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4573,"byte_end":4600,"line_start":165,"line_end":165,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4601,"byte_end":4604,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(metadata(\"foo\"), 3_usize);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4605,"byte_end":4646,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4647,"byte_end":4654,"line_start":168,"line_end":168,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5231,"byte_end":5245,"line_start":180,"line_end":180,"column_start":8,"column_end":22},"name":"from_raw_parts","qualname":"::from_raw_parts","value":"pub fn from_raw_parts<T: Pointee +\n                      ?Sized>(*const (), <T as Pointee>::Metadata) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Forms a (possibly-wide) raw pointer from a data address and metadata.","sig":null,"attributes":[{"value":"/ Forms a (possibly-wide) raw pointer from a data address and metadata.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4802,"byte_end":4875,"line_start":173,"line_end":173,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4876,"byte_end":4879,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ This function is safe but the returned pointer is not necessarily safe to dereference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4880,"byte_end":4970,"line_start":175,"line_end":175,"column_start":1,"column_end":91}},{"value":"/ For slices, see the documentation of [`slice::from_raw_parts`] for safety requirements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4971,"byte_end":5062,"line_start":176,"line_end":176,"column_start":1,"column_end":92}},{"value":"/ For trait objects, the metadata must come from a pointer to the same underlying ereased type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5063,"byte_end":5160,"line_start":177,"line_end":177,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5161,"byte_end":5164,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`slice::from_raw_parts`]: core::slice::from_raw_parts","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5165,"byte_end":5223,"line_start":179,"line_end":179,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5659,"byte_end":5677,"line_start":188,"line_end":188,"column_start":8,"column_end":26},"name":"from_raw_parts_mut","qualname":"::from_raw_parts_mut","value":"pub fn from_raw_parts_mut<T: Pointee +\n                          ?Sized>(*mut (), <T as Pointee>::Metadata) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Performs the same functionality as [`from_raw_parts`], except that a\n raw `*mut` pointer is returned, as opposed to a raw `*const` pointer.","sig":null,"attributes":[{"value":"/ Performs the same functionality as [`from_raw_parts`], except that a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5435,"byte_end":5507,"line_start":184,"line_end":184,"column_start":1,"column_end":73}},{"value":"/ raw `*mut` pointer is returned, as opposed to a raw `*const` pointer.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5508,"byte_end":5581,"line_start":185,"line_end":185,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5582,"byte_end":5585,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ See the documentation of [`from_raw_parts`] for more details.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5586,"byte_end":5651,"line_start":187,"line_end":187,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5930,"byte_end":5940,"line_start":193,"line_end":193,"column_start":11,"column_end":21},"name":"NonNullExt","qualname":"::NonNullExt","value":"NonNullExt<T: Pointee + ?Sized>","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" Extension methods for [`NonNull`](core::ptr::NonNull).\n","sig":null,"attributes":[{"value":"/ Extension methods for [`NonNull`](core::ptr::NonNull).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5861,"byte_end":5919,"line_start":192,"line_end":192,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6021,"byte_end":6024,"line_start":195,"line_end":195,"column_start":10,"column_end":13},"name":"Raw","qualname":"::NonNullExt::Raw","value":"type Raw;","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" The type's raw pointer (`NonNull<()>`).\n","sig":null,"attributes":[{"value":"/ The type's raw pointer (`NonNull<()>`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":5968,"byte_end":6011,"line_start":194,"line_end":194,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6093,"byte_end":6107,"line_start":198,"line_end":198,"column_start":8,"column_end":22},"name":"from_raw_parts","qualname":"::NonNullExt::from_raw_parts","value":"pub fn from_raw_parts(Self::Raw, <T as Pointee>::Metadata) -> Self","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Creates a new non-null pointer from its raw parts.\n","sig":null,"attributes":[{"value":"/ Creates a new non-null pointer from its raw parts.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6031,"byte_end":6085,"line_start":197,"line_end":197,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6226,"byte_end":6238,"line_start":200,"line_end":200,"column_start":8,"column_end":20},"name":"to_raw_parts","qualname":"::NonNullExt::to_raw_parts","value":"pub fn to_raw_parts(Self) -> (Self::Raw, <T as Pointee>::Metadata)","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Converts a non-null pointer to its raw parts.\n","sig":null,"attributes":[{"value":"/ Converts a non-null pointer to its raw parts.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6169,"byte_end":6218,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":86},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6799,"byte_end":6805,"line_start":217,"line_end":217,"column_start":11,"column_end":17},"name":"PtrExt","qualname":"::PtrExt","value":"PtrExt<T: Pointee + ?Sized>","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Extension methods for pointers.\n","sig":null,"attributes":[{"value":"/ Extension methods for pointers.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6753,"byte_end":6788,"line_start":216,"line_end":216,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6897,"byte_end":6900,"line_start":219,"line_end":219,"column_start":10,"column_end":13},"name":"Raw","qualname":"::PtrExt::Raw","value":"type Raw;","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" The type's raw pointer (`*const ()` or `*mut ()`).\n","sig":null,"attributes":[{"value":"/ The type's raw pointer (`*const ()` or `*mut ()`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6833,"byte_end":6887,"line_start":218,"line_end":218,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7084,"byte_end":7096,"line_start":225,"line_end":225,"column_start":8,"column_end":20},"name":"to_raw_parts","qualname":"::PtrExt::to_raw_parts","value":"pub fn to_raw_parts(Self) -> (Self::Raw, <T as Pointee>::Metadata)","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Decompose a (possibly wide) pointer into its address and metadata\n components.","sig":null,"attributes":[{"value":"/ Decompose a (possibly wide) pointer into its address and metadata","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6907,"byte_end":6976,"line_start":221,"line_end":221,"column_start":5,"column_end":74}},{"value":"/ components.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6981,"byte_end":6996,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7001,"byte_end":7004,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ The pointer can be later reconstructed with [`from_raw_parts`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7009,"byte_end":7076,"line_start":224,"line_end":224,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8482,"byte_end":8493,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"DynMetadata","qualname":"::DynMetadata","value":"DynMetadata {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" The metadata for a `Dyn = dyn SomeTrait` trait object type.","sig":null,"attributes":[{"value":"/ The metadata for a `Dyn = dyn SomeTrait` trait object type.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7650,"byte_end":7713,"line_start":244,"line_end":244,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7714,"byte_end":7717,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ It is a pointer to a vtable (virtual call table)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7718,"byte_end":7770,"line_start":246,"line_end":246,"column_start":1,"column_end":53}},{"value":"/ that represents all the necessary information","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7771,"byte_end":7820,"line_start":247,"line_end":247,"column_start":1,"column_end":50}},{"value":"/ to manipulate the concrete type stored inside a trait object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7821,"byte_end":7886,"line_start":248,"line_end":248,"column_start":1,"column_end":66}},{"value":"/ The vtable notably it contains:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7887,"byte_end":7922,"line_start":249,"line_end":249,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7923,"byte_end":7926,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ * type size","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7927,"byte_end":7942,"line_start":251,"line_end":251,"column_start":1,"column_end":16}},{"value":"/ * type alignment","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7943,"byte_end":7963,"line_start":252,"line_end":252,"column_start":1,"column_end":21}},{"value":"/ * a pointer to the type’s `drop_in_place` impl (may be a no-op for plain-old-data)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":7964,"byte_end":8052,"line_start":253,"line_end":253,"column_start":1,"column_end":87}},{"value":"/ * pointers to all the methods for the type’s implementation of the trait","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8053,"byte_end":8131,"line_start":254,"line_end":254,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8132,"byte_end":8135,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Note that the first three are special because they’re necessary to allocate, drop,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8136,"byte_end":8224,"line_start":256,"line_end":256,"column_start":1,"column_end":87}},{"value":"/ and deallocate any trait object.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8225,"byte_end":8261,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8262,"byte_end":8265,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ It is possible to name this struct with a type parameter that is not a `dyn` trait object","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8266,"byte_end":8359,"line_start":259,"line_end":259,"column_start":1,"column_end":94}},{"value":"/ (for example `DynMetadata<u64>`) but not to obtain a meaningful value of that struct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8360,"byte_end":8449,"line_start":260,"line_end":260,"column_start":1,"column_end":90}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8450,"byte_end":8470,"line_start":261,"line_end":261,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8793,"byte_end":8800,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"size_of","qualname":"<DynMetadata<Dyn>>::size_of","value":"pub fn size_of(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the type associated with this vtable.\n","sig":null,"attributes":[{"value":"/ Returns the size of the type associated with this vtable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8720,"byte_end":8781,"line_start":275,"line_end":275,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8939,"byte_end":8947,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"align_of","qualname":"<DynMetadata<Dyn>>::align_of","value":"pub fn align_of(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the alignment of the type associated with this vtable.\n","sig":null,"attributes":[{"value":"/ Returns the alignment of the type associated with this vtable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8861,"byte_end":8927,"line_start":280,"line_end":280,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9079,"byte_end":9085,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"layout","qualname":"<DynMetadata<Dyn>>::layout","value":"pub fn layout(Self) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Returns the size and alignment together as a `Layout`.\n","sig":null,"attributes":[{"value":"/ Returns the size and alignment together as a `Layout`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9009,"byte_end":9067,"line_start":285,"line_end":285,"column_start":5,"column_end":63}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3429,"byte_end":3430,"line_start":111,"line_end":111,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3622,"byte_end":3626,"line_start":124,"line_end":124,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3712,"byte_end":3717,"line_start":129,"line_end":129,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4121,"byte_end":4134,"line_start":146,"line_end":146,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4337,"byte_end":4350,"line_start":155,"line_end":155,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6339,"byte_end":6346,"line_start":203,"line_end":203,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8697,"byte_end":8708,"line_start":274,"line_end":274,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9233,"byte_end":9244,"line_start":291,"line_end":291,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9287,"byte_end":9298,"line_start":292,"line_end":292,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9340,"byte_end":9351,"line_start":293,"line_end":293,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9547,"byte_end":9558,"line_start":298,"line_end":298,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9594,"byte_end":9605,"line_start":299,"line_end":299,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9642,"byte_end":9653,"line_start":300,"line_end":300,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9757,"byte_end":9768,"line_start":306,"line_end":306,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9814,"byte_end":9825,"line_start":307,"line_end":307,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9978,"byte_end":9989,"line_start":313,"line_end":313,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":10193,"byte_end":10204,"line_start":319,"line_end":319,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":10364,"byte_end":10375,"line_start":325,"line_end":325,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3429,"byte_end":3430,"line_start":111,"line_end":111,"column_start":21,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3622,"byte_end":3626,"line_start":124,"line_end":124,"column_start":30,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":10456},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":3712,"byte_end":3717,"line_start":129,"line_end":129,"column_start":30,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":2836},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4121,"byte_end":4134,"line_start":146,"line_end":146,"column_start":37,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":4337,"byte_end":4350,"line_start":155,"line_end":155,"column_start":36,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":3027}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":6339,"byte_end":6346,"line_start":203,"line_end":203,"column_start":50,"column_end":57},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":2198},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":8697,"byte_end":8708,"line_start":274,"line_end":274,"column_start":19,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9233,"byte_end":9244,"line_start":291,"line_end":291,"column_start":35,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":3017}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9287,"byte_end":9298,"line_start":292,"line_end":292,"column_start":35,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9340,"byte_end":9351,"line_start":293,"line_end":293,"column_start":34,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9547,"byte_end":9558,"line_start":298,"line_end":298,"column_start":29,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":3058}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9594,"byte_end":9605,"line_start":299,"line_end":299,"column_start":28,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":3027}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9642,"byte_end":9653,"line_start":300,"line_end":300,"column_start":29,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2638}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9757,"byte_end":9768,"line_start":306,"line_end":306,"column_start":31,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9814,"byte_end":9825,"line_start":307,"line_end":307,"column_start":38,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":9978,"byte_end":9989,"line_start":313,"line_end":313,"column_start":32,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":10193,"byte_end":10204,"line_start":319,"line_end":319,"column_start":39,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr_meta-0.1.4/src/lib.rs","byte_start":10364,"byte_end":10375,"line_start":325,"line_end":325,"column_start":34,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":9755}}]}