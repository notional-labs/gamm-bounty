{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","which","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2568b93798f8d9db","-C","extra-filename=-2568b93798f8d9db","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","--extern","either=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libeither-648f9433365560a4.rmeta","--extern","libc=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/liblibc-6a685a183885f2de.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libwhich-2568b93798f8d9db.rmeta"},"prelude":{"crate_id":{"name":"which","disambiguator":[14964088951550998221,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","num":20,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/finder.rs","num":21,"id":{"name":"either","disambiguator":[13335034951519595125,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":0,"byte_end":10519,"line_start":1,"line_end":339,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":554,"byte_end":555,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Result, Error","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":0,"byte_end":10519,"line_start":1,"line_end":339,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":44},{"krate":0,"index":53},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":150},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":187},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230}],"decl_id":null,"docs":" which","sig":null,"attributes":[{"value":"/ which","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":0,"byte_end":9,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10,"byte_end":13,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A Rust equivalent of Unix command `which(1)`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":14,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/ # Example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":64,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":79,"byte_end":82,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To find which rustc executable binary is using:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":83,"byte_end":134,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":135,"byte_end":138,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":139,"byte_end":152,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":153,"byte_end":174,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":175,"byte_end":202,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":203,"byte_end":206,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let result = which::which(\"rustc\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":207,"byte_end":255,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":256,"byte_end":312,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":313,"byte_end":316,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":317,"byte_end":324,"line_start":15,"line_end":15,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12380,"byte_end":12386,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12490,"byte_end":12505,"line_start":7,"line_end":7,"column_start":5,"column_end":20},"name":"BadAbsolutePath","qualname":"::error::Error::BadAbsolutePath","value":"Error::BadAbsolutePath","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":235},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12511,"byte_end":12526,"line_start":8,"line_end":8,"column_start":5,"column_end":20},"name":"BadRelativePath","qualname":"::error::Error::BadRelativePath","value":"Error::BadRelativePath","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":237},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12532,"byte_end":12552,"line_start":9,"line_end":9,"column_start":5,"column_end":25},"name":"CannotFindBinaryPath","qualname":"::error::Error::CannotFindBinaryPath","value":"Error::CannotFindBinaryPath","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12558,"byte_end":12577,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"CannotGetCurrentDir","qualname":"::error::Error::CannotGetCurrentDir","value":"Error::CannotGetCurrentDir","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12583,"byte_end":12601,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"CannotCanonicalize","qualname":"::error::Error::CannotCanonicalize","value":"Error::CannotCanonicalize","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":232},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12478,"byte_end":12483,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    BadAbsolutePath,\n    BadRelativePath,\n    CannotFindBinaryPath,\n    CannotGetCurrentDir,\n    CannotCanonicalize,\n}","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1214,"byte_end":1219,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"which","qualname":"::which","value":"pub fn which<T: AsRef<OsStr>>(T) -> Result<path::PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Find a exectable binary's path by name.","sig":null,"attributes":[{"value":"/ Find a exectable binary's path by name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":585,"byte_end":628,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":629,"byte_end":632,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If given an absolute path, returns it if the file exists and is executable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":633,"byte_end":712,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":713,"byte_end":716,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If given a relative path, returns an absolute path to the file if","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":717,"byte_end":786,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ it exists and is executable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":787,"byte_end":819,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":820,"byte_end":823,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ If given a string without path separators, looks for a file named","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":824,"byte_end":893,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/ `binary_name` at each directory in `$PATH` and if it finds an executable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":894,"byte_end":970,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ file there, returns it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":971,"byte_end":998,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":999,"byte_end":1002,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1003,"byte_end":1016,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1021,"byte_end":1034,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1035,"byte_end":1056,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1057,"byte_end":1084,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let result = which::which(\"rustc\").unwrap();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1089,"byte_end":1137,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1138,"byte_end":1194,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1195,"byte_end":1198,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1199,"byte_end":1206,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1485,"byte_end":1494,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"which_all","qualname":"::which_all","value":"pub fn which_all<T: AsRef<OsStr>>(T) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1372,"byte_end":1477,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1807,"byte_end":1815,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"which_in","qualname":"::which_in","value":"pub fn which_in<T, U, V>(T, Option<U>, V) -> Result<path::PathBuf> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":1712,"byte_end":1799,"line_start":65,"line_end":65,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2197,"byte_end":2209,"line_start":77,"line_end":77,"column_start":8,"column_end":20},"name":"which_in_all","qualname":"::which_in_all","value":"pub fn which_in_all<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2084,"byte_end":2189,"line_start":76,"line_end":76,"column_start":1,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3322,"byte_end":3326,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"Path","qualname":"::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":255}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2654,"byte_end":2742,"line_start":96,"line_end":96,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2743,"byte_end":2746,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the output of `which` or `which_in`, but `which::Path` has the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2747,"byte_end":2842,"line_start":98,"line_end":98,"column_start":1,"column_end":96}},{"value":"/ advantage of being a type distinct from `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2843,"byte_end":2930,"line_start":99,"line_end":99,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2931,"byte_end":2934,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `which::Path` instead of `std::path::Path` when you want the type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":2935,"byte_end":3032,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ system to enforce the need for a path that exists and points to a binary that is executable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3033,"byte_end":3129,"line_start":102,"line_end":102,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3130,"byte_end":3133,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Since `which::Path` implements `Deref` for `std::path::Path`, all methods on `&std::path::Path`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3134,"byte_end":3233,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/ are also available to `&which::Path` values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3234,"byte_end":3282,"line_start":105,"line_end":105,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3509,"byte_end":3512,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<T: AsRef<OsStr>>(T) -> Result<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3374,"byte_end":3427,"line_start":112,"line_end":112,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3432,"byte_end":3435,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and maps the result into a `Path`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3440,"byte_end":3497,"line_start":114,"line_end":114,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3775,"byte_end":3778,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"all","qualname":"<Path>::all","value":"pub fn all<T: AsRef<OsStr>>(T) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Returns the paths of all executable binaries by a name.","sig":null,"attributes":[{"value":"/ Returns the paths of all executable binaries by a name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3630,"byte_end":3689,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3694,"byte_end":3697,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ this calls `which_all` and maps the results into `Path`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3702,"byte_end":3763,"line_start":121,"line_end":121,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4184,"byte_end":4190,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"new_in","qualname":"<Path>::new_in","value":"pub fn new_in<T, U, V>(T, Option<U>, V) -> Result<Path> where T: AsRef<OsStr>,\nU: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3941,"byte_end":4032,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4037,"byte_end":4099,"line_start":127,"line_end":127,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4104,"byte_end":4107,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and maps the result into a `Path`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4112,"byte_end":4172,"line_start":129,"line_end":129,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4684,"byte_end":4690,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"all_in","qualname":"<Path>::all_in","value":"pub fn all_in<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns all paths of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns all paths of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4435,"byte_end":4527,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4532,"byte_end":4594,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4599,"byte_end":4602,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in_all` and maps the results into a `Path`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":4607,"byte_end":4672,"line_start":142,"line_end":142,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5070,"byte_end":5077,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Path>::as_path","value":"pub fn as_path(&Self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5011,"byte_end":5058,"line_start":156,"line_end":156,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5231,"byte_end":5244,"line_start":162,"line_end":162,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5142,"byte_end":5219,"line_start":161,"line_end":161,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6849,"byte_end":6862,"line_start":221,"line_end":221,"column_start":12,"column_end":25},"name":"CanonicalPath","qualname":"::CanonicalPath","value":"CanonicalPath {  }","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an\n executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6039,"byte_end":6127,"line_start":207,"line_end":207,"column_start":1,"column_end":89}},{"value":"/ executable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6128,"byte_end":6143,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6144,"byte_end":6147,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the result of `which` or `which_in` followed by","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6148,"byte_end":6228,"line_start":210,"line_end":210,"column_start":1,"column_end":81}},{"value":"/ `Path::canonicalize`, but `CanonicalPath` has the advantage of being a type distinct from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6229,"byte_end":6322,"line_start":211,"line_end":211,"column_start":1,"column_end":94}},{"value":"/ `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6323,"byte_end":6370,"line_start":212,"line_end":212,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6371,"byte_end":6374,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `CanonicalPath` instead of `std::path::Path` when you want the type","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6375,"byte_end":6474,"line_start":214,"line_end":214,"column_start":1,"column_end":100}},{"value":"/ system to enforce the need for a path that exists, points to a binary that is executable, is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6475,"byte_end":6571,"line_start":215,"line_end":215,"column_start":1,"column_end":97}},{"value":"/ absolute, has all components normalized, and has all symbolic links resolved","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6572,"byte_end":6652,"line_start":216,"line_end":216,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6653,"byte_end":6656,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Since `CanonicalPath` implements `Deref` for `std::path::Path`, all methods on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6657,"byte_end":6739,"line_start":218,"line_end":218,"column_start":1,"column_end":83}},{"value":"/ `&std::path::Path` are also available to `&CanonicalPath` values.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6740,"byte_end":6809,"line_start":219,"line_end":219,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":7098,"byte_end":7101,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<CanonicalPath>::new","value":"pub fn new<T: AsRef<OsStr>>(T) -> Result<CanonicalPath>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6919,"byte_end":6982,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6987,"byte_end":6990,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6995,"byte_end":7086,"line_start":228,"line_end":228,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":7517,"byte_end":7520,"line_start":238,"line_end":238,"column_start":12,"column_end":15},"name":"all","qualname":"<CanonicalPath>::all","value":"pub fn all<T: AsRef<OsStr>>(T) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical paths of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical paths of an executable binary by name.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":7333,"byte_end":7397,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":7402,"byte_end":7405,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This calls `which_all` and `Path::canonicalize` and maps the results into `CanonicalPath`s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":7410,"byte_end":7505,"line_start":237,"line_end":237,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8203,"byte_end":8209,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"new_in","qualname":"<CanonicalPath>::new_in","value":"pub fn new_in<T, U, V>(T, Option<U>, V) -> Result<CanonicalPath> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name in the path list `paths` and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":7916,"byte_end":8007,"line_start":251,"line_end":251,"column_start":5,"column_end":96}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8012,"byte_end":8084,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8089,"byte_end":8092,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8097,"byte_end":8191,"line_start":254,"line_end":254,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8867,"byte_end":8873,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"all_in","qualname":"<CanonicalPath>::all_in","value":"pub fn all_in<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns all of the canonical paths of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns all of the canonical paths of an executable binary by name in the path list `paths` and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8568,"byte_end":8667,"line_start":266,"line_end":266,"column_start":5,"column_end":104}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8672,"byte_end":8744,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8749,"byte_end":8752,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in_all` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":8757,"byte_end":8855,"line_start":269,"line_end":269,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9471,"byte_end":9478,"line_start":291,"line_end":291,"column_start":12,"column_end":19},"name":"as_path","qualname":"<CanonicalPath>::as_path","value":"pub fn as_path(&Self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9412,"byte_end":9459,"line_start":290,"line_end":290,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9641,"byte_end":9654,"line_start":296,"line_end":296,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<CanonicalPath>::into_path_buf","value":"pub fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9543,"byte_end":9629,"line_start":295,"line_end":295,"column_start":5,"column_end":91}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":10726,"byte_end":10743,"line_start":13,"line_end":13,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":10838,"byte_end":10855,"line_start":19,"line_end":19,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":11214,"byte_end":11228,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":11317,"byte_end":11331,"line_start":41,"line_end":41,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":11921,"byte_end":11937,"line_start":64,"line_end":64,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":12215,"byte_end":12231,"line_start":77,"line_end":77,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12633,"byte_end":12638,"line_start":14,"line_end":14,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12665,"byte_end":12670,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/finder.rs","byte_start":13648,"byte_end":13655,"line_start":25,"line_end":25,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/finder.rs","byte_start":14052,"byte_end":14058,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3363,"byte_end":3367,"line_start":111,"line_end":111,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5318,"byte_end":5322,"line_start":167,"line_end":167,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5458,"byte_end":5462,"line_start":173,"line_end":173,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5596,"byte_end":5600,"line_start":181,"line_end":181,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5695,"byte_end":5699,"line_start":187,"line_end":187,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5781,"byte_end":5785,"line_start":193,"line_end":193,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5824,"byte_end":5828,"line_start":195,"line_end":195,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5950,"byte_end":5957,"line_start":201,"line_end":201,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6899,"byte_end":6912,"line_start":225,"line_end":225,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":193},{"krate":0,"index":200},{"krate":0,"index":207},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9728,"byte_end":9741,"line_start":301,"line_end":301,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9877,"byte_end":9890,"line_start":307,"line_end":307,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10024,"byte_end":10037,"line_start":315,"line_end":315,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10132,"byte_end":10145,"line_start":321,"line_end":321,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10227,"byte_end":10240,"line_start":327,"line_end":327,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10279,"byte_end":10292,"line_start":329,"line_end":329,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10423,"byte_end":10430,"line_start":335,"line_end":335,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":10726,"byte_end":10743,"line_start":13,"line_end":13,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":10838,"byte_end":10855,"line_start":19,"line_end":19,"column_start":18,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":11214,"byte_end":11228,"line_start":35,"line_end":35,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":11317,"byte_end":11331,"line_start":41,"line_end":41,"column_start":18,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":29},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":11921,"byte_end":11937,"line_start":64,"line_end":64,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/checker.rs","byte_start":12215,"byte_end":12231,"line_start":77,"line_end":77,"column_start":18,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12633,"byte_end":12638,"line_start":14,"line_end":14,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":232},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/error.rs","byte_start":12665,"byte_end":12670,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/finder.rs","byte_start":13648,"byte_end":13655,"line_start":25,"line_end":25,"column_start":18,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":7123},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/finder.rs","byte_start":14052,"byte_end":14058,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":3363,"byte_end":3367,"line_start":111,"line_end":111,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5318,"byte_end":5322,"line_start":167,"line_end":167,"column_start":21,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5458,"byte_end":5462,"line_start":173,"line_end":173,"column_start":26,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5596,"byte_end":5600,"line_start":181,"line_end":181,"column_start":28,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5695,"byte_end":5699,"line_start":187,"line_end":187,"column_start":23,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5781,"byte_end":5785,"line_start":193,"line_end":193,"column_start":13,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5824,"byte_end":5828,"line_start":195,"line_end":195,"column_start":35,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":5950,"byte_end":5957,"line_start":201,"line_end":201,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":7123},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":6899,"byte_end":6912,"line_start":225,"line_end":225,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9728,"byte_end":9741,"line_start":301,"line_end":301,"column_start":21,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":9877,"byte_end":9890,"line_start":307,"line_end":307,"column_start":26,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10024,"byte_end":10037,"line_start":315,"line_end":315,"column_start":28,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10132,"byte_end":10145,"line_start":321,"line_end":321,"column_start":23,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10227,"byte_end":10240,"line_start":327,"line_end":327,"column_start":13,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2673}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10279,"byte_end":10292,"line_start":329,"line_end":329,"column_start":35,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.1.0/src/lib.rs","byte_start":10423,"byte_end":10430,"line_start":335,"line_end":335,"column_start":41,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7123},"to":{"krate":2,"index":2668}}]}