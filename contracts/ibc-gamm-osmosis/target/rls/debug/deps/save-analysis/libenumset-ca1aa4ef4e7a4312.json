{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","enumset","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=ca1aa4ef4e7a4312","-C","extra-filename=-ca1aa4ef4e7a4312","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps","--extern","enumset_derive=/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps/libenumset_derive-fdbf5bb68ee7b655.so","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps/libenumset-ca1aa4ef4e7a4312.rmeta"},"prelude":{"crate_id":{"name":"enumset","disambiguator":[1392378110438101503,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","num":4,"id":{"name":"enumset_derive","disambiguator":[12448252257183556553,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":0,"byte_end":24537,"line_start":1,"line_end":690,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":66},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2673,"byte_end":2684,"line_start":78,"line_end":78,"column_start":25,"column_end":36},"alias_span":null,"name":"EnumSetType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3070,"byte_end":3074,"line_start":93,"line_end":93,"column_start":15,"column_end":19},"alias_span":null,"name":"core_export","value":"","parent":{"krate":0,"index":35}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":0,"byte_end":24537,"line_start":1,"line_end":690,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":101},{"krate":0,"index":127},{"krate":0,"index":437},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":163},{"krate":0,"index":168},{"krate":0,"index":173},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":481},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":242}],"decl_id":null,"docs":" A library for defining enums that can be used in compact bit sets. It supports enums up to 128\n variants, and has a macro to use these sets in constants.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(missing_docs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11,"byte_end":35,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"/ A library for defining enums that can be used in compact bit sets. It supports enums up to 128","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":37,"byte_end":135,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ variants, and has a macro to use these sets in constants.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":136,"byte_end":197,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":198,"byte_end":201,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ For serde support, enable the `serde` feature.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":202,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":253,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Defining enums for use with EnumSet","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":257,"byte_end":298,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":299,"byte_end":302,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Enums to be used with [`EnumSet`] should be defined using `#[derive(EnumSetType)]`:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":303,"byte_end":390,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":391,"byte_end":394,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":395,"byte_end":406,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":407,"byte_end":428,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType, Debug)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":429,"byte_end":462,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ pub enum Enum {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":463,"byte_end":482,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":483,"byte_end":510,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":511,"byte_end":516,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":517,"byte_end":524,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":525,"byte_end":528,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ For more information on more advanced use cases, see the documentation for [`EnumSetType`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":529,"byte_end":624,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":625,"byte_end":628,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Working with EnumSets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":629,"byte_end":656,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":657,"byte_end":660,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ EnumSets can be constructed via [`EnumSet::new()`] like a normal set. In addition,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":661,"byte_end":747,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ `#[derive(EnumSetType)]` creates operator overloads that allow you to create EnumSets like so:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":748,"byte_end":846,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":847,"byte_end":850,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":851,"byte_end":862,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":863,"byte_end":884,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":885,"byte_end":958,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ let new_set = Enum::A | Enum::C | Enum::G;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":959,"byte_end":1005,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(new_set.len(), 3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1006,"byte_end":1039,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1040,"byte_end":1047,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All bitwise operations you would expect to work on bitsets also work on both EnumSets and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1052,"byte_end":1145,"line_start":35,"line_end":35,"column_start":1,"column_end":94}},{"value":"/ enums with `#[derive(EnumSetType)]`:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1146,"byte_end":1186,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1187,"byte_end":1198,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1199,"byte_end":1220,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1221,"byte_end":1294,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ // Intersection of sets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1295,"byte_end":1322,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ assert_eq!((Enum::A | Enum::B) & Enum::C, EnumSet::empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1323,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((Enum::A | Enum::B) & Enum::A, Enum::A);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1388,"byte_end":1443,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Enum::A & Enum::B, EnumSet::empty());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1444,"byte_end":1496,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1497,"byte_end":1500,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Symmetric difference of sets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1501,"byte_end":1536,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ assert_eq!((Enum::A | Enum::B) ^ (Enum::B | Enum::C), Enum::A | Enum::C);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1537,"byte_end":1614,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Enum::A ^ Enum::C, Enum::A | Enum::C);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1615,"byte_end":1668,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1669,"byte_end":1672,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Difference of sets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1673,"byte_end":1698,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((Enum::A | Enum::B | Enum::C) - Enum::B, Enum::A | Enum::C);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1699,"byte_end":1774,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1775,"byte_end":1778,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Complement of sets","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1779,"byte_end":1804,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(!(Enum::E | Enum::G), Enum::A | Enum::B | Enum::C | Enum::D | Enum::F);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1805,"byte_end":1891,"line_start":53,"line_end":53,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1892,"byte_end":1899,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1900,"byte_end":1903,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The [`enum_set!`] macro allows you to create EnumSets in constant contexts:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1904,"byte_end":1983,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1984,"byte_end":1987,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":1988,"byte_end":1999,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2000,"byte_end":2021,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2022,"byte_end":2095,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ const CONST_SET: EnumSet<Enum> = enum_set!(Enum::A | Enum::B);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2096,"byte_end":2162,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(CONST_SET, Enum::A | Enum::B);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2163,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Mutable operations on the [`EnumSet`] otherwise similarly to Rust's builtin sets:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2221,"byte_end":2306,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2307,"byte_end":2310,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2311,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2323,"byte_end":2344,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2345,"byte_end":2418,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ let mut set = EnumSet::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2419,"byte_end":2452,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/ set.insert(Enum::A);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2453,"byte_end":2477,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/ set.insert_all(Enum::E | Enum::G);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2478,"byte_end":2516,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/ assert!(set.contains(Enum::A));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2517,"byte_end":2552,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/ assert!(!set.contains(Enum::B));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2553,"byte_end":2589,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(set, Enum::A | Enum::E | Enum::G);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2590,"byte_end":2639,"line_start":75,"line_end":75,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2640,"byte_end":2647,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2947,"byte_end":2957,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"__internal","qualname":"::__internal","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40}],"decl_id":null,"docs":" Everything in this module is internal API and may change at any time.\n","sig":null,"attributes":[{"value":"/ Everything in this module is internal API and may change at any time.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":2865,"byte_end":2938,"line_start":88,"line_end":88,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3334,"byte_end":3352,"line_start":99,"line_end":99,"column_start":22,"column_end":40},"name":"EnumSetTypePrivate","qualname":"::__internal::EnumSetTypePrivate","value":"EnumSetTypePrivate","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" The actual members of EnumSetType. Put here to avoid polluting global namespaces.\n","sig":null,"attributes":[{"value":"/ The actual members of EnumSetType. Put here to avoid polluting global namespaces.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3227,"byte_end":3312,"line_start":98,"line_end":98,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3426,"byte_end":3430,"line_start":101,"line_end":101,"column_start":14,"column_end":18},"name":"Repr","qualname":"::__internal::EnumSetTypePrivate::Repr","value":"type Repr: EnumSetTypeRepr;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The underlying type used to store the bitset.\n","sig":null,"attributes":[{"value":"/ The underlying type used to store the bitset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3363,"byte_end":3412,"line_start":100,"line_end":100,"column_start":9,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":42},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3520,"byte_end":3528,"line_start":103,"line_end":103,"column_start":15,"column_end":23},"name":"ALL_BITS","qualname":"::__internal::EnumSetTypePrivate::ALL_BITS","value":"Self::Repr","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" A mask of bits that are valid in the bitset.\n","sig":null,"attributes":[{"value":"/ A mask of bits that are valid in the bitset.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3457,"byte_end":3505,"line_start":102,"line_end":102,"column_start":9,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3619,"byte_end":3632,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"enum_into_u32","qualname":"::__internal::EnumSetTypePrivate::enum_into_u32","value":"pub fn enum_into_u32(Self) -> u32","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Converts an enum of this type into its bit position.\n","sig":null,"attributes":[{"value":"/ Converts an enum of this type into its bit position.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3551,"byte_end":3607,"line_start":105,"line_end":105,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3721,"byte_end":3734,"line_start":108,"line_end":108,"column_start":19,"column_end":32},"name":"enum_from_u32","qualname":"::__internal::EnumSetTypePrivate::enum_from_u32","value":"pub unsafe fn enum_from_u32(u32) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Converts a bit position into an enum value.\n","sig":null,"attributes":[{"value":"/ Converts a bit position into an enum value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":3655,"byte_end":3702,"line_start":107,"line_end":107,"column_start":9,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6394,"byte_end":6405,"line_start":187,"line_end":187,"column_start":18,"column_end":29},"name":"EnumSetType","qualname":"::EnumSetType","value":"EnumSetType: Copy + Eq + EnumSetTypePrivate","parent":null,"children":[],"decl_id":null,"docs":" The trait used to define enum types that may be used with [`EnumSet`].","sig":null,"attributes":[{"value":"/ The trait used to define enum types that may be used with [`EnumSet`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4556,"byte_end":4630,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4631,"byte_end":4634,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This trait should be implemented using `#[derive(EnumSetType)]`. Its internal structure is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4635,"byte_end":4729,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ not stable, and may change at any time.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4730,"byte_end":4773,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4774,"byte_end":4777,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Custom Derive","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4778,"byte_end":4797,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4798,"byte_end":4801,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Any C-like enum is supported, as long as there are no more than 128 variants in the enum,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4802,"byte_end":4895,"line_start":137,"line_end":137,"column_start":1,"column_end":94}},{"value":"/ and no variant discriminator is larger than 127.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4896,"byte_end":4948,"line_start":138,"line_end":138,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4949,"byte_end":4952,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The custom derive for [`EnumSetType`] automatically creates implementations of [`PartialEq`],","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":4953,"byte_end":5050,"line_start":140,"line_end":140,"column_start":1,"column_end":98}},{"value":"/ [`Sub`], [`BitAnd`], [`BitOr`], [`BitXor`], and [`Not`] allowing the enum to be used as","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5051,"byte_end":5142,"line_start":141,"line_end":141,"column_start":1,"column_end":92}},{"value":"/ if it were an [`EnumSet`] in expressions. This can be disabled by adding an `#[enumset(no_ops)]`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5143,"byte_end":5243,"line_start":142,"line_end":142,"column_start":1,"column_end":101}},{"value":"/ annotation to the enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5244,"byte_end":5271,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5272,"byte_end":5275,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The custom derive for `EnumSetType` automatically implements [`Copy`], [`Clone`], [`Eq`], and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5276,"byte_end":5373,"line_start":145,"line_end":145,"column_start":1,"column_end":98}},{"value":"/ [`PartialEq`] on the enum. These are required for the [`EnumSet`] to function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5374,"byte_end":5456,"line_start":146,"line_end":146,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5457,"byte_end":5460,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ In addition, if you have renamed the `enumset` crate in your crate, you can use the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5461,"byte_end":5548,"line_start":148,"line_end":148,"column_start":1,"column_end":88}},{"value":"/ `#[enumset(crate_name = \"enumset2\")]` attribute to tell the custom derive to use that name","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5549,"byte_end":5643,"line_start":149,"line_end":149,"column_start":1,"column_end":95}},{"value":"/ instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5644,"byte_end":5656,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5657,"byte_end":5660,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Attributes controlling the serialization of an `EnumSet` are documented in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5661,"byte_end":5739,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ [its documentation](./struct.EnumSet.html#serialization).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5740,"byte_end":5801,"line_start":153,"line_end":153,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5802,"byte_end":5805,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5806,"byte_end":5820,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5821,"byte_end":5824,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Deriving a plain EnumSetType:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5825,"byte_end":5858,"line_start":157,"line_end":157,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5859,"byte_end":5862,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5863,"byte_end":5874,"line_start":159,"line_end":159,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5875,"byte_end":5896,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5897,"byte_end":5923,"line_start":161,"line_end":161,"column_start":1,"column_end":27}},{"value":"/ pub enum Enum {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5924,"byte_end":5943,"line_start":162,"line_end":162,"column_start":1,"column_end":20}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5944,"byte_end":5971,"line_start":163,"line_end":163,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5972,"byte_end":5977,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5978,"byte_end":5985,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5986,"byte_end":5989,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Deriving a sparse EnumSetType:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":5990,"byte_end":6024,"line_start":167,"line_end":167,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6025,"byte_end":6028,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6029,"byte_end":6040,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6041,"byte_end":6062,"line_start":170,"line_end":170,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6063,"byte_end":6089,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/ pub enum SparseEnum {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6090,"byte_end":6115,"line_start":172,"line_end":172,"column_start":1,"column_end":26}},{"value":"/    A = 10, B = 20, C = 30, D = 127,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6116,"byte_end":6155,"line_start":173,"line_end":173,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6156,"byte_end":6161,"line_start":174,"line_end":174,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6162,"byte_end":6169,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6170,"byte_end":6173,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Deriving an EnumSetType without adding ops:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6174,"byte_end":6221,"line_start":177,"line_end":177,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6222,"byte_end":6225,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6226,"byte_end":6237,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6238,"byte_end":6259,"line_start":180,"line_end":180,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6260,"byte_end":6286,"line_start":181,"line_end":181,"column_start":1,"column_end":27}},{"value":"/ #[enumset(no_ops)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6287,"byte_end":6309,"line_start":182,"line_end":182,"column_start":1,"column_end":23}},{"value":"/ pub enum NoOpsEnum {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6310,"byte_end":6334,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6335,"byte_end":6362,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6363,"byte_end":6368,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6369,"byte_end":6376,"line_start":186,"line_end":186,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8093,"byte_end":8100,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"EnumSet","qualname":"::EnumSet","value":"EnumSet { __priv_repr }","parent":null,"children":[{"krate":0,"index":420}],"decl_id":null,"docs":" An efficient set type for enums.","sig":null,"attributes":[{"value":"/ An efficient set type for enums.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6443,"byte_end":6479,"line_start":189,"line_end":189,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6480,"byte_end":6483,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ It is implemented using a bitset stored using the smallest integer that can fit all bits","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6484,"byte_end":6576,"line_start":191,"line_end":191,"column_start":1,"column_end":93}},{"value":"/ in the underlying enum. In general, an enum variant with a numeric value of `n` is stored in","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6577,"byte_end":6673,"line_start":192,"line_end":192,"column_start":1,"column_end":97}},{"value":"/ the nth least significant bit (corresponding with a mask of, e.g. `1 << enum as u32`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6674,"byte_end":6764,"line_start":193,"line_end":193,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6765,"byte_end":6768,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ # Serialization","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6769,"byte_end":6788,"line_start":195,"line_end":195,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6789,"byte_end":6792,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature is enabled, `EnumSet`s can be serialized and deserialized using","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6793,"byte_end":6885,"line_start":197,"line_end":197,"column_start":1,"column_end":93}},{"value":"/ the `serde` crate. The exact serialization format can be controlled with additional attributes","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6886,"byte_end":6984,"line_start":198,"line_end":198,"column_start":1,"column_end":99}},{"value":"/ on the enum type. These attributes are valid regardless of whether the `serde` feature","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6985,"byte_end":7075,"line_start":199,"line_end":199,"column_start":1,"column_end":91}},{"value":"/ is enabled.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7076,"byte_end":7091,"line_start":200,"line_end":200,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7092,"byte_end":7095,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ By default, `EnumSet`s serialize by directly writing out the underlying bitset as an integer","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7096,"byte_end":7192,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"/ of the smallest type that can fit in the underlying enum. You can add a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7193,"byte_end":7268,"line_start":203,"line_end":203,"column_start":1,"column_end":76}},{"value":"/ `#[enumset(serialize_repr = \"u8\")]` attribute to your enum to control the integer type used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7269,"byte_end":7364,"line_start":204,"line_end":204,"column_start":1,"column_end":96}},{"value":"/ for serialization. This can be important for avoiding unintentional breaking changes when","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7365,"byte_end":7458,"line_start":205,"line_end":205,"column_start":1,"column_end":94}},{"value":"/ `EnumSet`s are serialized with formats like `bincode`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7459,"byte_end":7517,"line_start":206,"line_end":206,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7518,"byte_end":7521,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ By default, unknown bits are ignored and silently removed from the bitset. To override this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7522,"byte_end":7617,"line_start":208,"line_end":208,"column_start":1,"column_end":96}},{"value":"/ behavior, you can add a `#[enumset(serialize_deny_unknown)]` attribute. This will cause","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7618,"byte_end":7709,"line_start":209,"line_end":209,"column_start":1,"column_end":92}},{"value":"/ deserialization to fail if an invalid bit is set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7710,"byte_end":7763,"line_start":210,"line_end":210,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7764,"byte_end":7767,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ In addition, the `#[enumset(serialize_as_list)]` attribute causes the `EnumSet` to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7768,"byte_end":7857,"line_start":212,"line_end":212,"column_start":1,"column_end":90}},{"value":"/ instead serialized as a list of enum variants. This requires your enum type implement","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7858,"byte_end":7947,"line_start":213,"line_end":213,"column_start":1,"column_end":90}},{"value":"/ [`Serialize`] and [`Deserialize`]. Note that this is a breaking change","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":7948,"byte_end":8022,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"repr(transparent)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8061,"byte_end":8081,"line_start":216,"line_end":216,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":420},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8264,"byte_end":8275,"line_start":221,"line_end":221,"column_start":9,"column_end":20},"name":"__priv_repr","qualname":"::EnumSet::__priv_repr","value":"<T as __internal::EnumSetTypePrivate>::Repr","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" This is public due to the [`enum_set!`] macro.\n This is **NOT** public API and may change at any time.\n","sig":null,"attributes":[{"value":"/ This is public due to the [`enum_set!`] macro.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8142,"byte_end":8192,"line_start":219,"line_end":219,"column_start":5,"column_end":55}},{"value":"/ This is **NOT** public API and may change at any time.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8197,"byte_end":8255,"line_start":220,"line_end":220,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8470,"byte_end":8473,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `EnumSet`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `EnumSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8427,"byte_end":8458,"line_start":229,"line_end":229,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8612,"byte_end":8616,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"only","qualname":"<EnumSet<T>>::only","value":"pub fn only(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EnumSet` containing a single element.\n","sig":null,"attributes":[{"value":"/ Returns an `EnumSet` containing a single element.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8547,"byte_end":8600,"line_start":234,"line_end":234,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8812,"byte_end":8817,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"empty","qualname":"<EnumSet<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `EnumSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `EnumSet`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8714,"byte_end":8745,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8750,"byte_end":8753,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This is an alias for [`EnumSet::new`].","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8758,"byte_end":8800,"line_start":243,"line_end":243,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8940,"byte_end":8943,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"name":"all","qualname":"<EnumSet<T>>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EnumSet` containing all valid variants of the enum.\n","sig":null,"attributes":[{"value":"/ Returns an `EnumSet` containing all valid variants of the enum.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8861,"byte_end":8928,"line_start":248,"line_end":248,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9357,"byte_end":9366,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<EnumSet<T>>::bit_width","value":"pub fn bit_width() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Total number of bits used by this type. Note that the actual amount of space used is\n rounded up to the next highest integer type (`u8`, `u16`, `u32`, `u64`, or `u128`).","sig":null,"attributes":[{"value":"/ Total number of bits used by this type. Note that the actual amount of space used is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9017,"byte_end":9105,"line_start":253,"line_end":253,"column_start":5,"column_end":93}},{"value":"/ rounded up to the next highest integer type (`u8`, `u16`, `u32`, `u64`, or `u128`).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9110,"byte_end":9197,"line_start":254,"line_end":254,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9202,"byte_end":9205,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`EnumSet::variant_count`] except in enums with \"sparse\" variants.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9210,"byte_end":9300,"line_start":256,"line_end":256,"column_start":5,"column_end":95}},{"value":"/ (e.g. `enum Foo { A = 10, B = 20 }`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9305,"byte_end":9345,"line_start":257,"line_end":257,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9658,"byte_end":9671,"line_start":266,"line_end":266,"column_start":12,"column_end":25},"name":"variant_count","qualname":"<EnumSet<T>>::variant_count","value":"pub fn variant_count() -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of valid variants that this type can contain.","sig":null,"attributes":[{"value":"/ The number of valid variants that this type can contain.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9442,"byte_end":9502,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9507,"byte_end":9510,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`EnumSet::bit_width`] except in enums with \"sparse\" variants.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9515,"byte_end":9601,"line_start":264,"line_end":264,"column_start":5,"column_end":91}},{"value":"/ (e.g. `enum Foo { A = 10, B = 20 }`)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9606,"byte_end":9646,"line_start":265,"line_end":265,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9786,"byte_end":9789,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"len","qualname":"<EnumSet<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this set.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in this set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9727,"byte_end":9774,"line_start":270,"line_end":270,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9928,"byte_end":9936,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EnumSet<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":9865,"byte_end":9916,"line_start":274,"line_end":274,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10050,"byte_end":10055,"line_start":279,"line_end":279,"column_start":12,"column_end":17},"name":"clear","qualname":"<EnumSet<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the set.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10000,"byte_end":10038,"line_start":278,"line_end":278,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10270,"byte_end":10281,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<EnumSet<T>>::is_disjoint","value":"pub fn is_disjoint(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This is equivalent to\n checking for an empty intersection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This is equivalent to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10124,"byte_end":10214,"line_start":283,"line_end":283,"column_start":5,"column_end":95}},{"value":"/ checking for an empty intersection.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10219,"byte_end":10258,"line_start":284,"line_end":284,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10490,"byte_end":10501,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<EnumSet<T>>::is_superset","value":"pub fn is_superset(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another, i.e., `self` contains at least all the\n values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another, i.e., `self` contains at least all the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10357,"byte_end":10451,"line_start":288,"line_end":288,"column_start":5,"column_end":99}},{"value":"/ values in `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10456,"byte_end":10478,"line_start":289,"line_end":289,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10730,"byte_end":10739,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<EnumSet<T>>::is_subset","value":"pub fn is_subset(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e., `other` contains at least all\n the values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e., `other` contains at least all","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10599,"byte_end":10688,"line_start":293,"line_end":293,"column_start":5,"column_end":94}},{"value":"/ the values in `self`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10693,"byte_end":10718,"line_start":294,"line_end":294,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10890,"byte_end":10895,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"union","qualname":"<EnumSet<T>>::union","value":"pub fn union(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing any elements present in either set.\n","sig":null,"attributes":[{"value":"/ Returns a set containing any elements present in either set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":10814,"byte_end":10878,"line_start":299,"line_end":299,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11082,"byte_end":11094,"line_start":304,"line_end":304,"column_start":12,"column_end":24},"name":"intersection","qualname":"<EnumSet<T>>::intersection","value":"pub fn intersection(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing every element present in both sets.\n","sig":null,"attributes":[{"value":"/ Returns a set containing every element present in both sets.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11006,"byte_end":11070,"line_start":303,"line_end":303,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11291,"byte_end":11301,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"difference","qualname":"<EnumSet<T>>::difference","value":"pub fn difference(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing element present in `self` but not in `other`.\n","sig":null,"attributes":[{"value":"/ Returns a set containing element present in `self` but not in `other`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11205,"byte_end":11279,"line_start":307,"line_end":307,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11546,"byte_end":11568,"line_start":313,"line_end":313,"column_start":12,"column_end":34},"name":"symmetrical_difference","qualname":"<EnumSet<T>>::symmetrical_difference","value":"pub fn symmetrical_difference(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing every element present in either `self` or `other`, but is not\n present in both.\n","sig":null,"attributes":[{"value":"/ Returns a set containing every element present in either `self` or `other`, but is not","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11419,"byte_end":11509,"line_start":311,"line_end":311,"column_start":5,"column_end":95}},{"value":"/ present in both.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11514,"byte_end":11534,"line_start":312,"line_end":312,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11754,"byte_end":11764,"line_start":317,"line_end":317,"column_start":12,"column_end":22},"name":"complement","qualname":"<EnumSet<T>>::complement","value":"pub fn complement(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing all enum variants not in this set.\n","sig":null,"attributes":[{"value":"/ Returns a set containing all enum variants not in this set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11679,"byte_end":11742,"line_start":316,"line_end":316,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11920,"byte_end":11928,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"contains","qualname":"<EnumSet<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this set contains a value.\n","sig":null,"attributes":[{"value":"/ Checks whether this set contains a value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":11863,"byte_end":11908,"line_start":321,"line_end":321,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12221,"byte_end":12227,"line_start":331,"line_end":331,"column_start":12,"column_end":18},"name":"insert","qualname":"<EnumSet<T>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to this set.","sig":null,"attributes":[{"value":"/ Adds a value to this set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12023,"byte_end":12052,"line_start":326,"line_end":326,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12057,"byte_end":12060,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12065,"byte_end":12132,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12137,"byte_end":12140,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12145,"byte_end":12209,"line_start":330,"line_end":330,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12485,"byte_end":12491,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"remove","qualname":"<EnumSet<T>>::remove","value":"pub fn remove(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from this set. Returns whether the value was present in the set.\n","sig":null,"attributes":[{"value":"/ Removes a value from this set. Returns whether the value was present in the set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12389,"byte_end":12473,"line_start":336,"line_end":336,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12717,"byte_end":12727,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"insert_all","qualname":"<EnumSet<T>>::insert_all","value":"pub fn insert_all(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds all elements in another set to this one.\n","sig":null,"attributes":[{"value":"/ Adds all elements in another set to this one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12656,"byte_end":12705,"line_start":343,"line_end":343,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12892,"byte_end":12902,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"remove_all","qualname":"<EnumSet<T>>::remove_all","value":"pub fn remove_all(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all values in another set from this one.\n","sig":null,"attributes":[{"value":"/ Removes all values in another set from this one.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":12828,"byte_end":12880,"line_start":347,"line_end":347,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":13231,"byte_end":13235,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"name":"iter","qualname":"<EnumSet<T>>::iter","value":"pub fn iter(&Self) -> EnumSetIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the values in this set.","sig":null,"attributes":[{"value":"/ Creates an iterator over the values in this set.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":13012,"byte_end":13064,"line_start":352,"line_end":352,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":13069,"byte_end":13072,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Note that iterator invalidation is impossible as the iterator contains a copy of this type,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":13077,"byte_end":13172,"line_start":354,"line_end":354,"column_start":5,"column_end":100}},{"value":"/ rather than holding a reference to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":13177,"byte_end":13219,"line_start":355,"line_end":355,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16639,"byte_end":16644,"line_start":437,"line_end":437,"column_start":52,"column_end":57},"name":"as_u8","qualname":"<EnumSet<T>>::as_u8","value":"pub fn as_u8(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu8\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16645,"byte_end":16654,"line_start":437,"line_end":437,"column_start":58,"column_end":67},"name":"try_as_u8","qualname":"<EnumSet<T>>::try_as_u8","value":"pub fn try_as_u8(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu8\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16655,"byte_end":16670,"line_start":437,"line_end":437,"column_start":68,"column_end":83},"name":"as_u8_truncated","qualname":"<EnumSet<T>>::as_u8_truncated","value":"pub fn as_u8_truncated(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu8\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16601,"byte_end":16608,"line_start":437,"line_end":437,"column_start":14,"column_end":21},"name":"from_u8","qualname":"<EnumSet<T>>::from_u8","value":"pub fn from_u8(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16609,"byte_end":16620,"line_start":437,"line_end":437,"column_start":22,"column_end":33},"name":"try_from_u8","qualname":"<EnumSet<T>>::try_from_u8","value":"pub fn try_from_u8(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu8\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16621,"byte_end":16638,"line_start":437,"line_end":437,"column_start":34,"column_end":51},"name":"from_u8_truncated","qualname":"<EnumSet<T>>::from_u8_truncated","value":"pub fn from_u8_truncated(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16793,"byte_end":16799,"line_start":439,"line_end":439,"column_start":55,"column_end":61},"name":"as_u16","qualname":"<EnumSet<T>>::as_u16","value":"pub fn as_u16(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu16\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16800,"byte_end":16810,"line_start":439,"line_end":439,"column_start":62,"column_end":72},"name":"try_as_u16","qualname":"<EnumSet<T>>::try_as_u16","value":"pub fn try_as_u16(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu16\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16811,"byte_end":16827,"line_start":439,"line_end":439,"column_start":73,"column_end":89},"name":"as_u16_truncated","qualname":"<EnumSet<T>>::as_u16_truncated","value":"pub fn as_u16_truncated(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu16\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16752,"byte_end":16760,"line_start":439,"line_end":439,"column_start":14,"column_end":22},"name":"from_u16","qualname":"<EnumSet<T>>::from_u16","value":"pub fn from_u16(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16761,"byte_end":16773,"line_start":439,"line_end":439,"column_start":23,"column_end":35},"name":"try_from_u16","qualname":"<EnumSet<T>>::try_from_u16","value":"pub fn try_from_u16(u16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu16\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16774,"byte_end":16792,"line_start":439,"line_end":439,"column_start":36,"column_end":54},"name":"from_u16_truncated","qualname":"<EnumSet<T>>::from_u16_truncated","value":"pub fn from_u16_truncated(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16950,"byte_end":16956,"line_start":441,"line_end":441,"column_start":55,"column_end":61},"name":"as_u32","qualname":"<EnumSet<T>>::as_u32","value":"pub fn as_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu32\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16957,"byte_end":16967,"line_start":441,"line_end":441,"column_start":62,"column_end":72},"name":"try_as_u32","qualname":"<EnumSet<T>>::try_as_u32","value":"pub fn try_as_u32(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu32\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16968,"byte_end":16984,"line_start":441,"line_end":441,"column_start":73,"column_end":89},"name":"as_u32_truncated","qualname":"<EnumSet<T>>::as_u32_truncated","value":"pub fn as_u32_truncated(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu32\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16909,"byte_end":16917,"line_start":441,"line_end":441,"column_start":14,"column_end":22},"name":"from_u32","qualname":"<EnumSet<T>>::from_u32","value":"pub fn from_u32(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16918,"byte_end":16930,"line_start":441,"line_end":441,"column_start":23,"column_end":35},"name":"try_from_u32","qualname":"<EnumSet<T>>::try_from_u32","value":"pub fn try_from_u32(u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu32\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":16931,"byte_end":16949,"line_start":441,"line_end":441,"column_start":36,"column_end":54},"name":"from_u32_truncated","qualname":"<EnumSet<T>>::from_u32_truncated","value":"pub fn from_u32_truncated(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17107,"byte_end":17113,"line_start":443,"line_end":443,"column_start":55,"column_end":61},"name":"as_u64","qualname":"<EnumSet<T>>::as_u64","value":"pub fn as_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu64\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17114,"byte_end":17124,"line_start":443,"line_end":443,"column_start":62,"column_end":72},"name":"try_as_u64","qualname":"<EnumSet<T>>::try_as_u64","value":"pub fn try_as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu64\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17125,"byte_end":17141,"line_start":443,"line_end":443,"column_start":73,"column_end":89},"name":"as_u64_truncated","qualname":"<EnumSet<T>>::as_u64_truncated","value":"pub fn as_u64_truncated(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu64\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17066,"byte_end":17074,"line_start":443,"line_end":443,"column_start":14,"column_end":22},"name":"from_u64","qualname":"<EnumSet<T>>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17075,"byte_end":17087,"line_start":443,"line_end":443,"column_start":23,"column_end":35},"name":"try_from_u64","qualname":"<EnumSet<T>>::try_from_u64","value":"pub fn try_from_u64(u64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu64\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17088,"byte_end":17106,"line_start":443,"line_end":443,"column_start":36,"column_end":54},"name":"from_u64_truncated","qualname":"<EnumSet<T>>::from_u64_truncated","value":"pub fn from_u64_truncated(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17273,"byte_end":17280,"line_start":445,"line_end":445,"column_start":58,"column_end":65},"name":"as_u128","qualname":"<EnumSet<T>>::as_u128","value":"pub fn as_u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu128\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17281,"byte_end":17292,"line_start":445,"line_end":445,"column_start":66,"column_end":77},"name":"try_as_u128","qualname":"<EnumSet<T>>::try_as_u128","value":"pub fn try_as_u128(&Self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu128\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17293,"byte_end":17310,"line_start":445,"line_end":445,"column_start":78,"column_end":95},"name":"as_u128_truncated","qualname":"<EnumSet<T>>::as_u128_truncated","value":"pub fn as_u128_truncated(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu128\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17229,"byte_end":17238,"line_start":445,"line_end":445,"column_start":14,"column_end":23},"name":"from_u128","qualname":"<EnumSet<T>>::from_u128","value":"pub fn from_u128(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17239,"byte_end":17252,"line_start":445,"line_end":445,"column_start":24,"column_end":37},"name":"try_from_u128","qualname":"<EnumSet<T>>::try_from_u128","value":"pub fn try_from_u128(u128) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu128\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17253,"byte_end":17272,"line_start":445,"line_end":445,"column_start":38,"column_end":57},"name":"from_u128_truncated","qualname":"<EnumSet<T>>::from_u128_truncated","value":"pub fn from_u128_truncated(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17464,"byte_end":17472,"line_start":448,"line_end":448,"column_start":14,"column_end":22},"name":"as_usize","qualname":"<EnumSet<T>>::as_usize","value":"pub fn as_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nusize\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17473,"byte_end":17485,"line_start":448,"line_end":448,"column_start":23,"column_end":35},"name":"try_as_usize","qualname":"<EnumSet<T>>::try_as_usize","value":"pub fn try_as_usize(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nusize\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17486,"byte_end":17504,"line_start":448,"line_end":448,"column_start":36,"column_end":54},"name":"as_usize_truncated","qualname":"<EnumSet<T>>::as_usize_truncated","value":"pub fn as_usize_truncated(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nusize\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17404,"byte_end":17414,"line_start":447,"line_end":447,"column_start":14,"column_end":24},"name":"from_usize","qualname":"<EnumSet<T>>::from_usize","value":"pub fn from_usize(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17415,"byte_end":17429,"line_start":447,"line_end":447,"column_start":25,"column_end":39},"name":"try_from_usize","qualname":"<EnumSet<T>>::try_from_usize","value":"pub fn try_from_usize(usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nusize\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17430,"byte_end":17450,"line_start":447,"line_end":447,"column_start":40,"column_end":60},"name":"from_usize_truncated","qualname":"<EnumSet<T>>::from_usize_truncated","value":"pub fn from_usize_truncated(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":21687,"byte_end":21698,"line_start":598,"line_end":598,"column_start":12,"column_end":23},"name":"EnumSetIter","qualname":"::EnumSetIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" The iterator used by [`EnumSet`]s.\n","sig":null,"attributes":[{"value":"/ The iterator used by [`EnumSet`]s.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":21613,"byte_end":21651,"line_start":596,"line_end":596,"column_start":1,"column_end":39}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8309,"byte_end":8316,"line_start":223,"line_end":223,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17544,"byte_end":17551,"line_start":451,"line_end":451,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17682,"byte_end":17689,"line_start":458,"line_end":458,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17852,"byte_end":17859,"line_start":466,"line_end":466,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18027,"byte_end":18034,"line_start":471,"line_end":471,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18190,"byte_end":18197,"line_start":476,"line_end":476,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18353,"byte_end":18360,"line_start":481,"line_end":481,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18535,"byte_end":18542,"line_start":487,"line_end":487,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18720,"byte_end":18727,"line_start":493,"line_end":493,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18909,"byte_end":18916,"line_start":499,"line_end":499,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19091,"byte_end":19098,"line_start":505,"line_end":505,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19295,"byte_end":19302,"line_start":512,"line_end":512,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19447,"byte_end":19454,"line_start":517,"line_end":517,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19601,"byte_end":19608,"line_start":522,"line_end":522,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19755,"byte_end":19762,"line_start":527,"line_end":527,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19878,"byte_end":19885,"line_start":533,"line_end":533,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20019,"byte_end":20026,"line_start":540,"line_end":540,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20133,"byte_end":20140,"line_start":546,"line_end":546,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20294,"byte_end":20301,"line_start":551,"line_end":551,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20744,"byte_end":20751,"line_start":566,"line_end":566,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20886,"byte_end":20893,"line_start":571,"line_end":571,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":21056,"byte_end":21063,"line_start":576,"line_end":576,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":21768,"byte_end":21779,"line_start":599,"line_end":599,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22311,"byte_end":22322,"line_start":618,"line_end":618,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22365,"byte_end":22372,"line_start":620,"line_end":620,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22551,"byte_end":22558,"line_start":626,"line_end":626,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22760,"byte_end":22767,"line_start":634,"line_end":634,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22968,"byte_end":22975,"line_start":640,"line_end":640,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24832,"byte_end":24836,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":3027},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24843,"byte_end":24846,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2704},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24853,"byte_end":24855,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2673},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24862,"byte_end":24867,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":9548},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24874,"byte_end":24878,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":9755},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24919,"byte_end":24925,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3140},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24947,"byte_end":24952,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3145},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":24974,"byte_end":24980,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3150},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/repr.rs","byte_start":25002,"byte_end":25005,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":3136},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6407,"byte_end":6411,"line_start":187,"line_end":187,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3027},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6414,"byte_end":6416,"line_start":187,"line_end":187,"column_start":38,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2673},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":6419,"byte_end":6437,"line_start":187,"line_end":187,"column_start":43,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":8309,"byte_end":8316,"line_start":223,"line_end":223,"column_start":23,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17544,"byte_end":17551,"line_start":451,"line_end":451,"column_start":35,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":2995}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17682,"byte_end":17689,"line_start":458,"line_end":458,"column_start":40,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7631}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":17852,"byte_end":17859,"line_start":466,"line_end":466,"column_start":31,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18027,"byte_end":18034,"line_start":471,"line_end":471,"column_start":51,"column_end":58},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18190,"byte_end":18197,"line_start":476,"line_end":476,"column_start":34,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18353,"byte_end":18360,"line_start":481,"line_end":481,"column_start":42,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7590}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18535,"byte_end":18542,"line_start":487,"line_end":487,"column_start":55,"column_end":62},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3089}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18720,"byte_end":18727,"line_start":493,"line_end":493,"column_start":58,"column_end":65},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3140}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":18909,"byte_end":18916,"line_start":499,"line_end":499,"column_start":57,"column_end":64},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3145}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19091,"byte_end":19098,"line_start":505,"line_end":505,"column_start":58,"column_end":65},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19295,"byte_end":19302,"line_start":512,"line_end":512,"column_start":61,"column_end":68},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3119}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19447,"byte_end":19454,"line_start":517,"line_end":517,"column_start":64,"column_end":71},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3167}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19601,"byte_end":19608,"line_start":522,"line_end":522,"column_start":63,"column_end":70},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3171}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19755,"byte_end":19762,"line_start":527,"line_end":527,"column_start":64,"column_end":71},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3175}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":19878,"byte_end":19885,"line_start":533,"line_end":533,"column_start":31,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3136}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20019,"byte_end":20026,"line_start":540,"line_end":540,"column_start":35,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20133,"byte_end":20140,"line_start":546,"line_end":546,"column_start":40,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20294,"byte_end":20301,"line_start":551,"line_end":551,"column_start":41,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":9548}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20744,"byte_end":20751,"line_start":566,"line_end":566,"column_start":32,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":9755}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":20886,"byte_end":20893,"line_start":571,"line_end":571,"column_start":38,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":2715}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":21056,"byte_end":21063,"line_start":576,"line_end":576,"column_start":31,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":2704}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":21768,"byte_end":21779,"line_start":599,"line_end":599,"column_start":36,"column_end":47},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":481},"to":{"krate":1,"index":7820}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22311,"byte_end":22322,"line_start":618,"line_end":618,"column_start":44,"column_end":55},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":481},"to":{"krate":1,"index":7700}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22365,"byte_end":22372,"line_start":620,"line_end":620,"column_start":36,"column_end":43},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7640}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22551,"byte_end":22558,"line_start":626,"line_end":626,"column_start":42,"column_end":49},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7627}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22760,"byte_end":22767,"line_start":634,"line_end":634,"column_start":45,"column_end":52},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7640}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.7/src/lib.rs","byte_start":22968,"byte_end":22975,"line_start":640,"line_end":640,"column_start":51,"column_end":58},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7627}}]}