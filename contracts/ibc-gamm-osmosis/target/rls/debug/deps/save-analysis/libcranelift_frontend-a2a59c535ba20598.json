{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cranelift_frontend","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=a2a59c535ba20598","-C","extra-filename=-a2a59c535ba20598","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","--extern","cranelift_codegen=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libcranelift_codegen-6f13178b543b3d49.rmeta","--extern","log=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/liblog-e724a7b6173dd03e.rmeta","--extern","smallvec=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libsmallvec-559a18ab53c843e6.rmeta","--extern","target_lexicon=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libtarget_lexicon-c5d927159440862e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libcranelift_frontend-a2a59c535ba20598.rmeta"},"prelude":{"crate_id":{"name":"cranelift_frontend","disambiguator":[10995084391580329882,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":20,"id":{"name":"cranelift_codegen","disambiguator":[7252881644451085426,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":21,"id":{"name":"cranelift_bforest","disambiguator":[13659091840712201015,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":22,"id":{"name":"cranelift_entity","disambiguator":[10182080851710473171,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":23,"id":{"name":"cranelift_codegen_shared","disambiguator":[2319278824389588516,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":24,"id":{"name":"target_lexicon","disambiguator":[5761728606660353977,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":25,"id":{"name":"regalloc","disambiguator":[9744873785748885211,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","num":26,"id":{"name":"log","disambiguator":[4330912491964922859,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":27,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","num":28,"id":{"name":"smallvec","disambiguator":[16555703719173163471,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":29,"id":{"name":"rustc_hash","disambiguator":[15003938830133850266,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":30,"id":{"name":"gimli","disambiguator":[10580492648646776114,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":31,"id":{"name":"stable_deref_trait","disambiguator":[13516426496008958082,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":32,"id":{"name":"indexmap","disambiguator":[1422014887463838397,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":33,"id":{"name":"serde","disambiguator":[15013803239269233867,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":34,"id":{"name":"serde_derive","disambiguator":[68729331767806002,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":35,"id":{"name":"hashbrown","disambiguator":[11250974392561425329,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":36,"id":{"name":"ahash","disambiguator":[2125844637487561298,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":37,"id":{"name":"once_cell","disambiguator":[470338061770628507,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":38,"id":{"name":"getrandom","disambiguator":[12460439178872030525,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":39,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","num":40,"id":{"name":"fallible_iterator","disambiguator":[2873457755434398404,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":0,"byte_end":7485,"line_start":1,"line_end":206,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":7240,"byte_end":7255,"line_start":196,"line_end":196,"column_start":27,"column_end":42},"alias_span":null,"name":"FunctionBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":7257,"byte_end":7279,"line_start":196,"line_end":196,"column_start":44,"column_end":66},"alias_span":null,"name":"FunctionBuilderContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":464},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":7305,"byte_end":7311,"line_start":197,"line_end":197,"column_start":24,"column_end":30},"alias_span":null,"name":"Switch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":7338,"byte_end":7346,"line_start":198,"line_end":198,"column_start":26,"column_end":34},"alias_span":null,"name":"Variable","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":0,"byte_end":7485,"line_start":1,"line_end":206,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":246},{"krate":0,"index":372},{"krate":0,"index":404},{"krate":0,"index":416}],"decl_id":null,"docs":" Cranelift IR builder library.","sig":null,"attributes":[{"value":"/ Cranelift IR builder library.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provides a straightforward way to create a Cranelift IR function and fill it with instructions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":38,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ corresponding to your source program written in another language.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":137,"byte_end":206,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":207,"byte_end":210,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To get started, create an [`FunctionBuilderContext`](struct.FunctionBuilderContext.html) and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":211,"byte_end":307,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ pass it as an argument to a [`FunctionBuilder`](struct.FunctionBuilder.html).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":308,"byte_end":389,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":390,"byte_end":393,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Mutable variables and Cranelift IR values","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":394,"byte_end":441,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":442,"byte_end":445,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The most interesting feature of this API is that it provides a single way to deal with all your","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":446,"byte_end":545,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ variable problems. Indeed, the [`FunctionBuilder`](struct.FunctionBuilder.html) struct has a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":546,"byte_end":642,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ type `Variable` that should be an index of your source language variables. Then, through","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":643,"byte_end":735,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ calling the functions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":736,"byte_end":761,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/ [`declare_var`](struct.FunctionBuilder.html#method.declare_var),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":762,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`def_var`](struct.FunctionBuilder.html#method.def_var) and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":831,"byte_end":894,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ [`use_var`](struct.FunctionBuilder.html#method.use_var), the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":895,"byte_end":959,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ [`FunctionBuilder`](struct.FunctionBuilder.html) will create for you all the Cranelift IR","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":960,"byte_end":1053,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ values corresponding to your variables.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1054,"byte_end":1097,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1098,"byte_end":1101,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This API has been designed to help you translate your mutable variables into","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1102,"byte_end":1182,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ [`SSA`](https://en.wikipedia.org/wiki/Static_single_assignment_form) form.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1183,"byte_end":1261,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ [`use_var`](struct.FunctionBuilder.html#method.use_var) will return the Cranelift IR value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1262,"byte_end":1356,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/ that corresponds to your mutable variable at a precise point in the program. However, if you know","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1357,"byte_end":1458,"line_start":24,"line_end":24,"column_start":1,"column_end":102}},{"value":"/ beforehand that one of your variables is defined only once, for instance if it is the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1459,"byte_end":1555,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ of an intermediate expression in an expression-based language, then you can translate it","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1556,"byte_end":1648,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"/ directly by the Cranelift IR value returned by the instruction builder. Using the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1649,"byte_end":1734,"line_start":27,"line_end":27,"column_start":1,"column_end":86}},{"value":"/ [`use_var`](struct.FunctionBuilder.html#method.use_var) API for such an immutable variable","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1735,"byte_end":1829,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ would also work but with a slight additional overhead (the SSA algorithm does not know","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1830,"byte_end":1920,"line_start":29,"line_end":29,"column_start":1,"column_end":91}},{"value":"/ beforehand if a variable is immutable or not).","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1921,"byte_end":1971,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1972,"byte_end":1975,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The moral is that you should use these three functions to handle all your mutable variables,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":1976,"byte_end":2072,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ even those that are not present in the source code but artifacts of the translation. It is up","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2073,"byte_end":2170,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ to you to keep a mapping between the mutable variables of your language and their `Variable`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2171,"byte_end":2267,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ index that is used by Cranelift. Caution: as the `Variable` is used by Cranelift to index an","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2268,"byte_end":2364,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ array containing information about your mutable variables, when you create a new `Variable`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2365,"byte_end":2460,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ with [`Variable::new(var_index)`] you should make sure that `var_index` is provided by a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2461,"byte_end":2553,"line_start":37,"line_end":37,"column_start":1,"column_end":93}},{"value":"/ counter incremented by 1 each time you encounter a new mutable variable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2554,"byte_end":2630,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2631,"byte_end":2634,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2635,"byte_end":2648,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2649,"byte_end":2652,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Here is a pseudo-program we want to transform into Cranelift IR:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2653,"byte_end":2721,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2722,"byte_end":2725,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```clif","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2726,"byte_end":2737,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ function(x) {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2738,"byte_end":2755,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ x, y, z : i32","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2756,"byte_end":2773,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ block0:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2774,"byte_end":2785,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/    y = 2;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2786,"byte_end":2799,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/    z = x + y;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2800,"byte_end":2817,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/    jump block1","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2818,"byte_end":2836,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ block1:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2837,"byte_end":2848,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/    z = z + y;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2849,"byte_end":2866,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/    brnz y, block3;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2867,"byte_end":2889,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/    jump block2","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2890,"byte_end":2908,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ block2:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2909,"byte_end":2920,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/    z = z - x;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2921,"byte_end":2938,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/    return y","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2939,"byte_end":2954,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/ block3:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2955,"byte_end":2966,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/    y = y - x","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2967,"byte_end":2983,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/    jump block1","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":2984,"byte_end":3002,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3003,"byte_end":3008,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3009,"byte_end":3016,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3017,"byte_end":3020,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Here is how you build the corresponding Cranelift IR function using `FunctionBuilderContext`:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3021,"byte_end":3118,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3119,"byte_end":3122,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3123,"byte_end":3134,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ extern crate cranelift_codegen;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3135,"byte_end":3170,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ extern crate cranelift_frontend;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3171,"byte_end":3207,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3208,"byte_end":3211,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use cranelift_codegen::entity::EntityRef;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3212,"byte_end":3257,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ use cranelift_codegen::ir::types::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3258,"byte_end":3298,"line_start":71,"line_end":71,"column_start":1,"column_end":41}},{"value":"/ use cranelift_codegen::ir::{AbiParam, ExternalName, Function, InstBuilder, Signature};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3299,"byte_end":3389,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ use cranelift_codegen::isa::CallConv;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3390,"byte_end":3431,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use cranelift_codegen::settings;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3432,"byte_end":3468,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ use cranelift_codegen::verifier::verify_function;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3469,"byte_end":3522,"line_start":75,"line_end":75,"column_start":1,"column_end":54}},{"value":"/ use cranelift_frontend::{FunctionBuilder, FunctionBuilderContext, Variable};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3523,"byte_end":3603,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3604,"byte_end":3607,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let mut sig = Signature::new(CallConv::SystemV);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3608,"byte_end":3660,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/ sig.returns.push(AbiParam::new(I32));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3661,"byte_end":3702,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ sig.params.push(AbiParam::new(I32));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3703,"byte_end":3743,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/ let mut fn_builder_ctx = FunctionBuilderContext::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3744,"byte_end":3803,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/ let mut func = Function::with_name_signature(ExternalName::user(0, 0), sig);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3804,"byte_end":3884,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/ {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3885,"byte_end":3890,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     let mut builder = FunctionBuilder::new(&mut func, &mut fn_builder_ctx);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3891,"byte_end":3970,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3971,"byte_end":3974,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     let block0 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":3975,"byte_end":4019,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/     let block1 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4020,"byte_end":4064,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/     let block2 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4065,"byte_end":4109,"line_start":88,"line_end":88,"column_start":1,"column_end":45}},{"value":"/     let block3 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4110,"byte_end":4154,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/     let x = Variable::new(0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4155,"byte_end":4188,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/     let y = Variable::new(1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4189,"byte_end":4222,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/     let z = Variable::new(2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4223,"byte_end":4256,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/     builder.declare_var(x, I32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4257,"byte_end":4293,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/     builder.declare_var(y, I32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4294,"byte_end":4330,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/     builder.declare_var(z, I32);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4331,"byte_end":4367,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/     builder.append_block_params_for_function_params(block0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4368,"byte_end":4432,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4433,"byte_end":4436,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     builder.switch_to_block(block0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4437,"byte_end":4477,"line_start":98,"line_end":98,"column_start":1,"column_end":41}},{"value":"/     builder.seal_block(block0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4478,"byte_end":4513,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4514,"byte_end":4523,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/         let tmp = builder.block_params(block0)[0]; // the first function parameter","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4524,"byte_end":4610,"line_start":101,"line_end":101,"column_start":1,"column_end":87}},{"value":"/         builder.def_var(x, tmp);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4611,"byte_end":4647,"line_start":102,"line_end":102,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4648,"byte_end":4657,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4658,"byte_end":4667,"line_start":104,"line_end":104,"column_start":1,"column_end":10}},{"value":"/         let tmp = builder.ins().iconst(I32, 2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4668,"byte_end":4719,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/         builder.def_var(y, tmp);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4720,"byte_end":4756,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4757,"byte_end":4766,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4767,"byte_end":4776,"line_start":108,"line_end":108,"column_start":1,"column_end":10}},{"value":"/         let arg1 = builder.use_var(x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4777,"byte_end":4819,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         let arg2 = builder.use_var(y);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4820,"byte_end":4862,"line_start":110,"line_end":110,"column_start":1,"column_end":43}},{"value":"/         let tmp = builder.ins().iadd(arg1, arg2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4863,"byte_end":4916,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/         builder.def_var(z, tmp);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4917,"byte_end":4953,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4954,"byte_end":4963,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/     builder.ins().jump(block1, &[]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":4964,"byte_end":5004,"line_start":114,"line_end":114,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5005,"byte_end":5008,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     builder.switch_to_block(block1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5009,"byte_end":5049,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5050,"byte_end":5059,"line_start":117,"line_end":117,"column_start":1,"column_end":10}},{"value":"/         let arg1 = builder.use_var(y);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5060,"byte_end":5102,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"/         let arg2 = builder.use_var(z);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5103,"byte_end":5145,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/         let tmp = builder.ins().iadd(arg1, arg2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5146,"byte_end":5199,"line_start":120,"line_end":120,"column_start":1,"column_end":54}},{"value":"/         builder.def_var(z, tmp);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5200,"byte_end":5236,"line_start":121,"line_end":121,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5237,"byte_end":5246,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5247,"byte_end":5256,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/         let arg = builder.use_var(y);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5257,"byte_end":5298,"line_start":124,"line_end":124,"column_start":1,"column_end":42}},{"value":"/         builder.ins().brnz(arg, block3, &[]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5299,"byte_end":5348,"line_start":125,"line_end":125,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5349,"byte_end":5358,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/     builder.ins().jump(block2, &[]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5359,"byte_end":5399,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5400,"byte_end":5403,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/     builder.switch_to_block(block2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5404,"byte_end":5444,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/     builder.seal_block(block2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5445,"byte_end":5480,"line_start":130,"line_end":130,"column_start":1,"column_end":36}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5481,"byte_end":5490,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/         let arg1 = builder.use_var(z);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5491,"byte_end":5533,"line_start":132,"line_end":132,"column_start":1,"column_end":43}},{"value":"/         let arg2 = builder.use_var(x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5534,"byte_end":5576,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/         let tmp = builder.ins().isub(arg1, arg2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5577,"byte_end":5630,"line_start":134,"line_end":134,"column_start":1,"column_end":54}},{"value":"/         builder.def_var(z, tmp);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5631,"byte_end":5667,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5668,"byte_end":5677,"line_start":136,"line_end":136,"column_start":1,"column_end":10}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5678,"byte_end":5687,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/         let arg = builder.use_var(y);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5688,"byte_end":5729,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/         builder.ins().return_(&[arg]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5730,"byte_end":5772,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5773,"byte_end":5782,"line_start":140,"line_end":140,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5783,"byte_end":5786,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/     builder.switch_to_block(block3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5787,"byte_end":5827,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/     builder.seal_block(block3);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5828,"byte_end":5863,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5864,"byte_end":5867,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5868,"byte_end":5877,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/         let arg1 = builder.use_var(y);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5878,"byte_end":5920,"line_start":146,"line_end":146,"column_start":1,"column_end":43}},{"value":"/         let arg2 = builder.use_var(x);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5921,"byte_end":5963,"line_start":147,"line_end":147,"column_start":1,"column_end":43}},{"value":"/         let tmp = builder.ins().isub(arg1, arg2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":5964,"byte_end":6017,"line_start":148,"line_end":148,"column_start":1,"column_end":54}},{"value":"/         builder.def_var(y, tmp);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6018,"byte_end":6054,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6055,"byte_end":6064,"line_start":150,"line_end":150,"column_start":1,"column_end":10}},{"value":"/     builder.ins().jump(block1, &[]);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6065,"byte_end":6105,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/     builder.seal_block(block1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6106,"byte_end":6141,"line_start":152,"line_end":152,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6142,"byte_end":6145,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/     builder.finalize();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6146,"byte_end":6173,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6174,"byte_end":6179,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6180,"byte_end":6183,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let flags = settings::Flags::new(settings::builder());","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6184,"byte_end":6242,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/ let res = verify_function(&func, &flags);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6243,"byte_end":6288,"line_start":158,"line_end":158,"column_start":1,"column_end":46}},{"value":"/ println!(\"{}\", func.display(None));","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6289,"byte_end":6328,"line_start":159,"line_end":159,"column_start":1,"column_end":40}},{"value":"/ if let Err(errors) = res {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6329,"byte_end":6359,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     panic!(\"{}\", errors);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6360,"byte_end":6389,"line_start":161,"line_end":161,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6390,"byte_end":6395,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6396,"byte_end":6403,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6405,"byte_end":6472,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6473,"byte_end":6503,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"deny(unstable_features)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6533,"byte_end":6556,"line_start":167,"line_end":167,"column_start":30,"column_end":53}},{"value":"no_std","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":6915,"byte_end":6925,"line_start":181,"line_end":181,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8649,"byte_end":8671,"line_start":22,"line_end":22,"column_start":12,"column_end":34},"name":"FunctionBuilderContext","qualname":"::frontend::FunctionBuilderContext","value":"FunctionBuilderContext {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" Structure used for translating a series of functions into Cranelift IR.","sig":null,"attributes":[{"value":"/ Structure used for translating a series of functions into Cranelift IR.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8319,"byte_end":8394,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8395,"byte_end":8398,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ In order to reduce memory reallocations when compiling multiple functions,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8399,"byte_end":8477,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ `FunctionBuilderContext` holds various data structures which are cleared between","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8478,"byte_end":8562,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ functions, rather than dropped, preserving the underlying allocations.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8563,"byte_end":8637,"line_start":21,"line_end":21,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8863,"byte_end":8878,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"FunctionBuilder","qualname":"::frontend::FunctionBuilder","value":"FunctionBuilder { func }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" Temporary object used to build a single Cranelift IR `Function`.\n","sig":null,"attributes":[{"value":"/ Temporary object used to build a single Cranelift IR `Function`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8783,"byte_end":8851,"line_start":28,"line_end":28,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":9002,"byte_end":9006,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"func","qualname":"::frontend::FunctionBuilder::func","value":"&'a mut cranelift_codegen::ir::Function","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" The function currently being built.\n This field is public so the function can be re-borrowed.\n","sig":null,"attributes":[{"value":"/ The function currently being built.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8889,"byte_end":8928,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/ This field is public so the function can be re-borrowed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":8933,"byte_end":8993,"line_start":31,"line_end":31,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":9916,"byte_end":9919,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionBuilderContext>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a FunctionBuilderContext structure. The structure is automatically cleared after\n each [`FunctionBuilder`](struct.FunctionBuilder.html) completes translating a function.\n","sig":null,"attributes":[{"value":"/ Creates a FunctionBuilderContext structure. The structure is automatically cleared after","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":9716,"byte_end":9808,"line_start":58,"line_end":58,"column_start":5,"column_end":97}},{"value":"/ each [`FunctionBuilder`](struct.FunctionBuilder.html) completes translating a function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":9813,"byte_end":9904,"line_start":59,"line_end":59,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10473,"byte_end":10488,"line_start":81,"line_end":81,"column_start":12,"column_end":27},"name":"FuncInstBuilder","qualname":"::frontend::FuncInstBuilder","value":"FuncInstBuilder {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" Implementation of the [`InstBuilder`](cranelift_codegen::ir::InstBuilder) that has\n one convenience method per Cranelift IR instruction.\n","sig":null,"attributes":[{"value":"/ Implementation of the [`InstBuilder`](cranelift_codegen::ir::InstBuilder) that has","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10318,"byte_end":10404,"line_start":79,"line_end":79,"column_start":1,"column_end":87}},{"value":"/ one convenience method per Cranelift IR instruction.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10405,"byte_end":10461,"line_start":80,"line_end":80,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16159,"byte_end":16162,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionBuilder>::new","value":"pub fn new(&'a mut Function, &'a mut FunctionBuilderContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new FunctionBuilder structure that will operate on a `Function` using a\n `FunctionBuilderContext`.\n","sig":null,"attributes":[{"value":"/ Creates a new FunctionBuilder structure that will operate on a `Function` using a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16028,"byte_end":16113,"line_start":197,"line_end":197,"column_start":5,"column_end":90}},{"value":"/ `FunctionBuilderContext`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16118,"byte_end":16147,"line_start":198,"line_end":198,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16505,"byte_end":16518,"line_start":210,"line_end":210,"column_start":12,"column_end":25},"name":"current_block","qualname":"<FunctionBuilder>::current_block","value":"pub fn current_block(&Self) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the block that this builder is currently at.\n","sig":null,"attributes":[{"value":"/ Get the block that this builder is currently at.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16441,"byte_end":16493,"line_start":209,"line_end":209,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16675,"byte_end":16685,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"set_srcloc","qualname":"<FunctionBuilder>::set_srcloc","value":"pub fn set_srcloc(&mut Self, ir::SourceLoc)","parent":null,"children":[],"decl_id":null,"docs":" Set the source location that should be assigned to all new instructions.\n","sig":null,"attributes":[{"value":"/ Set the source location that should be assigned to all new instructions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16587,"byte_end":16663,"line_start":214,"line_end":214,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16827,"byte_end":16839,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"create_block","qualname":"<FunctionBuilder>::create_block","value":"pub fn create_block(&mut Self) -> Block","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Block` and returns its reference.\n","sig":null,"attributes":[{"value":"/ Creates a new `Block` and returns its reference.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16763,"byte_end":16815,"line_start":219,"line_end":219,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17212,"byte_end":17230,"line_start":232,"line_end":232,"column_start":12,"column_end":30},"name":"insert_block_after","qualname":"<FunctionBuilder>::insert_block_after","value":"pub fn insert_block_after(&mut Self, Block, Block)","parent":null,"children":[],"decl_id":null,"docs":" Insert `block` in the layout *after* the existing block `after`.\n","sig":null,"attributes":[{"value":"/ Insert `block` in the layout *after* the existing block `after`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17132,"byte_end":17200,"line_start":231,"line_end":231,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17797,"byte_end":17812,"line_start":243,"line_end":243,"column_start":12,"column_end":27},"name":"switch_to_block","qualname":"<FunctionBuilder>::switch_to_block","value":"pub fn switch_to_block(&mut Self, Block)","parent":null,"children":[],"decl_id":null,"docs":" After the call to this function, new instructions will be inserted into the designated\n block, in the order they are declared. You must declare the types of the Block arguments\n you will use here.","sig":null,"attributes":[{"value":"/ After the call to this function, new instructions will be inserted into the designated","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17342,"byte_end":17432,"line_start":236,"line_end":236,"column_start":5,"column_end":95}},{"value":"/ block, in the order they are declared. You must declare the types of the Block arguments","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17437,"byte_end":17529,"line_start":237,"line_end":237,"column_start":5,"column_end":97}},{"value":"/ you will use here.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17534,"byte_end":17556,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17561,"byte_end":17564,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When inserting the terminator instruction (which doesn't have a fallthrough to its immediate","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17569,"byte_end":17665,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ successor), the block will be declared filled and it will not be possible to append","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17670,"byte_end":17757,"line_start":241,"line_end":241,"column_start":5,"column_end":92}},{"value":"/ instructions to it.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":17762,"byte_end":17785,"line_start":242,"line_end":242,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18763,"byte_end":18773,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"seal_block","qualname":"<FunctionBuilder>::seal_block","value":"pub fn seal_block(&mut Self, Block)","parent":null,"children":[],"decl_id":null,"docs":" Declares that all the predecessors of this block are known.","sig":null,"attributes":[{"value":"/ Declares that all the predecessors of this block are known.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18458,"byte_end":18521,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18526,"byte_end":18529,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Function to call with `block` as soon as the last branch instruction to `block` has been","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18534,"byte_end":18626,"line_start":264,"line_end":264,"column_start":5,"column_end":97}},{"value":"/ created. Forgetting to call this method on every block will cause inconsistencies in the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18631,"byte_end":18723,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ produced functions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18728,"byte_end":18751,"line_start":266,"line_end":266,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19292,"byte_end":19307,"line_start":278,"line_end":278,"column_start":12,"column_end":27},"name":"seal_all_blocks","qualname":"<FunctionBuilder>::seal_all_blocks","value":"pub fn seal_all_blocks(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Effectively calls seal_block on all unsealed blocks in the function.","sig":null,"attributes":[{"value":"/ Effectively calls seal_block on all unsealed blocks in the function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":18939,"byte_end":19011,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19016,"byte_end":19019,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ It's more efficient to seal `Block`s as soon as possible, during","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19024,"byte_end":19092,"line_start":274,"line_end":274,"column_start":5,"column_end":73}},{"value":"/ translation, but for frontends where this is impractical to do, this","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19097,"byte_end":19169,"line_start":275,"line_end":275,"column_start":5,"column_end":77}},{"value":"/ function can be used at the end of translating all blocks to ensure","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19174,"byte_end":19245,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ that everything is sealed.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19250,"byte_end":19280,"line_start":277,"line_end":277,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19562,"byte_end":19573,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"declare_var","qualname":"<FunctionBuilder>::declare_var","value":"pub fn declare_var(&mut Self, Variable, Type)","parent":null,"children":[],"decl_id":null,"docs":" In order to use a variable in a `use_var`, you need to declare its type with this method.\n","sig":null,"attributes":[{"value":"/ In order to use a variable in a `use_var`, you need to declare its type with this method.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19457,"byte_end":19550,"line_start":283,"line_end":283,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19986,"byte_end":19993,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"use_var","qualname":"<FunctionBuilder>::use_var","value":"pub fn use_var(&mut Self, Variable) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the Cranelift IR value corresponding to the utilization at the current program\n position of a previously defined user variable.\n","sig":null,"attributes":[{"value":"/ Returns the Cranelift IR value corresponding to the utilization at the current program","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19828,"byte_end":19918,"line_start":294,"line_end":294,"column_start":5,"column_end":95}},{"value":"/ position of a previously defined user variable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":19923,"byte_end":19974,"line_start":295,"line_end":295,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":20844,"byte_end":20851,"line_start":320,"line_end":320,"column_start":12,"column_end":19},"name":"def_var","qualname":"<FunctionBuilder>::def_var","value":"pub fn def_var(&mut Self, Variable, Value)","parent":null,"children":[],"decl_id":null,"docs":" Register a new definition of a user variable. The type of the value must be\n the same as the type registered for the variable.\n","sig":null,"attributes":[{"value":"/ Register a new definition of a user variable. The type of the value must be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":20695,"byte_end":20774,"line_start":318,"line_end":318,"column_start":5,"column_end":84}},{"value":"/ the same as the type registered for the variable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":20779,"byte_end":20832,"line_start":319,"line_end":319,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":21474,"byte_end":21487,"line_start":338,"line_end":338,"column_start":12,"column_end":25},"name":"set_val_label","qualname":"<FunctionBuilder>::set_val_label","value":"pub fn set_val_label(&mut Self, Value, ValueLabel)","parent":null,"children":[],"decl_id":null,"docs":" Set label for Value","sig":null,"attributes":[{"value":"/ Set label for Value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":21343,"byte_end":21366,"line_start":335,"line_end":335,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":21371,"byte_end":21374,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This will not do anything unless `func.dfg.collect_debug_info` is called first.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":21379,"byte_end":21462,"line_start":337,"line_end":337,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22312,"byte_end":22329,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"create_jump_table","qualname":"<FunctionBuilder>::create_jump_table","value":"pub fn create_jump_table(&mut Self, JumpTableData) -> JumpTable","parent":null,"children":[],"decl_id":null,"docs":" Creates a jump table in the function, to be used by `br_table` instructions.\n","sig":null,"attributes":[{"value":"/ Creates a jump table in the function, to be used by `br_table` instructions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22220,"byte_end":22300,"line_start":359,"line_end":359,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22564,"byte_end":22581,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"create_stack_slot","qualname":"<FunctionBuilder>::create_stack_slot","value":"pub fn create_stack_slot(&mut Self, StackSlotData) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Creates a stack slot in the function, to be used by `stack_load`, `stack_store` and\n `stack_addr` instructions.\n","sig":null,"attributes":[{"value":"/ Creates a stack slot in the function, to be used by `stack_load`, `stack_store` and","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22430,"byte_end":22517,"line_start":364,"line_end":364,"column_start":5,"column_end":92}},{"value":"/ `stack_addr` instructions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22522,"byte_end":22552,"line_start":365,"line_end":365,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22778,"byte_end":22794,"line_start":371,"line_end":371,"column_start":12,"column_end":28},"name":"import_signature","qualname":"<FunctionBuilder>::import_signature","value":"pub fn import_signature(&mut Self, Signature) -> SigRef","parent":null,"children":[],"decl_id":null,"docs":" Adds a signature which can later be used to declare an external function import.\n","sig":null,"attributes":[{"value":"/ Adds a signature which can later be used to declare an external function import.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22682,"byte_end":22766,"line_start":370,"line_end":370,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22949,"byte_end":22964,"line_start":376,"line_end":376,"column_start":12,"column_end":27},"name":"import_function","qualname":"<FunctionBuilder>::import_function","value":"pub fn import_function(&mut Self, ExtFuncData) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Declare an external function import.\n","sig":null,"attributes":[{"value":"/ Declare an external function import.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":22897,"byte_end":22937,"line_start":375,"line_end":375,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23126,"byte_end":23145,"line_start":381,"line_end":381,"column_start":12,"column_end":31},"name":"create_global_value","qualname":"<FunctionBuilder>::create_global_value","value":"pub fn create_global_value(&mut Self, GlobalValueData) -> GlobalValue","parent":null,"children":[],"decl_id":null,"docs":" Declares a global value accessible to the function.\n","sig":null,"attributes":[{"value":"/ Declares a global value accessible to the function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23059,"byte_end":23114,"line_start":380,"line_end":380,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23311,"byte_end":23322,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"create_heap","qualname":"<FunctionBuilder>::create_heap","value":"pub fn create_heap(&mut Self, HeapData) -> Heap","parent":null,"children":[],"decl_id":null,"docs":" Declares a heap accessible to the function.\n","sig":null,"attributes":[{"value":"/ Declares a heap accessible to the function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23252,"byte_end":23299,"line_start":385,"line_end":385,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23601,"byte_end":23604,"line_start":392,"line_end":392,"column_start":12,"column_end":15},"name":"ins","qualname":"<FunctionBuilder>::ins","value":"pub fn ins<'short>(&'short mut Self) -> FuncInstBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns an object with the [`InstBuilder`](cranelift_codegen::ir::InstBuilder)\n trait that allows to conveniently append an instruction to the current `Block` being built.\n","sig":null,"attributes":[{"value":"/ Returns an object with the [`InstBuilder`](cranelift_codegen::ir::InstBuilder)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23407,"byte_end":23489,"line_start":390,"line_end":390,"column_start":5,"column_end":87}},{"value":"/ trait that allows to conveniently append an instruction to the current `Block` being built.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23494,"byte_end":23589,"line_start":391,"line_end":391,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23921,"byte_end":23942,"line_start":400,"line_end":400,"column_start":12,"column_end":33},"name":"ensure_inserted_block","qualname":"<FunctionBuilder>::ensure_inserted_block","value":"pub fn ensure_inserted_block(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Make sure that the current block is inserted in the layout.\n","sig":null,"attributes":[{"value":"/ Make sure that the current block is inserted in the layout.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":23846,"byte_end":23909,"line_start":399,"line_end":399,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24704,"byte_end":24710,"line_start":419,"line_end":419,"column_start":12,"column_end":18},"name":"cursor","qualname":"<FunctionBuilder>::cursor","value":"pub fn cursor(&mut Self) -> FuncCursor","parent":null,"children":[],"decl_id":null,"docs":" Returns a `FuncCursor` pointed at the current position ready for inserting instructions.","sig":null,"attributes":[{"value":"/ Returns a `FuncCursor` pointed at the current position ready for inserting instructions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24443,"byte_end":24535,"line_start":415,"line_end":415,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24540,"byte_end":24543,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This can be used to insert SSA code that doesn't need to access locals and that doesn't","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24548,"byte_end":24639,"line_start":417,"line_end":417,"column_start":5,"column_end":96}},{"value":"/ need to know about `FunctionBuilder` at all.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24644,"byte_end":24692,"line_start":418,"line_end":418,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":25088,"byte_end":25127,"line_start":429,"line_end":429,"column_start":12,"column_end":51},"name":"append_block_params_for_function_params","qualname":"<FunctionBuilder>::append_block_params_for_function_params","value":"pub fn append_block_params_for_function_params(&mut Self, Block)","parent":null,"children":[],"decl_id":null,"docs":" Append parameters to the given `Block` corresponding to the function\n parameters. This can be used to set up the block parameters for the\n entry block.\n","sig":null,"attributes":[{"value":"/ Append parameters to the given `Block` corresponding to the function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24907,"byte_end":24979,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/ parameters. This can be used to set up the block parameters for the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":24984,"byte_end":25055,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ entry block.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":25060,"byte_end":25076,"line_start":428,"line_end":428,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":25917,"byte_end":25957,"line_start":447,"line_end":447,"column_start":12,"column_end":52},"name":"append_block_params_for_function_returns","qualname":"<FunctionBuilder>::append_block_params_for_function_returns","value":"pub fn append_block_params_for_function_returns(&mut Self, Block)","parent":null,"children":[],"decl_id":null,"docs":" Append parameters to the given `Block` corresponding to the function\n return values. This can be used to set up the block parameters for a\n function exit block.\n","sig":null,"attributes":[{"value":"/ Append parameters to the given `Block` corresponding to the function","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":25727,"byte_end":25799,"line_start":444,"line_end":444,"column_start":5,"column_end":77}},{"value":"/ return values. This can be used to set up the block parameters for a","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":25804,"byte_end":25876,"line_start":445,"line_end":445,"column_start":5,"column_end":77}},{"value":"/ function exit block.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":25881,"byte_end":25905,"line_start":446,"line_end":446,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":26556,"byte_end":26564,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"finalize","qualname":"<FunctionBuilder>::finalize","value":"pub fn finalize(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Declare that translation of the current function is complete. This\n resets the state of the `FunctionBuilder` in preparation to be used\n for another function.\n","sig":null,"attributes":[{"value":"/ Declare that translation of the current function is complete. This","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":26368,"byte_end":26438,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/ resets the state of the `FunctionBuilder` in preparation to be used","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":26443,"byte_end":26514,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ for another function.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":26519,"byte_end":26544,"line_start":459,"line_end":459,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28673,"byte_end":28685,"line_start":508,"line_end":508,"column_start":12,"column_end":24},"name":"block_params","qualname":"<FunctionBuilder>::block_params","value":"pub fn block_params(&Self, Block) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all the parameters for a `Block` currently inferred from the jump instructions\n inserted that target it and the SSA construction.\n","sig":null,"attributes":[{"value":"/ Retrieves all the parameters for a `Block` currently inferred from the jump instructions","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28511,"byte_end":28603,"line_start":506,"line_end":506,"column_start":5,"column_end":97}},{"value":"/ inserted that target it and the SSA construction.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28608,"byte_end":28661,"line_start":507,"line_end":507,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28879,"byte_end":28888,"line_start":513,"line_end":513,"column_start":12,"column_end":21},"name":"signature","qualname":"<FunctionBuilder>::signature","value":"pub fn signature(&Self, SigRef) -> Option<&Signature>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the signature with reference `sigref` previously added with `import_signature`.\n","sig":null,"attributes":[{"value":"/ Retrieves the signature with reference `sigref` previously added with `import_signature`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28774,"byte_end":28867,"line_start":512,"line_end":512,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29302,"byte_end":29320,"line_start":522,"line_end":522,"column_start":12,"column_end":30},"name":"append_block_param","qualname":"<FunctionBuilder>::append_block_param","value":"pub fn append_block_param(&mut Self, Block, Type) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Creates a parameter for a specific `Block` by appending it to the list of already existing\n parameters.","sig":null,"attributes":[{"value":"/ Creates a parameter for a specific `Block` by appending it to the list of already existing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28992,"byte_end":29086,"line_start":517,"line_end":517,"column_start":5,"column_end":99}},{"value":"/ parameters.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29091,"byte_end":29106,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29111,"byte_end":29114,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ **Note:** this function has to be called at the creation of the `Block` before adding","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29119,"byte_end":29208,"line_start":520,"line_end":520,"column_start":5,"column_end":94}},{"value":"/ instructions to it, otherwise this could interfere with SSA construction.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29213,"byte_end":29290,"line_start":521,"line_end":521,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29852,"byte_end":29864,"line_start":536,"line_end":536,"column_start":12,"column_end":24},"name":"inst_results","qualname":"<FunctionBuilder>::inst_results","value":"pub fn inst_results(&Self, Inst) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Returns the result values of an instruction.\n","sig":null,"attributes":[{"value":"/ Returns the result values of an instruction.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29792,"byte_end":29840,"line_start":535,"line_end":535,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30158,"byte_end":30181,"line_start":544,"line_end":544,"column_start":12,"column_end":35},"name":"change_jump_destination","qualname":"<FunctionBuilder>::change_jump_destination","value":"pub fn change_jump_destination(&mut Self, Inst, Block)","parent":null,"children":[],"decl_id":null,"docs":" Changes the destination of a jump instruction after creation.","sig":null,"attributes":[{"value":"/ Changes the destination of a jump instruction after creation.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":29950,"byte_end":30015,"line_start":540,"line_end":540,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30020,"byte_end":30023,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ **Note:** You are responsible for maintaining the coherence with the arguments of","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30028,"byte_end":30113,"line_start":542,"line_end":542,"column_start":5,"column_end":90}},{"value":"/ other jump instructions.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30118,"byte_end":30146,"line_start":543,"line_end":543,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30794,"byte_end":30808,"line_start":558,"line_end":558,"column_start":12,"column_end":26},"name":"is_unreachable","qualname":"<FunctionBuilder>::is_unreachable","value":"pub fn is_unreachable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if the current `Block` is sealed and has no predecessors declared.","sig":null,"attributes":[{"value":"/ Returns `true` if and only if the current `Block` is sealed and has no predecessors declared.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30617,"byte_end":30714,"line_start":555,"line_end":555,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30719,"byte_end":30722,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The entry block of a function is never unreachable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":30727,"byte_end":30782,"line_start":557,"line_end":557,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31339,"byte_end":31350,"line_start":573,"line_end":573,"column_start":12,"column_end":23},"name":"is_pristine","qualname":"<FunctionBuilder>::is_pristine","value":"pub fn is_pristine(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if no instructions have been added since the last call to\n `switch_to_block`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if and only if no instructions have been added since the last call to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31212,"byte_end":31300,"line_start":571,"line_end":571,"column_start":5,"column_end":93}},{"value":"/ `switch_to_block`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31305,"byte_end":31327,"line_start":572,"line_end":572,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31579,"byte_end":31588,"line_start":579,"line_end":579,"column_start":12,"column_end":21},"name":"is_filled","qualname":"<FunctionBuilder>::is_filled","value":"pub fn is_filled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if a terminator instruction has been inserted since the\n last call to `switch_to_block`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if and only if a terminator instruction has been inserted since the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31441,"byte_end":31527,"line_start":577,"line_end":577,"column_start":5,"column_end":91}},{"value":"/ last call to `switch_to_block`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31532,"byte_end":31567,"line_start":578,"line_end":578,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31989,"byte_end":31996,"line_start":588,"line_end":588,"column_start":12,"column_end":19},"name":"display","qualname":"<FunctionBuilder>::display","value":"pub fn display<'b, I: Into<Option<&'b dyn TargetIsa>>>(&'b Self, I)\n-> DisplayFunction","parent":null,"children":[],"decl_id":null,"docs":" Returns a displayable object for the function as it is.","sig":null,"attributes":[{"value":"/ Returns a displayable object for the function as it is.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31677,"byte_end":31736,"line_start":583,"line_end":583,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31741,"byte_end":31744,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Useful for debug purposes. Use it with `None` for standard printing.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":31749,"byte_end":31821,"line_start":585,"line_end":585,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32488,"byte_end":32499,"line_start":601,"line_end":601,"column_start":12,"column_end":23},"name":"call_memcpy","qualname":"<FunctionBuilder>::call_memcpy","value":"pub fn call_memcpy(&mut Self, TargetFrontendConfig, Value, Value, Value)","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memcpy","sig":null,"attributes":[{"value":"/ Calls libc.memcpy","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32172,"byte_end":32193,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32198,"byte_end":32201,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Copies the `size` bytes from `src` to `dest`, assumes that `src + size`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32206,"byte_end":32281,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ won't overlap onto `dest`. If `dest` and `src` overlap, the behavior is","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32286,"byte_end":32361,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ undefined. Applications in which `dest` and `src` might overlap should","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32366,"byte_end":32440,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/ use `call_memmove` instead.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32445,"byte_end":32476,"line_start":600,"line_end":600,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33581,"byte_end":33603,"line_start":634,"line_end":634,"column_start":12,"column_end":34},"name":"emit_small_memory_copy","qualname":"<FunctionBuilder>::emit_small_memory_copy","value":"pub fn emit_small_memory_copy(&mut Self, TargetFrontendConfig, Value, Value,\n                              u64, u8, u8, bool, MemFlags)","parent":null,"children":[],"decl_id":null,"docs":" Optimised memcpy or memmove for small copies.","sig":null,"attributes":[{"value":"/ Optimised memcpy or memmove for small copies.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33241,"byte_end":33290,"line_start":626,"line_end":626,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33295,"byte_end":33298,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Codegen safety","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33303,"byte_end":33323,"line_start":628,"line_end":628,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33328,"byte_end":33331,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ The following properties must hold to prevent UB:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33336,"byte_end":33389,"line_start":630,"line_end":630,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33394,"byte_end":33397,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ * `src_align` and `dest_align` are an upper-bound on the alignment of `src` respectively `dest`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33402,"byte_end":33502,"line_start":632,"line_end":632,"column_start":5,"column_end":105}},{"value":"/ * If `non_overlapping` is true, then this must be correct.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":33507,"byte_end":33569,"line_start":633,"line_end":633,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":35652,"byte_end":35663,"line_start":699,"line_end":699,"column_start":12,"column_end":23},"name":"call_memset","qualname":"<FunctionBuilder>::call_memset","value":"pub fn call_memset(&mut Self, TargetFrontendConfig, Value, Value, Value)","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memset","sig":null,"attributes":[{"value":"/ Calls libc.memset","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":35534,"byte_end":35555,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":35560,"byte_end":35563,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Writes `size` bytes of i8 value `ch` to memory starting at `buffer`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":35568,"byte_end":35640,"line_start":698,"line_end":698,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":36573,"byte_end":36590,"line_start":728,"line_end":728,"column_start":12,"column_end":29},"name":"emit_small_memset","qualname":"<FunctionBuilder>::emit_small_memset","value":"pub fn emit_small_memset(&mut Self, TargetFrontendConfig, Value, u8, u64, u8,\n                         MemFlags)","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memset","sig":null,"attributes":[{"value":"/ Calls libc.memset","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":36458,"byte_end":36479,"line_start":725,"line_end":725,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":36484,"byte_end":36487,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Writes `size` bytes of value `ch` to memory starting at `buffer`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":36492,"byte_end":36561,"line_start":727,"line_end":727,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":38671,"byte_end":38683,"line_start":793,"line_end":793,"column_start":12,"column_end":24},"name":"call_memmove","qualname":"<FunctionBuilder>::call_memmove","value":"pub fn call_memmove(&mut Self, TargetFrontendConfig, Value, Value, Value)","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memmove","sig":null,"attributes":[{"value":"/ Calls libc.memmove","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":38480,"byte_end":38502,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":38507,"byte_end":38510,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Copies `size` bytes from memory starting at `source` to memory starting","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":38515,"byte_end":38590,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ at `dest`. `source` is always read before writing to `dest`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":38595,"byte_end":38659,"line_start":792,"line_end":792,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109218,"byte_end":109224,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Switch","qualname":"::switch::Switch","value":"Switch {  }","parent":null,"children":[{"krate":0,"index":465}],"decl_id":null,"docs":" Unlike with `br_table`, `Switch` cases may be sparse or non-0-based.\n They emit efficient code using branches, jump tables, or a combination of both.","sig":null,"attributes":[{"value":"/ Unlike with `br_table`, `Switch` cases may be sparse or non-0-based.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":107956,"byte_end":108028,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ They emit efficient code using branches, jump tables, or a combination of both.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108029,"byte_end":108112,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108113,"byte_end":108116,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108117,"byte_end":108130,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108131,"byte_end":108134,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108135,"byte_end":108146,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::types::*;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108147,"byte_end":108189,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ # use cranelift_codegen::ir::{ExternalName, Function, Signature, InstBuilder};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108190,"byte_end":108272,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ # use cranelift_codegen::isa::CallConv;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108273,"byte_end":108316,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ # use cranelift_frontend::{FunctionBuilder, FunctionBuilderContext, Switch};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108317,"byte_end":108397,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108398,"byte_end":108403,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # let mut sig = Signature::new(CallConv::SystemV);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108404,"byte_end":108458,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ # let mut fn_builder_ctx = FunctionBuilderContext::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108459,"byte_end":108520,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ # let mut func = Function::with_name_signature(ExternalName::user(0, 0), sig);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108521,"byte_end":108603,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ # let mut builder = FunctionBuilder::new(&mut func, &mut fn_builder_ctx);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108604,"byte_end":108681,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108682,"byte_end":108687,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # let entry = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108688,"byte_end":108729,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/ # builder.switch_to_block(entry);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108730,"byte_end":108767,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108768,"byte_end":108773,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ let block0 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108774,"byte_end":108814,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ let block1 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108815,"byte_end":108855,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ let block2 = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108856,"byte_end":108896,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ let fallback = builder.create_block();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108897,"byte_end":108939,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108940,"byte_end":108943,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let val = builder.ins().iconst(I32, 1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108944,"byte_end":108987,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108988,"byte_end":108991,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut switch = Switch::new();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":108992,"byte_end":109027,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/ switch.set_entry(0, block0);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109028,"byte_end":109060,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ switch.set_entry(1, block1);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109061,"byte_end":109093,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ switch.set_entry(7, block2);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109094,"byte_end":109126,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ switch.emit(&mut builder, val, fallback);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109127,"byte_end":109172,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109173,"byte_end":109180,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109328,"byte_end":109331,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Switch>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty switch\n","sig":null,"attributes":[{"value":"/ Create a new empty switch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109287,"byte_end":109316,"line_start":48,"line_end":48,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109449,"byte_end":109458,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"set_entry","qualname":"<Switch>::set_entry","value":"pub fn set_entry(&mut Self, EntryIndex, Block)","parent":null,"children":[],"decl_id":null,"docs":" Set a switch entry\n","sig":null,"attributes":[{"value":"/ Set a switch entry","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109415,"byte_end":109437,"line_start":55,"line_end":55,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109749,"byte_end":109756,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"entries","qualname":"<Switch>::entries","value":"pub fn entries(&Self) -> &HashMap<EntryIndex, Block>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to all existing entries\n","sig":null,"attributes":[{"value":"/ Get a reference to all existing entries","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109694,"byte_end":109737,"line_start":65,"line_end":65,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118734,"byte_end":118738,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"emit","qualname":"<Switch>::emit","value":"pub fn emit(Self, &mut FunctionBuilder, Value, Block)","parent":null,"children":[],"decl_id":null,"docs":" Build the switch","sig":null,"attributes":[{"value":"/ Build the switch","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118563,"byte_end":118583,"line_start":293,"line_end":293,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118588,"byte_end":118591,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118596,"byte_end":118611,"line_start":295,"line_end":295,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118616,"byte_end":118619,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * The function builder to emit to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118624,"byte_end":118661,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/ * The value to switch on","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118666,"byte_end":118694,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ * The default block","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":118699,"byte_end":118722,"line_start":299,"line_end":299,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129033,"byte_end":129041,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Variable","qualname":"::variable::Variable","value":"","parent":null,"children":[],"decl_id":null,"docs":"! An opaque reference to a variable.\n","sig":null,"attributes":[{"value":"/! An opaque reference to a variable.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":128937,"byte_end":128976,"line_start":14,"line_end":14,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129128,"byte_end":129136,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"with_u32","qualname":"<Variable>::with_u32","value":"pub fn with_u32(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Variable with the given index.\n","sig":null,"attributes":[{"value":"/ Create a new Variable with the given index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129069,"byte_end":129116,"line_start":19,"line_end":19,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":416},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":7443,"byte_end":7450,"line_start":206,"line_end":206,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[{"value":"/ Version number of this crate.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/lib.rs","byte_start":7399,"byte_end":7432,"line_start":205,"line_end":205,"column_start":1,"column_end":34}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":9687,"byte_end":9709,"line_start":57,"line_end":57,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10604,"byte_end":10619,"line_start":86,"line_end":86,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10806,"byte_end":10821,"line_start":92,"line_end":92,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16002,"byte_end":16017,"line_start":196,"line_end":196,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28485,"byte_end":28500,"line_start":505,"line_end":505,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32146,"byte_end":32161,"line_start":594,"line_end":594,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":39561,"byte_end":39576,"line_start":824,"line_end":824,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":57093,"byte_end":57104,"line_start":67,"line_end":67,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":57477,"byte_end":57486,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":58022,"byte_end":58034,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":58591,"byte_end":58601,"line_start":120,"line_end":120,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":62438,"byte_end":62448,"line_start":229,"line_end":229,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109274,"byte_end":109280,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":120364,"byte_end":120383,"line_start":345,"line_end":345,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129054,"byte_end":129062,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129248,"byte_end":129256,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":9687,"byte_end":9709,"line_start":57,"line_end":57,"column_start":6,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10604,"byte_end":10619,"line_start":86,"line_end":86,"column_start":21,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":10806,"byte_end":10821,"line_start":92,"line_end":92,"column_start":49,"column_end":64},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":169},"to":{"krate":20,"index":791}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":16002,"byte_end":16017,"line_start":196,"line_end":196,"column_start":10,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":28485,"byte_end":28500,"line_start":505,"line_end":505,"column_start":10,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":32146,"byte_end":32161,"line_start":594,"line_end":594,"column_start":10,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/frontend.rs","byte_start":39561,"byte_end":39576,"line_start":824,"line_end":824,"column_start":10,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":57093,"byte_end":57104,"line_start":67,"line_end":67,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":57477,"byte_end":57486,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":58022,"byte_end":58034,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":58591,"byte_end":58601,"line_start":120,"line_end":120,"column_start":6,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/ssa.rs","byte_start":62438,"byte_end":62448,"line_start":229,"line_end":229,"column_start":6,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":109274,"byte_end":109280,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/switch.rs","byte_start":120364,"byte_end":120383,"line_start":345,"line_end":345,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129054,"byte_end":129062,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.76.0/src/variable.rs","byte_start":129248,"byte_end":129256,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":475},"to":{"krate":22,"index":6}}]}