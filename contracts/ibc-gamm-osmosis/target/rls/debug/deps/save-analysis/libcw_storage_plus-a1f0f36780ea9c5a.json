{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=a1f0f36780ea9c5a","-C","extra-filename=-a1f0f36780ea9c5a","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps","--extern","cosmwasm_std=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libcosmwasm_std-9e5fd186309c2529.rmeta","--extern","schemars=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libschemars-7246ece854f9930c.rmeta","--extern","serde=/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libserde-9efeaa965d30d6e2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-gamm-osmosis/target/rls/debug/deps/libcw_storage_plus-a1f0f36780ea9c5a.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[176679201619711633,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":20,"id":{"name":"cosmwasm_std","disambiguator":[8556545198225829419,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":21,"id":{"name":"schemars","disambiguator":[2843726790842278858,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":22,"id":{"name":"schemars_derive","disambiguator":[12967166779860933165,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":23,"id":{"name":"serde_json","disambiguator":[6532001585783556738,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","num":24,"id":{"name":"serde","disambiguator":[15013803239269233867,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","num":25,"id":{"name":"serde_derive","disambiguator":[68729331767806002,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":26,"id":{"name":"itoa","disambiguator":[14192373228791872193,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":27,"id":{"name":"ryu","disambiguator":[13056903353933179430,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":28,"id":{"name":"dyn_clone","disambiguator":[13100049144307428382,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":29,"id":{"name":"cosmwasm_crypto","disambiguator":[6088776335209047780,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":30,"id":{"name":"ed25519_zebra","disambiguator":[11281229020807469234,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":31,"id":{"name":"curve25519_dalek","disambiguator":[1724145624189480009,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":32,"id":{"name":"byteorder","disambiguator":[10759264828178175851,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":33,"id":{"name":"digest","disambiguator":[4531005751969928421,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":34,"id":{"name":"generic_array","disambiguator":[17892554489661742669,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":35,"id":{"name":"typenum","disambiguator":[15156522918217822298,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":36,"id":{"name":"rand_core","disambiguator":[15207504034317212721,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":37,"id":{"name":"getrandom","disambiguator":[2461200758836736362,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":38,"id":{"name":"cfg_if","disambiguator":[10180898007687148561,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":39,"id":{"name":"libc","disambiguator":[8254695432410156630,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":40,"id":{"name":"zeroize","disambiguator":[2276605991629969330,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":41,"id":{"name":"subtle","disambiguator":[6726078597970934848,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":42,"id":{"name":"sha2","disambiguator":[16109763727755928091,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":43,"id":{"name":"block_buffer","disambiguator":[11489479260704319438,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":44,"id":{"name":"opaque_debug","disambiguator":[13793138413731508433,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":45,"id":{"name":"cpufeatures","disambiguator":[3616299460041371069,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":46,"id":{"name":"thiserror","disambiguator":[16785892052481984598,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":47,"id":{"name":"thiserror_impl","disambiguator":[13779193127495670924,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":48,"id":{"name":"hex","disambiguator":[11626158831599541981,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":49,"id":{"name":"k256","disambiguator":[4155192969036905968,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":50,"id":{"name":"elliptic_curve","disambiguator":[10128248842627429061,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":51,"id":{"name":"ff","disambiguator":[11880685279947974124,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":52,"id":{"name":"rand_core","disambiguator":[12576194308110560049,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":53,"id":{"name":"getrandom","disambiguator":[12460439178872030525,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":54,"id":{"name":"group","disambiguator":[15364403841980302897,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":55,"id":{"name":"pkcs8","disambiguator":[5916594609256562722,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":56,"id":{"name":"der","disambiguator":[7922860358167432054,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":57,"id":{"name":"const_oid","disambiguator":[5122259982311011022,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":58,"id":{"name":"spki","disambiguator":[18218567251837934111,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":59,"id":{"name":"crypto_bigint","disambiguator":[15780890602549992041,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":60,"id":{"name":"ecdsa","disambiguator":[14827619912947962317,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":61,"id":{"name":"hmac","disambiguator":[16472142244126576179,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":62,"id":{"name":"crypto_mac","disambiguator":[14678330675729968388,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":63,"id":{"name":"signature","disambiguator":[10175992934853656249,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":64,"id":{"name":"forward_ref","disambiguator":[13070892360798197713,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":65,"id":{"name":"cosmwasm_derive","disambiguator":[9190680493573712466,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":66,"id":{"name":"uint","disambiguator":[15616148857499711007,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":67,"id":{"name":"static_assertions","disambiguator":[3211594889311287531,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":68,"id":{"name":"crunchy","disambiguator":[14877014724138690532,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":69,"id":{"name":"base64","disambiguator":[11527856027903617124,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","num":70,"id":{"name":"serde_json_wasm","disambiguator":[3048715682188340037,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":0,"byte_end":849,"line_start":1,"line_end":32,"column_start":1,"column_end":57}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":177850,"byte_end":177862,"line_start":5,"line_end":5,"column_start":15,"column_end":27},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":1086}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":177877,"byte_end":177888,"line_start":6,"line_end":6,"column_start":14,"column_end":25},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":1086}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":185,"byte_end":191,"line_start":15,"line_end":15,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":244,"byte_end":253,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":255,"byte_end":265,"line_start":17,"line_end":17,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":323,"byte_end":341,"line_start":19,"line_end":19,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":395,"byte_end":407,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":409,"byte_end":427,"line_start":22,"line_end":22,"column_start":19,"column_end":37},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":429,"byte_end":441,"line_start":22,"line_end":22,"column_start":39,"column_end":51},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":443,"byte_end":454,"line_start":22,"line_end":22,"column_start":53,"column_end":64},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":456,"byte_end":461,"line_start":22,"line_end":22,"column_start":66,"column_end":71},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":463,"byte_end":473,"line_start":22,"line_end":22,"column_start":73,"column_end":83},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":475,"byte_end":486,"line_start":22,"line_end":22,"column_start":85,"column_end":96},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":505,"byte_end":509,"line_start":24,"line_end":24,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":526,"byte_end":533,"line_start":25,"line_end":25,"column_start":16,"column_end":23},"alias_span":null,"name":"I128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":535,"byte_end":541,"line_start":25,"line_end":25,"column_start":25,"column_end":31},"alias_span":null,"name":"I16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":755},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":543,"byte_end":549,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"alias_span":null,"name":"I32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":756},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":551,"byte_end":557,"line_start":25,"line_end":25,"column_start":41,"column_end":47},"alias_span":null,"name":"I64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":559,"byte_end":564,"line_start":25,"line_end":25,"column_start":49,"column_end":54},"alias_span":null,"name":"I8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":582,"byte_end":590,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":592,"byte_end":602,"line_start":26,"line_end":26,"column_start":26,"column_end":36},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":604,"byte_end":611,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"U128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":749},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":613,"byte_end":619,"line_start":26,"line_end":26,"column_start":47,"column_end":53},"alias_span":null,"name":"U16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":621,"byte_end":627,"line_start":26,"line_end":26,"column_start":55,"column_end":61},"alias_span":null,"name":"U32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":629,"byte_end":635,"line_start":26,"line_end":26,"column_start":63,"column_end":69},"alias_span":null,"name":"U64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":637,"byte_end":642,"line_start":26,"line_end":26,"column_start":71,"column_end":76},"alias_span":null,"name":"U8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1746},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":658,"byte_end":661,"line_start":27,"line_end":27,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1763},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":677,"byte_end":681,"line_start":28,"line_end":28,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1066},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":729,"byte_end":746,"line_start":30,"line_end":30,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":748,"byte_end":753,"line_start":30,"line_end":30,"column_start":37,"column_end":42},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":755,"byte_end":761,"line_start":30,"line_end":30,"column_start":44,"column_end":50},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":812,"byte_end":824,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":826,"byte_end":837,"line_start":32,"line_end":32,"column_start":34,"column_end":45},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1829},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":839,"byte_end":847,"line_start":32,"line_end":32,"column_start":47,"column_end":55},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","byte_start":0,"byte_end":849,"line_start":1,"line_end":32,"column_start":1,"column_end":57},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":76},{"krate":0,"index":88},{"krate":0,"index":145},{"krate":0,"index":261},{"krate":0,"index":355},{"krate":0,"index":508},{"krate":0,"index":568},{"krate":0,"index":596},{"krate":0,"index":786},{"krate":0,"index":904},{"krate":0,"index":959},{"krate":0,"index":1086},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1014,"byte_end":1028,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"KeyDeserialize","qualname":"::de::KeyDeserialize","value":"KeyDeserialize","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1040,"byte_end":1046,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Output","qualname":"::de::KeyDeserialize::Output","value":"type Output: Sized;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1063,"byte_end":1071,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"from_vec","qualname":"::de::KeyDeserialize::from_vec","value":"pub fn from_vec(Vec<u8>) -> StdResult<Self::Output>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1124,"byte_end":1134,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::KeyDeserialize::from_slice","value":"pub fn from_slice(&[u8]) -> StdResult<Self::Output>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":80},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9772,"byte_end":9778,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9804,"byte_end":9807,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9870,"byte_end":9881,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9909,"byte_end":9920,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9949,"byte_end":9962,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9997,"byte_end":10010,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":201},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":17897,"byte_end":17906,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":203}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":17919,"byte_end":17930,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18126,"byte_end":18136,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" IndexedBucket works like a bucket but has a secondary index\n","sig":null,"attributes":[{"value":"/ IndexedBucket works like a bucket but has a secondary index","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18051,"byte_end":18114,"line_start":21,"line_end":21,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":211},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18417,"byte_end":18420,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18307,"byte_end":18375,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18380,"byte_end":18408,"line_start":31,"line_end":31,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18637,"byte_end":18640,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18857,"byte_end":18860,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19338,"byte_end":19342,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19067,"byte_end":19153,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19158,"byte_end":19221,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19226,"byte_end":19326,"line_start":63,"line_end":63,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19553,"byte_end":19559,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":20006,"byte_end":20013,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19747,"byte_end":19843,"line_start":74,"line_end":74,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19848,"byte_end":19935,"line_start":75,"line_end":75,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":19940,"byte_end":19994,"line_start":76,"line_end":76,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":21003,"byte_end":21009,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":20725,"byte_end":20795,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":20800,"byte_end":20886,"line_start":103,"line_end":103,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":20891,"byte_end":20894,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":20899,"byte_end":20991,"line_start":105,"line_end":105,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":21644,"byte_end":21648,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":21549,"byte_end":21632,"line_start":121,"line_end":121,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":21904,"byte_end":21912,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":21752,"byte_end":21849,"line_start":126,"line_end":126,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":21854,"byte_end":21892,"line_start":127,"line_end":127,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":22070,"byte_end":22076,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":22231,"byte_end":22241,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":22849,"byte_end":22854,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23689,"byte_end":23701,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" while range assumes you set the prefix to one element and call range over the last one,\n prefix_range accepts bounds for the lowest and highest elements of the Prefix we wish to\n accept, and iterates over those. There are some issues that distinguish these to and blindly\n casting to Vec<u8> doesn't solve them.\n","sig":null,"attributes":[{"value":"/ while range assumes you set the prefix to one element and call range over the last one,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23341,"byte_end":23432,"line_start":178,"line_end":178,"column_start":5,"column_end":96}},{"value":"/ prefix_range accepts bounds for the lowest and highest elements of the Prefix we wish to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23437,"byte_end":23529,"line_start":179,"line_end":179,"column_start":5,"column_end":97}},{"value":"/ accept, and iterates over those. There are some issues that distinguish these to and blindly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23534,"byte_end":23630,"line_start":180,"line_end":180,"column_start":5,"column_end":101}},{"value":"/ casting to Vec<u8> doesn't solve them.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23635,"byte_end":23677,"line_start":181,"line_end":181,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24707,"byte_end":24722,"line_start":210,"line_end":210,"column_start":12,"column_end":27},"name":"prefix_range_de","qualname":"<IndexedMap>::prefix_range_de","value":"pub fn prefix_range_de<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                           Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" while range_de assumes you set the prefix to one element and call range over the last one,\n prefix_range_de accepts bounds for the lowest and highest elements of the Prefix we wish to\n accept, and iterates over those. There are some issues that distinguish these to and blindly\n casting to Vec<u8> doesn't solve them.\n","sig":null,"attributes":[{"value":"/ while range_de assumes you set the prefix to one element and call range over the last one,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24353,"byte_end":24447,"line_start":206,"line_end":206,"column_start":5,"column_end":99}},{"value":"/ prefix_range_de accepts bounds for the lowest and highest elements of the Prefix we wish to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24452,"byte_end":24547,"line_start":207,"line_end":207,"column_start":5,"column_end":100}},{"value":"/ accept, and iterates over those. There are some issues that distinguish these to and blindly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24552,"byte_end":24648,"line_start":208,"line_end":208,"column_start":5,"column_end":101}},{"value":"/ casting to Vec<u8> doesn't solve them.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24653,"byte_end":24695,"line_start":209,"line_end":209,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":25245,"byte_end":25253,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"range_de","qualname":"<IndexedMap>::range_de","value":"pub fn range_de<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":25602,"byte_end":25609,"line_start":242,"line_end":242,"column_start":12,"column_end":19},"name":"keys_de","qualname":"<IndexedMap>::keys_de","value":"pub fn keys_de<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                   cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51741,"byte_end":51759,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" IndexedSnapshotMap works like a SnapshotMap but has a secondary index\n","sig":null,"attributes":[{"value":"/ IndexedSnapshotMap works like a SnapshotMap but has a secondary index","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51656,"byte_end":51729,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":315},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51953,"byte_end":51956,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51843,"byte_end":51911,"line_start":18,"line_end":18,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51916,"byte_end":51944,"line_start":19,"line_end":19,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52615,"byte_end":52618,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Examples:","sig":null,"attributes":[{"value":"/ Examples:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52020,"byte_end":52033,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52038,"byte_end":52041,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52046,"byte_end":52057,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{IndexedSnapshotMap, Strategy, U32Key, UniqueIndex};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52062,"byte_end":52139,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52144,"byte_end":52147,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ #[derive(PartialEq, Debug, Clone)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52152,"byte_end":52190,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/ struct Data {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52195,"byte_end":52212,"line_start":30,"line_end":30,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52217,"byte_end":52242,"line_start":31,"line_end":31,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52247,"byte_end":52268,"line_start":32,"line_end":32,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52273,"byte_end":52278,"line_start":33,"line_end":33,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52283,"byte_end":52286,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let indexes = UniqueIndex::new(|d: &Data| U32Key::new(d.age), \"data__age\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52291,"byte_end":52370,"line_start":35,"line_end":35,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52375,"byte_end":52378,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ IndexedSnapshotMap::<&[u8], Data, UniqueIndex<U32Key, Data>>::new(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52383,"byte_end":52453,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/     \"data\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52458,"byte_end":52473,"line_start":38,"line_end":38,"column_start":5,"column_end":20}},{"value":"/     \"checkpoints\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52478,"byte_end":52500,"line_start":39,"line_end":39,"column_start":5,"column_end":27}},{"value":"/     \"changelog\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52505,"byte_end":52525,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/     Strategy::EveryBlock,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52530,"byte_end":52559,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/     indexes,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52564,"byte_end":52580,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52585,"byte_end":52591,"line_start":43,"line_end":43,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":52596,"byte_end":52603,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53175,"byte_end":53189,"line_start":66,"line_end":66,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53323,"byte_end":53340,"line_start":70,"line_end":70,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53477,"byte_end":53495,"line_start":74,"line_end":74,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53684,"byte_end":53703,"line_start":83,"line_end":83,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53838,"byte_end":53841,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54359,"byte_end":54363,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54088,"byte_end":54174,"line_start":98,"line_end":98,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54179,"byte_end":54242,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54247,"byte_end":54347,"line_start":100,"line_end":100,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54595,"byte_end":54601,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":55069,"byte_end":55076,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54810,"byte_end":54906,"line_start":111,"line_end":111,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":54911,"byte_end":54998,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":55003,"byte_end":55057,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":56104,"byte_end":56110,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":55826,"byte_end":55896,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":55901,"byte_end":55987,"line_start":141,"line_end":141,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":55992,"byte_end":55995,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":56000,"byte_end":56092,"line_start":143,"line_end":143,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":56813,"byte_end":56817,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":56718,"byte_end":56801,"line_start":165,"line_end":165,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57073,"byte_end":57081,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":56921,"byte_end":57018,"line_start":170,"line_end":170,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57023,"byte_end":57061,"line_start":171,"line_end":171,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57239,"byte_end":57245,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57400,"byte_end":57410,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57567,"byte_end":57576,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"no_prefix","qualname":"<IndexedSnapshotMap>::no_prefix","value":"pub fn no_prefix(&Self) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":58062,"byte_end":58067,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74217,"byte_end":74229,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74294,"byte_end":74305,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, U32Key)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74404,"byte_end":74416,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, U32Key, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":420},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74541,"byte_end":74559,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":421},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74789,"byte_end":74794,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74858,"byte_end":74862,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":74941,"byte_end":74947,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75719,"byte_end":75729,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75026,"byte_end":75100,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75101,"byte_end":75153,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75154,"byte_end":75232,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75233,"byte_end":75289,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75290,"byte_end":75293,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75294,"byte_end":75379,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75380,"byte_end":75445,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75446,"byte_end":75449,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The MultiIndex definition must include a field for the pk. That is, the MultiIndex K value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75450,"byte_end":75544,"line_start":48,"line_end":48,"column_start":1,"column_end":95}},{"value":"/ is always a n-tuple (n >= 2) and its last element must be the pk.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75545,"byte_end":75614,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/ The index function must therefore put the pk as last element, when generating the index.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75615,"byte_end":75707,"line_start":50,"line_end":50,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76676,"byte_end":76679,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T, : Vec<u8>) -> K, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new MultiIndex","sig":null,"attributes":[{"value":"/ Create a new MultiIndex","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75992,"byte_end":76019,"line_start":63,"line_end":63,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76024,"byte_end":76027,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from value (first argument) and primary key (second argument)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76032,"byte_end":76132,"line_start":65,"line_end":65,"column_start":5,"column_end":105}},{"value":"/ pk_namespace - prefix for the primary key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76137,"byte_end":76182,"line_start":66,"line_end":66,"column_start":5,"column_end":50}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76187,"byte_end":76233,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76238,"byte_end":76241,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76246,"byte_end":76261,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76266,"byte_end":76269,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76274,"byte_end":76285,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::MultiIndex;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76290,"byte_end":76326,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76331,"byte_end":76371,"line_start":73,"line_end":73,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76376,"byte_end":76379,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize, Serialize, Clone)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76384,"byte_end":76428,"line_start":75,"line_end":75,"column_start":5,"column_end":49}},{"value":"/ struct Data {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76433,"byte_end":76450,"line_start":76,"line_end":76,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76455,"byte_end":76480,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76485,"byte_end":76506,"line_start":78,"line_end":78,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76511,"byte_end":76516,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76521,"byte_end":76524,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ MultiIndex::new(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76529,"byte_end":76549,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/     |d: &Data, k: Vec<u8>| (d.age, k),","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76554,"byte_end":76596,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/     \"age\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76601,"byte_end":76615,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/     \"age__owner\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76620,"byte_end":76641,"line_start":84,"line_end":84,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76646,"byte_end":76652,"line_start":85,"line_end":85,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":76657,"byte_end":76664,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":78268,"byte_end":78274,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":78517,"byte_end":78527,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":78999,"byte_end":79008,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80069,"byte_end":80074,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 Order) -> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80373,"byte_end":80377,"line_start":220,"line_end":220,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiIndex>::keys","value":"pub fn keys<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80974,"byte_end":80986,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<MultiIndex>::prefix_range","value":"pub fn prefix_range<'c>(&'c Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" while range assumes you set the prefix to one element and call range over the last one,\n prefix_range accepts bounds for the lowest and highest elements of the Prefix we wish to\n accept, and iterates over those. There are some issues that distinguish these to and blindly\n casting to Vec<u8> doesn't solve them.\n","sig":null,"attributes":[{"value":"/ while range assumes you set the prefix to one element and call range over the last one,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80626,"byte_end":80717,"line_start":230,"line_end":230,"column_start":5,"column_end":96}},{"value":"/ prefix_range accepts bounds for the lowest and highest elements of the Prefix we wish to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80722,"byte_end":80814,"line_start":231,"line_end":231,"column_start":5,"column_end":97}},{"value":"/ accept, and iterates over those. There are some issues that distinguish these to and blindly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80819,"byte_end":80915,"line_start":232,"line_end":232,"column_start":5,"column_end":101}},{"value":"/ casting to Vec<u8> doesn't solve them.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":80920,"byte_end":80962,"line_start":233,"line_end":233,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":81940,"byte_end":81951,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":81787,"byte_end":81860,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":81861,"byte_end":81928,"line_start":260,"line_end":260,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82585,"byte_end":82588,"line_start":286,"line_end":286,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> K, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new UniqueIndex","sig":null,"attributes":[{"value":"/ Create a new UniqueIndex","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82136,"byte_end":82164,"line_start":269,"line_end":269,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82169,"byte_end":82172,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from index value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82177,"byte_end":82232,"line_start":271,"line_end":271,"column_start":5,"column_end":60}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82237,"byte_end":82283,"line_start":272,"line_end":272,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82288,"byte_end":82291,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82296,"byte_end":82311,"line_start":274,"line_end":274,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82316,"byte_end":82319,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82324,"byte_end":82335,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{U32Key, UniqueIndex};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82340,"byte_end":82387,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82392,"byte_end":82395,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ struct Data {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82400,"byte_end":82417,"line_start":279,"line_end":279,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82422,"byte_end":82447,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82452,"byte_end":82473,"line_start":281,"line_end":281,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82478,"byte_end":82483,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82488,"byte_end":82491,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ UniqueIndex::new(|d: &Data| U32Key::new(d.age), \"data__age\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82496,"byte_end":82561,"line_start":284,"line_end":284,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82566,"byte_end":82573,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":84031,"byte_end":84040,"line_start":334,"line_end":334,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":84108,"byte_end":84114,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":84324,"byte_end":84334,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":84822,"byte_end":84826,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, K) -> StdResult<Option<Record<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":84733,"byte_end":84810,"line_start":356,"line_end":356,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":85384,"byte_end":85389,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":85685,"byte_end":85689,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"name":"keys","qualname":"<UniqueIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86353,"byte_end":86357,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86169,"byte_end":86217,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86218,"byte_end":86253,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86254,"byte_end":86341,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86667,"byte_end":86670,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86957,"byte_end":86965,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87117,"byte_end":87121,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87020,"byte_end":87105,"line_start":37,"line_end":37,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87269,"byte_end":87275,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87456,"byte_end":87460,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87361,"byte_end":87444,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87754,"byte_end":87762,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87600,"byte_end":87699,"line_start":53,"line_end":53,"column_start":5,"column_end":104}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87704,"byte_end":87742,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88216,"byte_end":88222,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87909,"byte_end":87979,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":87984,"byte_end":88070,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88075,"byte_end":88078,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It assumes, that data was initialized before, and if it doesn't exist, `Err(StdError::NotFound)`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88083,"byte_end":88183,"line_start":63,"line_end":63,"column_start":5,"column_end":105}},{"value":"/ is returned.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88188,"byte_end":88204,"line_start":64,"line_end":64,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88782,"byte_end":88787,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"query","qualname":"<Item>::query","value":"pub fn query(&Self, &QuerierWrapper, Addr) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Item from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery.","sig":null,"attributes":[{"value":"/ If you import the proper Item from the remote contract, this will let you read the data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88511,"byte_end":88602,"line_start":76,"line_end":76,"column_start":5,"column_end":96}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88607,"byte_end":88679,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88684,"byte_end":88687,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that we expect an Item to be set, and error if there is no data there","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":88692,"byte_end":88770,"line_start":79,"line_end":79,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1609},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103541,"byte_end":103544,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"Ref","qualname":"::keys::Key::Ref","value":"Key::Ref(&'a [u8])","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1612},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103560,"byte_end":103564,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Val8","qualname":"::keys::Key::Val8","value":"Key::Val8([u8; ])","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1616},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103579,"byte_end":103584,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Val16","qualname":"::keys::Key::Val16","value":"Key::Val16([u8; ])","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103599,"byte_end":103604,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Val32","qualname":"::keys::Key::Val32","value":"Key::Val32([u8; ])","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1624},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103619,"byte_end":103624,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Val64","qualname":"::keys::Key::Val64","value":"Key::Val64([u8; ])","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1607},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103527,"byte_end":103530,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Key","qualname":"::keys::Key","value":"pub enum Key<'a> {\n    Ref(&'a [u8]),\n    Val8([u8; ]),\n    Val16([u8; ]),\n    Val32([u8; ]),\n    Val64([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1616},{"krate":0,"index":1620},{"krate":0,"index":1624}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":622},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104839,"byte_end":104849,"line_start":54,"line_end":54,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,\n or part of a key.","sig":null,"attributes":[{"value":"/ `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104025,"byte_end":104120,"line_start":35,"line_end":35,"column_start":1,"column_end":96}},{"value":"/ or part of a key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104121,"byte_end":104142,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104143,"byte_end":104146,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ In particular, it defines a series of types that help iterating over parts of a (composite) key:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104147,"byte_end":104247,"line_start":38,"line_end":38,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104248,"byte_end":104251,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `Prefix`: Prefix is eager. That is, except for empty keys, it's always \"one less\" than the full key.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104252,"byte_end":104356,"line_start":40,"line_end":40,"column_start":1,"column_end":105}},{"value":"/ `Suffix`: Suffix is the complement of prefix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104357,"byte_end":104406,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ `SubPrefix`: Sub-prefix is \"one less\" than prefix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104407,"byte_end":104461,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ `SuperSuffix`: Super-suffix is \"one more\" than suffix. The complement of sub-prefix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104462,"byte_end":104550,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104551,"byte_end":104554,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ By example, for a 2-tuple `(T, U)`:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104555,"byte_end":104594,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104595,"byte_end":104598,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `T`: Prefix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104599,"byte_end":104615,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/ `U`: Suffix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104616,"byte_end":104632,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ `()`: Sub-prefix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104633,"byte_end":104654,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ `(T, U)`: Super-suffix.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104655,"byte_end":104682,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104683,"byte_end":104686,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ `SubPrefix` and `SuperSuffix` only make real sense in the case of triples. Still, they need to be","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104687,"byte_end":104788,"line_start":52,"line_end":52,"column_start":1,"column_end":102}},{"value":"/ consistently defined for all types.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104789,"byte_end":104828,"line_start":53,"line_end":53,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":624},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105049,"byte_end":105055,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" These associated types need to implement `Prefixer`, so that they can be useful arguments\n for `prefix()`, `sub_prefix()`, and their key-deserializable variants.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `Prefixer`, so that they can be useful arguments","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104867,"byte_end":104960,"line_start":55,"line_end":55,"column_start":5,"column_end":98}},{"value":"/ for `prefix()`, `sub_prefix()`, and their key-deserializable variants.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104965,"byte_end":105039,"line_start":56,"line_end":56,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":625},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105080,"byte_end":105089,"line_start":58,"line_end":58,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":626},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105250,"byte_end":105256,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"name":"Suffix","qualname":"::keys::PrimaryKey::Suffix","value":"type Suffix: KeyDeserialize;","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" These associated types need to implement `KeyDeserialize`, so that they can be returned from\n `range_de()` and friends.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `KeyDeserialize`, so that they can be returned from","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105110,"byte_end":105206,"line_start":60,"line_end":60,"column_start":5,"column_end":101}},{"value":"/ `range_de()` and friends.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105211,"byte_end":105240,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":627},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105283,"byte_end":105294,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"name":"SuperSuffix","qualname":"::keys::PrimaryKey::SuperSuffix","value":"type SuperSuffix: KeyDeserialize;","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105391,"byte_end":105394,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<Key>","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105317,"byte_end":105383,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":105423,"byte_end":105433,"line_start":68,"line_end":68,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":670},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":107465,"byte_end":107473,"line_start":152,"line_end":152,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":107591,"byte_end":107597,"line_start":154,"line_end":154,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<Key>","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should be length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should be length-prefixed and concatenated for range searches","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":107484,"byte_end":107583,"line_start":153,"line_end":153,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":107626,"byte_end":107639,"line_start":156,"line_end":156,"column_start":8,"column_end":21},"name":"joined_prefix","qualname":"::keys::Prefixer::joined_prefix","value":"pub fn joined_prefix(&Self) -> Vec<u8>","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":748},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111544,"byte_end":111549,"line_start":321,"line_end":321,"column_start":10,"column_end":15},"name":"U8Key","qualname":"::keys::U8Key","value":"IntKey<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":749},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111573,"byte_end":111579,"line_start":322,"line_end":322,"column_start":10,"column_end":16},"name":"U16Key","qualname":"::keys::U16Key","value":"IntKey<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":750},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111604,"byte_end":111610,"line_start":323,"line_end":323,"column_start":10,"column_end":16},"name":"U32Key","qualname":"::keys::U32Key","value":"IntKey<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":751},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111635,"byte_end":111641,"line_start":324,"line_end":324,"column_start":10,"column_end":16},"name":"U64Key","qualname":"::keys::U64Key","value":"IntKey<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":752},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111666,"byte_end":111673,"line_start":325,"line_end":325,"column_start":10,"column_end":17},"name":"U128Key","qualname":"::keys::U128Key","value":"IntKey<u128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":753},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111700,"byte_end":111705,"line_start":327,"line_end":327,"column_start":10,"column_end":15},"name":"I8Key","qualname":"::keys::I8Key","value":"IntKey<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":754},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111729,"byte_end":111735,"line_start":328,"line_end":328,"column_start":10,"column_end":16},"name":"I16Key","qualname":"::keys::I16Key","value":"IntKey<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":755},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111760,"byte_end":111766,"line_start":329,"line_end":329,"column_start":10,"column_end":16},"name":"I32Key","qualname":"::keys::I32Key","value":"IntKey<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":756},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111791,"byte_end":111797,"line_start":330,"line_end":330,"column_start":10,"column_end":16},"name":"I64Key","qualname":"::keys::I64Key","value":"IntKey<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":757},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111822,"byte_end":111829,"line_start":331,"line_end":331,"column_start":10,"column_end":17},"name":"I128Key","qualname":"::keys::I128Key","value":"IntKey<i128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1711},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112179,"byte_end":112185,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"IntKey","qualname":"::keys::IntKey","value":"IntKey { wrapped, data }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64\n You can use new or the from/into pair to build a key from an int:","sig":null,"attributes":[{"value":"/ It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111847,"byte_end":111949,"line_start":333,"line_end":333,"column_start":1,"column_end":103}},{"value":"/ You can use new or the from/into pair to build a key from an int:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111950,"byte_end":112019,"line_start":334,"line_end":334,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112020,"byte_end":112023,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/   let k = U64Key::new(12345);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112024,"byte_end":112057,"line_start":336,"line_end":336,"column_start":1,"column_end":34}},{"value":"/   let k = U32Key::from(12345);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112058,"byte_end":112092,"line_start":337,"line_end":337,"column_start":1,"column_end":35}},{"value":"/   let k: U16Key = 12345.into();","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112093,"byte_end":112128,"line_start":338,"line_end":338,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112207,"byte_end":112214,"line_start":341,"line_end":341,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys::IntKey::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112233,"byte_end":112237,"line_start":342,"line_end":342,"column_start":9,"column_end":13},"name":"data","qualname":"::keys::IntKey::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112297,"byte_end":112300,"line_start":346,"line_end":346,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKey<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1746},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122157,"byte_end":122160,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122428,"byte_end":122431,"line_start":27,"line_end":27,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122719,"byte_end":122728,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Map>::namespace","value":"pub fn namespace(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122791,"byte_end":122794,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122995,"byte_end":123001,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122955,"byte_end":122983,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123147,"byte_end":123157,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123107,"byte_end":123135,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123413,"byte_end":123417,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123541,"byte_end":123547,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123728,"byte_end":123732,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123633,"byte_end":123716,"line_start":75,"line_end":75,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123980,"byte_end":123988,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123828,"byte_end":123925,"line_start":80,"line_end":80,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":123930,"byte_end":123968,"line_start":81,"line_end":81,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124219,"byte_end":124222,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &dyn Storage, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124096,"byte_end":124189,"line_start":86,"line_end":86,"column_start":5,"column_end":98}},{"value":"/ contents.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124194,"byte_end":124207,"line_start":87,"line_end":87,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124587,"byte_end":124593,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124309,"byte_end":124379,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124384,"byte_end":124470,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124475,"byte_end":124478,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124483,"byte_end":124575,"line_start":95,"line_end":95,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124985,"byte_end":124990,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"query","qualname":"<Map>::query","value":"pub fn query(&Self, &QuerierWrapper, Addr, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Map from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery\n","sig":null,"attributes":[{"value":"/ If you import the proper Map from the remote contract, this will let you read the data","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124807,"byte_end":124897,"line_start":104,"line_end":104,"column_start":5,"column_end":95}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":124902,"byte_end":124973,"line_start":105,"line_end":105,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":125499,"byte_end":125512,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"sub_prefix_de","qualname":"<Map>::sub_prefix_de","value":"pub fn sub_prefix_de(&Self, K::SubPrefix) -> Prefix<K::SuperSuffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":125635,"byte_end":125644,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"prefix_de","qualname":"<Map>::prefix_de","value":"pub fn prefix_de(&Self, K::Prefix) -> Prefix<K::Suffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":126394,"byte_end":126406,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<Map>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" while range assumes you set the prefix to one element and call range over the last one,\n prefix_range accepts bounds for the lowest and highest elements of the Prefix we wish to\n accept, and iterates over those. There are some issues that distinguish these to and blindly\n casting to Vec<u8> doesn't solve them.\n","sig":null,"attributes":[{"value":"/ while range assumes you set the prefix to one element and call range over the last one,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":126046,"byte_end":126137,"line_start":146,"line_end":146,"column_start":5,"column_end":96}},{"value":"/ prefix_range accepts bounds for the lowest and highest elements of the Prefix we wish to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":126142,"byte_end":126234,"line_start":147,"line_end":147,"column_start":5,"column_end":97}},{"value":"/ accept, and iterates over those. There are some issues that distinguish these to and blindly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":126239,"byte_end":126335,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ casting to Vec<u8> doesn't solve them.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":126340,"byte_end":126382,"line_start":149,"line_end":149,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":126875,"byte_end":126880,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127204,"byte_end":127208,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127996,"byte_end":128011,"line_start":203,"line_end":203,"column_start":12,"column_end":27},"name":"prefix_range_de","qualname":"<Map>::prefix_range_de","value":"pub fn prefix_range_de<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                           Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" while range_de assumes you set the prefix to one element and call range over the last one,\n prefix_range_de accepts bounds for the lowest and highest elements of the Prefix we wish to\n accept, and iterates over those. There are some issues that distinguish these to and blindly\n casting to Vec<u8> doesn't solve them.\n","sig":null,"attributes":[{"value":"/ while range_de assumes you set the prefix to one element and call range over the last one,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127642,"byte_end":127736,"line_start":199,"line_end":199,"column_start":5,"column_end":99}},{"value":"/ prefix_range_de accepts bounds for the lowest and highest elements of the Prefix we wish to","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127741,"byte_end":127836,"line_start":200,"line_end":200,"column_start":5,"column_end":100}},{"value":"/ accept, and iterates over those. There are some issues that distinguish these to and blindly","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127841,"byte_end":127937,"line_start":201,"line_end":201,"column_start":5,"column_end":101}},{"value":"/ casting to Vec<u8> doesn't solve them.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127942,"byte_end":127984,"line_start":202,"line_end":202,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":128524,"byte_end":128532,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"range_de","qualname":"<Map>::range_de","value":"pub fn range_de<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":128881,"byte_end":128888,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"keys_de","qualname":"<Map>::keys_de","value":"pub fn keys_de<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                   cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1763},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":160498,"byte_end":160502,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":161031,"byte_end":161034,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":161585,"byte_end":161589,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":161488,"byte_end":161573,"line_start":53,"line_end":53,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":161738,"byte_end":161744,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":161926,"byte_end":161930,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":161831,"byte_end":161914,"line_start":63,"line_end":63,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162223,"byte_end":162231,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162071,"byte_end":162168,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162173,"byte_end":162211,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162598,"byte_end":162601,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"has","qualname":"<Path<T>>::has","value":"pub fn has(&Self, &dyn Storage) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162379,"byte_end":162472,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162477,"byte_end":162586,"line_start":77,"line_end":77,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162976,"byte_end":162982,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162698,"byte_end":162768,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162773,"byte_end":162859,"line_start":83,"line_end":83,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162864,"byte_end":162867,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":162872,"byte_end":162964,"line_start":85,"line_end":85,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1774},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164083,"byte_end":164092,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::Bound::Inclusive","value":"Bound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1777},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164107,"byte_end":164116,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::Bound::Exclusive","value":"Bound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1773},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164071,"byte_end":164076,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Bound","qualname":"::prefix::Bound","value":"pub enum Bound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1777}],"decl_id":null,"docs":" Bound is used to defines the two ends of a range, more explicit than Option<u8>\n None means that we don't limit that side of the range at all.\n Include means we use the given bytes as a limit and *include* anything at that exact key\n Exclude means we use the given bytes as a limit and *exclude* anything at that exact key\n","sig":null,"attributes":[{"value":"/ Bound is used to defines the two ends of a range, more explicit than Option<u8>","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":163702,"byte_end":163785,"line_start":15,"line_end":15,"column_start":1,"column_end":84}},{"value":"/ None means that we don't limit that side of the range at all.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":163786,"byte_end":163851,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ Include means we use the given bytes as a limit and *include* anything at that exact key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":163852,"byte_end":163944,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ Exclude means we use the given bytes as a limit and *exclude* anything at that exact key","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":163945,"byte_end":164037,"line_start":18,"line_end":18,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164236,"byte_end":164245,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an inclusive bound","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164147,"byte_end":164224,"line_start":26,"line_end":26,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164423,"byte_end":164432,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an exclusive bound","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164334,"byte_end":164411,"line_start":31,"line_end":31,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164591,"byte_end":164604,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"inclusive_int","qualname":"<Bound>::inclusive_int","value":"pub fn inclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u32> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u32> into an inclusive bound","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164521,"byte_end":164579,"line_start":36,"line_end":36,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164770,"byte_end":164783,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"exclusive_int","qualname":"<Bound>::exclusive_int","value":"pub fn exclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u64> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u64> into an exclusive bound","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164700,"byte_end":164758,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1787},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164949,"byte_end":164958,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::PrefixBound::Inclusive","value":"PrefixBound::Inclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1790},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164992,"byte_end":165001,"line_start":50,"line_end":50,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::PrefixBound::Exclusive","value":"PrefixBound::Exclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1784},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164910,"byte_end":164921,"line_start":48,"line_end":48,"column_start":10,"column_end":21},"name":"PrefixBound","qualname":"::prefix::PrefixBound","value":"pub enum PrefixBound<'a, K: Prefixer> {\n    Inclusive((K, PhantomData<&'a bool>)),\n    Exclusive((K, PhantomData<&'a bool>)),\n}","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1790}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":165092,"byte_end":165101,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<PrefixBound>::inclusive","value":"pub fn inclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":165197,"byte_end":165206,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<PrefixBound>::exclusive","value":"pub fn exclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":165302,"byte_end":165310,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"to_bound","qualname":"<PrefixBound>::to_bound","value":"pub fn to_bound(&Self) -> Bound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1801},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166049,"byte_end":166055,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166723,"byte_end":166726,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<K, T>>::new","value":"pub fn new(&[u8], &[Key]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166955,"byte_end":166984,"line_start":130,"line_end":130,"column_start":12,"column_end":41},"name":"with_deserialization_function","qualname":"<Prefix<K, T>>::with_deserialization_function","value":"pub fn with_deserialization_function(&[u8], &[Key], &[u8],\n                                     DeserializeKvFn<K, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":167364,"byte_end":167369,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<K, T>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'a> where T: 'a,\nK::Output: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":167883,"byte_end":167887,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<K, T>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":168225,"byte_end":168233,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"range_de","qualname":"<Prefix<K, T>>::range_de","value":"pub fn range_de<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\n                    Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":168752,"byte_end":168759,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"keys_de","qualname":"<Prefix<K, T>>::keys_de","value":"pub fn keys_de<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\n                   Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1066},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":169314,"byte_end":169331,"line_start":213,"line_end":213,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<Bound>,\n                             Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192156,"byte_end":192168,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"SnapshotItem","qualname":"::snapshot::item::SnapshotItem","value":"SnapshotItem {  }","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"decl_id":null,"docs":" Item that maintains a snapshot of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Item that maintains a snapshot of one or more checkpoints.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":191969,"byte_end":192031,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192032,"byte_end":192090,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192091,"byte_end":192144,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192566,"byte_end":192569,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotItem>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192281,"byte_end":192293,"line_start":18,"line_end":18,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192298,"byte_end":192301,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192306,"byte_end":192317,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotItem, Strategy};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192322,"byte_end":192372,"line_start":21,"line_end":21,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192377,"byte_end":192380,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ SnapshotItem::<'static, u64>::new(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192385,"byte_end":192423,"line_start":23,"line_end":23,"column_start":5,"column_end":43}},{"value":"/     \"every\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192428,"byte_end":192444,"line_start":24,"line_end":24,"column_start":5,"column_end":21}},{"value":"/     \"every__check\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192449,"byte_end":192472,"line_start":25,"line_end":25,"column_start":5,"column_end":28}},{"value":"/     \"every__change\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192477,"byte_end":192501,"line_start":26,"line_end":26,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192506,"byte_end":192536,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192541,"byte_end":192548,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192871,"byte_end":192885,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotItem>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":193021,"byte_end":193038,"line_start":45,"line_end":45,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotItem>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":193743,"byte_end":193747,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotItem>::save","value":"pub fn save(&Self, &mut dyn Storage, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":193995,"byte_end":194001,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotItem>::remove","value":"pub fn remove(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":194322,"byte_end":194326,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotItem>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":194244,"byte_end":194310,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":194558,"byte_end":194566,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotItem>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored if present, returns Ok(None) if no data there.\n returns an error on parsing issues\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":194417,"byte_end":194503,"line_start":85,"line_end":85,"column_start":5,"column_end":91}},{"value":"/ returns an error on parsing issues","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":194508,"byte_end":194546,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":194676,"byte_end":194694,"line_start":91,"line_end":91,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotItem>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195104,"byte_end":195123,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotItem>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195649,"byte_end":195655,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotItem>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result in the database.\n This is a shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result in the database.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195253,"byte_end":195340,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ This is a shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195345,"byte_end":195416,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195421,"byte_end":195424,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195429,"byte_end":195521,"line_start":110,"line_end":110,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195526,"byte_end":195529,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":195534,"byte_end":195637,"line_start":112,"line_end":112,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201452,"byte_end":201463,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::map::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201265,"byte_end":201327,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201328,"byte_end":201386,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201387,"byte_end":201440,"line_start":16,"line_end":16,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201876,"byte_end":201879,"line_start":35,"line_end":35,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201585,"byte_end":201597,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201602,"byte_end":201605,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201610,"byte_end":201621,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotMap, Strategy};","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201626,"byte_end":201675,"line_start":26,"line_end":26,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201680,"byte_end":201683,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ SnapshotMap::<&[u8], &str>::new(","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201688,"byte_end":201724,"line_start":28,"line_end":28,"column_start":5,"column_end":41}},{"value":"/     \"never\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201729,"byte_end":201745,"line_start":29,"line_end":29,"column_start":5,"column_end":21}},{"value":"/     \"never__check\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201750,"byte_end":201773,"line_start":30,"line_end":30,"column_start":5,"column_end":28}},{"value":"/     \"never__change\",","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201778,"byte_end":201802,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201807,"byte_end":201835,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201840,"byte_end":201846,"line_start":33,"line_end":33,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201851,"byte_end":201858,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202291,"byte_end":202305,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202441,"byte_end":202458,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202744,"byte_end":202747,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202820,"byte_end":202826,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202921,"byte_end":202931,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":203631,"byte_end":203635,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":203902,"byte_end":203908,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":204265,"byte_end":204269,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":204170,"byte_end":204253,"line_start":109,"line_end":109,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":204521,"byte_end":204529,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":204369,"byte_end":204466,"line_start":114,"line_end":114,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":204471,"byte_end":204509,"line_start":115,"line_end":115,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":204648,"byte_end":204666,"line_start":120,"line_end":120,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205073,"byte_end":205092,"line_start":138,"line_end":138,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205616,"byte_end":205622,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205222,"byte_end":205292,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205297,"byte_end":205383,"line_start":143,"line_end":143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205388,"byte_end":205391,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205396,"byte_end":205488,"line_start":145,"line_end":145,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205493,"byte_end":205496,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":205501,"byte_end":205604,"line_start":147,"line_end":147,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":206376,"byte_end":206381,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":206858,"byte_end":206866,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"range_de","qualname":"<SnapshotMap>::range_de","value":"pub fn range_de<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183484,"byte_end":183494,"line_start":169,"line_end":169,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183500,"byte_end":183505,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183844,"byte_end":183852,"line_start":176,"line_end":176,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183511,"byte_end":183589,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183594,"byte_end":183648,"line_start":172,"line_end":172,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183653,"byte_end":183656,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183661,"byte_end":183746,"line_start":174,"line_end":174,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183751,"byte_end":183839,"line_start":175,"line_end":175,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":1829},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":183469,"byte_end":183477,"line_start":168,"line_end":168,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1410,"byte_end":1413,"line_start":27,"line_end":27,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1925,"byte_end":1931,"line_start":54,"line_end":54,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":2521,"byte_end":2525,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":3892,"byte_end":3904,"line_start":131,"line_end":131,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18446,"byte_end":18456,"line_start":35,"line_end":35,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18942,"byte_end":18952,"line_start":55,"line_end":55,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":22571,"byte_end":22581,"line_start":149,"line_end":149,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23216,"byte_end":23226,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24211,"byte_end":24221,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51982,"byte_end":52000,"line_start":23,"line_end":23,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53003,"byte_end":53021,"line_start":60,"line_end":60,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53923,"byte_end":53941,"line_start":92,"line_end":92,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57744,"byte_end":57762,"line_start":193,"line_end":193,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75880,"byte_end":75890,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":77638,"byte_end":77648,"line_start":125,"line_end":125,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":78160,"byte_end":78170,"line_start":142,"line_end":142,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":79815,"byte_end":79825,"line_start":200,"line_end":200,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82074,"byte_end":82085,"line_start":267,"line_end":267,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82839,"byte_end":82850,"line_start":295,"line_end":295,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":83922,"byte_end":83933,"line_start":329,"line_end":329,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":85129,"byte_end":85140,"line_start":367,"line_end":367,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86636,"byte_end":86640,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86834,"byte_end":86838,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103663,"byte_end":103666,"line_start":17,"line_end":17,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103932,"byte_end":103935,"line_start":29,"line_end":29,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":108696,"byte_end":108699,"line_start":198,"line_end":198,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":108903,"byte_end":108906,"line_start":209,"line_end":209,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":109023,"byte_end":109029,"line_start":215,"line_end":215,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":109240,"byte_end":109246,"line_start":226,"line_end":226,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":109851,"byte_end":109855,"line_start":252,"line_end":252,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":110120,"byte_end":110124,"line_start":264,"line_end":264,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111136,"byte_end":111142,"line_start":300,"line_end":300,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111449,"byte_end":111455,"line_start":315,"line_end":315,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112274,"byte_end":112280,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112461,"byte_end":112467,"line_start":354,"line_end":354,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112571,"byte_end":112577,"line_start":360,"line_end":360,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112879,"byte_end":112882,"line_start":371,"line_end":371,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113033,"byte_end":113045,"line_start":380,"line_end":380,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113157,"byte_end":113169,"line_start":386,"line_end":386,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113361,"byte_end":113373,"line_start":397,"line_end":397,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113467,"byte_end":113479,"line_start":403,"line_end":403,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113577,"byte_end":113589,"line_start":409,"line_end":409,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122395,"byte_end":122398,"line_start":26,"line_end":26,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122626,"byte_end":122629,"line_start":36,"line_end":36,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":125406,"byte_end":125409,"line_start":123,"line_end":123,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":125859,"byte_end":125862,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127539,"byte_end":127542,"line_start":194,"line_end":194,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":160815,"byte_end":160819,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":160967,"byte_end":160971,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164135,"byte_end":164140,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":165060,"byte_end":165071,"line_start":53,"line_end":53,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166445,"byte_end":166451,"line_start":104,"line_end":104,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166631,"byte_end":166637,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192255,"byte_end":192267,"line_start":17,"line_end":17,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":193180,"byte_end":193192,"line_start":50,"line_end":50,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201557,"byte_end":201568,"line_start":22,"line_end":22,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202167,"byte_end":202178,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202603,"byte_end":202614,"line_start":62,"line_end":62,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":206089,"byte_end":206100,"line_start":167,"line_end":167,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":206740,"byte_end":206751,"line_start":189,"line_end":189,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":178683,"byte_end":178691,"line_start":30,"line_end":30,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":179708,"byte_end":179716,"line_start":65,"line_end":65,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1410,"byte_end":1413,"line_start":27,"line_end":27,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":1925,"byte_end":1931,"line_start":54,"line_end":54,"column_start":25,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":2521,"byte_end":2525,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":20,"index":3278},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/de.rs","byte_start":3892,"byte_end":3904,"line_start":131,"line_end":131,"column_start":25,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1732},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9780,"byte_end":9785,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3022},"to":{"krate":0,"index":80}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/endian.rs","byte_start":9788,"byte_end":9792,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3027},"to":{"krate":0,"index":80}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18446,"byte_end":18456,"line_start":35,"line_end":35,"column_start":19,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":18942,"byte_end":18952,"line_start":55,"line_end":55,"column_start":19,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":22571,"byte_end":22581,"line_start":149,"line_end":149,"column_start":19,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":23216,"byte_end":23226,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_map.rs","byte_start":24211,"byte_end":24221,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":51982,"byte_end":52000,"line_start":23,"line_end":23,"column_start":19,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53003,"byte_end":53021,"line_start":60,"line_end":60,"column_start":19,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":53923,"byte_end":53941,"line_start":92,"line_end":92,"column_start":19,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexed_snapshot.rs","byte_start":57744,"byte_end":57762,"line_start":193,"line_end":193,"column_start":19,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":75880,"byte_end":75890,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":77638,"byte_end":77648,"line_start":125,"line_end":125,"column_start":29,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":425},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":78160,"byte_end":78170,"line_start":142,"line_end":142,"column_start":16,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":79815,"byte_end":79825,"line_start":200,"line_end":200,"column_start":16,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82074,"byte_end":82085,"line_start":267,"line_end":267,"column_start":16,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":82839,"byte_end":82850,"line_start":295,"line_end":295,"column_start":29,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":466},"to":{"krate":0,"index":421}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":83922,"byte_end":83933,"line_start":329,"line_end":329,"column_start":16,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/indexes.rs","byte_start":85129,"byte_end":85140,"line_start":367,"line_end":367,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86636,"byte_end":86640,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/item.rs","byte_start":86834,"byte_end":86838,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103663,"byte_end":103666,"line_start":17,"line_end":17,"column_start":26,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":2914}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":103932,"byte_end":103935,"line_start":29,"line_end":29,"column_start":31,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":2668}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":104855,"byte_end":104860,"line_start":54,"line_end":54,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2638},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":108696,"byte_end":108699,"line_start":198,"line_end":198,"column_start":29,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":108903,"byte_end":108906,"line_start":209,"line_end":209,"column_start":27,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":670}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":109023,"byte_end":109029,"line_start":215,"line_end":215,"column_start":29,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":109240,"byte_end":109246,"line_start":226,"line_end":226,"column_start":27,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":670}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":109851,"byte_end":109855,"line_start":252,"line_end":252,"column_start":29,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":20,"index":3278},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":110120,"byte_end":110124,"line_start":264,"line_end":264,"column_start":27,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":20,"index":3278},"to":{"krate":0,"index":670}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111136,"byte_end":111142,"line_start":300,"line_end":300,"column_start":48,"column_end":54},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1711},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":111449,"byte_end":111455,"line_start":315,"line_end":315,"column_start":38,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1711},"to":{"krate":0,"index":670}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112274,"byte_end":112280,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112461,"byte_end":112467,"line_start":354,"line_end":354,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112571,"byte_end":112577,"line_start":360,"line_end":360,"column_start":35,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":112879,"byte_end":112882,"line_start":371,"line_end":371,"column_start":37,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":7080},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113033,"byte_end":113045,"line_start":380,"line_end":380,"column_start":6,"column_end":18},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113157,"byte_end":113169,"line_start":386,"line_end":386,"column_start":29,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1732},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113361,"byte_end":113373,"line_start":397,"line_end":397,"column_start":27,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1732},"to":{"krate":0,"index":670}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113467,"byte_end":113479,"line_start":403,"line_end":403,"column_start":24,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/keys.rs","byte_start":113577,"byte_end":113589,"line_start":409,"line_end":409,"column_start":26,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2923}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122395,"byte_end":122398,"line_start":26,"line_end":26,"column_start":16,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":122626,"byte_end":122629,"line_start":36,"line_end":36,"column_start":16,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":125406,"byte_end":125409,"line_start":123,"line_end":123,"column_start":16,"column_end":19},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":125859,"byte_end":125862,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/map.rs","byte_start":127539,"byte_end":127542,"line_start":194,"line_end":194,"column_start":16,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":160815,"byte_end":160819,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/path.rs","byte_start":160967,"byte_end":160971,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":164135,"byte_end":164140,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":165060,"byte_end":165071,"line_start":53,"line_end":53,"column_start":27,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166445,"byte_end":166451,"line_start":104,"line_end":104,"column_start":22,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":3232}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/prefix.rs","byte_start":166631,"byte_end":166637,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":192255,"byte_end":192267,"line_start":17,"line_end":17,"column_start":13,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/item.rs","byte_start":193180,"byte_end":193192,"line_start":50,"line_end":50,"column_start":13,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":201557,"byte_end":201568,"line_start":22,"line_end":22,"column_start":16,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202167,"byte_end":202178,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":202603,"byte_end":202614,"line_start":62,"line_end":62,"column_start":16,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":206089,"byte_end":206100,"line_start":167,"line_end":167,"column_start":16,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/map.rs","byte_start":206740,"byte_end":206751,"line_start":189,"line_end":189,"column_start":16,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":178683,"byte_end":178691,"line_start":30,"line_end":30,"column_start":16,"column_end":24},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.10.3/src/snapshot/mod.rs","byte_start":179708,"byte_end":179716,"line_start":65,"line_end":65,"column_start":16,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1812},"to":{"krate":4294967295,"index":4294967295}}]}