{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1","program":"/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","more_asserts","/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a051a4e561417b0d","-C","extra-filename=-a051a4e561417b0d","--out-dir","/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps","-L","dependency=/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/pegasus/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pegasus/ibc-gamm-contract/ibc-reflect/target/rls/debug/deps/libmore_asserts-a051a4e561417b0d.rmeta"},"prelude":{"crate_id":{"name":"more_asserts","disambiguator":[851202738097266022,0]},"crate_root":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src","external_crates":[{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18008874376135235901,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14103892008453412088,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7315200403670056403,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11207136553210754998,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[607384006361738202,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3311393420855710976,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16337070767718955233,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11949973796169789986,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5564804802555933627,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12742144956194682096,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8655233451211981834,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13232350330095090153,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[350047506610901640,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16835669804620715697,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12515180981479917405,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16254306877963802483,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[8770506875580860113,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2137987193762846224,0]}},{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2391863862182092207,0]}}],"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":0,"byte_end":14289,"line_start":1,"line_end":453,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":0,"byte_end":14289,"line_start":1,"line_end":453,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" Small library providing some macros helpful for asserting. The API is very\n similar to the API provided by the stdlib's own `assert_eq!`, `assert_ne!`,\n `debug_assert_eq!`, or `debug_assert_ne!`.","sig":null,"attributes":[{"value":"/ Small library providing some macros helpful for asserting. The API is very","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ similar to the API provided by the stdlib's own `assert_eq!`, `assert_ne!`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":79,"byte_end":158,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ `debug_assert_eq!`, or `debug_assert_ne!`.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":159,"byte_end":205,"line_start":3,"line_end":3,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":206,"byte_end":209,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ | Name                 | Enabled                       | Equivalent to                                |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":210,"byte_end":317,"line_start":5,"line_end":5,"column_start":1,"column_end":108}},{"value":"/ | -------------------- | ----------------------------- | -------------------------------------------- |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":318,"byte_end":425,"line_start":6,"line_end":6,"column_start":1,"column_end":108}},{"value":"/ | `assert_le!`         | Always                        | `assert!(a <= b)`                            |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":426,"byte_end":533,"line_start":7,"line_end":7,"column_start":1,"column_end":108}},{"value":"/ | `assert_lt!`         | Always                        | `assert!(a < b)`                             |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":534,"byte_end":641,"line_start":8,"line_end":8,"column_start":1,"column_end":108}},{"value":"/ | `assert_ge!`         | Always                        | `assert!(a >= b)`                            |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":642,"byte_end":749,"line_start":9,"line_end":9,"column_start":1,"column_end":108}},{"value":"/ | `assert_gt!`         | Always                        | `assert!(a > b)`                             |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":750,"byte_end":857,"line_start":10,"line_end":10,"column_start":1,"column_end":108}},{"value":"/ | `debug_assert_le!`   | `if cfg!(debug_assertions)`   | `debug_assert!(a <= b)`                      |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":858,"byte_end":965,"line_start":11,"line_end":11,"column_start":1,"column_end":108}},{"value":"/ | `debug_assert_lt!`   | `if cfg!(debug_assertions)`   | `debug_assert!(a < b)`                       |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":966,"byte_end":1073,"line_start":12,"line_end":12,"column_start":1,"column_end":108}},{"value":"/ | `debug_assert_ge!`   | `if cfg!(debug_assertions)`   | `debug_assert!(a >= b)`                      |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1074,"byte_end":1181,"line_start":13,"line_end":13,"column_start":1,"column_end":108}},{"value":"/ | `debug_assert_gt!`   | `if cfg!(debug_assertions)`   | `debug_assert!(a > b)`                       |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1182,"byte_end":1289,"line_start":14,"line_end":14,"column_start":1,"column_end":108}},{"value":"/ | `debug_unreachable!` | `if cfg!(debug_assertions)`   | `unreachable!` when debug_assertions are on. |","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1290,"byte_end":1397,"line_start":15,"line_end":15,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When one of the assertions fails, it prints out a message like the following:","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1402,"byte_end":1483,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1484,"byte_end":1487,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1488,"byte_end":1499,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ thread 'main' panicked at 'assertion failed: `left < right`","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1500,"byte_end":1563,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/  left: `4`,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1564,"byte_end":1579,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ right: `3`', src/main.rs:47:5","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1580,"byte_end":1613,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ note: Run with `RUST_BACKTRACE=1` for a backtrace.","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1614,"byte_end":1668,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1669,"byte_end":1676,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1677,"byte_end":1680,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1681,"byte_end":1694,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1699,"byte_end":1710,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1711,"byte_end":1727,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ extern crate more_asserts;","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1728,"byte_end":1758,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1759,"byte_end":1762,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, PartialOrd)]","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1763,"byte_end":1806,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/ enum Example { Foo, Bar }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1807,"byte_end":1836,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1837,"byte_end":1840,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1841,"byte_end":1856,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/     assert_le!(3, 4);","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1857,"byte_end":1882,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"/     assert_ge!(10, 10,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1883,"byte_end":1909,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/                \"You can pass a message too (just like `assert_eq!`)\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1910,"byte_end":1984,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/     debug_assert_lt!(1.3, 4.5,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":1985,"byte_end":2019,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/         \"Format syntax is supported ({}).\", \"also like `assert_eq!`\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2020,"byte_end":2094,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2095,"byte_end":2098,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     assert_gt!(Example::Bar, Example::Foo,","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2099,"byte_end":2145,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/         \"It works on anything that implements PartialOrd, PartialEq, and Debug!\");","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2146,"byte_end":2232,"line_start":43,"line_end":43,"column_start":1,"column_end":87}},{"value":"/ }","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2233,"byte_end":2238,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2239,"byte_end":2246,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/pegasus/.cargo/registry/src/github.com-1ecc6299db9ec823/more-asserts-0.2.1/src/lib.rs","byte_start":2248,"byte_end":2270,"line_start":47,"line_end":47,"column_start":1,"column_end":23}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}